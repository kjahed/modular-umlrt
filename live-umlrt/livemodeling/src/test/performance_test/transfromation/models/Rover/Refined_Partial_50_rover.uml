<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_rZAAEEIZEeaoHPpII-6Tdw" name="rover">
    <eAnnotations xmi:id="_-sKOUEhlEeaGrIS8kLT52w" source="UMLRT_Default_top">
      <details xmi:id="_-sK1YEhlEeaGrIS8kLT52w" key="top_name" value="Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_m5eKYEsfEem2s7A3HPFdqA" source="dummy"/>
    <eAnnotations xmi:id="_A6eBgEv5EemxPqkG1Y_wag" source="dummy"/>
    <eAnnotations xmi:id="_T9fPkEwyEemvXbRLSBw8Pg" source="dummy"/>
    <eAnnotations xmi:id="_sbzNMExhEemRxu96QmCBwA" source="dummy"/>
    <eAnnotations xmi:id="_JFntgEyHEemaK8pL9gt4xg" source="dummy"/>
    <packagedElement xmi:type="uml:Package" xmi:id="_rZAALEIZEeaoHPpII-6Tdw" name="UMLRT-Rover">
      <packagedElement xmi:type="uml:Package" xmi:id="_rZAALUIZEeaoHPpII-6Tdw" name="Engine">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_rZAALkIZEeaoHPpII-6Tdw" name="Engine">
          <interfaceRealization xmi:id="_rZAAL0IZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAAMUIZEeaoHPpII-6Tdw" contract="_rZAAMUIZEeaoHPpII-6Tdw"/>
          <interfaceRealization xmi:id="_rZAAMEIZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAAP0IZEeaoHPpII-6Tdw" contract="_rZAAP0IZEeaoHPpII-6Tdw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAMUIZEeaoHPpII-6Tdw" name="Engine">
          <ownedOperation xmi:id="_rZAAMkIZEeaoHPpII-6Tdw" name="turnedLeft"/>
          <ownedOperation xmi:id="_rZAAM0IZEeaoHPpII-6Tdw" name="turnedRight"/>
          <ownedOperation xmi:id="_rZAANEIZEeaoHPpII-6Tdw" name="stopped"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAANUIZEeaoHPpII-6Tdw" name="Engine~">
          <ownedOperation xmi:id="_rZAANkIZEeaoHPpII-6Tdw" name="moveForward"/>
          <ownedOperation xmi:id="_rZAAN0IZEeaoHPpII-6Tdw" name="moveBackwards"/>
          <ownedOperation xmi:id="_rZAAOEIZEeaoHPpII-6Tdw" name="turnLeft">
            <ownedParameter xmi:id="_rZAAOUIZEeaoHPpII-6Tdw" name="angle">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rZAAOkIZEeaoHPpII-6Tdw" name="turnRight">
            <ownedParameter xmi:id="_rZAAO0IZEeaoHPpII-6Tdw" name="angle">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rZAAPEIZEeaoHPpII-6Tdw" name="stop"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAPUIZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAANUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_rZAAPkIZEeaoHPpII-6Tdw" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAP0IZEeaoHPpII-6Tdw" name="EngineIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAQEIZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAAP0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAQUIZEeaoHPpII-6Tdw" operation="_rZAAMkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAQkIZEeaoHPpII-6Tdw" operation="_rZAAM0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAQ0IZEeaoHPpII-6Tdw" operation="_rZAANEIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAREIZEeaoHPpII-6Tdw" operation="_rZAANkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAARUIZEeaoHPpII-6Tdw" operation="_rZAAN0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAARkIZEeaoHPpII-6Tdw" operation="_rZAAOEIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAR0IZEeaoHPpII-6Tdw" operation="_rZAAOkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAASEIZEeaoHPpII-6Tdw" operation="_rZAAPEIZEeaoHPpII-6Tdw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rZAASUIZEeaoHPpII-6Tdw" name="Detection">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_rZAASkIZEeaoHPpII-6Tdw" name="Detection">
          <interfaceRealization xmi:id="_rZAAS0IZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAATUIZEeaoHPpII-6Tdw" contract="_rZAATUIZEeaoHPpII-6Tdw"/>
          <interfaceRealization xmi:id="_rZAATEIZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAAVUIZEeaoHPpII-6Tdw" contract="_rZAAVUIZEeaoHPpII-6Tdw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAATUIZEeaoHPpII-6Tdw" name="Detection">
          <ownedOperation xmi:id="_rZAATkIZEeaoHPpII-6Tdw" name="obstacleDetected">
            <ownedParameter xmi:id="_rZAAT0IZEeaoHPpII-6Tdw" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAUEIZEeaoHPpII-6Tdw" name="Detection~">
          <ownedOperation xmi:id="_rZAAUUIZEeaoHPpII-6Tdw" name="startDetection"/>
          <ownedOperation xmi:id="_rZAAUkIZEeaoHPpII-6Tdw" name="stopDetection"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAU0IZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAAUEIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_rZAAVEIZEeaoHPpII-6Tdw" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAVUIZEeaoHPpII-6Tdw" name="DetectionIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAVkIZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAAVUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAV0IZEeaoHPpII-6Tdw" operation="_rZAAUUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAWEIZEeaoHPpII-6Tdw" operation="_rZAAUkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAWUIZEeaoHPpII-6Tdw" operation="_rZAATkIZEeaoHPpII-6Tdw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rZAAWkIZEeaoHPpII-6Tdw" name="Temperature">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_rZAAW0IZEeaoHPpII-6Tdw" name="Temperature">
          <interfaceRealization xmi:id="_rZAAXEIZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAXkIZEeaoHPpII-6Tdw" contract="_rZAAXkIZEeaoHPpII-6Tdw"/>
          <interfaceRealization xmi:id="_rZAAXUIZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAZkIZEeaoHPpII-6Tdw" contract="_rZAAZkIZEeaoHPpII-6Tdw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAXkIZEeaoHPpII-6Tdw" name="Temperature">
          <ownedOperation xmi:id="_rZAAX0IZEeaoHPpII-6Tdw" name="dataCollected">
            <ownedParameter xmi:id="_rZAAYEIZEeaoHPpII-6Tdw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAYUIZEeaoHPpII-6Tdw" name="Temperature~">
          <ownedOperation xmi:id="_rZAAYkIZEeaoHPpII-6Tdw" name="startCollecting"/>
          <ownedOperation xmi:id="_rZAAY0IZEeaoHPpII-6Tdw" name="stopCollecting"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAZEIZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAYUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_rZAAZUIZEeaoHPpII-6Tdw" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAZkIZEeaoHPpII-6Tdw" name="TemperatureIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAZ0IZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAZkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAaEIZEeaoHPpII-6Tdw" operation="_rZAAX0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAaUIZEeaoHPpII-6Tdw" operation="_rZAAYkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAakIZEeaoHPpII-6Tdw" operation="_rZAAY0IZEeaoHPpII-6Tdw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_lJwmkEhvEeaGrIS8kLT52w" name="Rover" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pekDoEhvEeaGrIS8kLT52w" name="temperature" visibility="public" type="_rZAAW0IZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_penG8EhvEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_penuAEhvEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rhC4wEhvEeaGrIS8kLT52w" name="detection" visibility="public" type="_rZAASkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rhLboEhvEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rhMCsEhvEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tKPrMEhvEeaGrIS8kLT52w" name="engine" visibility="public" type="_rZAALkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tKSugEhvEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tKTVkEhvEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K14YMEhxEeaGrIS8kLT52w" name="detectionSensor" visibility="protected" type="_Rbq14EhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K16NYEhxEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K16NYUhxEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K19QsEhxEeaGrIS8kLT52w" name="temperatureSensor" visibility="protected" type="_W-iBgEhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K1-e0EhxEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K1_F4EhxEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K2A7EEhxEeaGrIS8kLT52w" name="engineController" visibility="protected" type="_Y3d5EEhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K2CwQEhxEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K2CwQUhxEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_uigZoFTbEeaAD8nFYloOhg" name="detectionSensor2" visibility="protected" type="_Rbq14EhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uijc8FTbEeaAD8nFYloOhg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uijc8VTbEeaAD8nFYloOhg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_ZnMQYEhxEeaGrIS8kLT52w" name="engine">
          <end xmi:id="_ZnMQYUhxEeaGrIS8kLT52w" partWithPort="_K2A7EEhxEeaGrIS8kLT52w" role="_-HcWsEhwEeaGrIS8kLT52w"/>
          <end xmi:id="_ZnMQYkhxEeaGrIS8kLT52w" role="_tKPrMEhvEeaGrIS8kLT52w"/>
        </ownedConnector>
        <ownedConnector xmi:id="_5xYs4FTbEeaAD8nFYloOhg" name="detection">
          <end xmi:id="_5xaiEFTbEeaAD8nFYloOhg" role="_rhC4wEhvEeaGrIS8kLT52w"/>
          <end xmi:id="_5xaiEVTbEeaAD8nFYloOhg" partWithPort="_uigZoFTbEeaAD8nFYloOhg" role="_eOwG0EhwEeaGrIS8kLT52w"/>
        </ownedConnector>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Rbq14EhwEeaGrIS8kLT52w" name="DetectionSensor" classifierBehavior="_LdxvIEj0EeaDOaB8rZNNSg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_eOwG0EhwEeaGrIS8kLT52w" name="detection" visibility="public" type="_rZAASkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eOyjEEhwEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eOyjEUhwEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_t2UsoEj0EeaDOaB8rZNNSg" name="timer" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_t2fEsEj0EeaDOaB8rZNNSg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t2frwEj0EeaDOaB8rZNNSg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wxv78Ej0EeaDOaB8rZNNSg" name="timerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9RZ9wEj4EeaDOaB8rZNNSg" name="pinTrig">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O8uI8Ej5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;23&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_c6o1UEj5EeaDOaB8rZNNSg" name="pinEcho">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_c6o1UUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;24&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_J81eQFTQEeaAD8nFYloOhg" name="log" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KAJ4AFTQEeaAD8nFYloOhg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KAKfEFTQEeaAD8nFYloOhg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_KcZ-kEr4EemnkcXPzwjwhg" name="dbgPortForDetectionSensor" visibility="protected" type="_J3XX0Ur4EemnkcXPzwjwhg" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KcaloEr4EemnkcXPzwjwhg" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_KcbMsEr4EemnkcXPzwjwhg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_LdxvIEj0EeaDOaB8rZNNSg" name="DetectionSensorStateMachine" isReentrant="false">
          <region xmi:id="_Ld8HMEj0EeaDOaB8rZNNSg" name="Region">
            <transition xmi:id="_qrr8oEj0EeaDOaB8rZNNSg" name="detecting" kind="internal" source="_U40GMEj0EeaDOaB8rZNNSg" target="_U40GMEj0EeaDOaB8rZNNSg">
              <ownedComment xmi:id="_97WPcEj0EeaDOaB8rZNNSg">
                <body>nt</body>
              </ownedComment>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_JelpIEj1EeaDOaB8rZNNSg">
                <language>C++</language>
                <body>pinTrig.setval_gpio(&quot;0&quot;);

clock_t pulse_start;
clock_t pulse_end;
double pulse_duration;

while(true) {
	string inputstate;
	pinEcho.getval_gpio(inputstate);
	int value = atoi(inputstate.c_str());

	if (value == 0) {
		pulse_start = clock();
	} else {
		break;
	}
}

while(true) {
	string inputstate;
	pinEcho.getval_gpio(inputstate);
	int value = atoi(inputstate.c_str());

	if (value == 1) {
		pulse_end = clock();
	} else {
		break;
	}
}

pulse_duration = (pulse_end - pulse_start) / (double)(CLOCKS_PER_SEC);

// log.log (&quot;pulse duration is %f&quot;, pulse_duration);

double distance = pulse_duration *17150;

//log.log (&quot;distance is %f&quot;, distance);

detection.obstacleDetected(distance).send();

pinTrig.setval_gpio(&quot;1&quot;);

timerId = timer.informIn(UMLRTTimespec(0,10000));</body>
              </effect>
              <trigger xmi:id="_3xRS0Ej0EeaDOaB8rZNNSg" port="_t2UsoEj0EeaDOaB8rZNNSg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_KgFksEr4EemnkcXPzwjwhg" name="Trans__Pseudo7375" source="_LeAYoEj0EeaDOaB8rZNNSg" target="_KfyCsEr4EemnkcXPzwjwhg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KhEcIEr4EemnkcXPzwjwhg">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Pseudo73&quot;,&quot;DETECTING&quot;,&quot;To__DETECTING__80&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Pseudo73&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_KgUOMEr4EemnkcXPzwjwhg" name="From__DETECTING__76" source="_U40GMEj0EeaDOaB8rZNNSg" target="_KfyCsEr4EemnkcXPzwjwhg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KhMX8Er4EemnkcXPzwjwhg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;DETECTING&quot;,&quot;DETECTING&quot;,&quot;To__DETECTING__80&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;DETECTING&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_KgcxEEr4EemnkcXPzwjwhg" name="PME_Trig77" event="_J34VMEr4EemnkcXPzwjwhg" port="_KcZ-kEr4EemnkcXPzwjwhg"/>
              <trigger xmi:id="_Kgl7AEr4EemnkcXPzwjwhg" name="PME_Trig78" event="_rZAAV0IZEeaoHPpII-6Tdw" port="_eOwG0EhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_Kgud4Er4EemnkcXPzwjwhg" name="PME_Trig79" event="_rZAAWEIZEeaoHPpII-6Tdw" port="_eOwG0EhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_Kg75QEr4EemnkcXPzwjwhg" name="To__DETECTING__80" guard="_KhNmEUr4EemnkcXPzwjwhg" source="_KfyCsEr4EemnkcXPzwjwhg" target="_U40GMEj0EeaDOaB8rZNNSg">
              <ownedRule xmi:id="_KhNmEUr4EemnkcXPzwjwhg" name="PME_checkDecesion81">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_KhNmEEr4EemnkcXPzwjwhg" name="PME_checkDecesion81">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__DETECTING__80&quot;,&quot;DETECTING&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_LeAYoEj0EeaDOaB8rZNNSg" name="Pseudo73"/>
            <subvertex xmi:type="uml:State" xmi:id="_U40GMEj0EeaDOaB8rZNNSg" name="DETECTING"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_KfyCsEr4EemnkcXPzwjwhg" name="DecesionPoint__74" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KdMowUr4EemnkcXPzwjwhg" name="loadHeap" specification="_KdMowEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KdSIUEr4EemnkcXPzwjwhg" name="unLoadHeap" specification="_KdQTIEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KeBvMUr4EemnkcXPzwjwhg" name="sendMessage" specification="_KeBvMEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;obstacleDetected&quot;) {
   if(message.payload.size()==1){
    detection.obstacleDetected( boost::any_cast&lt;double>(message.payload[&quot;distance&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KeaJsUr4EemnkcXPzwjwhg" name="sendInternalMessage" specification="_KeaJsEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KfbdYUr4EemnkcXPzwjwhg" name="initForPMD" specification="_KfbdYEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_DetectionSensor::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_DetectionSensor::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;obstacleDetected&quot;,{ {&quot;distance&quot;,&quot;Real&quot;}});
 this->execContext.addInputMessages(&quot;detection&quot;,&quot;startDetection&quot;,{});
this->execContext.addInputMessages(&quot;detection&quot;,&quot;stopDetection&quot;,{});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForDetectionSensor&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_KdMowEr4EemnkcXPzwjwhg" name="loadHeap" visibility="private" method="_KdMowUr4EemnkcXPzwjwhg"/>
        <ownedOperation xmi:id="_KdQTIEr4EemnkcXPzwjwhg" name="unLoadHeap" visibility="private" method="_KdSIUEr4EemnkcXPzwjwhg"/>
        <ownedOperation xmi:id="_KeBvMEr4EemnkcXPzwjwhg" name="sendMessage" visibility="private" method="_KeBvMUr4EemnkcXPzwjwhg">
          <ownedParameter xmi:id="_KeH10Er4EemnkcXPzwjwhg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KeMuUEr4EemnkcXPzwjwhg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KeaJsEr4EemnkcXPzwjwhg" name="sendInternalMessage" visibility="private" method="_KeaJsUr4EemnkcXPzwjwhg">
          <ownedParameter xmi:id="_KehecEr4EemnkcXPzwjwhg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KemW8Er4EemnkcXPzwjwhg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KfbdYEr4EemnkcXPzwjwhg" name="initForPMD" visibility="private" method="_KfbdYUr4EemnkcXPzwjwhg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W-iBgEhwEeaGrIS8kLT52w" name="TemperatureSensor" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_64Qd4EhwEeaGrIS8kLT52w" name="temperature" visibility="public" type="_rZAAW0IZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_64STEEhwEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_64S6IEhwEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y3d5EEhwEeaGrIS8kLT52w" name="EngineController" classifierBehavior="_e95PUEhxEeaGrIS8kLT52w" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-HcWsEhwEeaGrIS8kLT52w" name="engine" visibility="public" type="_rZAALkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-Hey8EhwEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-Hey8UhwEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mCfzIEh0EeaGrIS8kLT52w" name="timer" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mCi2cEh0EeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mCi2cUh0EeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_34ZdsEh0EeaGrIS8kLT52w" name="timerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSHugEj5EeaDOaB8rZNNSg" name="leftMotorForward">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_gSHugUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;22&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_s5v9YEj5EeaDOaB8rZNNSg" name="rightMotorForward">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_s5v9YUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;6&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wyUKYEj5EeaDOaB8rZNNSg" name="rightMotorBackwards">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_wyUKYUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;5&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_zryR4Ej5EeaDOaB8rZNNSg" name="leftMotorBackwards">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_zry48Ej5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;27&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-fhVsEkDEeazmIbzY62nkg" name="log" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-foDYEkDEeazmIbzY62nkg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-foqcEkDEeazmIbzY62nkg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_J6N3gEr4EemnkcXPzwjwhg" name="dbgPortForEngineController" visibility="protected" type="_J3XX0Ur4EemnkcXPzwjwhg" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_J6PFoEr4EemnkcXPzwjwhg" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_J6PssEr4EemnkcXPzwjwhg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_e95PUEhxEeaGrIS8kLT52w" name="EngineControllerStateMachine" isReentrant="false">
          <region xmi:id="_e985sEhxEeaGrIS8kLT52w" name="Region">
            <transition xmi:id="_KG5ooEr4EemnkcXPzwjwhg" name="Trans__Init__State__23" source="_KF8mYEr4EemnkcXPzwjwhg" target="_KFc3IEr4EemnkcXPzwjwhg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KPs_UEr4EemnkcXPzwjwhg">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__28&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_KHgsoEr4EemnkcXPzwjwhg" name="From__MOVING_FORWARD__4" source="_rDoSEEhxEeaGrIS8kLT52w" target="_KFc3IEr4EemnkcXPzwjwhg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KP2wUEr4EemnkcXPzwjwhg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__28&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;MOVING_FORWARD&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_KH4gEEr4EemnkcXPzwjwhg" name="PME_Trig5" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KIT94Er4EemnkcXPzwjwhg" name="PME_Trig6" event="_J34VMEr4EemnkcXPzwjwhg" port="_J6N3gEr4EemnkcXPzwjwhg"/>
              <trigger xmi:id="_KIhZQEr4EemnkcXPzwjwhg" name="PME_Trig7" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KI_TUEr4EemnkcXPzwjwhg" name="PME_Trig8" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KLE-AEr4EemnkcXPzwjwhg" name="PME_Trig9" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KLhC4Er4EemnkcXPzwjwhg" name="PME_Trig10" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KLsCAEr4EemnkcXPzwjwhg" name="PME_Trig11" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_KMSe8Er4EemnkcXPzwjwhg" name="From__TURNING_RIGHT__12" source="_szwy8EhxEeaGrIS8kLT52w" target="_KFc3IEr4EemnkcXPzwjwhg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KPwpsEr4EemnkcXPzwjwhg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__28&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TURNING_RIGHT&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_KMbo4Er4EemnkcXPzwjwhg" name="PME_Trig13" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KMprUEr4EemnkcXPzwjwhg" name="PME_Trig14" event="_J34VMEr4EemnkcXPzwjwhg" port="_J6N3gEr4EemnkcXPzwjwhg"/>
              <trigger xmi:id="_KMtVsEr4EemnkcXPzwjwhg" name="PME_Trig15" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KM3twEr4EemnkcXPzwjwhg" name="PME_Trig16" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KNCF0Er4EemnkcXPzwjwhg" name="PME_Trig17" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KNUZsEr4EemnkcXPzwjwhg" name="PME_Trig18" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KNZSMEr4EemnkcXPzwjwhg" name="PME_Trig19" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_KNgm8Er4EemnkcXPzwjwhg" name="From__TURNING_LEFT__20" source="_uPS80EhxEeaGrIS8kLT52w" target="_KFc3IEr4EemnkcXPzwjwhg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KPinQEr4EemnkcXPzwjwhg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__28&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TURNING_LEFT&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_KNpJ0Er4EemnkcXPzwjwhg" name="PME_Trig21" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KNzh4Er4EemnkcXPzwjwhg" name="PME_Trig22" event="_J34VMEr4EemnkcXPzwjwhg" port="_J6N3gEr4EemnkcXPzwjwhg"/>
              <trigger xmi:id="_KOA9QEr4EemnkcXPzwjwhg" name="PME_Trig23" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KOQN0Er4EemnkcXPzwjwhg" name="PME_Trig24" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KOsSsEr4EemnkcXPzwjwhg" name="PME_Trig25" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KOzncEr4EemnkcXPzwjwhg" name="PME_Trig26" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_KO7jQEr4EemnkcXPzwjwhg" name="PME_Trig27" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_KPUk0Er4EemnkcXPzwjwhg" name="To__MOVING_FORWARD__28" guard="_KP7o0Ur4EemnkcXPzwjwhg" source="_KFc3IEr4EemnkcXPzwjwhg" target="_rDoSEEhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_KP7o0Ur4EemnkcXPzwjwhg" name="PME_checkDecesion33">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_KP7o0Er4EemnkcXPzwjwhg" name="PME_checkDecesion33">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__MOVING_FORWARD__28&quot;,&quot;MOVING_FORWARD&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_KPXoIEr4EemnkcXPzwjwhg" name="To__TURNING_RIGHT__29" guard="_KP3-cUr4EemnkcXPzwjwhg" source="_KFc3IEr4EemnkcXPzwjwhg" target="_szwy8EhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_KP3-cUr4EemnkcXPzwjwhg" name="PME_checkDecesion31">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_KP3-cEr4EemnkcXPzwjwhg" name="PME_checkDecesion31">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__TURNING_RIGHT__29&quot;,&quot;TURNING_RIGHT&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_KPY2QEr4EemnkcXPzwjwhg" name="To__TURNING_LEFT__30" guard="_KP5zoUr4EemnkcXPzwjwhg" source="_KFc3IEr4EemnkcXPzwjwhg" target="_uPS80EhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_KP5zoUr4EemnkcXPzwjwhg" name="PME_checkDecesion32">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_KP5zoEr4EemnkcXPzwjwhg" name="PME_checkDecesion32">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__TURNING_LEFT__30&quot;,&quot;TURNING_LEFT&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <subvertex xmi:type="uml:State" xmi:id="_rDoSEEhxEeaGrIS8kLT52w" name="MOVING_FORWARD">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_O3tAIEh3EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is moving forward&quot;);
leftMotorForward.setval_gpio(&quot;1&quot;);
rightMotorForward.setval_gpio(&quot;1&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_szwy8EhxEeaGrIS8kLT52w" name="TURNING_RIGHT">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_P8JfsEh3EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is turning right&quot;);

leftMotorForward.setval_gpio(&quot;1&quot;);
rightMotorBackwards.setval_gpio(&quot;1&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_uPS80EhxEeaGrIS8kLT52w" name="TURNING_LEFT">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_RFJvIEh3EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is turning left&quot;);

leftMotorBackwards.setval_gpio(&quot;1&quot;);
rightMotorForward.setval_gpio(&quot;1&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_KFc3IEr4EemnkcXPzwjwhg" name="DecesionPoint__1" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_KF8mYEr4EemnkcXPzwjwhg" name="Init__State__2"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-1RwEr4EemnkcXPzwjwhg" name="loadHeap" specification="_J-0qsEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J_IMsEr4EemnkcXPzwjwhg" name="unLoadHeap" specification="_J_HloEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J_6P0Er4EemnkcXPzwjwhg" name="sendMessage" specification="_J_5BsEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;engine&quot;) {
  if(message.signal==&quot;turnedLeft&quot;) {
   if(message.payload.size()==0){
    engine.turnedLeft().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stopped&quot;) {
   if(message.payload.size()==0){
    engine.stopped().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;turnedRight&quot;) {
   if(message.payload.size()==0){
    engine.turnedRight().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KA-m0Ur4EemnkcXPzwjwhg" name="sendInternalMessage" specification="_KA-m0Er4EemnkcXPzwjwhg">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KEyIwEr4EemnkcXPzwjwhg" name="initForPMD" specification="_KExhsEr4EemnkcXPzwjwhg">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EngineController::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EngineController::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnedLeft&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;stopped&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnedRight&quot;,{});
 this->execContext.addInputMessages(&quot;engine&quot;,&quot;moveForward&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnLeft&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;stop&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnRight&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;moveBackwards&quot;,{});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEngineController&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_J-0qsEr4EemnkcXPzwjwhg" name="loadHeap" visibility="private" method="_J-1RwEr4EemnkcXPzwjwhg"/>
        <ownedOperation xmi:id="_J_HloEr4EemnkcXPzwjwhg" name="unLoadHeap" visibility="private" method="_J_IMsEr4EemnkcXPzwjwhg"/>
        <ownedOperation xmi:id="_J_5BsEr4EemnkcXPzwjwhg" name="sendMessage" visibility="private" method="_J_6P0Er4EemnkcXPzwjwhg">
          <ownedParameter xmi:id="_J__vYEr4EemnkcXPzwjwhg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KAOY4Er4EemnkcXPzwjwhg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KA-m0Er4EemnkcXPzwjwhg" name="sendInternalMessage" visibility="private" method="_KA-m0Ur4EemnkcXPzwjwhg">
          <ownedParameter xmi:id="_KBN3YEr4EemnkcXPzwjwhg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_KBdvAEr4EemnkcXPzwjwhg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_KExhsEr4EemnkcXPzwjwhg" name="initForPMD" visibility="private" method="_KEyIwEr4EemnkcXPzwjwhg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Artifact" xmi:id="_Y6tKIEj7EeaDOaB8rZNNSg" name="GPIOClass" fileName="">
        <nestedArtifact xmi:id="_ljw8YEj7EeaDOaB8rZNNSg"/>
      </packagedElement>
      <profileApplication xmi:id="_rZAnVEIZEeaoHPpII-6Tdw">
        <eAnnotations xmi:id="_rZAnVUIZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
        </eAnnotations>
        <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
      </profileApplication>
      <profileApplication xmi:id="_rZAnVkIZEeaoHPpII-6Tdw">
        <eAnnotations xmi:id="_rZAnV0IZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
        </eAnnotations>
        <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
      </profileApplication>
      <profileApplication xmi:id="_rZAnWEIZEeaoHPpII-6Tdw">
        <eAnnotations xmi:id="_rZAnWUIZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
        </eAnnotations>
        <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
      </profileApplication>
      <profileApplication xmi:id="_x42mkEj3EeaDOaB8rZNNSg">
        <eAnnotations xmi:id="_x43NoEj3EeaDOaB8rZNNSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
        </eAnnotations>
        <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
      </profileApplication>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9dusUEhlEeaGrIS8kLT52w" name="Top" isActive="true">
      <ownedAttribute xmi:id="_FfiQgEhvEeaGrIS8kLT52w" name="controlSoftware" visibility="protected" type="_CFLpgEhvEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FfvE0EhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ffvr4EhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_uvJMcEhvEeaGrIS8kLT52w" name="rover" visibility="protected" type="_lJwmkEhvEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uvLBoEhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uvLosEhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_KhVh4Er4EemnkcXPzwjwhg" name="dbgAgent" type="_J2wT0Er4EemnkcXPzwjwhg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KhWwAUr4EemnkcXPzwjwhg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_KhXXEEr4EemnkcXPzwjwhg" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_8kYd8EhvEeaGrIS8kLT52w" name="Connector1">
        <end xmi:id="_8kZsEEhvEeaGrIS8kLT52w" partWithPort="_FfiQgEhvEeaGrIS8kLT52w" role="_Q9hWwEhvEeaGrIS8kLT52w"/>
        <end xmi:id="_8kZsEUhvEeaGrIS8kLT52w" partWithPort="_uvJMcEhvEeaGrIS8kLT52w" role="_pekDoEhvEeaGrIS8kLT52w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_9WyyUEhvEeaGrIS8kLT52w" name="Connector2">
        <end xmi:id="_9W0AcEhvEeaGrIS8kLT52w" partWithPort="_FfiQgEhvEeaGrIS8kLT52w" role="_O8LKEEhvEeaGrIS8kLT52w"/>
        <end xmi:id="_9W0ngEhvEeaGrIS8kLT52w" partWithPort="_uvJMcEhvEeaGrIS8kLT52w" role="_rhC4wEhvEeaGrIS8kLT52w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-HZI0EhvEeaGrIS8kLT52w" name="Connector3">
        <end xmi:id="_-HZv4EhvEeaGrIS8kLT52w" partWithPort="_FfiQgEhvEeaGrIS8kLT52w" role="_MlGlAEhvEeaGrIS8kLT52w"/>
        <end xmi:id="_-HZv4UhvEeaGrIS8kLT52w" partWithPort="_uvJMcEhvEeaGrIS8kLT52w" role="_tKPrMEhvEeaGrIS8kLT52w"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFLpgEhvEeaGrIS8kLT52w" name="ControlSoftware" classifierBehavior="_5icxAEj-EeaDOaB8rZNNSg" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_MlGlAEhvEeaGrIS8kLT52w" name="engine" visibility="public" type="_rZAALkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MlOg0EhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlPH4EhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_O8LKEEhvEeaGrIS8kLT52w" name="detection" visibility="public" type="_rZAASkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O8NmUEhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O8ONYEhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_Q9hWwEhvEeaGrIS8kLT52w" name="temperature" visibility="public" type="_rZAAW0IZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q9ndYEhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q9oEcEhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_cfYtoEkCEeazmIbzY62nkg" name="log" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_cfvS8EkCEeazmIbzY62nkg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfv6AEkCEeazmIbzY62nkg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ecDOoEkCEeazmIbzY62nkg" name="timer" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ecJ8UEkCEeazmIbzY62nkg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ecKjYEkCEeazmIbzY62nkg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_wbWEMFTTEeaAD8nFYloOhg" name="threshold">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="_zDPTgFTTEeaAD8nFYloOhg" value="30.0"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_KSOu4Er4EemnkcXPzwjwhg" name="dbgPortForControlSoftware" visibility="protected" type="_J3XX0Ur4EemnkcXPzwjwhg" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KSPV8Er4EemnkcXPzwjwhg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_KSP9AEr4EemnkcXPzwjwhg" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_5icxAEj-EeaDOaB8rZNNSg" name="ControlSoftwareStateMachine" isReentrant="false">
        <region xmi:id="_5iiQkEj-EeaDOaB8rZNNSg" name="Region">
          <transition xmi:id="_GUMlMEj_EeaDOaB8rZNNSg" name="init" source="_5ikFwEj-EeaDOaB8rZNNSg" target="_B4sDMEj_EeaDOaB8rZNNSg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KcSCwEr4EemnkcXPzwjwhg" name="init__72">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_G-xzQEj_EeaDOaB8rZNNSg" name="moving forward" source="_B4sDMEj_EeaDOaB8rZNNSg" target="__e_A4Ej-EeaDOaB8rZNNSg">
            <trigger xmi:id="_spwjIEkFEeazmIbzY62nkg" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_E-L2IFTUEeaAD8nFYloOhg" name="greaterThan" guard="_emf3oFTVEeaAD8nFYloOhg" kind="internal" source="__e_A4Ej-EeaDOaB8rZNNSg" target="__e_A4Ej-EeaDOaB8rZNNSg">
            <ownedRule xmi:id="_emf3oFTVEeaAD8nFYloOhg" name="greaterThanThreshold">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_ixZx0FTVEeaAD8nFYloOhg">
                <language>C++</language>
                <body>return (umlrtparam_distance > threshold) || (umlrtparam_distance &lt; 0);</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_QMtkEFTUEeaAD8nFYloOhg">
              <language>C++</language>
              <body>log.log (&quot;distance greater than threshold: %f > %f&quot;, umlrtparam_distance, threshold);</body>
            </effect>
            <trigger xmi:id="_LqHioFTUEeaAD8nFYloOhg" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_KX55EEr4EemnkcXPzwjwhg" name="From__MOVING_BACKWARDS__44" source="_HvR9YFTXEeaAD8nFYloOhg" target="_KXV4YEr4EemnkcXPzwjwhg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Kb8EgEr4EemnkcXPzwjwhg">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__68&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__67&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__66&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;MOVING_BACKWARDS&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_KYERIEr4EemnkcXPzwjwhg" name="PME_Trig45" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KYNbEEr4EemnkcXPzwjwhg" name="PME_Trig46" event="_J34VMEr4EemnkcXPzwjwhg" port="_KSOu4Er4EemnkcXPzwjwhg"/>
            <trigger xmi:id="_KYZoUEr4EemnkcXPzwjwhg" name="PME_Trig47" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KYfu8Er4EemnkcXPzwjwhg" name="PME_Trig48" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KYoR0Er4EemnkcXPzwjwhg" name="PME_Trig49" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KYzQ8Er4EemnkcXPzwjwhg" name="PME_Trig50" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KY9B8Er4EemnkcXPzwjwhg" name="PME_Trig51" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_KZGy8Er4EemnkcXPzwjwhg" name="From__MOVING_FORWARD__52" source="__e_A4Ej-EeaDOaB8rZNNSg" target="_KXV4YEr4EemnkcXPzwjwhg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Kby6kEr4EemnkcXPzwjwhg">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__68&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__67&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__66&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;MOVING_FORWARD&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_KZQj8Er4EemnkcXPzwjwhg" name="PME_Trig53" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KZaU8Er4EemnkcXPzwjwhg" name="PME_Trig54" event="_J34VMEr4EemnkcXPzwjwhg" port="_KSOu4Er4EemnkcXPzwjwhg"/>
            <trigger xmi:id="_KZi30Er4EemnkcXPzwjwhg" name="PME_Trig55" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KZqMkEr4EemnkcXPzwjwhg" name="PME_Trig56" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KZ4PAEr4EemnkcXPzwjwhg" name="PME_Trig57" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KaCnEEr4EemnkcXPzwjwhg" name="PME_Trig58" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_KaLJ8Er4EemnkcXPzwjwhg" name="From__STANDBY__59" source="_B4sDMEj_EeaDOaB8rZNNSg" target="_KXV4YEr4EemnkcXPzwjwhg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KcEAUEr4EemnkcXPzwjwhg">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__68&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__67&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__66&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;STANDBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_KaWJEEr4EemnkcXPzwjwhg" name="PME_Trig60" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KabBkEr4EemnkcXPzwjwhg" name="PME_Trig61" event="_J34VMEr4EemnkcXPzwjwhg" port="_KSOu4Er4EemnkcXPzwjwhg"/>
            <trigger xmi:id="_KaiWUEr4EemnkcXPzwjwhg" name="PME_Trig62" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_Ka7X4Er4EemnkcXPzwjwhg" name="PME_Trig63" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KbJaUEr4EemnkcXPzwjwhg" name="PME_Trig64" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_KbSkQEr4EemnkcXPzwjwhg" name="PME_Trig65" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_Kbf_oEr4EemnkcXPzwjwhg" name="To__MOVING_BACKWARDS__66" guard="_KcO_cEr4EemnkcXPzwjwhg" source="_KXV4YEr4EemnkcXPzwjwhg" target="_HvR9YFTXEeaAD8nFYloOhg">
            <ownedRule xmi:id="_KcO_cEr4EemnkcXPzwjwhg" name="PME_checkDecesion71">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_KcOYYEr4EemnkcXPzwjwhg" name="PME_checkDecesion71">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__MOVING_BACKWARDS__66&quot;,&quot;MOVING_BACKWARDS&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_Kbib4Er4EemnkcXPzwjwhg" name="To__MOVING_FORWARD__67" guard="_KcI40Ur4EemnkcXPzwjwhg" source="_KXV4YEr4EemnkcXPzwjwhg" target="__e_A4Ej-EeaDOaB8rZNNSg">
            <ownedRule xmi:id="_KcI40Ur4EemnkcXPzwjwhg" name="PME_checkDecesion70">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_KcI40Er4EemnkcXPzwjwhg" name="PME_checkDecesion70">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__MOVING_FORWARD__67&quot;,&quot;MOVING_FORWARD&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_KbnUYEr4EemnkcXPzwjwhg" name="To__STANDBY__68" guard="_KcHDoUr4EemnkcXPzwjwhg" source="_KXV4YEr4EemnkcXPzwjwhg" target="_B4sDMEj_EeaDOaB8rZNNSg">
            <ownedRule xmi:id="_KcHDoUr4EemnkcXPzwjwhg" name="PME_checkDecesion69">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_KcHDoEr4EemnkcXPzwjwhg" name="PME_checkDecesion69">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__STANDBY__68&quot;,&quot;STANDBY&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_5ikFwEj-EeaDOaB8rZNNSg" name="Pseudo42"/>
          <subvertex xmi:type="uml:State" xmi:id="__e_A4Ej-EeaDOaB8rZNNSg" name="MOVING_FORWARD">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_eLkqAEj_EeaDOaB8rZNNSg">
              <language>C++</language>
              <body>log.log (&quot;moving forward&quot;);
engine.moveForward().send();
detection.startDetection().send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_B4sDMEj_EeaDOaB8rZNNSg" name="STANDBY">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_f5pVYEj_EeaDOaB8rZNNSg" name="">
              <language>C++</language>
              <body>timer.informIn(UMLRTTimespec(4,0));
log.log (&quot;ControlSoftware standing by&quot;);</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_HvR9YFTXEeaAD8nFYloOhg" name="MOVING_BACKWARDS">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_XB2vkFTXEeaAD8nFYloOhg">
              <language>C++</language>
              <body>log.log(&quot;moving bacwards&quot;);
engine.moveBackwards().send();
timer.informIn(UMLRTTimespec(1,0));</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_KXV4YEr4EemnkcXPzwjwhg" name="DecesionPoint__43" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KTNmUUr4EemnkcXPzwjwhg" name="loadHeap" specification="_KTNmUEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.threshold&quot;,this->threshold);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KTX-YUr4EemnkcXPzwjwhg" name="unLoadHeap" specification="_KTX-YEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.threshold&quot;,&amp;this->threshold);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KUoioUr4EemnkcXPzwjwhg" name="sendMessage" specification="_KUoioEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;engine&quot;) {
  if(message.signal==&quot;moveForward&quot;) {
   if(message.payload.size()==0){
    engine.moveForward().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;turnLeft&quot;) {
   if(message.payload.size()==1){
    engine.turnLeft( boost::any_cast&lt;int>(message.payload[&quot;angle&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stop&quot;) {
   if(message.payload.size()==0){
    engine.stop().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;turnRight&quot;) {
   if(message.payload.size()==1){
    engine.turnRight( boost::any_cast&lt;int>(message.payload[&quot;angle&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;moveBackwards&quot;) {
   if(message.payload.size()==0){
    engine.moveBackwards().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;startDetection&quot;) {
   if(message.payload.size()==0){
    detection.startDetection().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stopDetection&quot;) {
   if(message.payload.size()==0){
    detection.stopDetection().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;temperature&quot;) {
  if(message.signal==&quot;startCollecting&quot;) {
   if(message.payload.size()==0){
    temperature.startCollecting().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stopCollecting&quot;) {
   if(message.payload.size()==0){
    temperature.stopCollecting().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KVA9IUr4EemnkcXPzwjwhg" name="sendInternalMessage" specification="_KVA9IEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KW2JIUr4EemnkcXPzwjwhg" name="initForPMD" specification="_KW2JIEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ControlSoftware::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ControlSoftware::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;moveForward&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnLeft&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;stop&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnRight&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;moveBackwards&quot;,{});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;startDetection&quot;,{});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;stopDetection&quot;,{});
this->execContext.addOutPutMessages(&quot;temperature&quot;,&quot;startCollecting&quot;,{});
this->execContext.addOutPutMessages(&quot;temperature&quot;,&quot;stopCollecting&quot;,{});
 this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnedLeft&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;stopped&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnedRight&quot;,{});
this->execContext.addInputMessages(&quot;detection&quot;,&quot;obstacleDetected&quot;,{ {&quot;distance&quot;,&quot;Real&quot;}});
this->execContext.addInputMessages(&quot;temperature&quot;,&quot;dataCollected&quot;,{ {&quot;value&quot;,&quot;EDouble&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForControlSoftware&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_KTNmUEr4EemnkcXPzwjwhg" name="loadHeap" visibility="private" method="_KTNmUUr4EemnkcXPzwjwhg"/>
      <ownedOperation xmi:id="_KTX-YEr4EemnkcXPzwjwhg" name="unLoadHeap" visibility="private" method="_KTX-YUr4EemnkcXPzwjwhg"/>
      <ownedOperation xmi:id="_KUoioEr4EemnkcXPzwjwhg" name="sendMessage" visibility="private" method="_KUoioUr4EemnkcXPzwjwhg">
        <ownedParameter xmi:id="_KUupQEr4EemnkcXPzwjwhg" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KUy6sEr4EemnkcXPzwjwhg" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KVA9IEr4EemnkcXPzwjwhg" name="sendInternalMessage" visibility="private" method="_KVA9IUr4EemnkcXPzwjwhg">
        <ownedParameter xmi:id="_KVHDwEr4EemnkcXPzwjwhg" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KVPmoEr4EemnkcXPzwjwhg" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KW2JIEr4EemnkcXPzwjwhg" name="initForPMD" visibility="private" method="_KW2JIUr4EemnkcXPzwjwhg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_J2wT0Er4EemnkcXPzwjwhg" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_J390wEr4EemnkcXPzwjwhg" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_J4ARAEr4EemnkcXPzwjwhg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_J4BfIEr4EemnkcXPzwjwhg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_J6ar0Er4EemnkcXPzwjwhg" name="dbgPortForEngineController" visibility="public" type="_J3XX0Ur4EemnkcXPzwjwhg" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_J9vsoEr4EemnkcXPzwjwhg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_J9wTsEr4EemnkcXPzwjwhg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_KSWDoEr4EemnkcXPzwjwhg" name="dbgPortForControlSoftware" visibility="public" type="_J3XX0Ur4EemnkcXPzwjwhg" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KSYf4Er4EemnkcXPzwjwhg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_KSYf4Ur4EemnkcXPzwjwhg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_KcfeIEr4EemnkcXPzwjwhg" name="dbgPortForDetectionSensor" visibility="public" type="_J3XX0Ur4EemnkcXPzwjwhg" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KcihcEr4EemnkcXPzwjwhg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_KcjIgEr4EemnkcXPzwjwhg" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_J3J8cEr4EemnkcXPzwjwhg" name="dbgAgent StateMachine">
        <region xmi:id="_KRDqMEr4EemnkcXPzwjwhg" name="mainRegion">
          <transition xmi:id="_KRcrwEr4EemnkcXPzwjwhg" name="Trans__Init__State__3637" source="_KRWlIEr4EemnkcXPzwjwhg" target="_KRIisEr4EemnkcXPzwjwhg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KR7z8Er4EemnkcXPzwjwhg">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__36&quot;,&quot;New__State__35&quot;,&quot;To__New__State__35__40&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__36&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_KReg8Er4EemnkcXPzwjwhg" name="From__New__State__35__38" source="_KRSTsEr4EemnkcXPzwjwhg" target="_KRIisEr4EemnkcXPzwjwhg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_KSDvwEr4EemnkcXPzwjwhg">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__35&quot;,&quot;New__State__35&quot;,&quot;To__New__State__35__40&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__35&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_KRjZcEr4EemnkcXPzwjwhg" name="PME_Trig39" port="_J390wEr4EemnkcXPzwjwhg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_KR0fMEr4EemnkcXPzwjwhg" name="To__New__State__35__40" guard="_KSGMAUr4EemnkcXPzwjwhg" source="_KRIisEr4EemnkcXPzwjwhg" target="_KRSTsEr4EemnkcXPzwjwhg">
            <ownedRule xmi:id="_KSGMAUr4EemnkcXPzwjwhg" name="PME_checkDecesion41">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_KSGMAEr4EemnkcXPzwjwhg" name="PME_checkDecesion41">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__35__40&quot;,&quot;New__State__35&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_KRIisEr4EemnkcXPzwjwhg" name="DecesionPoint__34" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_KRSTsEr4EemnkcXPzwjwhg" name="New__State__35">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_KhddsEr4EemnkcXPzwjwhg" name="New__State__35">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_KRWlIEr4EemnkcXPzwjwhg" name="Init__State__36"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KQRAAEr4EemnkcXPzwjwhg" name="loadHeap" specification="_KQQY8Er4EemnkcXPzwjwhg">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KQVRcUr4EemnkcXPzwjwhg" name="unLoadHeap" specification="_KQVRcEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KQhesUr4EemnkcXPzwjwhg" name="sendMessage" specification="_KQhesEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForEngineController&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForEngineController.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KQrPsUr4EemnkcXPzwjwhg" name="sendInternalMessage" specification="_KQrPsEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KQ-xsUr4EemnkcXPzwjwhg" name="initForPMD" specification="_KQ-xsEr4EemnkcXPzwjwhg">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForEngineController&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_KQQY8Er4EemnkcXPzwjwhg" name="loadHeap" visibility="private" method="_KQRAAEr4EemnkcXPzwjwhg"/>
      <ownedOperation xmi:id="_KQVRcEr4EemnkcXPzwjwhg" name="unLoadHeap" visibility="private" method="_KQVRcUr4EemnkcXPzwjwhg"/>
      <ownedOperation xmi:id="_KQhesEr4EemnkcXPzwjwhg" name="sendMessage" visibility="private" method="_KQhesUr4EemnkcXPzwjwhg">
        <ownedParameter xmi:id="_KQmXMEr4EemnkcXPzwjwhg" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KQozcEr4EemnkcXPzwjwhg" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KQrPsEr4EemnkcXPzwjwhg" name="sendInternalMessage" visibility="private" method="_KQrPsUr4EemnkcXPzwjwhg">
        <ownedParameter xmi:id="_KQuTAEr4EemnkcXPzwjwhg" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_KQwvQEr4EemnkcXPzwjwhg" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_KQ-xsEr4EemnkcXPzwjwhg" name="initForPMD" visibility="private" method="_KQ-xsUr4EemnkcXPzwjwhg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_J3SfUEr4EemnkcXPzwjwhg" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_J3XX0Ur4EemnkcXPzwjwhg" name="dbgProtocol">
        <interfaceRealization xmi:id="_J3t9IEr4EemnkcXPzwjwhg" client="_J3XX0Ur4EemnkcXPzwjwhg" supplier="_J3abIEr4EemnkcXPzwjwhg" contract="_J3abIEr4EemnkcXPzwjwhg"/>
        <interfaceRealization xmi:id="_J3y1oEr4EemnkcXPzwjwhg" client="_J3XX0Ur4EemnkcXPzwjwhg" supplier="_J3c3YEr4EemnkcXPzwjwhg" contract="_J3c3YEr4EemnkcXPzwjwhg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_J3abIEr4EemnkcXPzwjwhg" name="dbgProtocol">
        <ownedOperation xmi:id="_J32gAEr4EemnkcXPzwjwhg" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_J3cQUEr4EemnkcXPzwjwhg" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_J3c3YEr4EemnkcXPzwjwhg" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_J3eFgEr4EemnkcXPzwjwhg" client="_J3XX0Ur4EemnkcXPzwjwhg" supplier="_J3cQUEr4EemnkcXPzwjwhg"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_J3hv4Er4EemnkcXPzwjwhg" client="_J3XX0Ur4EemnkcXPzwjwhg" supplier="_J3c3YEr4EemnkcXPzwjwhg"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_J34VMEr4EemnkcXPzwjwhg" operation="_J32gAEr4EemnkcXPzwjwhg"/>
    </packagedElement>
    <profileApplication xmi:id="_rZAnWkIZEeaoHPpII-6Tdw">
      <eAnnotations xmi:id="_rZAnW0IZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_rZAnXEIZEeaoHPpII-6Tdw">
      <eAnnotations xmi:id="_rZAnXUIZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_rZAnXkIZEeaoHPpII-6Tdw">
      <eAnnotations xmi:id="_rZAnX0IZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_9_1t4Ej0EeaDOaB8rZNNSg">
      <eAnnotations xmi:id="_9_3jEEj0EeaDOaB8rZNNSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_H4b5kKshEeii-Z6YoPPP7w">
      <eAnnotations xmi:id="_H4hZIKshEeii-Z6YoPPP7w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <standard:ModelLibrary xmi:id="_rZAnYEIZEeaoHPpII-6Tdw" base_Package="_rZAAEEIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_rZAnYUIZEeaoHPpII-6Tdw" base_Package="_rZAALUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnYkIZEeaoHPpII-6Tdw" base_Interface="_rZAAMUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnY0IZEeaoHPpII-6Tdw" base_Interface="_rZAANUIZEeaoHPpII-6Tdw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnZEIZEeaoHPpII-6Tdw" base_Interface="_rZAAP0IZEeaoHPpII-6Tdw" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_rZAnZUIZEeaoHPpII-6Tdw" base_Collaboration="_rZAALkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_rZAnZkIZEeaoHPpII-6Tdw" base_Package="_rZAASUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnZ0IZEeaoHPpII-6Tdw" base_Interface="_rZAATUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnaEIZEeaoHPpII-6Tdw" base_Interface="_rZAAUEIZEeaoHPpII-6Tdw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnaUIZEeaoHPpII-6Tdw" base_Interface="_rZAAVUIZEeaoHPpII-6Tdw" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_rZAnakIZEeaoHPpII-6Tdw" base_Collaboration="_rZAASkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_rZAna0IZEeaoHPpII-6Tdw" base_Package="_rZAAWkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnbEIZEeaoHPpII-6Tdw" base_Interface="_rZAAXkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnbUIZEeaoHPpII-6Tdw" base_Interface="_rZAAYUIZEeaoHPpII-6Tdw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnbkIZEeaoHPpII-6Tdw" base_Interface="_rZAAZkIZEeaoHPpII-6Tdw" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_rZAnb0IZEeaoHPpII-6Tdw" base_Collaboration="_rZAAW0IZEeaoHPpII-6Tdw"/>
  <UMLRealTime:Capsule xmi:id="_9eZasEhlEeaGrIS8kLT52w" base_Class="_9dusUEhlEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_CFjc8EhvEeaGrIS8kLT52w" base_Class="_CFLpgEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_Ffw6AEhvEeaGrIS8kLT52w" base_Property="_FfiQgEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_MlQWAEhvEeaGrIS8kLT52w" base_Port="_MlGlAEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_O8O0cEhvEeaGrIS8kLT52w" base_Port="_O8LKEEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_Q9orgEhvEeaGrIS8kLT52w" base_Port="_Q9hWwEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_lKF9wEhvEeaGrIS8kLT52w" base_Class="_lJwmkEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_peoVEEhvEeaGrIS8kLT52w" base_Port="_pekDoEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_rhMpwEhvEeaGrIS8kLT52w" base_Port="_rhC4wEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_tKT8oEhvEeaGrIS8kLT52w" base_Port="_tKPrMEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_uvLosUhvEeaGrIS8kLT52w" base_Property="_uvJMcEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_RcA0IEhwEeaGrIS8kLT52w" base_Class="_Rbq14EhwEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_W-zHQEhwEeaGrIS8kLT52w" base_Class="_W-iBgEhwEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_Y3xbEEhwEeaGrIS8kLT52w" base_Class="_Y3d5EEhwEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_eOzKIEhwEeaGrIS8kLT52w" base_Port="_eOwG0EhwEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_64ThMEhwEeaGrIS8kLT52w" base_Port="_64Qd4EhwEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_-HfaAEhwEeaGrIS8kLT52w" base_Port="_-HcWsEhwEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_K160cEhxEeaGrIS8kLT52w" base_Property="_K14YMEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_K1_F4UhxEeaGrIS8kLT52w" base_Property="_K19QsEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_K2DXUEhxEeaGrIS8kLT52w" base_Property="_K2A7EEhxEeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e-BLIEhxEeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_e-CZQEhxEeaGrIS8kLT52w" base_Region="_e985sEhxEeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_e-VUMEhxEeaGrIS8kLT52w" base_StateMachine="_e95PUEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_mCkEkEh0EeaGrIS8kLT52w" base_Port="_mCfzIEh0EeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_LeEqEEj0EeaDOaB8rZNNSg" base_Pseudostate="_LeAYoEj0EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_LeReYEj0EeaDOaB8rZNNSg" base_Region="_Ld8HMEj0EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_LfJBEEj0EeaDOaB8rZNNSg" base_StateMachine="_LdxvIEj0EeaDOaB8rZNNSg"/>
  <UMLRealTime:RTPort xmi:id="_t2g54Ej0EeaDOaB8rZNNSg" base_Port="_t2UsoEj0EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_J2pKgEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_9RZ9wEj4EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_cQPYAEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_c6o1UEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_nb0foEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_gSHugEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_qGzfMEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_s5v9YEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_r9R4oEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_wyUKYEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_t4WeMEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_zryR4Ej5EeaDOaB8rZNNSg"/>
  <RTCppProperties:ArtifactProperties xmi:id="_cafDsEj7EeaDOaB8rZNNSg" base_Artifact="_Y6tKIEj7EeaDOaB8rZNNSg" includeFile="#include &lt;string>&#xA;using namespace std;&#xA;/* GPIO Class&#xA; * Purpose: Each object instantiated from this class will control a GPIO pin&#xA; * The GPIO pin number must be passed to the overloaded class constructor&#xA; */&#xA;class GPIOClass&#xA;{&#xA;public:&#xA;    GPIOClass();  // create a GPIO object that controls GPIO4 (default&#xA;    GPIOClass(string x); // create a GPIO object that controls GPIOx, where x is passed to this constructor&#xA;    int export_gpio(); // exports GPIO&#xA;    int unexport_gpio(); // unexport GPIO&#xA;    int setdir_gpio(string dir); // Set GPIO Direction&#xA;    int setval_gpio(string val); // Set GPIO Value (putput pins)&#xA;    int getval_gpio(string&amp; val); // Get GPIO Value (input/ output pins)&#xA;    string get_gpionum(); // return the GPIO number associated with the instance of an object&#xA;private:&#xA;    string gpionum; // GPIO number associated with the instance of an object&#xA;};" sourceFile="#include &lt;fstream>&#xA;#include &lt;string>&#xA;#include &lt;iostream>&#xA;#include &lt;sstream>&#xA;#include &quot;GPIOClass.hh&quot;&#xA;&#xA;using namespace std;&#xA;&#xA;GPIOClass::GPIOClass()&#xA;{&#xA;    this->gpionum = &quot;4&quot;; //GPIO4 is default&#xA;}&#xA;&#xA;GPIOClass::GPIOClass(string gnum)&#xA;{&#xA;    this->gpionum = gnum;  //Instatiate GPIOClass object for GPIO pin number &quot;gnum&quot;&#xA;}&#xA;&#xA;int GPIOClass::export_gpio()&#xA;{&#xA;    string export_str = &quot;/sys/class/gpio/export&quot;;&#xA;    ofstream exportgpio(export_str.c_str()); // Open &quot;export&quot; file. Convert C++ string to C string. Required for all Linux pathnames&#xA;    if (exportgpio &lt; 0){&#xA;        cout &lt;&lt; &quot; OPERATION FAILED: Unable to export GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;        return -1;&#xA;    }&#xA;&#xA;    exportgpio &lt;&lt; this->gpionum ; //write GPIO number to export&#xA;    exportgpio.close(); //close export file&#xA;    return 0;&#xA;}&#xA;&#xA;int GPIOClass::unexport_gpio()&#xA;{&#xA;    string unexport_str = &quot;/sys/class/gpio/unexport&quot;;&#xA;    ofstream unexportgpio(unexport_str.c_str()); //Open unexport file&#xA;    if (unexportgpio &lt; 0){&#xA;        cout &lt;&lt; &quot; OPERATION FAILED: Unable to unexport GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;        return -1;&#xA;    }&#xA;&#xA;    unexportgpio &lt;&lt; this->gpionum ; //write GPIO number to unexport&#xA;    unexportgpio.close(); //close unexport file&#xA;    return 0;&#xA;}&#xA;&#xA;int GPIOClass::setdir_gpio(string dir)&#xA;{&#xA;&#xA;    string setdir_str =&quot;/sys/class/gpio/gpio&quot; + this->gpionum + &quot;/direction&quot;;&#xA;    ofstream setdirgpio(setdir_str.c_str()); // open direction file for gpio&#xA;        if (setdirgpio &lt; 0){&#xA;            cout &lt;&lt; &quot; OPERATION FAILED: Unable to set direction of GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;            return -1;&#xA;        }&#xA;&#xA;        setdirgpio &lt;&lt; dir; //write direction to direction file&#xA;        setdirgpio.close(); // close direction file&#xA;        return 0;&#xA;}&#xA;&#xA;int GPIOClass::setval_gpio(string val)&#xA;{&#xA;&#xA;    string setval_str = &quot;/sys/class/gpio/gpio&quot; + this->gpionum + &quot;/value&quot;;&#xA;    ofstream setvalgpio(setval_str.c_str()); // open value file for gpio&#xA;        if (setvalgpio &lt; 0){&#xA;            cout &lt;&lt; &quot; OPERATION FAILED: Unable to set the value of GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;            return -1;&#xA;        }&#xA;&#xA;        setvalgpio &lt;&lt; val ;//write value to value file&#xA;        setvalgpio.close();// close value file&#xA;        return 0;&#xA;}&#xA;&#xA;int GPIOClass::getval_gpio(string&amp; val){&#xA;&#xA;    string getval_str = &quot;/sys/class/gpio/gpio&quot; + this->gpionum + &quot;/value&quot;;&#xA;    ifstream getvalgpio(getval_str.c_str());// open value file for gpio&#xA;    if (getvalgpio &lt; 0){&#xA;        cout &lt;&lt; &quot; OPERATION FAILED: Unable to get value of GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;        return -1;&#xA;            }&#xA;&#xA;    getvalgpio >> val ;  //read gpio value&#xA;&#xA;    if(val != &quot;0&quot;)&#xA;        val = &quot;1&quot;;&#xA;    else&#xA;        val = &quot;0&quot;;&#xA;&#xA;    getvalgpio.close(); //close the value file&#xA;    return 0;&#xA;}&#xA;&#xA;string GPIOClass::get_gpionum(){&#xA;&#xA;return this->gpionum;&#xA;&#xA;}"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5il68Ej-EeaDOaB8rZNNSg" base_Pseudostate="_5ikFwEj-EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_5imiAEj-EeaDOaB8rZNNSg" base_Region="_5iiQkEj-EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_5jRQYEj-EeaDOaB8rZNNSg" base_StateMachine="_5icxAEj-EeaDOaB8rZNNSg"/>
  <UMLRealTime:RTPort xmi:id="_cfxvMEkCEeazmIbzY62nkg" base_Port="_cfYtoEkCEeazmIbzY62nkg"/>
  <UMLRealTime:RTPort xmi:id="_ecLKcEkCEeazmIbzY62nkg" base_Port="_ecDOoEkCEeazmIbzY62nkg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_8QvmcEkCEeazmIbzY62nkg" headerPreface="#include &quot;GPIOClass.hh&quot;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &quot;GPIOClass.hh&quot;" base_Class="_Rbq14EhwEeaGrIS8kLT52w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_BvnC4EkDEeazmIbzY62nkg" headerPreface="#include &quot;GPIOClass.hh&quot;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &quot;GPIOClass.hh&quot;" base_Class="_Y3d5EEhwEeaGrIS8kLT52w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_-fqfoEkDEeazmIbzY62nkg" base_Port="_-fhVsEkDEeazmIbzY62nkg"/>
  <UMLRealTime:RTConnector xmi:id="_MKE50EkHEeazmIbzY62nkg" base_Connector="_8kYd8EhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTConnector xmi:id="_NCdTUEkHEeazmIbzY62nkg" base_Connector="_9WyyUEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTConnector xmi:id="_NvupAEkHEeazmIbzY62nkg" base_Connector="_-HZI0EhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTConnector xmi:id="_PWKbUEkHEeazmIbzY62nkg" base_Connector="_ZnMQYEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_KAM7UFTQEeaAD8nFYloOhg" base_Port="_J81eQFTQEeaAD8nFYloOhg"/>
  <UMLRealTime:CapsulePart xmi:id="_uikEAFTbEeaAD8nFYloOhg" base_Property="_uigZoFTbEeaAD8nFYloOhg"/>
  <UMLRealTime:RTConnector xmi:id="_7cDe8FTbEeaAD8nFYloOhg" base_Connector="_5xYs4FTbEeaAD8nFYloOhg"/>
  <UMLRealTime:Capsule xmi:id="_J3JVYEr4EemnkcXPzwjwhg" base_Class="_J2wT0Er4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_J3R4QEr4EemnkcXPzwjwhg" base_StateMachine="_J3J8cEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_J3XX0Er4EemnkcXPzwjwhg" base_Package="_J3SfUEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:Protocol xmi:id="_J3Z0EEr4EemnkcXPzwjwhg" base_Collaboration="_J3XX0Ur4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTMessageSet xmi:id="_J3laQEr4EemnkcXPzwjwhg" base_Interface="_J3abIEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTMessageSet xmi:id="_J3n2gEr4EemnkcXPzwjwhg" base_Interface="_J3cQUEr4EemnkcXPzwjwhg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_J3tWEEr4EemnkcXPzwjwhg" base_Interface="_J3c3YEr4EemnkcXPzwjwhg" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_J4L3MEr4EemnkcXPzwjwhg" base_Port="_J390wEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTPort xmi:id="_J6TXEEr4EemnkcXPzwjwhg" isWired="false" base_Port="_J6N3gEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTPort xmi:id="_J9yv8Er4EemnkcXPzwjwhg" isPublish="true" isWired="false" base_Port="_J6ar0Er4EemnkcXPzwjwhg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_J-ZM4Er4EemnkcXPzwjwhg" base_Class="_Y3d5EEhwEeaGrIS8kLT52w"/>
  <RTCppProperties:CapsuleProperties xmi:id="_J-nPUEr4EemnkcXPzwjwhg" base_Class="_Y3d5EEhwEeaGrIS8kLT52w"/>
  <RTCppProperties:ParameterProperties xmi:id="_KAjJAEr4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KAOY4Er4EemnkcXPzwjwhg"/>
  <RTCppProperties:ParameterProperties xmi:id="_KBzGMEr4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KBdvAEr4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_KFrgoEr4EemnkcXPzwjwhg" base_Pseudostate="_KFc3IEr4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_KGZSUEr4EemnkcXPzwjwhg" base_Pseudostate="_KF8mYEr4EemnkcXPzwjwhg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_KQGA4Er4EemnkcXPzwjwhg" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_J2wT0Er4EemnkcXPzwjwhg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_KQNVoEr4EemnkcXPzwjwhg" base_Class="_J2wT0Er4EemnkcXPzwjwhg"/>
  <RTCppProperties:ParameterProperties xmi:id="_KQqBkEr4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KQozcEr4EemnkcXPzwjwhg"/>
  <RTCppProperties:ParameterProperties xmi:id="_KQzykEr4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KQwvQEr4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_KRH7oEr4EemnkcXPzwjwhg" base_Region="_KRDqMEr4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_KRJJwEr4EemnkcXPzwjwhg" base_Pseudostate="_KRIisEr4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTState xmi:id="_KRUv8Er4EemnkcXPzwjwhg" base_State="_KRSTsEr4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_KRcEsEr4EemnkcXPzwjwhg" base_Pseudostate="_KRWlIEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTPort xmi:id="_KSSZQEr4EemnkcXPzwjwhg" isWired="false" base_Port="_KSOu4Er4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTPort xmi:id="_KSaVEEr4EemnkcXPzwjwhg" isPublish="true" isWired="false" base_Port="_KSWDoEr4EemnkcXPzwjwhg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_KS9usEr4EemnkcXPzwjwhg" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_CFLpgEhvEeaGrIS8kLT52w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_KTDOQEr4EemnkcXPzwjwhg" base_Class="_CFLpgEhvEeaGrIS8kLT52w"/>
  <RTCppProperties:ParameterProperties xmi:id="_KU1W8Er4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KUy6sEr4EemnkcXPzwjwhg"/>
  <RTCppProperties:ParameterProperties xmi:id="_KVSC4Er4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KVPmoEr4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_KXXGgEr4EemnkcXPzwjwhg" base_Pseudostate="_KXV4YEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTPort xmi:id="_Kcca0Er4EemnkcXPzwjwhg" isWired="false" base_Port="_KcZ-kEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:RTPort xmi:id="_KclkwEr4EemnkcXPzwjwhg" isPublish="true" isWired="false" base_Port="_KcfeIEr4EemnkcXPzwjwhg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_Kc7jAEr4EemnkcXPzwjwhg" base_Class="_Rbq14EhwEeaGrIS8kLT52w"/>
  <RTCppProperties:CapsuleProperties xmi:id="_KdEs8Er4EemnkcXPzwjwhg" base_Class="_Rbq14EhwEeaGrIS8kLT52w"/>
  <RTCppProperties:ParameterProperties xmi:id="_KeS08Er4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KeMuUEr4EemnkcXPzwjwhg"/>
  <RTCppProperties:ParameterProperties xmi:id="_KerPcEr4EemnkcXPzwjwhg" type="pmd::Message" base_Parameter="_KemW8Er4EemnkcXPzwjwhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Kf5-gEr4EemnkcXPzwjwhg" base_Pseudostate="_KfyCsEr4EemnkcXPzwjwhg"/>
  <UMLRealTime:CapsulePart xmi:id="_KhWwAEr4EemnkcXPzwjwhg" base_Property="_KhVh4Er4EemnkcXPzwjwhg"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_rZAAEEIZEeaoHPpII-6Tdw" name="rover">
    <eAnnotations xmi:id="_-sKOUEhlEeaGrIS8kLT52w" source="UMLRT_Default_top">
      <details xmi:id="_-sK1YEhlEeaGrIS8kLT52w" key="top_name" value="Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_Za7hoEsfEemTrMjUGCUOcg" source="dummy"/>
    <eAnnotations xmi:id="_l2qc8Ev4Eem6Yb-8zFYhPw" source="dummy"/>
    <eAnnotations xmi:id="_2U3k4EwxEemX9aWmRJC4Ow" source="dummy"/>
    <eAnnotations xmi:id="_Q-TWQExhEem6k609cNfJNQ" source="dummy"/>
    <eAnnotations xmi:id="_8FZ_gEyGEemKmdicevnJug" source="dummy"/>
    <packagedElement xmi:type="uml:Package" xmi:id="_rZAALEIZEeaoHPpII-6Tdw" name="UMLRT-Rover">
      <packagedElement xmi:type="uml:Package" xmi:id="_rZAALUIZEeaoHPpII-6Tdw" name="Engine">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_rZAALkIZEeaoHPpII-6Tdw" name="Engine">
          <interfaceRealization xmi:id="_rZAAL0IZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAAMUIZEeaoHPpII-6Tdw" contract="_rZAAMUIZEeaoHPpII-6Tdw"/>
          <interfaceRealization xmi:id="_rZAAMEIZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAAP0IZEeaoHPpII-6Tdw" contract="_rZAAP0IZEeaoHPpII-6Tdw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAMUIZEeaoHPpII-6Tdw" name="Engine">
          <ownedOperation xmi:id="_rZAAMkIZEeaoHPpII-6Tdw" name="turnedLeft"/>
          <ownedOperation xmi:id="_rZAAM0IZEeaoHPpII-6Tdw" name="turnedRight"/>
          <ownedOperation xmi:id="_rZAANEIZEeaoHPpII-6Tdw" name="stopped"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAANUIZEeaoHPpII-6Tdw" name="Engine~">
          <ownedOperation xmi:id="_rZAANkIZEeaoHPpII-6Tdw" name="moveForward"/>
          <ownedOperation xmi:id="_rZAAN0IZEeaoHPpII-6Tdw" name="moveBackwards"/>
          <ownedOperation xmi:id="_rZAAOEIZEeaoHPpII-6Tdw" name="turnLeft">
            <ownedParameter xmi:id="_rZAAOUIZEeaoHPpII-6Tdw" name="angle">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rZAAOkIZEeaoHPpII-6Tdw" name="turnRight">
            <ownedParameter xmi:id="_rZAAO0IZEeaoHPpII-6Tdw" name="angle">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_rZAAPEIZEeaoHPpII-6Tdw" name="stop"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAPUIZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAANUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_rZAAPkIZEeaoHPpII-6Tdw" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAP0IZEeaoHPpII-6Tdw" name="EngineIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAQEIZEeaoHPpII-6Tdw" client="_rZAALkIZEeaoHPpII-6Tdw" supplier="_rZAAP0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAQUIZEeaoHPpII-6Tdw" operation="_rZAAMkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAQkIZEeaoHPpII-6Tdw" operation="_rZAAM0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAQ0IZEeaoHPpII-6Tdw" operation="_rZAANEIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAREIZEeaoHPpII-6Tdw" operation="_rZAANkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAARUIZEeaoHPpII-6Tdw" operation="_rZAAN0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAARkIZEeaoHPpII-6Tdw" operation="_rZAAOEIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAR0IZEeaoHPpII-6Tdw" operation="_rZAAOkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAASEIZEeaoHPpII-6Tdw" operation="_rZAAPEIZEeaoHPpII-6Tdw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rZAASUIZEeaoHPpII-6Tdw" name="Detection">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_rZAASkIZEeaoHPpII-6Tdw" name="Detection">
          <interfaceRealization xmi:id="_rZAAS0IZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAATUIZEeaoHPpII-6Tdw" contract="_rZAATUIZEeaoHPpII-6Tdw"/>
          <interfaceRealization xmi:id="_rZAATEIZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAAVUIZEeaoHPpII-6Tdw" contract="_rZAAVUIZEeaoHPpII-6Tdw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAATUIZEeaoHPpII-6Tdw" name="Detection">
          <ownedOperation xmi:id="_rZAATkIZEeaoHPpII-6Tdw" name="obstacleDetected">
            <ownedParameter xmi:id="_rZAAT0IZEeaoHPpII-6Tdw" name="distance">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAUEIZEeaoHPpII-6Tdw" name="Detection~">
          <ownedOperation xmi:id="_rZAAUUIZEeaoHPpII-6Tdw" name="startDetection"/>
          <ownedOperation xmi:id="_rZAAUkIZEeaoHPpII-6Tdw" name="stopDetection"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAU0IZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAAUEIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_rZAAVEIZEeaoHPpII-6Tdw" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAVUIZEeaoHPpII-6Tdw" name="DetectionIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAVkIZEeaoHPpII-6Tdw" client="_rZAASkIZEeaoHPpII-6Tdw" supplier="_rZAAVUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAV0IZEeaoHPpII-6Tdw" operation="_rZAAUUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAWEIZEeaoHPpII-6Tdw" operation="_rZAAUkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAWUIZEeaoHPpII-6Tdw" operation="_rZAATkIZEeaoHPpII-6Tdw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rZAAWkIZEeaoHPpII-6Tdw" name="Temperature">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_rZAAW0IZEeaoHPpII-6Tdw" name="Temperature">
          <interfaceRealization xmi:id="_rZAAXEIZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAXkIZEeaoHPpII-6Tdw" contract="_rZAAXkIZEeaoHPpII-6Tdw"/>
          <interfaceRealization xmi:id="_rZAAXUIZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAZkIZEeaoHPpII-6Tdw" contract="_rZAAZkIZEeaoHPpII-6Tdw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAXkIZEeaoHPpII-6Tdw" name="Temperature">
          <ownedOperation xmi:id="_rZAAX0IZEeaoHPpII-6Tdw" name="dataCollected">
            <ownedParameter xmi:id="_rZAAYEIZEeaoHPpII-6Tdw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/EcorePrimitiveTypes.library.uml#EDouble"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAYUIZEeaoHPpII-6Tdw" name="Temperature~">
          <ownedOperation xmi:id="_rZAAYkIZEeaoHPpII-6Tdw" name="startCollecting"/>
          <ownedOperation xmi:id="_rZAAY0IZEeaoHPpII-6Tdw" name="stopCollecting"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAZEIZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAYUIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_rZAAZUIZEeaoHPpII-6Tdw" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rZAAZkIZEeaoHPpII-6Tdw" name="TemperatureIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_rZAAZ0IZEeaoHPpII-6Tdw" client="_rZAAW0IZEeaoHPpII-6Tdw" supplier="_rZAAZkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAaEIZEeaoHPpII-6Tdw" operation="_rZAAX0IZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAaUIZEeaoHPpII-6Tdw" operation="_rZAAYkIZEeaoHPpII-6Tdw"/>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_rZAAakIZEeaoHPpII-6Tdw" operation="_rZAAY0IZEeaoHPpII-6Tdw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_lJwmkEhvEeaGrIS8kLT52w" name="Rover" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pekDoEhvEeaGrIS8kLT52w" name="temperature" visibility="public" type="_rZAAW0IZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_penG8EhvEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_penuAEhvEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rhC4wEhvEeaGrIS8kLT52w" name="detection" visibility="public" type="_rZAASkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rhLboEhvEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rhMCsEhvEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tKPrMEhvEeaGrIS8kLT52w" name="engine" visibility="public" type="_rZAALkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_tKSugEhvEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tKTVkEhvEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K14YMEhxEeaGrIS8kLT52w" name="detectionSensor" visibility="protected" type="_Rbq14EhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K16NYEhxEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K16NYUhxEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K19QsEhxEeaGrIS8kLT52w" name="temperatureSensor" visibility="protected" type="_W-iBgEhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K1-e0EhxEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K1_F4EhxEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K2A7EEhxEeaGrIS8kLT52w" name="engineController" visibility="protected" type="_Y3d5EEhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K2CwQEhxEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K2CwQUhxEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_uigZoFTbEeaAD8nFYloOhg" name="detectionSensor2" visibility="protected" type="_Rbq14EhwEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uijc8FTbEeaAD8nFYloOhg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uijc8VTbEeaAD8nFYloOhg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_ZnMQYEhxEeaGrIS8kLT52w" name="engine">
          <end xmi:id="_ZnMQYUhxEeaGrIS8kLT52w" partWithPort="_K2A7EEhxEeaGrIS8kLT52w" role="_-HcWsEhwEeaGrIS8kLT52w"/>
          <end xmi:id="_ZnMQYkhxEeaGrIS8kLT52w" role="_tKPrMEhvEeaGrIS8kLT52w"/>
        </ownedConnector>
        <ownedConnector xmi:id="_5xYs4FTbEeaAD8nFYloOhg" name="detection">
          <end xmi:id="_5xaiEFTbEeaAD8nFYloOhg" role="_rhC4wEhvEeaGrIS8kLT52w"/>
          <end xmi:id="_5xaiEVTbEeaAD8nFYloOhg" partWithPort="_uigZoFTbEeaAD8nFYloOhg" role="_eOwG0EhwEeaGrIS8kLT52w"/>
        </ownedConnector>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Rbq14EhwEeaGrIS8kLT52w" name="DetectionSensor" classifierBehavior="_LdxvIEj0EeaDOaB8rZNNSg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_eOwG0EhwEeaGrIS8kLT52w" name="detection" visibility="public" type="_rZAASkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eOyjEEhwEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_eOyjEUhwEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_t2UsoEj0EeaDOaB8rZNNSg" name="timer" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_t2fEsEj0EeaDOaB8rZNNSg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t2frwEj0EeaDOaB8rZNNSg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wxv78Ej0EeaDOaB8rZNNSg" name="timerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9RZ9wEj4EeaDOaB8rZNNSg" name="pinTrig">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_O8uI8Ej5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;23&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_c6o1UEj5EeaDOaB8rZNNSg" name="pinEcho">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_c6o1UUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;24&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_J81eQFTQEeaAD8nFYloOhg" name="log" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KAJ4AFTQEeaAD8nFYloOhg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KAKfEFTQEeaAD8nFYloOhg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_9otpoEr3EemQQvHRTw9udA" name="dbgPortForDetectionSensor" visibility="protected" type="_9QpH4Ur3EemQQvHRTw9udA" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9ouQsEr3EemQQvHRTw9udA" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9ove0Er3EemQQvHRTw9udA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_LdxvIEj0EeaDOaB8rZNNSg" name="DetectionSensorStateMachine" isReentrant="false">
          <region xmi:id="_Ld8HMEj0EeaDOaB8rZNNSg" name="Region">
            <transition xmi:id="_TE1AEEj0EeaDOaB8rZNNSg" name="init" source="_LeAYoEj0EeaDOaB8rZNNSg" target="_Q1jFEEj0EeaDOaB8rZNNSg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nkzrQEj0EeaDOaB8rZNNSg">
                <language>C++</language>
                <body>initForPMD();
pinTrig.export_gpio();
pinEcho.export_gpio();

pinTrig.setdir_gpio(&quot;out&quot;);
pinEcho.setdir_gpio(&quot;in&quot;);</body>
              </effect>
            </transition>
            <transition xmi:id="_WVlmMEj0EeaDOaB8rZNNSg" name="start detecting" source="_Q1jFEEj0EeaDOaB8rZNNSg" target="_U40GMEj0EeaDOaB8rZNNSg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w_luMEj1EeaDOaB8rZNNSg">
                <language>C++</language>
                <body>pinTrig.setval_gpio(&quot;1&quot;);
timerId = timer.informIn(UMLRTTimespec(0,10000));</body>
              </effect>
              <trigger xmi:id="_aphgkEj0EeaDOaB8rZNNSg" event="_rZAAV0IZEeaoHPpII-6Tdw" port="_eOwG0EhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_bjo_cEj0EeaDOaB8rZNNSg" name="stop detecting" source="_U40GMEj0EeaDOaB8rZNNSg" target="_Q1jFEEj0EeaDOaB8rZNNSg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_5enwAEj1EeaDOaB8rZNNSg">
                <language>C++</language>
                <body>timer.cancelTimer(timerId);
log.log(&quot;stop detecting&quot;);</body>
              </effect>
              <trigger xmi:id="_eKnBsEj0EeaDOaB8rZNNSg" event="_rZAAWEIZEeaoHPpII-6Tdw" port="_eOwG0EhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_qrr8oEj0EeaDOaB8rZNNSg" name="detecting" kind="internal" source="_U40GMEj0EeaDOaB8rZNNSg" target="_U40GMEj0EeaDOaB8rZNNSg">
              <ownedComment xmi:id="_97WPcEj0EeaDOaB8rZNNSg">
                <body>nt</body>
              </ownedComment>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_JelpIEj1EeaDOaB8rZNNSg">
                <language>C++</language>
                <body>pinTrig.setval_gpio(&quot;0&quot;);

clock_t pulse_start;
clock_t pulse_end;
double pulse_duration;

while(true) {
	string inputstate;
	pinEcho.getval_gpio(inputstate);
	int value = atoi(inputstate.c_str());

	if (value == 0) {
		pulse_start = clock();
	} else {
		break;
	}
}

while(true) {
	string inputstate;
	pinEcho.getval_gpio(inputstate);
	int value = atoi(inputstate.c_str());

	if (value == 1) {
		pulse_end = clock();
	} else {
		break;
	}
}

pulse_duration = (pulse_end - pulse_start) / (double)(CLOCKS_PER_SEC);

// log.log (&quot;pulse duration is %f&quot;, pulse_duration);

double distance = pulse_duration *17150;

//log.log (&quot;distance is %f&quot;, distance);

detection.obstacleDetected(distance).send();

pinTrig.setval_gpio(&quot;1&quot;);

timerId = timer.informIn(UMLRTTimespec(0,10000));</body>
              </effect>
              <trigger xmi:id="_3xRS0Ej0EeaDOaB8rZNNSg" port="_t2UsoEj0EeaDOaB8rZNNSg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_9qHX0Er3EemQQvHRTw9udA" name="From__IDLE__112" source="_Q1jFEEj0EeaDOaB8rZNNSg" target="_9p8YsEr3EemQQvHRTw9udA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9qtNsEr3EemQQvHRTw9udA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;DETECTING&quot;,&quot;To__DETECTING__120&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__119&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_9qOskEr3EemQQvHRTw9udA" name="PME_Trig113" event="_9RUdUEr3EemQQvHRTw9udA" port="_9otpoEr3EemQQvHRTw9udA"/>
              <trigger xmi:id="_9qRI0Er3EemQQvHRTw9udA" name="PME_Trig114" event="_rZAAWEIZEeaoHPpII-6Tdw" port="_eOwG0EhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9qYdkEr3EemQQvHRTw9udA" name="PME_Trig115" port="_t2UsoEj0EeaDOaB8rZNNSg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_9qZrsEr3EemQQvHRTw9udA" name="From__DETECTING__116" source="_U40GMEj0EeaDOaB8rZNNSg" target="_9p8YsEr3EemQQvHRTw9udA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9qvC4Er3EemQQvHRTw9udA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;DETECTING&quot;,&quot;DETECTING&quot;,&quot;To__DETECTING__120&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;DETECTING&quot;,&quot;IDLE&quot;,&quot;To__IDLE__119&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;DETECTING&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_9qdWEEr3EemQQvHRTw9udA" name="PME_Trig117" event="_9RUdUEr3EemQQvHRTw9udA" port="_9otpoEr3EemQQvHRTw9udA"/>
              <trigger xmi:id="_9qekMEr3EemQQvHRTw9udA" name="PME_Trig118" event="_rZAAV0IZEeaoHPpII-6Tdw" port="_eOwG0EhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_9qkq0Er3EemQQvHRTw9udA" name="To__IDLE__119" guard="_9qvp8kr3EemQQvHRTw9udA" source="_9p8YsEr3EemQQvHRTw9udA" target="_Q1jFEEj0EeaDOaB8rZNNSg">
              <ownedRule xmi:id="_9qvp8kr3EemQQvHRTw9udA" name="PME_checkDecesion122">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_9qvp8Ur3EemQQvHRTw9udA" name="PME_checkDecesion122">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__IDLE__119&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_9ql48Er3EemQQvHRTw9udA" name="To__DETECTING__120" guard="_9qvp8Er3EemQQvHRTw9udA" source="_9p8YsEr3EemQQvHRTw9udA" target="_U40GMEj0EeaDOaB8rZNNSg">
              <ownedRule xmi:id="_9qvp8Er3EemQQvHRTw9udA" name="PME_checkDecesion121">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_9qvC4Ur3EemQQvHRTw9udA" name="PME_checkDecesion121">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__DETECTING__120&quot;,&quot;DETECTING&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_LeAYoEj0EeaDOaB8rZNNSg" name="Pseudo110"/>
            <subvertex xmi:type="uml:State" xmi:id="_Q1jFEEj0EeaDOaB8rZNNSg" name="IDLE">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_e8_MYFTSEeaAD8nFYloOhg">
                <language>C++</language>
                <body>pinTrig.setval_gpio(&quot;0&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_U40GMEj0EeaDOaB8rZNNSg" name="DETECTING"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_9p8YsEr3EemQQvHRTw9udA" name="DecesionPoint__111" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9pHSQUr3EemQQvHRTw9udA" name="loadHeap" specification="_9pHSQEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9pNY4Ur3EemQQvHRTw9udA" name="unLoadHeap" specification="_9pNY4Er3EemQQvHRTw9udA">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9pWi0Er3EemQQvHRTw9udA" name="sendMessage" specification="_9pV7wEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;obstacleDetected&quot;) {
   if(message.payload.size()==1){
    detection.obstacleDetected( boost::any_cast&lt;double>(message.payload[&quot;distance&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9pdQgUr3EemQQvHRTw9udA" name="sendInternalMessage" specification="_9pdQgEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9pyAoUr3EemQQvHRTw9udA" name="initForPMD" specification="_9pyAoEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_DetectionSensor::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_DetectionSensor::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;obstacleDetected&quot;,{ {&quot;distance&quot;,&quot;Real&quot;}});
 this->execContext.addInputMessages(&quot;detection&quot;,&quot;startDetection&quot;,{});
this->execContext.addInputMessages(&quot;detection&quot;,&quot;stopDetection&quot;,{});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForDetectionSensor&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9pHSQEr3EemQQvHRTw9udA" name="loadHeap" visibility="private" method="_9pHSQUr3EemQQvHRTw9udA"/>
        <ownedOperation xmi:id="_9pNY4Er3EemQQvHRTw9udA" name="unLoadHeap" visibility="private" method="_9pNY4Ur3EemQQvHRTw9udA"/>
        <ownedOperation xmi:id="_9pV7wEr3EemQQvHRTw9udA" name="sendMessage" visibility="private" method="_9pWi0Er3EemQQvHRTw9udA">
          <ownedParameter xmi:id="_9pa0QEr3EemQQvHRTw9udA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9pcCYEr3EemQQvHRTw9udA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9pdQgEr3EemQQvHRTw9udA" name="sendInternalMessage" visibility="private" method="_9pdQgUr3EemQQvHRTw9udA">
          <ownedParameter xmi:id="_9peeoEr3EemQQvHRTw9udA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9pgT0Er3EemQQvHRTw9udA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9pyAoEr3EemQQvHRTw9udA" name="initForPMD" visibility="private" method="_9pyAoUr3EemQQvHRTw9udA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_W-iBgEhwEeaGrIS8kLT52w" name="TemperatureSensor" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_64Qd4EhwEeaGrIS8kLT52w" name="temperature" visibility="public" type="_rZAAW0IZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_64STEEhwEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_64S6IEhwEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y3d5EEhwEeaGrIS8kLT52w" name="EngineController" classifierBehavior="_e95PUEhxEeaGrIS8kLT52w" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-HcWsEhwEeaGrIS8kLT52w" name="engine" visibility="public" type="_rZAALkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-Hey8EhwEeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-Hey8UhwEeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mCfzIEh0EeaGrIS8kLT52w" name="timer" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mCi2cEh0EeaGrIS8kLT52w" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mCi2cUh0EeaGrIS8kLT52w" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_34ZdsEh0EeaGrIS8kLT52w" name="timerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSHugEj5EeaDOaB8rZNNSg" name="leftMotorForward">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_gSHugUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;22&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_s5v9YEj5EeaDOaB8rZNNSg" name="rightMotorForward">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_s5v9YUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;6&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wyUKYEj5EeaDOaB8rZNNSg" name="rightMotorBackwards">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_wyUKYUj5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;5&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:id="_zryR4Ej5EeaDOaB8rZNNSg" name="leftMotorBackwards">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_zry48Ej5EeaDOaB8rZNNSg">
            <language>C++</language>
            <body>GPIOClass(&quot;27&quot;)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-fhVsEkDEeazmIbzY62nkg" name="log" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-foDYEkDEeazmIbzY62nkg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-foqcEkDEeazmIbzY62nkg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_9hpYUEr3EemQQvHRTw9udA" name="dbgPortForEngineController" visibility="protected" type="_9QpH4Ur3EemQQvHRTw9udA" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9hp_YEr3EemQQvHRTw9udA" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9hqmcEr3EemQQvHRTw9udA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_e95PUEhxEeaGrIS8kLT52w" name="EngineControllerStateMachine" isReentrant="false">
          <region xmi:id="_e985sEhxEeaGrIS8kLT52w" name="Region">
            <transition xmi:id="_A7vN0EhyEeaGrIS8kLT52w" name="turn right" source="_pBYtgEhxEeaGrIS8kLT52w" target="_szwy8EhxEeaGrIS8kLT52w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yfQcgEh5EeaGrIS8kLT52w">
                <language>C++</language>
                <body>timerId = timer.informIn(UMLRTTimespec(0, (umlrtparam_angle / 360) * 1000000000));</body>
              </effect>
              <trigger xmi:id="_h3EmcEhyEeaGrIS8kLT52w" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_B3o1YEhyEeaGrIS8kLT52w" name="stop turning right" source="_szwy8EhxEeaGrIS8kLT52w" target="_pBYtgEhxEeaGrIS8kLT52w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_pZ0iAEh5EeaGrIS8kLT52w">
                <language>C++</language>
                <body>engine.turnedRight().send();</body>
              </effect>
              <trigger xmi:id="_vsJN8Eh0EeaGrIS8kLT52w" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_Ca890EhyEeaGrIS8kLT52w" name="move backwards" source="_pBYtgEhxEeaGrIS8kLT52w" target="_p51_gEhxEeaGrIS8kLT52w">
              <trigger xmi:id="_kUiucEhyEeaGrIS8kLT52w" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_C_8hQEhyEeaGrIS8kLT52w" name="stop moving backwards" source="_p51_gEhxEeaGrIS8kLT52w" target="_pBYtgEhxEeaGrIS8kLT52w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y913wEh5EeaGrIS8kLT52w">
                <language>C++</language>
                <body>engine.stopped().send();</body>
              </effect>
              <trigger xmi:id="_uAeoQEhyEeaGrIS8kLT52w" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_FJu4QEhyEeaGrIS8kLT52w" name="turn left" source="_pBYtgEhxEeaGrIS8kLT52w" target="_uPS80EhxEeaGrIS8kLT52w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wftmoEh5EeaGrIS8kLT52w">
                <language>C++</language>
                <body>timerId = timer.informIn(UMLRTTimespec(0, (umlrtparam_angle / 360) * 1000000000));</body>
              </effect>
              <trigger xmi:id="_axIegEhyEeaGrIS8kLT52w" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_Fy2GsEhyEeaGrIS8kLT52w" name="stop turning left" source="_uPS80EhxEeaGrIS8kLT52w" target="_pBYtgEhxEeaGrIS8kLT52w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_m5suoEh5EeaGrIS8kLT52w">
                <language>C++</language>
                <body>engine.turnedRight().send();</body>
              </effect>
              <trigger xmi:id="_tFmpgEh0EeaGrIS8kLT52w" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_Gb_KUEhyEeaGrIS8kLT52w" name="stop moving forward" source="_rDoSEEhxEeaGrIS8kLT52w" target="_pBYtgEhxEeaGrIS8kLT52w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hffvwEh5EeaGrIS8kLT52w">
                <language>C++</language>
                <body>engine.stopped().send();</body>
              </effect>
              <trigger xmi:id="_rNoGIEhyEeaGrIS8kLT52w" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_HDz_UEhyEeaGrIS8kLT52w" name="move forward" source="_pBYtgEhxEeaGrIS8kLT52w" target="_rDoSEEhxEeaGrIS8kLT52w">
              <trigger xmi:id="_m926EEhyEeaGrIS8kLT52w" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_Hq2KIEhyEeaGrIS8kLT52w" name="init" source="_e9-u4EhxEeaGrIS8kLT52w" target="_pBYtgEhxEeaGrIS8kLT52w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_cKYCAEh1EeaGrIS8kLT52w" name="initialize pins">
                <language>C++</language>
                <body>initForPMD();
// exporting GPIOs
leftMotorForward.export_gpio();
leftMotorBackwards.export_gpio();
rightMotorForward.export_gpio();
rightMotorBackwards.export_gpio();

// setting the mode for each GPIO
leftMotorForward.setdir_gpio(&quot;out&quot;);
leftMotorBackwards.setdir_gpio(&quot;out&quot;);
rightMotorForward.setdir_gpio(&quot;out&quot;);
rightMotorBackwards.setdir_gpio(&quot;out&quot;);</body>
              </effect>
            </transition>
            <transition xmi:id="_9jpjcEr3EemQQvHRTw9udA" name="From__IDLE__60" source="_pBYtgEhxEeaGrIS8kLT52w" target="_9jVaYEr3EemQQvHRTw9udA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9mcYwEr3EemQQvHRTw9udA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__92&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__96&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__93&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_9jt04Er3EemQQvHRTw9udA" name="PME_Trig61" event="_9RUdUEr3EemQQvHRTw9udA" port="_9hpYUEr3EemQQvHRTw9udA"/>
              <trigger xmi:id="_9jvqEEr3EemQQvHRTw9udA" name="PME_Trig62" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9j2XwEr3EemQQvHRTw9udA" name="PME_Trig63" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_9j5bEEr3EemQQvHRTw9udA" name="From__TURNING_RIGHT__64" source="_szwy8EhxEeaGrIS8kLT52w" target="_9jVaYEr3EemQQvHRTw9udA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9mk7oEr3EemQQvHRTw9udA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;IDLE&quot;,&quot;To__IDLE__92&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__96&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_RIGHT&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__93&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TURNING_RIGHT&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_9kAv0Er3EemQQvHRTw9udA" name="PME_Trig65" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9kDMEEr3EemQQvHRTw9udA" name="PME_Trig66" event="_9RUdUEr3EemQQvHRTw9udA" port="_9hpYUEr3EemQQvHRTw9udA"/>
              <trigger xmi:id="_9kFBQEr3EemQQvHRTw9udA" name="PME_Trig67" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9kM9EEr3EemQQvHRTw9udA" name="PME_Trig68" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9kR1kEr3EemQQvHRTw9udA" name="PME_Trig69" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9kWuEEr3EemQQvHRTw9udA" name="PME_Trig70" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_9kZKUEr3EemQQvHRTw9udA" name="From__TURNING_LEFT__71" source="_uPS80EhxEeaGrIS8kLT52w" target="_9jVaYEr3EemQQvHRTw9udA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9mHBkEr3EemQQvHRTw9udA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;IDLE&quot;,&quot;To__IDLE__92&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__96&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TURNING_LEFT&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__93&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TURNING_LEFT&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_9kgfEEr3EemQQvHRTw9udA" name="PME_Trig72" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9kiUQEr3EemQQvHRTw9udA" name="PME_Trig73" event="_9RUdUEr3EemQQvHRTw9udA" port="_9hpYUEr3EemQQvHRTw9udA"/>
              <trigger xmi:id="_9knz0Er3EemQQvHRTw9udA" name="PME_Trig74" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9kreMEr3EemQQvHRTw9udA" name="PME_Trig75" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9kt6cEr3EemQQvHRTw9udA" name="PME_Trig76" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9k12QEr3EemQQvHRTw9udA" name="PME_Trig77" event="_rZAASEIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
            </transition>
            <transition xmi:id="_9k9LAEr3EemQQvHRTw9udA" name="From__MOVING_BACKWARDS__78" source="_p51_gEhxEeaGrIS8kLT52w" target="_9jVaYEr3EemQQvHRTw9udA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9mVrEEr3EemQQvHRTw9udA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;IDLE&quot;,&quot;To__IDLE__92&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__96&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__93&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;MOVING_BACKWARDS&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_9lAOUEr3EemQQvHRTw9udA" name="PME_Trig79" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lEfwEr3EemQQvHRTw9udA" name="PME_Trig80" event="_9RUdUEr3EemQQvHRTw9udA" port="_9hpYUEr3EemQQvHRTw9udA"/>
              <trigger xmi:id="_9lLNcEr3EemQQvHRTw9udA" name="PME_Trig81" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lSiMEr3EemQQvHRTw9udA" name="PME_Trig82" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lUXYEr3EemQQvHRTw9udA" name="PME_Trig83" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lWMkEr3EemQQvHRTw9udA" name="PME_Trig84" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_9lc6QEr3EemQQvHRTw9udA" name="From__MOVING_FORWARD__85" source="_rDoSEEhxEeaGrIS8kLT52w" target="_9jVaYEr3EemQQvHRTw9udA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9mO9YEr3EemQQvHRTw9udA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;IDLE&quot;,&quot;To__IDLE__92&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;TURNING_LEFT&quot;,&quot;To__TURNING_LEFT__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__96&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;TURNING_RIGHT&quot;,&quot;To__TURNING_RIGHT__93&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;MOVING_FORWARD&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_9lf9kEr3EemQQvHRTw9udA" name="PME_Trig86" event="_rZAAREIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lnSUEr3EemQQvHRTw9udA" name="PME_Trig87" event="_9RUdUEr3EemQQvHRTw9udA" port="_9hpYUEr3EemQQvHRTw9udA"/>
              <trigger xmi:id="_9logcEr3EemQQvHRTw9udA" name="PME_Trig88" event="_rZAAR0IZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lq8sEr3EemQQvHRTw9udA" name="PME_Trig89" event="_rZAARkIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lxqYEr3EemQQvHRTw9udA" name="PME_Trig90" event="_rZAARUIZEeaoHPpII-6Tdw" port="_-HcWsEhwEeaGrIS8kLT52w"/>
              <trigger xmi:id="_9lzfkEr3EemQQvHRTw9udA" name="PME_Trig91" port="_mCfzIEh0EeaGrIS8kLT52w">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_9l8CcEr3EemQQvHRTw9udA" name="To__IDLE__92" guard="_9mmw0Ur3EemQQvHRTw9udA" source="_9jVaYEr3EemQQvHRTw9udA" target="_pBYtgEhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_9mmw0Ur3EemQQvHRTw9udA" name="PME_checkDecesion97">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_9mmw0Er3EemQQvHRTw9udA" name="PME_checkDecesion97">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__IDLE__92&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_9l8pgEr3EemQQvHRTw9udA" name="To__TURNING_RIGHT__93" guard="_9mzlIUr3EemQQvHRTw9udA" source="_9jVaYEr3EemQQvHRTw9udA" target="_szwy8EhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_9mzlIUr3EemQQvHRTw9udA" name="PME_checkDecesion101">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_9mzlIEr3EemQQvHRTw9udA" name="PME_checkDecesion101">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__TURNING_RIGHT__93&quot;,&quot;TURNING_RIGHT&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_9l9QkEr3EemQQvHRTw9udA" name="To__TURNING_LEFT__94" guard="_9msQYUr3EemQQvHRTw9udA" source="_9jVaYEr3EemQQvHRTw9udA" target="_uPS80EhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_9msQYUr3EemQQvHRTw9udA" name="PME_checkDecesion98">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_9msQYEr3EemQQvHRTw9udA" name="PME_checkDecesion98">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__TURNING_LEFT__94&quot;,&quot;TURNING_LEFT&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_9l93oEr3EemQQvHRTw9udA" name="To__MOVING_BACKWARDS__95" guard="_9mvTsUr3EemQQvHRTw9udA" source="_9jVaYEr3EemQQvHRTw9udA" target="_p51_gEhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_9mvTsUr3EemQQvHRTw9udA" name="PME_checkDecesion99">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_9mvTsEr3EemQQvHRTw9udA" name="PME_checkDecesion99">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__MOVING_BACKWARDS__95&quot;,&quot;MOVING_BACKWARDS&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_9l-esEr3EemQQvHRTw9udA" name="To__MOVING_FORWARD__96" guard="_9mwh0Ur3EemQQvHRTw9udA" source="_9jVaYEr3EemQQvHRTw9udA" target="_rDoSEEhxEeaGrIS8kLT52w">
              <ownedRule xmi:id="_9mwh0Ur3EemQQvHRTw9udA" name="PME_checkDecesion100">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_9mwh0Er3EemQQvHRTw9udA" name="PME_checkDecesion100">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__MOVING_FORWARD__96&quot;,&quot;MOVING_FORWARD&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_e9-u4EhxEeaGrIS8kLT52w" name="Pseudo58"/>
            <subvertex xmi:type="uml:State" xmi:id="_pBYtgEhxEeaGrIS8kLT52w" name="IDLE">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_0-j34Eh2EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is idle&quot;);

leftMotorForward.setval_gpio(&quot;0&quot;);
leftMotorBackwards.setval_gpio(&quot;0&quot;);
rightMotorForward.setval_gpio(&quot;0&quot;);
rightMotorBackwards.setval_gpio(&quot;0&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_p51_gEhxEeaGrIS8kLT52w" name="MOVING_BACKWARDS">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_EdzNEEh3EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is moving backwards&quot;);


leftMotorBackwards.setval_gpio(&quot;1&quot;);
rightMotorBackwards.setval_gpio(&quot;1&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_rDoSEEhxEeaGrIS8kLT52w" name="MOVING_FORWARD">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_O3tAIEh3EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is moving forward&quot;);
leftMotorForward.setval_gpio(&quot;1&quot;);
rightMotorForward.setval_gpio(&quot;1&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_szwy8EhxEeaGrIS8kLT52w" name="TURNING_RIGHT">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_P8JfsEh3EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is turning right&quot;);

leftMotorForward.setval_gpio(&quot;1&quot;);
rightMotorBackwards.setval_gpio(&quot;1&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_uPS80EhxEeaGrIS8kLT52w" name="TURNING_LEFT">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_RFJvIEh3EeaGrIS8kLT52w">
                <language>C++</language>
                <body>log.log(&quot;Engine is turning left&quot;);

leftMotorBackwards.setval_gpio(&quot;1&quot;);
rightMotorForward.setval_gpio(&quot;1&quot;);</body>
              </entry>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_9jVaYEr3EemQQvHRTw9udA" name="DecesionPoint__59" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9iSRgUr3EemQQvHRTw9udA" name="loadHeap" specification="_9iSRgEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9iXKAEr3EemQQvHRTw9udA" name="unLoadHeap" specification="_9iUtwEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9imakUr3EemQQvHRTw9udA" name="sendMessage" specification="_9imakEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;engine&quot;) {
  if(message.signal==&quot;turnedLeft&quot;) {
   if(message.payload.size()==0){
    engine.turnedLeft().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stopped&quot;) {
   if(message.payload.size()==0){
    engine.stopped().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;turnedRight&quot;) {
   if(message.payload.size()==0){
    engine.turnedRight().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9iyAwUr3EemQQvHRTw9udA" name="sendInternalMessage" specification="_9iyAwEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9jNekEr3EemQQvHRTw9udA" name="initForPMD" specification="_9jM3gEr3EemQQvHRTw9udA">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EngineController::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EngineController::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnedLeft&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;stopped&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnedRight&quot;,{});
 this->execContext.addInputMessages(&quot;engine&quot;,&quot;moveForward&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnLeft&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;stop&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnRight&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;moveBackwards&quot;,{});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEngineController&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_9iSRgEr3EemQQvHRTw9udA" name="loadHeap" visibility="private" method="_9iSRgUr3EemQQvHRTw9udA"/>
        <ownedOperation xmi:id="_9iUtwEr3EemQQvHRTw9udA" name="unLoadHeap" visibility="private" method="_9iXKAEr3EemQQvHRTw9udA"/>
        <ownedOperation xmi:id="_9imakEr3EemQQvHRTw9udA" name="sendMessage" visibility="private" method="_9imakUr3EemQQvHRTw9udA">
          <ownedParameter xmi:id="_9inosEr3EemQQvHRTw9udA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9iqsAEr3EemQQvHRTw9udA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9iyAwEr3EemQQvHRTw9udA" name="sendInternalMessage" visibility="private" method="_9iyAwUr3EemQQvHRTw9udA">
          <ownedParameter xmi:id="_9izO4Er3EemQQvHRTw9udA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_9i1rIEr3EemQQvHRTw9udA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_9jM3gEr3EemQQvHRTw9udA" name="initForPMD" visibility="private" method="_9jNekEr3EemQQvHRTw9udA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Artifact" xmi:id="_Y6tKIEj7EeaDOaB8rZNNSg" name="GPIOClass" fileName="">
        <nestedArtifact xmi:id="_ljw8YEj7EeaDOaB8rZNNSg"/>
      </packagedElement>
      <profileApplication xmi:id="_rZAnVEIZEeaoHPpII-6Tdw">
        <eAnnotations xmi:id="_rZAnVUIZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
        </eAnnotations>
        <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
      </profileApplication>
      <profileApplication xmi:id="_rZAnVkIZEeaoHPpII-6Tdw">
        <eAnnotations xmi:id="_rZAnV0IZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
        </eAnnotations>
        <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
      </profileApplication>
      <profileApplication xmi:id="_rZAnWEIZEeaoHPpII-6Tdw">
        <eAnnotations xmi:id="_rZAnWUIZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
        </eAnnotations>
        <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
      </profileApplication>
      <profileApplication xmi:id="_x42mkEj3EeaDOaB8rZNNSg">
        <eAnnotations xmi:id="_x43NoEj3EeaDOaB8rZNNSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
        </eAnnotations>
        <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
      </profileApplication>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9dusUEhlEeaGrIS8kLT52w" name="Top" isActive="true">
      <ownedAttribute xmi:id="_FfiQgEhvEeaGrIS8kLT52w" name="controlSoftware" visibility="protected" type="_CFLpgEhvEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FfvE0EhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ffvr4EhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_uvJMcEhvEeaGrIS8kLT52w" name="rover" visibility="protected" type="_lJwmkEhvEeaGrIS8kLT52w" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uvLBoEhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uvLosEhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_9q1JgEr3EemQQvHRTw9udA" name="dbgAgent" type="_9P1PkEr3EemQQvHRTw9udA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9q3lwUr3EemQQvHRTw9udA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9q4M0Er3EemQQvHRTw9udA" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_8kYd8EhvEeaGrIS8kLT52w" name="Connector1">
        <end xmi:id="_8kZsEEhvEeaGrIS8kLT52w" partWithPort="_FfiQgEhvEeaGrIS8kLT52w" role="_Q9hWwEhvEeaGrIS8kLT52w"/>
        <end xmi:id="_8kZsEUhvEeaGrIS8kLT52w" partWithPort="_uvJMcEhvEeaGrIS8kLT52w" role="_pekDoEhvEeaGrIS8kLT52w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_9WyyUEhvEeaGrIS8kLT52w" name="Connector2">
        <end xmi:id="_9W0AcEhvEeaGrIS8kLT52w" partWithPort="_FfiQgEhvEeaGrIS8kLT52w" role="_O8LKEEhvEeaGrIS8kLT52w"/>
        <end xmi:id="_9W0ngEhvEeaGrIS8kLT52w" partWithPort="_uvJMcEhvEeaGrIS8kLT52w" role="_rhC4wEhvEeaGrIS8kLT52w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-HZI0EhvEeaGrIS8kLT52w" name="Connector3">
        <end xmi:id="_-HZv4EhvEeaGrIS8kLT52w" partWithPort="_FfiQgEhvEeaGrIS8kLT52w" role="_MlGlAEhvEeaGrIS8kLT52w"/>
        <end xmi:id="_-HZv4UhvEeaGrIS8kLT52w" partWithPort="_uvJMcEhvEeaGrIS8kLT52w" role="_tKPrMEhvEeaGrIS8kLT52w"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFLpgEhvEeaGrIS8kLT52w" name="ControlSoftware" classifierBehavior="_5icxAEj-EeaDOaB8rZNNSg" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_MlGlAEhvEeaGrIS8kLT52w" name="engine" visibility="public" type="_rZAALkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MlOg0EhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MlPH4EhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_O8LKEEhvEeaGrIS8kLT52w" name="detection" visibility="public" type="_rZAASkIZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_O8NmUEhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_O8ONYEhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_Q9hWwEhvEeaGrIS8kLT52w" name="temperature" visibility="public" type="_rZAAW0IZEeaoHPpII-6Tdw" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q9ndYEhvEeaGrIS8kLT52w" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q9oEcEhvEeaGrIS8kLT52w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_cfYtoEkCEeazmIbzY62nkg" name="log" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_cfvS8EkCEeazmIbzY62nkg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cfv6AEkCEeazmIbzY62nkg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ecDOoEkCEeazmIbzY62nkg" name="timer" visibility="public" isOrdered="true" aggregation="composite" isBehavior="true">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ecJ8UEkCEeazmIbzY62nkg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ecKjYEkCEeazmIbzY62nkg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_wbWEMFTTEeaAD8nFYloOhg" name="threshold">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
        <defaultValue xmi:type="uml:LiteralReal" xmi:id="_zDPTgFTTEeaAD8nFYloOhg" value="30.0"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_9Xzf0Er3EemQQvHRTw9udA" name="dbgPortForControlSoftware" visibility="protected" type="_9QpH4Ur3EemQQvHRTw9udA" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9X0G4Er3EemQQvHRTw9udA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9X0t8Er3EemQQvHRTw9udA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_5icxAEj-EeaDOaB8rZNNSg" name="ControlSoftwareStateMachine" isReentrant="false">
        <region xmi:id="_5iiQkEj-EeaDOaB8rZNNSg" name="Region">
          <transition xmi:id="_GUMlMEj_EeaDOaB8rZNNSg" name="init" source="_5ikFwEj-EeaDOaB8rZNNSg" target="_B4sDMEj_EeaDOaB8rZNNSg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9hhcgEr3EemQQvHRTw9udA" name="init__57">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_G-xzQEj_EeaDOaB8rZNNSg" name="moving forward" source="_B4sDMEj_EeaDOaB8rZNNSg" target="__e_A4Ej-EeaDOaB8rZNNSg">
            <trigger xmi:id="_spwjIEkFEeazmIbzY62nkg" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_NUjpkEj_EeaDOaB8rZNNSg" name="lowerThanThreshold" guard="_NPYa0FTVEeaAD8nFYloOhg" source="__e_A4Ej-EeaDOaB8rZNNSg" target="_4mW2cFTWEeaAD8nFYloOhg">
            <ownedRule xmi:id="_NPYa0FTVEeaAD8nFYloOhg" name="lessThanThreshold">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_NPYa0VTVEeaAD8nFYloOhg">
                <language>C++</language>
                <body>return (umlrtparam_distance &lt; threshold) &amp;&amp; (umlrtparam_distance >= 0);</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_zHxXIEj_EeaDOaB8rZNNSg">
              <language>C++</language>
              <body>log.log (&quot;distance less than threshold: %f &lt; %f&quot;, umlrtparam_distance, threshold);
detection.stopDetection().send();</body>
            </effect>
            <trigger xmi:id="_voK1AEkFEeazmIbzY62nkg" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_E-L2IFTUEeaAD8nFYloOhg" name="greaterThan" guard="_emf3oFTVEeaAD8nFYloOhg" kind="internal" source="__e_A4Ej-EeaDOaB8rZNNSg" target="__e_A4Ej-EeaDOaB8rZNNSg">
            <ownedRule xmi:id="_emf3oFTVEeaAD8nFYloOhg" name="greaterThanThreshold">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_ixZx0FTVEeaAD8nFYloOhg">
                <language>C++</language>
                <body>return (umlrtparam_distance > threshold) || (umlrtparam_distance &lt; 0);</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_QMtkEFTUEeaAD8nFYloOhg">
              <language>C++</language>
              <body>log.log (&quot;distance greater than threshold: %f > %f&quot;, umlrtparam_distance, threshold);</body>
            </effect>
            <trigger xmi:id="_LqHioFTUEeaAD8nFYloOhg" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_JnomIFTXEeaAD8nFYloOhg" name="stopped" source="_4mW2cFTWEeaAD8nFYloOhg" target="_HvR9YFTXEeaAD8nFYloOhg">
            <trigger xmi:id="_MLVR8FTXEeaAD8nFYloOhg" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_Ze9EIFTXEeaAD8nFYloOhg" name="timeout" source="_HvR9YFTXEeaAD8nFYloOhg" target="_qZ_B4FTXEeaAD8nFYloOhg">
            <trigger xmi:id="_cJjpMFTXEeaAD8nFYloOhg" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_tcAocFTXEeaAD8nFYloOhg" name="stopped moving backwards" source="_qZ_B4FTXEeaAD8nFYloOhg" target="_YBwGUFTXEeaAD8nFYloOhg">
            <trigger xmi:id="_wXOcYFTXEeaAD8nFYloOhg" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_DgyHMFTYEeaAD8nFYloOhg" name="turnedRight" source="_YBwGUFTXEeaAD8nFYloOhg" target="__e_A4Ej-EeaDOaB8rZNNSg">
            <trigger xmi:id="_GTs6wFTYEeaAD8nFYloOhg" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_9cZr8Er3EemQQvHRTw9udA" name="From__MOVING_BACKWARDS__3" source="_HvR9YFTXEeaAD8nFYloOhg" target="_9bxZ0Er3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9gjzMEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__48&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;To__STOPPING_MOVING_BACKWARDS__47&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__45&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__46&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;STOPPING_MOVING_FORWARD&quot;,&quot;To__STOPPING_MOVING_FORWARD__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_BACKWARDS&quot;,&quot;ROTATING&quot;,&quot;To__ROTATING__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;MOVING_BACKWARDS&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_9cgZoEr3EemQQvHRTw9udA" name="PME_Trig4" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9cl5MEr3EemQQvHRTw9udA" name="PME_Trig5" event="_9RUdUEr3EemQQvHRTw9udA" port="_9Xzf0Er3EemQQvHRTw9udA"/>
            <trigger xmi:id="_9ct1AEr3EemQQvHRTw9udA" name="PME_Trig6" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9cvqMEr3EemQQvHRTw9udA" name="PME_Trig7" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9c2-8Er3EemQQvHRTw9udA" name="PME_Trig8" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9c40IEr3EemQQvHRTw9udA" name="PME_Trig9" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_9dB-EEr3EemQQvHRTw9udA" name="From__MOVING_FORWARD__10" source="__e_A4Ej-EeaDOaB8rZNNSg" target="_9bxZ0Er3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9hKQIEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__48&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;To__STOPPING_MOVING_BACKWARDS__47&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__45&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__46&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;STOPPING_MOVING_FORWARD&quot;,&quot;To__STOPPING_MOVING_FORWARD__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;MOVING_FORWARD&quot;,&quot;ROTATING&quot;,&quot;To__ROTATING__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;MOVING_FORWARD&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_9dG2kEr3EemQQvHRTw9udA" name="PME_Trig11" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9dM9MEr3EemQQvHRTw9udA" name="PME_Trig12" event="_9RUdUEr3EemQQvHRTw9udA" port="_9Xzf0Er3EemQQvHRTw9udA"/>
            <trigger xmi:id="_9dOyYEr3EemQQvHRTw9udA" name="PME_Trig13" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9dXVQEr3EemQQvHRTw9udA" name="PME_Trig14" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9da_oEr3EemQQvHRTw9udA" name="PME_Trig15" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9diUYEr3EemQQvHRTw9udA" name="PME_Trig16" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_9dq3QEr3EemQQvHRTw9udA" name="From__STOPPING_MOVING_BACKWARDS__17" source="_qZ_B4FTXEeaAD8nFYloOhg" target="_9bxZ0Er3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9hBGMEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__48&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;To__STOPPING_MOVING_BACKWARDS__47&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__45&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__46&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;STOPPING_MOVING_FORWARD&quot;,&quot;To__STOPPING_MOVING_FORWARD__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;ROTATING&quot;,&quot;To__ROTATING__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;STOPPING_MOVING_BACKWARDS&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_9d12YEr3EemQQvHRTw9udA" name="PME_Trig18" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9eAOcEr3EemQQvHRTw9udA" name="PME_Trig19" event="_9RUdUEr3EemQQvHRTw9udA" port="_9Xzf0Er3EemQQvHRTw9udA"/>
            <trigger xmi:id="_9eJ_cEr3EemQQvHRTw9udA" name="PME_Trig20" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9eUXgEr3EemQQvHRTw9udA" name="PME_Trig21" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9efWoEr3EemQQvHRTw9udA" name="PME_Trig22" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9eqVwEr3EemQQvHRTw9udA" name="PME_Trig23" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_9e0GwEr3EemQQvHRTw9udA" name="From__STANDBY__24" source="_B4sDMEj_EeaDOaB8rZNNSg" target="_9bxZ0Er3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9guLQEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__48&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;To__STOPPING_MOVING_BACKWARDS__47&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__45&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__46&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;STOPPING_MOVING_FORWARD&quot;,&quot;To__STOPPING_MOVING_FORWARD__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STANDBY&quot;,&quot;ROTATING&quot;,&quot;To__ROTATING__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;STANDBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_9e8poEr3EemQQvHRTw9udA" name="PME_Trig25" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9e-e0Er3EemQQvHRTw9udA" name="PME_Trig26" event="_9RUdUEr3EemQQvHRTw9udA" port="_9Xzf0Er3EemQQvHRTw9udA"/>
            <trigger xmi:id="_9fElcEr3EemQQvHRTw9udA" name="PME_Trig27" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9fHBsEr3EemQQvHRTw9udA" name="PME_Trig28" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9fL6MEr3EemQQvHRTw9udA" name="PME_Trig29" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9fSn4Er3EemQQvHRTw9udA" name="PME_Trig30" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
          </transition>
          <transition xmi:id="_9fVrMEr3EemQQvHRTw9udA" name="From__STOPPING_MOVING_FORWARD__31" source="_4mW2cFTWEeaAD8nFYloOhg" target="_9bxZ0Er3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9hNTcEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_FORWARD&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__48&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_FORWARD&quot;,&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;To__STOPPING_MOVING_BACKWARDS__47&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_FORWARD&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__45&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_FORWARD&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__46&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_FORWARD&quot;,&quot;STOPPING_MOVING_FORWARD&quot;,&quot;To__STOPPING_MOVING_FORWARD__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;STOPPING_MOVING_FORWARD&quot;,&quot;ROTATING&quot;,&quot;To__ROTATING__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;STOPPING_MOVING_FORWARD&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_9fbKwEr3EemQQvHRTw9udA" name="PME_Trig32" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9fcY4Er3EemQQvHRTw9udA" name="PME_Trig33" event="_9RUdUEr3EemQQvHRTw9udA" port="_9Xzf0Er3EemQQvHRTw9udA"/>
            <trigger xmi:id="_9ffcMEr3EemQQvHRTw9udA" name="PME_Trig34" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9fli0Er3EemQQvHRTw9udA" name="PME_Trig35" event="_rZAAQkIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9fqbUEr3EemQQvHRTw9udA" name="PME_Trig36" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9fv64Er3EemQQvHRTw9udA" name="PME_Trig37" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_9fxwEEr3EemQQvHRTw9udA" name="From__ROTATING__38" source="_YBwGUFTXEeaAD8nFYloOhg" target="_9bxZ0Er3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9g5KYEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ROTATING&quot;,&quot;STANDBY&quot;,&quot;To__STANDBY__48&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ROTATING&quot;,&quot;STOPPING_MOVING_BACKWARDS&quot;,&quot;To__STOPPING_MOVING_BACKWARDS__47&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ROTATING&quot;,&quot;MOVING_BACKWARDS&quot;,&quot;To__MOVING_BACKWARDS__45&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ROTATING&quot;,&quot;MOVING_FORWARD&quot;,&quot;To__MOVING_FORWARD__46&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ROTATING&quot;,&quot;STOPPING_MOVING_FORWARD&quot;,&quot;To__STOPPING_MOVING_FORWARD__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ROTATING&quot;,&quot;ROTATING&quot;,&quot;To__ROTATING__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ROTATING&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_9f4dwEr3EemQQvHRTw9udA" name="PME_Trig39" event="_rZAAQUIZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9f5r4Er3EemQQvHRTw9udA" name="PME_Trig40" event="_9RUdUEr3EemQQvHRTw9udA" port="_9Xzf0Er3EemQQvHRTw9udA"/>
            <trigger xmi:id="_9f7hEEr3EemQQvHRTw9udA" name="PME_Trig41" event="_rZAAQ0IZEeaoHPpII-6Tdw" port="_MlGlAEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9gC10Er3EemQQvHRTw9udA" name="PME_Trig42" event="_rZAAaEIZEeaoHPpII-6Tdw" port="_Q9hWwEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9gErAEr3EemQQvHRTw9udA" name="PME_Trig43" event="_rZAAWUIZEeaoHPpII-6Tdw" port="_O8LKEEhvEeaGrIS8kLT52w"/>
            <trigger xmi:id="_9gGgMEr3EemQQvHRTw9udA" name="PME_Trig44" port="_ecDOoEkCEeazmIbzY62nkg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_9gPqIEr3EemQQvHRTw9udA" name="To__MOVING_BACKWARDS__45" guard="_9hXrgEr3EemQQvHRTw9udA" source="_9bxZ0Er3EemQQvHRTw9udA" target="_HvR9YFTXEeaAD8nFYloOhg">
            <ownedRule xmi:id="_9hXrgEr3EemQQvHRTw9udA" name="PME_checkDecesion53">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_9hXEcEr3EemQQvHRTw9udA" name="PME_checkDecesion53">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__MOVING_BACKWARDS__45&quot;,&quot;MOVING_BACKWARDS&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_9gRfUEr3EemQQvHRTw9udA" name="To__MOVING_FORWARD__46" guard="_9hb88Ur3EemQQvHRTw9udA" source="_9bxZ0Er3EemQQvHRTw9udA" target="__e_A4Ej-EeaDOaB8rZNNSg">
            <ownedRule xmi:id="_9hb88Ur3EemQQvHRTw9udA" name="PME_checkDecesion54">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_9hb88Er3EemQQvHRTw9udA" name="PME_checkDecesion54">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__MOVING_FORWARD__46&quot;,&quot;MOVING_FORWARD&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_9gVwwEr3EemQQvHRTw9udA" name="To__STOPPING_MOVING_BACKWARDS__47" guard="_9hV2UUr3EemQQvHRTw9udA" source="_9bxZ0Er3EemQQvHRTw9udA" target="_qZ_B4FTXEeaAD8nFYloOhg">
            <ownedRule xmi:id="_9hV2UUr3EemQQvHRTw9udA" name="PME_checkDecesion52">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_9hV2UEr3EemQQvHRTw9udA" name="PME_checkDecesion52">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__STOPPING_MOVING_BACKWARDS__47&quot;,&quot;STOPPING_MOVING_BACKWARDS&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_9gYNAEr3EemQQvHRTw9udA" name="To__STANDBY__48" guard="_9hTaEEr3EemQQvHRTw9udA" source="_9bxZ0Er3EemQQvHRTw9udA" target="_B4sDMEj_EeaDOaB8rZNNSg">
            <ownedRule xmi:id="_9hTaEEr3EemQQvHRTw9udA" name="PME_checkDecesion51">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_9hSzAEr3EemQQvHRTw9udA" name="PME_checkDecesion51">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__STANDBY__48&quot;,&quot;STANDBY&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_9gY0EEr3EemQQvHRTw9udA" name="To__STOPPING_MOVING_FORWARD__49" guard="_9hfAQUr3EemQQvHRTw9udA" source="_9bxZ0Er3EemQQvHRTw9udA" target="_4mW2cFTWEeaAD8nFYloOhg">
            <ownedRule xmi:id="_9hfAQUr3EemQQvHRTw9udA" name="PME_checkDecesion55">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_9hfAQEr3EemQQvHRTw9udA" name="PME_checkDecesion55">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__STOPPING_MOVING_FORWARD__49&quot;,&quot;STOPPING_MOVING_FORWARD&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_9gZbIEr3EemQQvHRTw9udA" name="To__ROTATING__50" guard="_9hfnUUr3EemQQvHRTw9udA" source="_9bxZ0Er3EemQQvHRTw9udA" target="_YBwGUFTXEeaAD8nFYloOhg">
            <ownedRule xmi:id="_9hfnUUr3EemQQvHRTw9udA" name="PME_checkDecesion56">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_9hfnUEr3EemQQvHRTw9udA" name="PME_checkDecesion56">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__ROTATING__50&quot;,&quot;ROTATING&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_5ikFwEj-EeaDOaB8rZNNSg" name="Pseudo1"/>
          <subvertex xmi:type="uml:State" xmi:id="__e_A4Ej-EeaDOaB8rZNNSg" name="MOVING_FORWARD">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_eLkqAEj_EeaDOaB8rZNNSg">
              <language>C++</language>
              <body>log.log (&quot;moving forward&quot;);
engine.moveForward().send();
detection.startDetection().send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_B4sDMEj_EeaDOaB8rZNNSg" name="STANDBY">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_f5pVYEj_EeaDOaB8rZNNSg" name="">
              <language>C++</language>
              <body>timer.informIn(UMLRTTimespec(4,0));
log.log (&quot;ControlSoftware standing by&quot;);</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_4mW2cFTWEeaAD8nFYloOhg" name="STOPPING_MOVING_FORWARD">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_C_YfwFTXEeaAD8nFYloOhg">
              <language>C++</language>
              <body>log.log(&quot;Stopping moving forwards&quot;);
engine.stop().send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_HvR9YFTXEeaAD8nFYloOhg" name="MOVING_BACKWARDS">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_XB2vkFTXEeaAD8nFYloOhg">
              <language>C++</language>
              <body>log.log(&quot;moving bacwards&quot;);
engine.moveBackwards().send();
timer.informIn(UMLRTTimespec(1,0));</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_YBwGUFTXEeaAD8nFYloOhg" name="ROTATING">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_nzHGQFTXEeaAD8nFYloOhg">
              <language>C++</language>
              <body>log.log(&quot;rotating&quot;);
engine.turnRight(138).send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_qZ_B4FTXEeaAD8nFYloOhg" name="STOPPING_MOVING_BACKWARDS">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_1YWz8FTXEeaAD8nFYloOhg">
              <language>C++</language>
              <body>log.log(&quot;stopping moving backwards&quot;);
engine.stop().send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_9bxZ0Er3EemQQvHRTw9udA" name="DecesionPoint__2" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9Yp0YEr3EemQQvHRTw9udA" name="loadHeap" specification="_9YpNUEr3EemQQvHRTw9udA">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.threshold&quot;,this->threshold);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9Y5E8Ur3EemQQvHRTw9udA" name="unLoadHeap" specification="_9Y5E8Er3EemQQvHRTw9udA">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.threshold&quot;,&amp;this->threshold);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9aVPYUr3EemQQvHRTw9udA" name="sendMessage" specification="_9aVPYEr3EemQQvHRTw9udA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;engine&quot;) {
  if(message.signal==&quot;moveForward&quot;) {
   if(message.payload.size()==0){
    engine.moveForward().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;turnLeft&quot;) {
   if(message.payload.size()==1){
    engine.turnLeft( boost::any_cast&lt;int>(message.payload[&quot;angle&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stop&quot;) {
   if(message.payload.size()==0){
    engine.stop().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;turnRight&quot;) {
   if(message.payload.size()==1){
    engine.turnRight( boost::any_cast&lt;int>(message.payload[&quot;angle&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;moveBackwards&quot;) {
   if(message.payload.size()==0){
    engine.moveBackwards().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;startDetection&quot;) {
   if(message.payload.size()==0){
    detection.startDetection().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stopDetection&quot;) {
   if(message.payload.size()==0){
    detection.stopDetection().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;temperature&quot;) {
  if(message.signal==&quot;startCollecting&quot;) {
   if(message.payload.size()==0){
    temperature.startCollecting().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;stopCollecting&quot;) {
   if(message.payload.size()==0){
    temperature.stopCollecting().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ar0sEr3EemQQvHRTw9udA" name="sendInternalMessage" specification="_9arNoEr3EemQQvHRTw9udA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9bcpsUr3EemQQvHRTw9udA" name="initForPMD" specification="_9bcpsEr3EemQQvHRTw9udA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ControlSoftware::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ControlSoftware::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;moveForward&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnLeft&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;stop&quot;,{});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;turnRight&quot;,{ {&quot;angle&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;engine&quot;,&quot;moveBackwards&quot;,{});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;startDetection&quot;,{});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;stopDetection&quot;,{});
this->execContext.addOutPutMessages(&quot;temperature&quot;,&quot;startCollecting&quot;,{});
this->execContext.addOutPutMessages(&quot;temperature&quot;,&quot;stopCollecting&quot;,{});
 this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnedLeft&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;stopped&quot;,{});
this->execContext.addInputMessages(&quot;engine&quot;,&quot;turnedRight&quot;,{});
this->execContext.addInputMessages(&quot;detection&quot;,&quot;obstacleDetected&quot;,{ {&quot;distance&quot;,&quot;Real&quot;}});
this->execContext.addInputMessages(&quot;temperature&quot;,&quot;dataCollected&quot;,{ {&quot;value&quot;,&quot;EDouble&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForControlSoftware&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_9YpNUEr3EemQQvHRTw9udA" name="loadHeap" visibility="private" method="_9Yp0YEr3EemQQvHRTw9udA"/>
      <ownedOperation xmi:id="_9Y5E8Er3EemQQvHRTw9udA" name="unLoadHeap" visibility="private" method="_9Y5E8Ur3EemQQvHRTw9udA"/>
      <ownedOperation xmi:id="_9aVPYEr3EemQQvHRTw9udA" name="sendMessage" visibility="private" method="_9aVPYUr3EemQQvHRTw9udA">
        <ownedParameter xmi:id="_9aXroEr3EemQQvHRTw9udA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_9adLMEr3EemQQvHRTw9udA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_9arNoEr3EemQQvHRTw9udA" name="sendInternalMessage" visibility="private" method="_9ar0sEr3EemQQvHRTw9udA">
        <ownedParameter xmi:id="_9awtMEr3EemQQvHRTw9udA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_9a0-oEr3EemQQvHRTw9udA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_9bcpsEr3EemQQvHRTw9udA" name="initForPMD" visibility="private" method="_9bcpsUr3EemQQvHRTw9udA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9P1PkEr3EemQQvHRTw9udA" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_9RbLAEr3EemQQvHRTw9udA" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9RbyEEr3EemQQvHRTw9udA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9RcZIEr3EemQQvHRTw9udA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_9X8pwEr3EemQQvHRTw9udA" name="dbgPortForControlSoftware" visibility="public" type="_9QpH4Ur3EemQQvHRTw9udA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9X9Q0Er3EemQQvHRTw9udA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9X9Q0Ur3EemQQvHRTw9udA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_9hyiQEr3EemQQvHRTw9udA" name="dbgPortForEngineController" visibility="public" type="_9QpH4Ur3EemQQvHRTw9udA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9hzJUEr3EemQQvHRTw9udA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9hzwYEr3EemQQvHRTw9udA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_9o0XUEr3EemQQvHRTw9udA" name="dbgPortForDetectionSensor" visibility="public" type="_9QpH4Ur3EemQQvHRTw9udA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9o0-YEr3EemQQvHRTw9udA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_9o0-YUr3EemQQvHRTw9udA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_9QUXwEr3EemQQvHRTw9udA" name="dbgAgent StateMachine">
        <region xmi:id="_9oLeIEr3EemQQvHRTw9udA" name="mainRegion">
          <transition xmi:id="_9oWdQEr3EemQQvHRTw9udA" name="Trans__Init__State__104105" source="_9oVPIEr3EemQQvHRTw9udA" target="_9oMsQEr3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9op_QEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__104&quot;,&quot;New__State__103&quot;,&quot;To__New__State__103__108&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__104&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_9odyAEr3EemQQvHRTw9udA" name="From__New__State__103__106" source="_9oQWoEr3EemQQvHRTw9udA" target="_9oMsQEr3EemQQvHRTw9udA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9ooxIEr3EemQQvHRTw9udA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__103&quot;,&quot;New__State__103&quot;,&quot;To__New__State__103__108&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__103&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_9ofnMEr3EemQQvHRTw9udA" name="PME_Trig107" port="_9RbLAEr3EemQQvHRTw9udA">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_9ohcYEr3EemQQvHRTw9udA" name="To__New__State__103__108" guard="_9oqmUUr3EemQQvHRTw9udA" source="_9oMsQEr3EemQQvHRTw9udA" target="_9oQWoEr3EemQQvHRTw9udA">
            <ownedRule xmi:id="_9oqmUUr3EemQQvHRTw9udA" name="PME_checkDecesion109">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_9oqmUEr3EemQQvHRTw9udA" name="PME_checkDecesion109">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__103__108&quot;,&quot;New__State__103&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_9oMsQEr3EemQQvHRTw9udA" name="DecesionPoint__102" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_9oQWoEr3EemQQvHRTw9udA" name="New__State__103">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_9q4z4Er3EemQQvHRTw9udA" name="New__State__103">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_9oVPIEr3EemQQvHRTw9udA" name="Init__State__104"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9nPC8Ur3EemQQvHRTw9udA" name="loadHeap" specification="_9nPC8Er3EemQQvHRTw9udA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9nYM4Er3EemQQvHRTw9udA" name="unLoadHeap" specification="_9nXl0Er3EemQQvHRTw9udA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9ns9AUr3EemQQvHRTw9udA" name="sendMessage" specification="_9ns9AEr3EemQQvHRTw9udA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForControlSoftware&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForControlSoftware.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForEngineController&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForEngineController.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9n2uAUr3EemQQvHRTw9udA" name="sendInternalMessage" specification="_9n2uAEr3EemQQvHRTw9udA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9oC7QUr3EemQQvHRTw9udA" name="initForPMD" specification="_9oC7QEr3EemQQvHRTw9udA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForControlSoftware&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForEngineController&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_9nPC8Er3EemQQvHRTw9udA" name="loadHeap" visibility="private" method="_9nPC8Ur3EemQQvHRTw9udA"/>
      <ownedOperation xmi:id="_9nXl0Er3EemQQvHRTw9udA" name="unLoadHeap" visibility="private" method="_9nYM4Er3EemQQvHRTw9udA"/>
      <ownedOperation xmi:id="_9ns9AEr3EemQQvHRTw9udA" name="sendMessage" visibility="private" method="_9ns9AUr3EemQQvHRTw9udA">
        <ownedParameter xmi:id="_9nxOcEr3EemQQvHRTw9udA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_9n040Er3EemQQvHRTw9udA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_9n2uAEr3EemQQvHRTw9udA" name="sendInternalMessage" visibility="private" method="_9n2uAUr3EemQQvHRTw9udA">
        <ownedParameter xmi:id="_9n38IEr3EemQQvHRTw9udA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_9n4jMEr3EemQQvHRTw9udA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_9oC7QEr3EemQQvHRTw9udA" name="initForPMD" visibility="private" method="_9oC7QUr3EemQQvHRTw9udA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9QjBQEr3EemQQvHRTw9udA" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_9QpH4Ur3EemQQvHRTw9udA" name="dbgProtocol">
        <interfaceRealization xmi:id="_9RLTYEr3EemQQvHRTw9udA" client="_9QpH4Ur3EemQQvHRTw9udA" supplier="_9QuncEr3EemQQvHRTw9udA" contract="_9QuncEr3EemQQvHRTw9udA"/>
        <interfaceRealization xmi:id="_9RQy8Er3EemQQvHRTw9udA" client="_9QpH4Ur3EemQQvHRTw9udA" supplier="_9Q0HAEr3EemQQvHRTw9udA" contract="_9Q0HAEr3EemQQvHRTw9udA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9QuncEr3EemQQvHRTw9udA" name="dbgProtocol">
        <ownedOperation xmi:id="_9RSoIEr3EemQQvHRTw9udA" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9Qy44Er3EemQQvHRTw9udA" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_9Q0HAEr3EemQQvHRTw9udA" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_9Q0uEEr3EemQQvHRTw9udA" client="_9QpH4Ur3EemQQvHRTw9udA" supplier="_9Qy44Er3EemQQvHRTw9udA"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_9Q6NoEr3EemQQvHRTw9udA" client="_9QpH4Ur3EemQQvHRTw9udA" supplier="_9Q0HAEr3EemQQvHRTw9udA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_9RUdUEr3EemQQvHRTw9udA" operation="_9RSoIEr3EemQQvHRTw9udA"/>
    </packagedElement>
    <profileApplication xmi:id="_rZAnWkIZEeaoHPpII-6Tdw">
      <eAnnotations xmi:id="_rZAnW0IZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_rZAnXEIZEeaoHPpII-6Tdw">
      <eAnnotations xmi:id="_rZAnXUIZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_rZAnXkIZEeaoHPpII-6Tdw">
      <eAnnotations xmi:id="_rZAnX0IZEeaoHPpII-6Tdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_9_1t4Ej0EeaDOaB8rZNNSg">
      <eAnnotations xmi:id="_9_3jEEj0EeaDOaB8rZNNSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_H4b5kKshEeii-Z6YoPPP7w">
      <eAnnotations xmi:id="_H4hZIKshEeii-Z6YoPPP7w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <standard:ModelLibrary xmi:id="_rZAnYEIZEeaoHPpII-6Tdw" base_Package="_rZAAEEIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_rZAnYUIZEeaoHPpII-6Tdw" base_Package="_rZAALUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnYkIZEeaoHPpII-6Tdw" base_Interface="_rZAAMUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnY0IZEeaoHPpII-6Tdw" base_Interface="_rZAANUIZEeaoHPpII-6Tdw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnZEIZEeaoHPpII-6Tdw" base_Interface="_rZAAP0IZEeaoHPpII-6Tdw" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_rZAnZUIZEeaoHPpII-6Tdw" base_Collaboration="_rZAALkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_rZAnZkIZEeaoHPpII-6Tdw" base_Package="_rZAASUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnZ0IZEeaoHPpII-6Tdw" base_Interface="_rZAATUIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnaEIZEeaoHPpII-6Tdw" base_Interface="_rZAAUEIZEeaoHPpII-6Tdw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnaUIZEeaoHPpII-6Tdw" base_Interface="_rZAAVUIZEeaoHPpII-6Tdw" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_rZAnakIZEeaoHPpII-6Tdw" base_Collaboration="_rZAASkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_rZAna0IZEeaoHPpII-6Tdw" base_Package="_rZAAWkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnbEIZEeaoHPpII-6Tdw" base_Interface="_rZAAXkIZEeaoHPpII-6Tdw"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnbUIZEeaoHPpII-6Tdw" base_Interface="_rZAAYUIZEeaoHPpII-6Tdw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_rZAnbkIZEeaoHPpII-6Tdw" base_Interface="_rZAAZkIZEeaoHPpII-6Tdw" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_rZAnb0IZEeaoHPpII-6Tdw" base_Collaboration="_rZAAW0IZEeaoHPpII-6Tdw"/>
  <UMLRealTime:Capsule xmi:id="_9eZasEhlEeaGrIS8kLT52w" base_Class="_9dusUEhlEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_CFjc8EhvEeaGrIS8kLT52w" base_Class="_CFLpgEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_Ffw6AEhvEeaGrIS8kLT52w" base_Property="_FfiQgEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_MlQWAEhvEeaGrIS8kLT52w" base_Port="_MlGlAEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_O8O0cEhvEeaGrIS8kLT52w" base_Port="_O8LKEEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_Q9orgEhvEeaGrIS8kLT52w" base_Port="_Q9hWwEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_lKF9wEhvEeaGrIS8kLT52w" base_Class="_lJwmkEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_peoVEEhvEeaGrIS8kLT52w" base_Port="_pekDoEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_rhMpwEhvEeaGrIS8kLT52w" base_Port="_rhC4wEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_tKT8oEhvEeaGrIS8kLT52w" base_Port="_tKPrMEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_uvLosUhvEeaGrIS8kLT52w" base_Property="_uvJMcEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_RcA0IEhwEeaGrIS8kLT52w" base_Class="_Rbq14EhwEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_W-zHQEhwEeaGrIS8kLT52w" base_Class="_W-iBgEhwEeaGrIS8kLT52w"/>
  <UMLRealTime:Capsule xmi:id="_Y3xbEEhwEeaGrIS8kLT52w" base_Class="_Y3d5EEhwEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_eOzKIEhwEeaGrIS8kLT52w" base_Port="_eOwG0EhwEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_64ThMEhwEeaGrIS8kLT52w" base_Port="_64Qd4EhwEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_-HfaAEhwEeaGrIS8kLT52w" base_Port="_-HcWsEhwEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_K160cEhxEeaGrIS8kLT52w" base_Property="_K14YMEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_K1_F4UhxEeaGrIS8kLT52w" base_Property="_K19QsEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:CapsulePart xmi:id="_K2DXUEhxEeaGrIS8kLT52w" base_Property="_K2A7EEhxEeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e-BLIEhxEeaGrIS8kLT52w" base_Pseudostate="_e9-u4EhxEeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_e-CZQEhxEeaGrIS8kLT52w" base_Region="_e985sEhxEeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_e-VUMEhxEeaGrIS8kLT52w" base_StateMachine="_e95PUEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_mCkEkEh0EeaGrIS8kLT52w" base_Port="_mCfzIEh0EeaGrIS8kLT52w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_LeEqEEj0EeaDOaB8rZNNSg" base_Pseudostate="_LeAYoEj0EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_LeReYEj0EeaDOaB8rZNNSg" base_Region="_Ld8HMEj0EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_LfJBEEj0EeaDOaB8rZNNSg" base_StateMachine="_LdxvIEj0EeaDOaB8rZNNSg"/>
  <UMLRealTime:RTPort xmi:id="_t2g54Ej0EeaDOaB8rZNNSg" base_Port="_t2UsoEj0EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_J2pKgEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_9RZ9wEj4EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_cQPYAEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_c6o1UEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_nb0foEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_gSHugEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_qGzfMEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_s5v9YEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_r9R4oEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_wyUKYEj5EeaDOaB8rZNNSg"/>
  <RTCppProperties:AttributeProperties xmi:id="_t4WeMEj6EeaDOaB8rZNNSg" type="GPIOClass" base_Property="_zryR4Ej5EeaDOaB8rZNNSg"/>
  <RTCppProperties:ArtifactProperties xmi:id="_cafDsEj7EeaDOaB8rZNNSg" base_Artifact="_Y6tKIEj7EeaDOaB8rZNNSg" includeFile="#include &lt;string>&#xA;using namespace std;&#xA;/* GPIO Class&#xA; * Purpose: Each object instantiated from this class will control a GPIO pin&#xA; * The GPIO pin number must be passed to the overloaded class constructor&#xA; */&#xA;class GPIOClass&#xA;{&#xA;public:&#xA;    GPIOClass();  // create a GPIO object that controls GPIO4 (default&#xA;    GPIOClass(string x); // create a GPIO object that controls GPIOx, where x is passed to this constructor&#xA;    int export_gpio(); // exports GPIO&#xA;    int unexport_gpio(); // unexport GPIO&#xA;    int setdir_gpio(string dir); // Set GPIO Direction&#xA;    int setval_gpio(string val); // Set GPIO Value (putput pins)&#xA;    int getval_gpio(string&amp; val); // Get GPIO Value (input/ output pins)&#xA;    string get_gpionum(); // return the GPIO number associated with the instance of an object&#xA;private:&#xA;    string gpionum; // GPIO number associated with the instance of an object&#xA;};" sourceFile="#include &lt;fstream>&#xA;#include &lt;string>&#xA;#include &lt;iostream>&#xA;#include &lt;sstream>&#xA;#include &quot;GPIOClass.hh&quot;&#xA;&#xA;using namespace std;&#xA;&#xA;GPIOClass::GPIOClass()&#xA;{&#xA;    this->gpionum = &quot;4&quot;; //GPIO4 is default&#xA;}&#xA;&#xA;GPIOClass::GPIOClass(string gnum)&#xA;{&#xA;    this->gpionum = gnum;  //Instatiate GPIOClass object for GPIO pin number &quot;gnum&quot;&#xA;}&#xA;&#xA;int GPIOClass::export_gpio()&#xA;{&#xA;    string export_str = &quot;/sys/class/gpio/export&quot;;&#xA;    ofstream exportgpio(export_str.c_str()); // Open &quot;export&quot; file. Convert C++ string to C string. Required for all Linux pathnames&#xA;    if (exportgpio &lt; 0){&#xA;        cout &lt;&lt; &quot; OPERATION FAILED: Unable to export GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;        return -1;&#xA;    }&#xA;&#xA;    exportgpio &lt;&lt; this->gpionum ; //write GPIO number to export&#xA;    exportgpio.close(); //close export file&#xA;    return 0;&#xA;}&#xA;&#xA;int GPIOClass::unexport_gpio()&#xA;{&#xA;    string unexport_str = &quot;/sys/class/gpio/unexport&quot;;&#xA;    ofstream unexportgpio(unexport_str.c_str()); //Open unexport file&#xA;    if (unexportgpio &lt; 0){&#xA;        cout &lt;&lt; &quot; OPERATION FAILED: Unable to unexport GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;        return -1;&#xA;    }&#xA;&#xA;    unexportgpio &lt;&lt; this->gpionum ; //write GPIO number to unexport&#xA;    unexportgpio.close(); //close unexport file&#xA;    return 0;&#xA;}&#xA;&#xA;int GPIOClass::setdir_gpio(string dir)&#xA;{&#xA;&#xA;    string setdir_str =&quot;/sys/class/gpio/gpio&quot; + this->gpionum + &quot;/direction&quot;;&#xA;    ofstream setdirgpio(setdir_str.c_str()); // open direction file for gpio&#xA;        if (setdirgpio &lt; 0){&#xA;            cout &lt;&lt; &quot; OPERATION FAILED: Unable to set direction of GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;            return -1;&#xA;        }&#xA;&#xA;        setdirgpio &lt;&lt; dir; //write direction to direction file&#xA;        setdirgpio.close(); // close direction file&#xA;        return 0;&#xA;}&#xA;&#xA;int GPIOClass::setval_gpio(string val)&#xA;{&#xA;&#xA;    string setval_str = &quot;/sys/class/gpio/gpio&quot; + this->gpionum + &quot;/value&quot;;&#xA;    ofstream setvalgpio(setval_str.c_str()); // open value file for gpio&#xA;        if (setvalgpio &lt; 0){&#xA;            cout &lt;&lt; &quot; OPERATION FAILED: Unable to set the value of GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;            return -1;&#xA;        }&#xA;&#xA;        setvalgpio &lt;&lt; val ;//write value to value file&#xA;        setvalgpio.close();// close value file&#xA;        return 0;&#xA;}&#xA;&#xA;int GPIOClass::getval_gpio(string&amp; val){&#xA;&#xA;    string getval_str = &quot;/sys/class/gpio/gpio&quot; + this->gpionum + &quot;/value&quot;;&#xA;    ifstream getvalgpio(getval_str.c_str());// open value file for gpio&#xA;    if (getvalgpio &lt; 0){&#xA;        cout &lt;&lt; &quot; OPERATION FAILED: Unable to get value of GPIO&quot;&lt;&lt; this->gpionum &lt;&lt;&quot; .&quot;&lt;&lt; endl;&#xA;        return -1;&#xA;            }&#xA;&#xA;    getvalgpio >> val ;  //read gpio value&#xA;&#xA;    if(val != &quot;0&quot;)&#xA;        val = &quot;1&quot;;&#xA;    else&#xA;        val = &quot;0&quot;;&#xA;&#xA;    getvalgpio.close(); //close the value file&#xA;    return 0;&#xA;}&#xA;&#xA;string GPIOClass::get_gpionum(){&#xA;&#xA;return this->gpionum;&#xA;&#xA;}"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5il68Ej-EeaDOaB8rZNNSg" base_Pseudostate="_5ikFwEj-EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_5imiAEj-EeaDOaB8rZNNSg" base_Region="_5iiQkEj-EeaDOaB8rZNNSg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_5jRQYEj-EeaDOaB8rZNNSg" base_StateMachine="_5icxAEj-EeaDOaB8rZNNSg"/>
  <UMLRealTime:RTPort xmi:id="_cfxvMEkCEeazmIbzY62nkg" base_Port="_cfYtoEkCEeazmIbzY62nkg"/>
  <UMLRealTime:RTPort xmi:id="_ecLKcEkCEeazmIbzY62nkg" base_Port="_ecDOoEkCEeazmIbzY62nkg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_8QvmcEkCEeazmIbzY62nkg" headerPreface="#include &quot;GPIOClass.hh&quot;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &quot;GPIOClass.hh&quot;" base_Class="_Rbq14EhwEeaGrIS8kLT52w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_BvnC4EkDEeazmIbzY62nkg" headerPreface="#include &quot;GPIOClass.hh&quot;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &quot;GPIOClass.hh&quot;" base_Class="_Y3d5EEhwEeaGrIS8kLT52w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_-fqfoEkDEeazmIbzY62nkg" base_Port="_-fhVsEkDEeazmIbzY62nkg"/>
  <UMLRealTime:RTConnector xmi:id="_MKE50EkHEeazmIbzY62nkg" base_Connector="_8kYd8EhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTConnector xmi:id="_NCdTUEkHEeazmIbzY62nkg" base_Connector="_9WyyUEhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTConnector xmi:id="_NvupAEkHEeazmIbzY62nkg" base_Connector="_-HZI0EhvEeaGrIS8kLT52w"/>
  <UMLRealTime:RTConnector xmi:id="_PWKbUEkHEeazmIbzY62nkg" base_Connector="_ZnMQYEhxEeaGrIS8kLT52w"/>
  <UMLRealTime:RTPort xmi:id="_KAM7UFTQEeaAD8nFYloOhg" base_Port="_J81eQFTQEeaAD8nFYloOhg"/>
  <UMLRealTime:CapsulePart xmi:id="_uikEAFTbEeaAD8nFYloOhg" base_Property="_uigZoFTbEeaAD8nFYloOhg"/>
  <UMLRealTime:RTConnector xmi:id="_7cDe8FTbEeaAD8nFYloOhg" base_Connector="_5xYs4FTbEeaAD8nFYloOhg"/>
  <UMLRealTime:Capsule xmi:id="_9QTwsEr3EemQQvHRTw9udA" base_Class="_9P1PkEr3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_9QhzIEr3EemQQvHRTw9udA" base_StateMachine="_9QUXwEr3EemQQvHRTw9udA"/>
  <UMLRealTime:ProtocolContainer xmi:id="_9QpH4Er3EemQQvHRTw9udA" base_Package="_9QjBQEr3EemQQvHRTw9udA"/>
  <UMLRealTime:Protocol xmi:id="_9QsyQEr3EemQQvHRTw9udA" base_Collaboration="_9QpH4Ur3EemQQvHRTw9udA"/>
  <UMLRealTime:RTMessageSet xmi:id="_9Q-fEEr3EemQQvHRTw9udA" base_Interface="_9QuncEr3EemQQvHRTw9udA"/>
  <UMLRealTime:RTMessageSet xmi:id="_9RHB8Er3EemQQvHRTw9udA" base_Interface="_9Qy44Er3EemQQvHRTw9udA" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_9RI3IEr3EemQQvHRTw9udA" base_Interface="_9Q0HAEr3EemQQvHRTw9udA" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_9RmxMEr3EemQQvHRTw9udA" base_Port="_9RbLAEr3EemQQvHRTw9udA"/>
  <UMLRealTime:RTPort xmi:id="_9X3xQEr3EemQQvHRTw9udA" isWired="false" base_Port="_9Xzf0Er3EemQQvHRTw9udA"/>
  <UMLRealTime:RTPort xmi:id="_9X-e8Er3EemQQvHRTw9udA" isPublish="true" isWired="false" base_Port="_9X8pwEr3EemQQvHRTw9udA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9YbK4Er3EemQQvHRTw9udA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_CFLpgEhvEeaGrIS8kLT52w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9YjGsEr3EemQQvHRTw9udA" base_Class="_CFLpgEhvEeaGrIS8kLT52w"/>
  <RTCppProperties:ParameterProperties xmi:id="_9ajR0Er3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9adLMEr3EemQQvHRTw9udA"/>
  <RTCppProperties:ParameterProperties xmi:id="_9a3a4Er3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9a0-oEr3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_9byn8Er3EemQQvHRTw9udA" base_Pseudostate="_9bxZ0Er3EemQQvHRTw9udA"/>
  <UMLRealTime:RTPort xmi:id="_9huQ0Er3EemQQvHRTw9udA" isWired="false" base_Port="_9hpYUEr3EemQQvHRTw9udA"/>
  <UMLRealTime:RTPort xmi:id="_9h0XcEr3EemQQvHRTw9udA" isPublish="true" isWired="false" base_Port="_9hyiQEr3EemQQvHRTw9udA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9iEPEEr3EemQQvHRTw9udA" base_Class="_Y3d5EEhwEeaGrIS8kLT52w"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9iJuoEr3EemQQvHRTw9udA" base_Class="_Y3d5EEhwEeaGrIS8kLT52w"/>
  <RTCppProperties:ParameterProperties xmi:id="_9iwyoEr3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9iqsAEr3EemQQvHRTw9udA"/>
  <RTCppProperties:ParameterProperties xmi:id="_9i6joEr3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9i1rIEr3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_9jZEwEr3EemQQvHRTw9udA" base_Pseudostate="_9jVaYEr3EemQQvHRTw9udA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9nF5AEr3EemQQvHRTw9udA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_9P1PkEr3EemQQvHRTw9udA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9nN00Er3EemQQvHRTw9udA" base_Class="_9P1PkEr3EemQQvHRTw9udA"/>
  <RTCppProperties:ParameterProperties xmi:id="_9n2G8Er3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9n040Er3EemQQvHRTw9udA"/>
  <RTCppProperties:ParameterProperties xmi:id="_9n7mgEr3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9n4jMEr3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_9oMFMEr3EemQQvHRTw9udA" base_Region="_9oLeIEr3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_9oNTUEr3EemQQvHRTw9udA" base_Pseudostate="_9oMsQEr3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTState xmi:id="_9oUoEEr3EemQQvHRTw9udA" base_State="_9oQWoEr3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_9oV2MEr3EemQQvHRTw9udA" base_Pseudostate="_9oVPIEr3EemQQvHRTw9udA"/>
  <UMLRealTime:RTPort xmi:id="_9ozwQEr3EemQQvHRTw9udA" isWired="false" base_Port="_9otpoEr3EemQQvHRTw9udA"/>
  <UMLRealTime:RTPort xmi:id="_9o1lcEr3EemQQvHRTw9udA" isPublish="true" isWired="false" base_Port="_9o0XUEr3EemQQvHRTw9udA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9o_WcEr3EemQQvHRTw9udA" base_Class="_Rbq14EhwEeaGrIS8kLT52w"/>
  <RTCppProperties:CapsuleProperties xmi:id="_9pDn4Er3EemQQvHRTw9udA" base_Class="_Rbq14EhwEeaGrIS8kLT52w"/>
  <RTCppProperties:ParameterProperties xmi:id="_9pcpcEr3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9pcCYEr3EemQQvHRTw9udA"/>
  <RTCppProperties:ParameterProperties xmi:id="_9plMUEr3EemQQvHRTw9udA" type="pmd::Message" base_Parameter="_9pgT0Er3EemQQvHRTw9udA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_9p9m0Er3EemQQvHRTw9udA" base_Pseudostate="_9p8YsEr3EemQQvHRTw9udA"/>
  <UMLRealTime:CapsulePart xmi:id="_9q3lwEr3EemQQvHRTw9udA" base_Property="_9q1JgEr3EemQQvHRTw9udA"/>
</xmi:XMI>

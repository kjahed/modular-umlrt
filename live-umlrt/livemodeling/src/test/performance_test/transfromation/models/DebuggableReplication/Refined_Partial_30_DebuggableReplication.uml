<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_lYTBoAggEea_md0mpENoqg" name="Replication">
    <eAnnotations xmi:id="_4HZrcAgoEea_md0mpENoqg" source="UMLRT_Default_top">
      <details xmi:id="_4Ha5kAgoEea_md0mpENoqg" key="top_name" value="Debug__Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_Lcp5MKpbEeiNHY6qjNhZ4w" source="http://www.eclipse.org/papyrus-rt/language/1.0.0">
      <details xmi:id="_LcruYKpbEeiNHY6qjNhZ4w" key="language" value="umlrt-cpp"/>
    </eAnnotations>
    <eAnnotations xmi:id="_SdpdsErjEemXQs2PqletPw" source="dummy"/>
    <eAnnotations xmi:id="_coauIEsbEemaBe-QwA0s3Q" source="dummy"/>
    <eAnnotations xmi:id="_5AO9kEvyEemdbtS6DMQ1dA" source="dummy"/>
    <eAnnotations xmi:id="_NfFH4EwVEemuSMSxGeou8w" source="dummy"/>
    <eAnnotations xmi:id="_JW-HkExYEemAXK1R7K-waA" source="dummy"/>
    <eAnnotations xmi:id="_U8jcEEyDEemnC5GWakQOaQ" source="dummy"/>
    <packageImport xmi:id="_st0MYErDEem2BZRQc2M93A">
      <importedPackage xmi:type="uml:Model" href="../CommGateWay/model.uml#_MZw7AAdxEeadtKuU2t6fMg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rPgFkAggEea_md0mpENoqg" name="ENV">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_vj5dgAghEea_md0mpENoqg" client="_rPgFkAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sMZ5EAgoEea_md0mpENoqg" name="ENV" visibility="public" classifierBehavior="_gU8CMAgwEea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_GXsSgAgvEea_md0mpENoqg" name="ConfigComm" visibility="public" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NBhGMAgvEea_md0mpENoqg" value="7"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NBssYAgvEea_md0mpENoqg" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_b1NrIAjLEea_md0mpENoqg" name="FailureTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wQHCAAjLEea_md0mpENoqg" name="BITTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_X4ceIAjMEea_md0mpENoqg" name="GeneralTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lxs5kApkEeaGqPUk-4V4qQ" name="AnnouncmentServer1" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rXZWwApkEeaGqPUk-4V4qQ" name="AnnouncmentServer2" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Iq9iAApmEeaGqPUk-4V4qQ" name="AnnouncementServer1Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_UZHLMApmEeaGqPUk-4V4qQ" name="AnnouncmentServerTimeout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_UZHLMQpmEeaGqPUk-4V4qQ" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_bmibMApmEeaGqPUk-4V4qQ" name="AnnouncementServer2Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fXb_wAxwEeaB2MeL96fedA" name="systemConfig" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_fXXuUAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mKfGEOM2EeaTpaLNj-zYpw" name="configTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_svBtUErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoErDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoUrDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svgOcErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svg1gErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svhckErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svkf4ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sWuH8Er4Eemntv5tDuspng" name="dbgPortForENV" visibility="protected" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sWuvAEr4Eemntv5tDuspng" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sWuvAUr4Eemntv5tDuspng" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_gU8CMAgwEea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_jSIzIAgwEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_32w4UAgxEea_md0mpENoqg" name="ConfigNOK" source="_s3GEMErDEem2BZRQc2M93A" target="_NvBagAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r3tJQAjJEea_md0mpENoqg" name="LogFailure">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The configuration is not OK, the transition configCheck-> ConfigFailure was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigNOK&quot;,(char *)&quot;Debug__Path__ConfigNOK&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syfRAErDEem2BZRQc2M93A" name="Debug__configLoaded__S" guard="_syhtQUrDEem2BZRQc2M93A" source="_syROkErDEem2BZRQc2M93A" target="_syVgAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_syhtQUrDEem2BZRQc2M93A" name="Debug__GuardconfigLoaded">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_syhtQErDEem2BZRQc2M93A" name="Debug__GuardconfigLoaded">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ReadConfig&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syjicErDEem2BZRQc2M93A" name="Debug__configLoaded__S__5">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded__S&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syuhkErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syvvsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange__8">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_syvIoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_syyL8ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syzaEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint__9">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_syyzAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy2dYErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy3rgErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint__10">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy3EcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy5gsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy6u0ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints__11">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy6HwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy7V4ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy788UrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode__12">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sy788ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy9LEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy9yIUrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg__13">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy9yIErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_szsx8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S" guard="_sztZAUrDEem2BZRQc2M93A" source="_szkPEErDEem2BZRQc2M93A" target="_szmrUUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_sztZAUrDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sztZAErDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szuAEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S__26">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment__S&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_szyRgErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szy4kUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange__29">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_szy4kErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_szzfoErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz0GsUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint__30">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0GsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz0twErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz1U0ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint__31">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0twUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz2i8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz3KAErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints__32">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz2i8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz3xEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz4YIUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode__33">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sz4YIErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz4_MErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz5mQUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg__34">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz5mQErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0kUoErDEem2BZRQc2M93A" name="Debug__server2Failure__S" guard="_s0liwUrDEem2BZRQc2M93A" source="_s0e1EErDEem2BZRQc2M93A" target="_s0gqQUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s0liwUrDEem2BZRQc2M93A" name="Debug__Guardserver2Failure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0liwErDEem2BZRQc2M93A" name="Debug__Guardserver2Failure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0mJ0ErDEem2BZRQc2M93A" name="Debug__server2Failure__S__51">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__server2Failure__S&quot;,(char *)&quot;Debug__Path__server2Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s0p0MErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qbQErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange__54">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s0p0MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rCUErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rCUkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint__55">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rCUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rpYErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rpYkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint__56">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rpYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0sQcErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0s3gUrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints__57">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0s3gErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0tekErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0tekkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode__58">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s0tekUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0uFoErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0v60ErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg__59">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0ussErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1lBQErDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1loUUrDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange__79">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s1loUErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1mPYErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1m2cErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint__80">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1mPYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1ndgErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1oEkErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint__81">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1ndgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1oroErDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1orokrDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints__82">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1oroUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1p5wErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1qg0ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode__83">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s1p5wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1rH4ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1rH4krDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg__84">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1rH4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2NTYErDEem2BZRQc2M93A" name="Debug__Server1Failure__S" guard="_s2N6cUrDEem2BZRQc2M93A" source="_s2HMwErDEem2BZRQc2M93A" target="_s2KQEErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s2N6cUrDEem2BZRQc2M93A" name="Debug__GuardServer1Failure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s2N6cErDEem2BZRQc2M93A" name="Debug__GuardServer1Failure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2OhgErDEem2BZRQc2M93A" name="Debug__Server1Failure__S__98">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Server1Failure__S&quot;,(char *)&quot;Debug__Path__Server1Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s2SL4ErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2Sy8UrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange__101">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s2Sy8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2UBEErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2UBEkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint__102">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2UBEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2VPMErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2V2QErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint__103">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2VPMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2XEYErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2YSgErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints__104">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2XEYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2ZgoErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2aHsErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode__105">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s2ZgoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2auwErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2auwkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg__106">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2auwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s34HUUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1" source="_s6YowErDEem2BZRQc2M93A" target="_s31EAErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s34uYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__143">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_s6bFAErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_s37xsErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S" guard="_s38YwUrDEem2BZRQc2M93A" source="_s31EAErDEem2BZRQc2M93A" target="_s32SIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s38YwUrDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s38YwErDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s38_0ErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S__145">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Init__ReadConfig__1__S&quot;,(char *)&quot;Debug__Path__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4ADIErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4AqMUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange__148">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4AqMErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4BRQErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4BRQkrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint__149">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4BRQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4B4UErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4CfYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint__150">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4B4UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4CfYUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4DGcUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints__151">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4DGcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4DtgErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4E7oErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode__152">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4EUkErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4FisErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4FiskrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg__153">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4FisUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4lR8UrDEem2BZRQc2M93A" name="Debug__RetryConfig" source="_NvBagAgxEea_md0mpENoqg" target="_s4hAgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4l5AErDEem2BZRQc2M93A" name="Debug__RetryConfig__165">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__RetryConfig&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;Debug__Path__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_eihL0AkAEea_md0mpENoqg" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4nuMErDEem2BZRQc2M93A" name="Debug__RetryConfig__S" guard="_s4oVQUrDEem2BZRQc2M93A" source="_s4hAgErDEem2BZRQc2M93A" target="_s4jcwErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s4oVQUrDEem2BZRQc2M93A" name="Debug__GuardRetryConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s4oVQErDEem2BZRQc2M93A" name="Debug__GuardRetryConfig">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4o8UErDEem2BZRQc2M93A" name="Debug__RetryConfig__S__167">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__RetryConfig__S&quot;,(char *)&quot;Debug__Path__RetryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4r_oErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4smsUrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange__170">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4smsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4tNwErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4t00UrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint__171">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4t00ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4ub4ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vC8ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint__172">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4ub4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4vqAErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vqAkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints__173">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4vqAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4wREErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4wREkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode__174">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4wREUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4w4IErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4xfMErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg__175">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4w4IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5kJYErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5kwcErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange__195">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s5kJYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5lXgErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5lXgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint__196">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5lXgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5l-kErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5mloErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint__197">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5l-kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5mloUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nMsUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints__198">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5nMsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nMskrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nzwUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode__199">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s5nzwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nzwkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5oa0UrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg__200">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5oa0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s6Z24UrDEem2BZRQc2M93A" name="Debug__InitDebug" source="_npsCMAgwEea_md0mpENoqg" target="_s6YowErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6ad8ErDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZOCUEr4Eemntv5tDuspng" name="Trans__Debug__Path__QueryConfig2358" source="_s5YjMErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szkcAEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZfIEEr4Eemntv5tDuspng" name="2359" source="_szkPEErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy_0QEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZfvIEr4Eemntv5tDuspng" name="2360" source="_s2HMwErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szQ6AEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZfvIUr4Eemntv5tDuspng" name="2361" source="_s4hAgErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syRbgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZgWMEr4Eemntv5tDuspng" name="2362" source="_s31EAErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szJlQEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZgWMUr4Eemntv5tDuspng" name="2363" source="_s5YjMErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syIRkEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZgWMkr4Eemntv5tDuspng" name="2364" source="_s0e1EErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syh6MEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZg9QEr4Eemntv5tDuspng" name="2365" source="_s3GEMErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szduUEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZg9QUr4Eemntv5tDuspng" name="2366" source="_syROkErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syy_8Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sZiLYEr4Eemntv5tDuspng" name="From__ConfigFailure__2367" source="_NvBagAgxEea_md0mpENoqg" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syBj4Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_sZknoEr4Eemntv5tDuspng" name="PME_Trig2368" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_sZmc0Er4Eemntv5tDuspng" name="PME_Trig2369" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_sZpgIEr4Eemntv5tDuspng" name="PME_Trig2370" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_sZqHMEr4Eemntv5tDuspng" name="PME_Trig2371" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sZrVUEr4Eemntv5tDuspng" name="PME_Trig2372" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_sZr8YEr4Eemntv5tDuspng" name="PME_Trig2373" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sZsjcEr4Eemntv5tDuspng" name="PME_Trig2374" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_sZu_sEr4Eemntv5tDuspng" name="PME_Trig2375" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_sZvmwEr4Eemntv5tDuspng" name="PME_Trig2376" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_sZw04Er4Eemntv5tDuspng" name="PME_Trig2377" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_sZz4MEr4Eemntv5tDuspng" name="PME_Trig2378" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sZ1tYEr4Eemntv5tDuspng" name="PME_Trig2379" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_sZ2UcEr4Eemntv5tDuspng" name="PME_Trig2380" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_sZ4JoEr4Eemntv5tDuspng" name="PME_Trig2381" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_sZ7M8Er4Eemntv5tDuspng" name="PME_Trig2382" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_sZ-QQEr4Eemntv5tDuspng" name="PME_Trig2383" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_sZ-3UEr4Eemntv5tDuspng" name="PME_Trig2384" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_saAFcEr4Eemntv5tDuspng" name="PME_Trig2385" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
            </transition>
            <transition xmi:id="_saAsgEr4Eemntv5tDuspng" name="From__Debug__InitState__2386" source="_s6YowErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy2qUEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_saB6oEr4Eemntv5tDuspng" name="PME_Trig2387" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_saEW4Er4Eemntv5tDuspng" name="PME_Trig2388" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_saGMEEr4Eemntv5tDuspng" name="PME_Trig2389" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_saIoUEr4Eemntv5tDuspng" name="PME_Trig2390" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_saJ2cEr4Eemntv5tDuspng" name="PME_Trig2391" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_saKdgEr4Eemntv5tDuspng" name="PME_Trig2392" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_saLroEr4Eemntv5tDuspng" name="PME_Trig2393" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_saOH4Er4Eemntv5tDuspng" name="PME_Trig2394" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_saRLMEr4Eemntv5tDuspng" name="PME_Trig2395" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_saTAYEr4Eemntv5tDuspng" name="PME_Trig2396" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_saUOgEr4Eemntv5tDuspng" name="PME_Trig2397" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_saU1kEr4Eemntv5tDuspng" name="PME_Trig2398" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_saWDsEr4Eemntv5tDuspng" name="PME_Trig2399" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_saZHAEr4Eemntv5tDuspng" name="PME_Trig2400" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_sacxYEr4Eemntv5tDuspng" name="PME_Trig2401" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_sadYcEr4Eemntv5tDuspng" name="PME_Trig2402" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_sad_gEr4Eemntv5tDuspng" name="PME_Trig2403" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_safNoEr4Eemntv5tDuspng" name="PME_Trig2404" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_sahC0Er4Eemntv5tDuspng" name="PME_Trig2405" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
            </transition>
            <transition xmi:id="_saktMEr4Eemntv5tDuspng" name="To__ConfigFailure__2406" guard="_szwCM0r4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_NvBagAgxEea_md0mpENoqg">
              <ownedRule xmi:id="_szwCM0r4Eemntv5tDuspng" name="PME_checkDecesion2990">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_szwCMkr4Eemntv5tDuspng" name="PME_checkDecesion2990">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ConfigFailure__2406&quot;,&quot;ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_salUQEr4Eemntv5tDuspng" name="To__Debug__InitState__2407" guard="_sz1hwUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_s6YowErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_sz1hwUr4Eemntv5tDuspng" name="PME_checkDecesion2996">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sz1hwEr4Eemntv5tDuspng" name="PME_checkDecesion2996">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__2407&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_saxhgEr4Eemntv5tDuspng" name="Trans__ex2408" source="_s4kq4UrDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szGh8Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sa1y8Er4Eemntv5tDuspng" name="To__Substates__Debug__C__RetryConfig__2410" guard="_szxQUUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_sayvoEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_szxQUUr4Eemntv5tDuspng" name="PME_checkDecesion2992">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_szxQUEr4Eemntv5tDuspng" name="PME_checkDecesion2992">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sa8goEr4Eemntv5tDuspng" name="From__Substates__Debug__C__RetryConfig__2412" source="_sa42QEr4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sznfUEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_siUT8Er4Eemntv5tDuspng" name="Trans__ex2484" source="_s33gQErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syrrMEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_siX-UEr4Eemntv5tDuspng" name="To__Substates__Debug__C__Init__ReadConfig__1__2486" guard="_szx3YUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_siViEEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_szx3YUr4Eemntv5tDuspng" name="PME_checkDecesion2993">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_szx3YEr4Eemntv5tDuspng" name="PME_checkDecesion2993">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sicPwEr4Eemntv5tDuspng" name="From__Substates__Debug__C__Init__ReadConfig__1__2488" source="_siZMcEr4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sx_HoEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_slm4gkr4Eemntv5tDuspng" name="To__Substates__Debug__C__server2Failure__2560" guard="_szwpQUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_slm4gEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_szwpQUr4Eemntv5tDuspng" name="PME_checkDecesion2991">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_szwpQEr4Eemntv5tDuspng" name="PME_checkDecesion2991">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__server2Failure__2560&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sloGoUr4Eemntv5tDuspng" name="From__Substates__Debug__C__server2Failure__2562" source="_slnfkEr4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syVF4Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_snUIsEr4Eemntv5tDuspng" name="Trans__ex2612" source="_sznSYUrDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sye24Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_snVW0Er4Eemntv5tDuspng" name="To__Substates__Debug__C__MasterAnnouncment__2614" guard="_szwCMUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_snUvwEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_szwCMUr4Eemntv5tDuspng" name="PME_checkDecesion2989">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_szwCMEr4Eemntv5tDuspng" name="PME_checkDecesion2989">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_snV94Ur4Eemntv5tDuspng" name="From__Substates__Debug__C__MasterAnnouncment__2616" source="_snVW0Ur4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sx3y4Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_spkygEr4Eemntv5tDuspng" name="Trans__ex2688" source="_s2K3IUrDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szbSEEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_splZkUr4Eemntv5tDuspng" name="To__Substates__Debug__C__Server1Failure__2690" guard="_szzskUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_spkygUr4Eemntv5tDuspng">
              <ownedRule xmi:id="_szzskUr4Eemntv5tDuspng" name="PME_checkDecesion2994">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_szzskEr4Eemntv5tDuspng" name="PME_checkDecesion2994">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_spmAoUr4Eemntv5tDuspng" name="From__Substates__Debug__C__Server1Failure__2692" source="_splZkkr4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syLU4Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ssRhMEr4Eemntv5tDuspng" name="Trans__ex2784" source="_s5a_cUrDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sx0IgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ssSIQUr4Eemntv5tDuspng" name="To__Substates__Debug__C__QueryConfig__2786" guard="_sz3W8Ur4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_ssRhMUr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sz3W8Ur4Eemntv5tDuspng" name="PME_checkDecesion2997">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sz3W8Er4Eemntv5tDuspng" name="PME_checkDecesion2997">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ssSvUkr4Eemntv5tDuspng" name="From__Substates__Debug__C__QueryConfig__2788" source="_ssSvUEr4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy8w8Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_su1F8Er4Eemntv5tDuspng" name="Trans__ex2880" source="_s1ceYUrDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szu0EEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_su1tAUr4Eemntv5tDuspng" name="To__Substates__Debug__C__configOK__2882" guard="_sz06sUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_su1F8Ur4Eemntv5tDuspng">
              <ownedRule xmi:id="_sz06sUr4Eemntv5tDuspng" name="PME_checkDecesion2995">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sz06sEr4Eemntv5tDuspng" name="PME_checkDecesion2995">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configOK__2882&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_su2UEkr4Eemntv5tDuspng" name="From__Substates__Debug__C__configOK__2884" source="_su2UEEr4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szUkYEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_swRQYEr4Eemntv5tDuspng" name="Trans__ex2934" source="_syX8QErDEem2BZRQc2M93A" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syon4Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_swR3cUr4Eemntv5tDuspng" name="To__Substates__Debug__C__configLoaded__2936" guard="_sz5MIUr4Eemntv5tDuspng" source="_sZCcIEr4Eemntv5tDuspng" target="_swRQYUr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sz5MIUr4Eemntv5tDuspng" name="PME_checkDecesion2998">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sz5MIEr4Eemntv5tDuspng" name="PME_checkDecesion2998">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configLoaded__2936&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_swSegkr4Eemntv5tDuspng" name="From__Substates__Debug__C__configLoaded__2938" source="_swSegEr4Eemntv5tDuspng" target="_sZCcIEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syZ-YEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__2406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__2560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__2410&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__2486&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2690&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2407&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__2786&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__2936&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_npsCMAgwEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:State" xmi:id="_NvBagAgxEea_md0mpENoqg" name="ConfigFailure">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_TasAwAjJEea_md0mpENoqg" name="failurEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;&quot;ENV: The system is in Failure State, try to reload the config after 10 second\n&quot;;
    FailureTimer.informIn(UMLRTTimespec(10,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6n5UErDEem2BZRQc2M93A" name="ConfigFailure__216">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_syROkErDEem2BZRQc2M93A" name="Debug__Path__configLoaded" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_syTDwUrDEem2BZRQc2M93A" name="Debug__C__configLoaded">
              <connectionPoint xmi:id="_syVgAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_syX8QErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_swRQYUr4Eemntv5tDuspng" name="From__Parent__2935" kind="entryPoint"/>
              <connectionPoint xmi:id="_swSegEr4Eemntv5tDuspng" name="To__Parent__2937" kind="exitPoint"/>
              <region xmi:id="_syTq0ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_szNpwErDEem2BZRQc2M93A" name="Debug__init__trans__configLoaded" source="_syVgAUrDEem2BZRQc2M93A" target="_szG8EErDEem2BZRQc2M93A"/>
                <transition xmi:id="_szQGAErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded" source="_szMboErDEem2BZRQc2M93A" target="_syX8QErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szeIcErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded__21">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__end__trans__configLoaded&quot;,(char *)&quot;Debug__A__Ac__configLoaded&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szQGAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_swZzQEr4Eemntv5tDuspng" name="Trans__ex2941" source="_syX8QErDEem2BZRQc2M93A" target="_swUTsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sxibsEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__2985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__2982&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__2983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_swZzQUr4Eemntv5tDuspng" name="Trans__Init__State__29402942" source="_swYlIEr4Eemntv5tDuspng" target="_swUTsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sxlfAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2940&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__2985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2940&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__2982&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2940&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__2983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2940&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_swbBYEr4Eemntv5tDuspng" name="From__Debug__A__Ac__configLoaded__2943" source="_szMboErDEem2BZRQc2M93A" target="_swUTsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sxjCwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__2985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__2982&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__2983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_swbocEr4Eemntv5tDuspng" name="PME_Trig2944" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_swddoEr4Eemntv5tDuspng" name="PME_Trig2945" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_swf54Er4Eemntv5tDuspng" name="PME_Trig2946" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_swiWIEr4Eemntv5tDuspng" name="PME_Trig2947" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_swjkQEr4Eemntv5tDuspng" name="PME_Trig2948" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_swkyYEr4Eemntv5tDuspng" name="PME_Trig2949" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_swlZcEr4Eemntv5tDuspng" name="PME_Trig2950" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_swmnkEr4Eemntv5tDuspng" name="PME_Trig2951" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_swpq4Er4Eemntv5tDuspng" name="PME_Trig2952" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_swsuMEr4Eemntv5tDuspng" name="PME_Trig2953" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_swt8UEr4Eemntv5tDuspng" name="PME_Trig2954" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_swvKcEr4Eemntv5tDuspng" name="PME_Trig2955" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_swwYkEr4Eemntv5tDuspng" name="PME_Trig2956" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_swxmsEr4Eemntv5tDuspng" name="PME_Trig2957" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sw14IEr4Eemntv5tDuspng" name="PME_Trig2958" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sw3GQEr4Eemntv5tDuspng" name="PME_Trig2959" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sw4UYEr4Eemntv5tDuspng" name="PME_Trig2960" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sw5igEr4Eemntv5tDuspng" name="PME_Trig2961" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sw6JkEr4Eemntv5tDuspng" name="From__Debug__B__Ex__ReadConfig__2962" source="_szG8EErDEem2BZRQc2M93A" target="_swUTsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sxn7QEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__2985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__2982&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__2983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sw6woEr4Eemntv5tDuspng" name="PME_Trig2963" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sw9z8Er4Eemntv5tDuspng" name="PME_Trig2964" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sxAQMEr4Eemntv5tDuspng" name="PME_Trig2965" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sxCFYEr4Eemntv5tDuspng" name="PME_Trig2966" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sxCscEr4Eemntv5tDuspng" name="PME_Trig2967" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sxD6kEr4Eemntv5tDuspng" name="PME_Trig2968" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sxFIsEr4Eemntv5tDuspng" name="PME_Trig2969" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sxIMAEr4Eemntv5tDuspng" name="PME_Trig2970" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sxL2YEr4Eemntv5tDuspng" name="PME_Trig2971" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sxMdcEr4Eemntv5tDuspng" name="PME_Trig2972" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sxNrkEr4Eemntv5tDuspng" name="PME_Trig2973" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sxO5sEr4Eemntv5tDuspng" name="PME_Trig2974" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sxQH0Er4Eemntv5tDuspng" name="PME_Trig2975" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sxTLIEr4Eemntv5tDuspng" name="PME_Trig2976" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sxWOcEr4Eemntv5tDuspng" name="PME_Trig2977" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_sxW1gEr4Eemntv5tDuspng" name="PME_Trig2978" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sxYDoEr4Eemntv5tDuspng" name="PME_Trig2979" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sxYqsEr4Eemntv5tDuspng" name="PME_Trig2980" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sxbG8Er4Eemntv5tDuspng" name="PME_Trig2981" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sxexUEr4Eemntv5tDuspng" name="To__Debug__A__Ac__configLoaded__2982" guard="_sxrlo0r4Eemntv5tDuspng" source="_swUTsEr4Eemntv5tDuspng" target="_szMboErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sxrlo0r4Eemntv5tDuspng" name="PME_checkDecesion2987">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sxrlokr4Eemntv5tDuspng" name="PME_checkDecesion2987">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configLoaded__2982&quot;,&quot;Debug__A__Ac__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sxfYYEr4Eemntv5tDuspng" name="To__Debug__B__Ex__ReadConfig__2983" guard="_sxsMsUr4Eemntv5tDuspng" source="_swUTsEr4Eemntv5tDuspng" target="_szG8EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sxsMsUr4Eemntv5tDuspng" name="PME_checkDecesion2988">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sxsMsEr4Eemntv5tDuspng" name="PME_checkDecesion2988">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ReadConfig__2983&quot;,&quot;Debug__B__Ex__ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sxgmgEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2984" source="_swRQYUr4Eemntv5tDuspng" target="_swUTsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sxq-kEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__2985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__2982&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__2983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sxhNkEr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2985" guard="_sxrloUr4Eemntv5tDuspng" source="_swUTsEr4Eemntv5tDuspng" target="_swSegEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sxrloUr4Eemntv5tDuspng" name="PME_checkDecesion2986">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sxrloEr4Eemntv5tDuspng" name="PME_checkDecesion2986">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2985&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_szG8EErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szHjIErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szRUIUrDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig__14">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_szMboErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szMboUrDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configLoaded&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szYB0ErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded__16">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_swUTsEr4Eemntv5tDuspng" name="DecesionPoint__2939" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_swYlIEr4Eemntv5tDuspng" name="Init__State__2940"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_szkPEErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnouncment" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_szldMErDEem2BZRQc2M93A" name="Debug__C__MasterAnnouncment">
              <connectionPoint xmi:id="_szmrUUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_sznSYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_snUvwEr4Eemntv5tDuspng" name="From__Parent__2613" kind="entryPoint"/>
              <connectionPoint xmi:id="_snVW0Ur4Eemntv5tDuspng" name="To__Parent__2615" kind="exitPoint"/>
              <region xmi:id="_szldMUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0ElYErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment" source="_szmrUUrDEem2BZRQc2M93A" target="_sz-ewErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0VEEErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment__40">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__init__trans__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0ElYUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_sz-ewErDEem2BZRQc2M93A" target="_sz_s4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0WSMErDEem2BZRQc2M93A" name="Debug__Ex__Running__42">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0ElYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0GakErDEem2BZRQc2M93A" name="Debug__AC__MasterAnnouncment" source="_sz_s4ErDEem2BZRQc2M93A" target="_s0BiEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0HBoErDEem2BZRQc2M93A" name="RegisterMaster" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Master Annoucment from &quot;&lt;&lt; MasterName&lt;&lt;&quot;\n&quot;;
    if (strcmp((char *)MasterName,&quot;server1&quot;)==0)
    {
    systemConfig.MasterList[0]=true;
    if (AnnouncementServer1Id.isValid())
    AnnouncmentServer1.cancelTimer(AnnouncementServer1Id);
    AnnouncementServer1Id=AnnouncmentServer1.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    else if (strcmp((char *)MasterName,&quot;server2&quot;)==0)
    {
    systemConfig.MasterList[1]=true;
    if (AnnouncementServer2Id.isValid())
    AnnouncmentServer2.cancelTimer(AnnouncementServer2Id);
    AnnouncementServer2Id=AnnouncmentServer2.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    // the following code has been generated
    if ((systemConfig.RunningMode==1)&amp;&amp; (systemConfig.MasterList[0] ) &amp;&amp; (systemConfig.MasterList[1]))
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Violation, there are 2 master in passive mode\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__AC__MasterAnnouncment&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0GakUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_snYaIEr4Eemntv5tDuspng" name="Trans__ex2619" source="_sznSYUrDEem2BZRQc2M93A" target="_snV94kr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_spZzYEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2681&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__2680&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2683&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2679&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_snZBMEr4Eemntv5tDuspng" name="Trans__Init__State__26182620" source="_snXMAEr4Eemntv5tDuspng" target="_snV94kr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_spbBgEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2618&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2681&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2618&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__2680&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2618&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2683&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2618&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2679&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2618&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_snd5sEr4Eemntv5tDuspng" name="From__Debug__B__Ac__MasterAnnouncment__2621" source="_sz_s4ErDEem2BZRQc2M93A" target="_snV94kr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_spcPoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2681&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__2680&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2683&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2679&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_snfH0Er4Eemntv5tDuspng" name="PME_Trig2622" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sngV8Er4Eemntv5tDuspng" name="PME_Trig2623" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sng9AEr4Eemntv5tDuspng" name="PME_Trig2624" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sniLIEr4Eemntv5tDuspng" name="PME_Trig2625" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_snkAUEr4Eemntv5tDuspng" name="PME_Trig2626" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_snl1gEr4Eemntv5tDuspng" name="PME_Trig2627" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sno40Er4Eemntv5tDuspng" name="PME_Trig2628" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_snqG8Er4Eemntv5tDuspng" name="PME_Trig2629" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_snquAEr4Eemntv5tDuspng" name="PME_Trig2630" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_snr8IEr4Eemntv5tDuspng" name="PME_Trig2631" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sntKQEr4Eemntv5tDuspng" name="PME_Trig2632" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_snvmgEr4Eemntv5tDuspng" name="PME_Trig2633" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_snzQ4Er4Eemntv5tDuspng" name="PME_Trig2634" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sn0fAEr4Eemntv5tDuspng" name="PME_Trig2635" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sn1GEEr4Eemntv5tDuspng" name="PME_Trig2636" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_soIoEEr4Eemntv5tDuspng" name="PME_Trig2637" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_soJPIEr4Eemntv5tDuspng" name="PME_Trig2638" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_soKdQEr4Eemntv5tDuspng" name="PME_Trig2639" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_soLrYEr4Eemntv5tDuspng" name="From__Debug__A__Ac__MasterAnnouncment__2640" source="_s0BiEErDEem2BZRQc2M93A" target="_snV94kr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_speE0Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2681&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__2680&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2683&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2679&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_soNgkEr4Eemntv5tDuspng" name="PME_Trig2641" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_soRyAEr4Eemntv5tDuspng" name="PME_Trig2642" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_soTAIEr4Eemntv5tDuspng" name="PME_Trig2643" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_soTnMEr4Eemntv5tDuspng" name="PME_Trig2644" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_soU1UEr4Eemntv5tDuspng" name="PME_Trig2645" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_soVcYEr4Eemntv5tDuspng" name="PME_Trig2646" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_soX4oEr4Eemntv5tDuspng" name="PME_Trig2647" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_soaU4Er4Eemntv5tDuspng" name="PME_Trig2648" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_socxIEr4Eemntv5tDuspng" name="PME_Trig2649" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sod_QEr4Eemntv5tDuspng" name="PME_Trig2650" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_soemUEr4Eemntv5tDuspng" name="PME_Trig2651" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sof0cEr4Eemntv5tDuspng" name="PME_Trig2652" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_soi3wEr4Eemntv5tDuspng" name="PME_Trig2653" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sol7EEr4Eemntv5tDuspng" name="PME_Trig2654" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sonJMEr4Eemntv5tDuspng" name="PME_Trig2655" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_sonwQEr4Eemntv5tDuspng" name="PME_Trig2656" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_soo-YEr4Eemntv5tDuspng" name="PME_Trig2657" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_soqMgEr4Eemntv5tDuspng" name="PME_Trig2658" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sovsEEr4Eemntv5tDuspng" name="PME_Trig2659" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_soxhQEr4Eemntv5tDuspng" name="From__Debug__B__Ex__Running__2660" source="_sz-ewErDEem2BZRQc2M93A" target="_snV94kr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_spghEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2681&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__2680&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2683&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2679&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_soyIUEr4Eemntv5tDuspng" name="PME_Trig2661" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_soyvYEr4Eemntv5tDuspng" name="PME_Trig2662" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_soz9gEr4Eemntv5tDuspng" name="PME_Trig2663" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_so2ZwEr4Eemntv5tDuspng" name="PME_Trig2664" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_so6EIEr4Eemntv5tDuspng" name="PME_Trig2665" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_so7SQEr4Eemntv5tDuspng" name="PME_Trig2666" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_so8gYEr4Eemntv5tDuspng" name="PME_Trig2667" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_so9HcEr4Eemntv5tDuspng" name="PME_Trig2668" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_so9ugEr4Eemntv5tDuspng" name="PME_Trig2669" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_so_jsEr4Eemntv5tDuspng" name="PME_Trig2670" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_spDOEEr4Eemntv5tDuspng" name="PME_Trig2671" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_spFDQEr4Eemntv5tDuspng" name="PME_Trig2672" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_spGRYEr4Eemntv5tDuspng" name="PME_Trig2673" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_spG4cEr4Eemntv5tDuspng" name="PME_Trig2674" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_spIGkEr4Eemntv5tDuspng" name="PME_Trig2675" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_spKi0Er4Eemntv5tDuspng" name="PME_Trig2676" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_spONMEr4Eemntv5tDuspng" name="PME_Trig2677" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_spPbUEr4Eemntv5tDuspng" name="PME_Trig2678" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_spRQgEr4Eemntv5tDuspng" name="To__Debug__B__Ac__MasterAnnouncment__2679" guard="_spkLcUr4Eemntv5tDuspng" source="_snV94kr4Eemntv5tDuspng" target="_sz_s4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_spkLcUr4Eemntv5tDuspng" name="PME_checkDecesion2687">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_spkLcEr4Eemntv5tDuspng" name="PME_checkDecesion2687">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnouncment__2679&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_spRQgUr4Eemntv5tDuspng" name="To__Debug__A__Ac__MasterAnnouncment__2680" guard="_spi9UUr4Eemntv5tDuspng" source="_snV94kr4Eemntv5tDuspng" target="_s0BiEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_spi9UUr4Eemntv5tDuspng" name="PME_checkDecesion2685">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_spi9UEr4Eemntv5tDuspng" name="PME_checkDecesion2685">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnouncment__2680&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_spRQgkr4Eemntv5tDuspng" name="To__Debug__B__Ex__Running__2681" guard="_sphvMUr4Eemntv5tDuspng" source="_snV94kr4Eemntv5tDuspng" target="_sz-ewErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sphvMUr4Eemntv5tDuspng" name="PME_checkDecesion2684">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sphvMEr4Eemntv5tDuspng" name="PME_checkDecesion2684">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__2681&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_spSeoEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2682" source="_snUvwEr4Eemntv5tDuspng" target="_snV94kr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_spWwEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2681&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__2680&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2683&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2679&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_spSeoUr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2683" guard="_spjkYUr4Eemntv5tDuspng" source="_snV94kr4Eemntv5tDuspng" target="_snVW0Ur4Eemntv5tDuspng">
                  <ownedRule xmi:id="_spjkYUr4Eemntv5tDuspng" name="PME_checkDecesion2686">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_spjkYEr4Eemntv5tDuspng" name="PME_checkDecesion2686">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2683&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_sz-ewErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz-ewUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0KE8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Running__35">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_sz_s4ErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz_s4UrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0NIQUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment__36">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s0BiEErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s0BiEUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0PkgUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment__37">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_snV94kr4Eemntv5tDuspng" name="DecesionPoint__2617" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_snXMAEr4Eemntv5tDuspng" name="Init__State__2618"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s0e1EErDEem2BZRQc2M93A" name="Debug__Path__server2Failure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s0fcIUrDEem2BZRQc2M93A" name="Debug__C__server2Failure">
              <connectionPoint xmi:id="_s0gqQUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_slm4gEr4Eemntv5tDuspng" name="From__Parent__2559" kind="entryPoint"/>
              <connectionPoint xmi:id="_slnfkEr4Eemntv5tDuspng" name="To__Parent__2561" kind="exitPoint"/>
              <region xmi:id="_s0fcIkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0658ErDEem2BZRQc2M93A" name="Debug__init__trans__server2Failure" source="_s0gqQUrDEem2BZRQc2M93A" target="_s01aYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1MmwErDEem2BZRQc2M93A" name="Debug__init__trans__server2Failure__65">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__init__trans__server2Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0658UrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s01aYErDEem2BZRQc2M93A" target="_s02BcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1N04ErDEem2BZRQc2M93A" name="Debug__Ex__Running__67">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0658krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_slxQkEr4Eemntv5tDuspng" name="Trans__Init__State__25642565" source="_slrJ8Er4Eemntv5tDuspng" target="_sloGokr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_snPQMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2564&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2564&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2608&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2564&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2606&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2564&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sl0T4Er4Eemntv5tDuspng" name="From__Debug__B__Ex__Running__2566" source="_s01aYErDEem2BZRQc2M93A" target="_sloGokr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_snNbAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2608&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2606&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sl3-QEr4Eemntv5tDuspng" name="PME_Trig2567" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sl5zcEr4Eemntv5tDuspng" name="PME_Trig2568" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sl7BkEr4Eemntv5tDuspng" name="PME_Trig2569" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sl7ooEr4Eemntv5tDuspng" name="PME_Trig2570" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sl82wEr4Eemntv5tDuspng" name="PME_Trig2571" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_smAhIEr4Eemntv5tDuspng" name="PME_Trig2572" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_smEykEr4Eemntv5tDuspng" name="PME_Trig2573" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smFZoEr4Eemntv5tDuspng" name="PME_Trig2574" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smGnwEr4Eemntv5tDuspng" name="PME_Trig2575" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_smJrEEr4Eemntv5tDuspng" name="PME_Trig2576" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_smN8gEr4Eemntv5tDuspng" name="PME_Trig2577" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_smPKoEr4Eemntv5tDuspng" name="PME_Trig2578" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_smQYwEr4Eemntv5tDuspng" name="PME_Trig2579" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smRm4Er4Eemntv5tDuspng" name="PME_Trig2580" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_smUqMEr4Eemntv5tDuspng" name="PME_Trig2581" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smY7oEr4Eemntv5tDuspng" name="PME_Trig2582" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_smfCQEr4Eemntv5tDuspng" name="PME_Trig2583" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_smjTsEr4Eemntv5tDuspng" name="PME_Trig2584" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_smj6wEr4Eemntv5tDuspng" name="From__Debug__B__Ac__server2Failure__2585" source="_s02BcErDEem2BZRQc2M93A" target="_sloGokr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_snLl0Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2608&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2606&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_smkh0Er4Eemntv5tDuspng" name="PME_Trig2586" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_smlv8Er4Eemntv5tDuspng" name="PME_Trig2587" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smnlIEr4Eemntv5tDuspng" name="PME_Trig2588" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smqocEr4Eemntv5tDuspng" name="PME_Trig2589" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_smsdoEr4Eemntv5tDuspng" name="PME_Trig2590" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_smtrwEr4Eemntv5tDuspng" name="PME_Trig2591" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_smu54Er4Eemntv5tDuspng" name="PME_Trig2592" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smvg8Er4Eemntv5tDuspng" name="PME_Trig2593" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_smx9MEr4Eemntv5tDuspng" name="PME_Trig2594" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sm1nkEr4Eemntv5tDuspng" name="PME_Trig2595" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sm21sEr4Eemntv5tDuspng" name="PME_Trig2596" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sm3cwEr4Eemntv5tDuspng" name="PME_Trig2597" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sm4q4Er4Eemntv5tDuspng" name="PME_Trig2598" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sm55AEr4Eemntv5tDuspng" name="PME_Trig2599" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sm8VQEr4Eemntv5tDuspng" name="PME_Trig2600" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_sm__oEr4Eemntv5tDuspng" name="PME_Trig2601" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_snBNwEr4Eemntv5tDuspng" name="PME_Trig2602" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_snB00Er4Eemntv5tDuspng" name="PME_Trig2603" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_snDC8Er4Eemntv5tDuspng" name="PME_Trig2604" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_snEREEr4Eemntv5tDuspng" name="To__Debug__B__Ex__Running__2605" guard="_snP3QUr4Eemntv5tDuspng" source="_sloGokr4Eemntv5tDuspng" target="_s01aYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_snP3QUr4Eemntv5tDuspng" name="PME_checkDecesion2609">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_snP3QEr4Eemntv5tDuspng" name="PME_checkDecesion2609">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__2605&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_snE4IEr4Eemntv5tDuspng" name="To__Debug__B__Ac__server2Failure__2606" guard="_snSTgUr4Eemntv5tDuspng" source="_sloGokr4Eemntv5tDuspng" target="_s02BcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_snSTgUr4Eemntv5tDuspng" name="PME_checkDecesion2611">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_snSTgEr4Eemntv5tDuspng" name="PME_checkDecesion2611">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__server2Failure__2606&quot;,&quot;Debug__B__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_snH7cEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2607" source="_slm4gEr4Eemntv5tDuspng" target="_sloGokr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_snMM4Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2608&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2606&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_snJJkEr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2608" guard="_snRFYUr4Eemntv5tDuspng" source="_sloGokr4Eemntv5tDuspng" target="_slnfkEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_snRFYUr4Eemntv5tDuspng" name="PME_checkDecesion2610">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_snRFYEr4Eemntv5tDuspng" name="PME_checkDecesion2610">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2608&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s01aYErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s01aYUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0_ycErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__60">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s02BcErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s02BcUrDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1C1wErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure__61">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sloGokr4Eemntv5tDuspng" name="DecesionPoint__2563" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_slrJ8Er4Eemntv5tDuspng" name="Init__State__2564"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s1ZbEUrDEem2BZRQc2M93A" name="Debug__C__configOK">
              <connectionPoint xmi:id="_s1ceYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_su1F8Ur4Eemntv5tDuspng" name="From__Parent__2881" kind="entryPoint"/>
              <connectionPoint xmi:id="_su2UEEr4Eemntv5tDuspng" name="To__Parent__2883" kind="exitPoint"/>
              <region xmi:id="_s1ZbEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s1ycoUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s1uyQErDEem2BZRQc2M93A" target="_s1wAYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1zqwErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__configOK&quot;,(char *)&quot;Debug__A__En__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s1zDsErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s1zqwUrDEem2BZRQc2M93A" name="Debug__end__trans__configOK" source="_s1wAYErDEem2BZRQc2M93A" target="_s1ceYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2CUQErDEem2BZRQc2M93A" name="Debug__end__trans__configOK__93">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__end__trans__configOK&quot;,(char *)&quot;Debug__A__En__configOK&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s10R0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_su9o0Er4Eemntv5tDuspng" name="Trans__ex2887" source="_s1ceYUrDEem2BZRQc2M93A" target="_su4JQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_swItgEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2930&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2927&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__2928&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_su9o0Ur4Eemntv5tDuspng" name="Trans__Init__State__28862888" source="_su7MkEr4Eemntv5tDuspng" target="_su4JQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_swGRQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2886&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2930&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2886&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2927&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2886&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__2928&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2886&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_su-28Er4Eemntv5tDuspng" name="From__Debug__A__En__configOK__2889" source="_s1wAYErDEem2BZRQc2M93A" target="_su4JQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_swHfYEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2930&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2927&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__2928&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_su_eAEr4Eemntv5tDuspng" name="PME_Trig2890" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svAsIEr4Eemntv5tDuspng" name="PME_Trig2891" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svB6QEr4Eemntv5tDuspng" name="PME_Trig2892" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svEWgEr4Eemntv5tDuspng" name="PME_Trig2893" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_svHZ0Er4Eemntv5tDuspng" name="PME_Trig2894" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svIA4Er4Eemntv5tDuspng" name="PME_Trig2895" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_svJPAEr4Eemntv5tDuspng" name="PME_Trig2896" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svJ2EEr4Eemntv5tDuspng" name="PME_Trig2897" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svLEMEr4Eemntv5tDuspng" name="PME_Trig2898" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svMSUEr4Eemntv5tDuspng" name="PME_Trig2899" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svRK0Er4Eemntv5tDuspng" name="PME_Trig2900" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_svTAAEr4Eemntv5tDuspng" name="PME_Trig2901" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_svTnEEr4Eemntv5tDuspng" name="PME_Trig2902" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svU1MEr4Eemntv5tDuspng" name="PME_Trig2903" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_svX4gEr4Eemntv5tDuspng" name="PME_Trig2904" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svbi4Er4Eemntv5tDuspng" name="PME_Trig2905" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_svcxAEr4Eemntv5tDuspng" name="PME_Trig2906" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svdYEEr4Eemntv5tDuspng" name="PME_Trig2907" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_svemMEr4Eemntv5tDuspng" name="From__Debug__A__Ac__configOK__2908" source="_s1uyQErDEem2BZRQc2M93A" target="_su4JQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_swONEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2930&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2927&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__2928&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_svfNQEr4Eemntv5tDuspng" name="PME_Trig2909" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svgbYEr4Eemntv5tDuspng" name="PME_Trig2910" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svks0Er4Eemntv5tDuspng" name="PME_Trig2911" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svmiAEr4Eemntv5tDuspng" name="PME_Trig2912" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_svnJEEr4Eemntv5tDuspng" name="PME_Trig2913" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svoXMEr4Eemntv5tDuspng" name="PME_Trig2914" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_svplUEr4Eemntv5tDuspng" name="PME_Trig2915" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svragEr4Eemntv5tDuspng" name="PME_Trig2916" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_svt2wEr4Eemntv5tDuspng" name="PME_Trig2917" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svwTAEr4Eemntv5tDuspng" name="PME_Trig2918" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_svxhIEr4Eemntv5tDuspng" name="PME_Trig2919" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_svyIMEr4Eemntv5tDuspng" name="PME_Trig2920" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_svzWUEr4Eemntv5tDuspng" name="PME_Trig2921" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sv0kcEr4Eemntv5tDuspng" name="PME_Trig2922" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sv3AsEr4Eemntv5tDuspng" name="PME_Trig2923" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sv6EAEr4Eemntv5tDuspng" name="PME_Trig2924" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sv7SIEr4Eemntv5tDuspng" name="PME_Trig2925" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sv8gQEr4Eemntv5tDuspng" name="PME_Trig2926" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sv9uYEr4Eemntv5tDuspng" name="To__Debug__A__En__configOK__2927" guard="_swQCQ0r4Eemntv5tDuspng" source="_su4JQEr4Eemntv5tDuspng" target="_s1wAYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_swQCQ0r4Eemntv5tDuspng" name="PME_checkDecesion2932">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_swQCQkr4Eemntv5tDuspng" name="PME_checkDecesion2932">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__configOK__2927&quot;,&quot;Debug__A__En__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sv9uYUr4Eemntv5tDuspng" name="To__Debug__A__Ac__configOK__2928" guard="_swQpUUr4Eemntv5tDuspng" source="_su4JQEr4Eemntv5tDuspng" target="_s1uyQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_swQpUUr4Eemntv5tDuspng" name="PME_checkDecesion2933">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_swQpUEr4Eemntv5tDuspng" name="PME_checkDecesion2933">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configOK__2928&quot;,&quot;Debug__A__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sv-8gEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2929" source="_su1F8Ur4Eemntv5tDuspng" target="_su4JQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_swPbMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2930&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2927&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__2928&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_swBYwEr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2930" guard="_swQCQUr4Eemntv5tDuspng" source="_su4JQEr4Eemntv5tDuspng" target="_su2UEEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_swQCQUr4Eemntv5tDuspng" name="PME_checkDecesion2931">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_swQCQEr4Eemntv5tDuspng" name="PME_checkDecesion2931">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2930&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s1uyQErDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uyQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s14jQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK__86">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s1wAYErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1wncErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s18NoUrDEem2BZRQc2M93A" name="Debug__A__En__configOK__87">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_su4JQEr4Eemntv5tDuspng" name="DecesionPoint__2885" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_su7MkEr4Eemntv5tDuspng" name="Init__State__2886"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s2HMwErDEem2BZRQc2M93A" name="Debug__Path__Server1Failure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s2JB8ErDEem2BZRQc2M93A" name="Debug__C__Server1Failure">
              <connectionPoint xmi:id="_s2KQEErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s2K3IUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_spkygUr4Eemntv5tDuspng" name="From__Parent__2689" kind="entryPoint"/>
              <connectionPoint xmi:id="_splZkkr4Eemntv5tDuspng" name="To__Parent__2691" kind="exitPoint"/>
              <region xmi:id="_s2JB8UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s2lt4ErDEem2BZRQc2M93A" name="Debug__init__trans__Server1Failure" source="_s2KQEErDEem2BZRQc2M93A" target="_s2eZIUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s24o0ErDEem2BZRQc2M93A" name="Debug__init__trans__Server1Failure__112">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__init__trans__Server1Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s2lt4UrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s2eZIUrDEem2BZRQc2M93A" target="_s2gOUErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s27FEErDEem2BZRQc2M93A" name="Debug__Ex__Running__114">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2lt4krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2mU8ErDEem2BZRQc2M93A" name="Debug__AC__Server1Failure" source="_s2gOUErDEem2BZRQc2M93A" target="_s2iDgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2m8AErDEem2BZRQc2M93A" name="Server1failure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server1, remove server1 from masters list\n&quot;;
    systemConfig.MasterList[0]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__AC__Server1Failure&quot;,(char *)&quot;Debug__B__Ac__Server1Failure&quot;,(char *)&quot;Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2mU8UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2m8AUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s2iDgErDEem2BZRQc2M93A" target="_s2j4sErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2njEUrDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__Server1Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2njEErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2oKIErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure" source="_s2j4sErDEem2BZRQc2M93A" target="_s2K3IUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2_9kErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure__118">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__end__trans__Server1Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2oKIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_spsHQEr4Eemntv5tDuspng" name="Trans__Init__State__26942695" source="_spnOwEr4Eemntv5tDuspng" target="_spmnsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ssC3sEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2694&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2694&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2694&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2694&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2773&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2694&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2775&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2694&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_spsuUEr4Eemntv5tDuspng" name="Trans__ex2696" source="_s2K3IUrDEem2BZRQc2M93A" target="_spmnsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sr_NUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2773&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2775&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_spvKkEr4Eemntv5tDuspng" name="From__Debug__A__En__Running__2697" source="_s2j4sErDEem2BZRQc2M93A" target="_spmnsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ssIXQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2773&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2775&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_spvxoEr4Eemntv5tDuspng" name="PME_Trig2698" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_spw_wEr4Eemntv5tDuspng" name="PME_Trig2699" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_spzcAEr4Eemntv5tDuspng" name="PME_Trig2700" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sp1RMEr4Eemntv5tDuspng" name="PME_Trig2701" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sp3tcEr4Eemntv5tDuspng" name="PME_Trig2702" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sp47kEr4Eemntv5tDuspng" name="PME_Trig2703" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sp6JsEr4Eemntv5tDuspng" name="PME_Trig2704" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sp6wwEr4Eemntv5tDuspng" name="PME_Trig2705" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sp7-4Er4Eemntv5tDuspng" name="PME_Trig2706" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sp_CMEr4Eemntv5tDuspng" name="PME_Trig2707" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqBecEr4Eemntv5tDuspng" name="PME_Trig2708" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sqCskEr4Eemntv5tDuspng" name="PME_Trig2709" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sqD6sEr4Eemntv5tDuspng" name="PME_Trig2710" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqFI0Er4Eemntv5tDuspng" name="PME_Trig2711" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sqIMIEr4Eemntv5tDuspng" name="PME_Trig2712" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqKoYEr4Eemntv5tDuspng" name="PME_Trig2713" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sqL2gEr4Eemntv5tDuspng" name="PME_Trig2714" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqNEoEr4Eemntv5tDuspng" name="PME_Trig2715" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sqOSwEr4Eemntv5tDuspng" name="From__Debug__B__Ac__Server1Failure__2716" source="_s2gOUErDEem2BZRQc2M93A" target="_spmnsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ssJlYEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2773&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2775&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sqO50Er4Eemntv5tDuspng" name="PME_Trig2717" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqQH8Er4Eemntv5tDuspng" name="PME_Trig2718" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqR9IEr4Eemntv5tDuspng" name="PME_Trig2719" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqVAcEr4Eemntv5tDuspng" name="PME_Trig2720" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sqXcsEr4Eemntv5tDuspng" name="PME_Trig2721" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqYDwEr4Eemntv5tDuspng" name="PME_Trig2722" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sqZR4Er4Eemntv5tDuspng" name="PME_Trig2723" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqZ48Er4Eemntv5tDuspng" name="PME_Trig2724" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqbuIEr4Eemntv5tDuspng" name="PME_Trig2725" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqfYgEr4Eemntv5tDuspng" name="PME_Trig2726" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqhNsEr4Eemntv5tDuspng" name="PME_Trig2727" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sqh0wEr4Eemntv5tDuspng" name="PME_Trig2728" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sqjC4Er4Eemntv5tDuspng" name="PME_Trig2729" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqkRAEr4Eemntv5tDuspng" name="PME_Trig2730" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sqmtQEr4Eemntv5tDuspng" name="PME_Trig2731" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sqq-sEr4Eemntv5tDuspng" name="PME_Trig2732" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sqsM0Er4Eemntv5tDuspng" name="PME_Trig2733" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqsz4Er4Eemntv5tDuspng" name="PME_Trig2734" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_squCAEr4Eemntv5tDuspng" name="From__Debug__B__Ex__Running__2735" source="_s2eZIUrDEem2BZRQc2M93A" target="_spmnsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ssHJIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2773&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2775&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sqvQIEr4Eemntv5tDuspng" name="PME_Trig2736" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sqyTcEr4Eemntv5tDuspng" name="PME_Trig2737" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sq0vsEr4Eemntv5tDuspng" name="PME_Trig2738" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sq190Er4Eemntv5tDuspng" name="PME_Trig2739" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sq2k4Er4Eemntv5tDuspng" name="PME_Trig2740" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sq3zAEr4Eemntv5tDuspng" name="PME_Trig2741" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sq5oMEr4Eemntv5tDuspng" name="PME_Trig2742" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sq8EcEr4Eemntv5tDuspng" name="PME_Trig2743" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sq_HwEr4Eemntv5tDuspng" name="PME_Trig2744" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_srAV4Er4Eemntv5tDuspng" name="PME_Trig2745" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_srBkAEr4Eemntv5tDuspng" name="PME_Trig2746" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_srCLEEr4Eemntv5tDuspng" name="PME_Trig2747" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_srEnUEr4Eemntv5tDuspng" name="PME_Trig2748" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_srIRsEr4Eemntv5tDuspng" name="PME_Trig2749" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_srKG4Er4Eemntv5tDuspng" name="PME_Trig2750" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_srKt8Er4Eemntv5tDuspng" name="PME_Trig2751" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_srL8EEr4Eemntv5tDuspng" name="PME_Trig2752" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_srMjIEr4Eemntv5tDuspng" name="PME_Trig2753" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_srT34Er4Eemntv5tDuspng" name="From__Debug__A__Ac__Server1Failure__2754" source="_s2iDgErDEem2BZRQc2M93A" target="_spmnsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ssNPwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2773&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2775&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_srUe8Er4Eemntv5tDuspng" name="PME_Trig2755" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_srVtEEr4Eemntv5tDuspng" name="PME_Trig2756" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_srW7MEr4Eemntv5tDuspng" name="PME_Trig2757" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_srZXcEr4Eemntv5tDuspng" name="PME_Trig2758" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_srdB0Er4Eemntv5tDuspng" name="PME_Trig2759" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sreP8Er4Eemntv5tDuspng" name="PME_Trig2760" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_srfeEEr4Eemntv5tDuspng" name="PME_Trig2761" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_srgsMEr4Eemntv5tDuspng" name="PME_Trig2762" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_srjIcEr4Eemntv5tDuspng" name="PME_Trig2763" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_srnZ4Er4Eemntv5tDuspng" name="PME_Trig2764" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_srooAEr4Eemntv5tDuspng" name="PME_Trig2765" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_srp2IEr4Eemntv5tDuspng" name="PME_Trig2766" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_srrEQEr4Eemntv5tDuspng" name="PME_Trig2767" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sruuoEr4Eemntv5tDuspng" name="PME_Trig2768" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_srxx8Er4Eemntv5tDuspng" name="PME_Trig2769" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_srzAEEr4Eemntv5tDuspng" name="PME_Trig2770" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_srznIEr4Eemntv5tDuspng" name="PME_Trig2771" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sr01QEr4Eemntv5tDuspng" name="PME_Trig2772" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sr4foEr4Eemntv5tDuspng" name="To__Debug__A__En__Running__2773" guard="_ssQ6IUr4Eemntv5tDuspng" source="_spmnsEr4Eemntv5tDuspng" target="_s2j4sErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ssQ6IUr4Eemntv5tDuspng" name="PME_checkDecesion2782">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ssQ6IEr4Eemntv5tDuspng" name="PME_checkDecesion2782">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__2773&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sr5GsEr4Eemntv5tDuspng" name="To__Debug__B__Ac__Server1Failure__2774" guard="_ssQTEUr4Eemntv5tDuspng" source="_spmnsEr4Eemntv5tDuspng" target="_s2gOUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ssQTEUr4Eemntv5tDuspng" name="PME_checkDecesion2781">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ssQTEEr4Eemntv5tDuspng" name="PME_checkDecesion2781">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,&quot;Debug__B__Ac__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sr5GsUr4Eemntv5tDuspng" name="To__Debug__B__Ex__Running__2775" guard="_ssQ6I0r4Eemntv5tDuspng" source="_spmnsEr4Eemntv5tDuspng" target="_s2eZIUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ssQ6I0r4Eemntv5tDuspng" name="PME_checkDecesion2783">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ssQ6Ikr4Eemntv5tDuspng" name="PME_checkDecesion2783">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__2775&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sr6U0Er4Eemntv5tDuspng" name="To__Debug__A__Ac__Server1Failure__2776" guard="_ssOd4Ur4Eemntv5tDuspng" source="_spmnsEr4Eemntv5tDuspng" target="_s2iDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ssOd4Ur4Eemntv5tDuspng" name="PME_checkDecesion2779">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ssOd4Er4Eemntv5tDuspng" name="PME_checkDecesion2779">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,&quot;Debug__A__Ac__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sr8KAEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2777" source="_spkygUr4Eemntv5tDuspng" target="_spmnsEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sr9_MEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__2776&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2773&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2775&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sr8KAUr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2778" guard="_ssPsAUr4Eemntv5tDuspng" source="_spmnsEr4Eemntv5tDuspng" target="_splZkkr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_ssPsAUr4Eemntv5tDuspng" name="PME_checkDecesion2780">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ssPsAEr4Eemntv5tDuspng" name="PME_checkDecesion2780">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2778&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s2eZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2fAMErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2p_UErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__107">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2gOUErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2gOUUrDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Server1Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2tCoErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure__108">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2iDgErDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2iDgUrDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Server1Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2wtAErDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure__109">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2j4sErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2j4sUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2zJQErDEem2BZRQc2M93A" name="Debug__A__En__Running__110">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_spmnsEr4Eemntv5tDuspng" name="DecesionPoint__2693" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_spnOwEr4Eemntv5tDuspng" name="Init__State__2694"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s3GEMErDEem2BZRQc2M93A" name="Debug__Path__ConfigNOK" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s31EAErDEem2BZRQc2M93A" name="Debug__Path__Init__ReadConfig__1" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s31rEUrDEem2BZRQc2M93A" name="Debug__C__Init__ReadConfig__1">
              <connectionPoint xmi:id="_s32SIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s33gQErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_siViEEr4Eemntv5tDuspng" name="From__Parent__2485" kind="entryPoint"/>
              <connectionPoint xmi:id="_siZMcEr4Eemntv5tDuspng" name="To__Parent__2487" kind="exitPoint"/>
              <region xmi:id="_s31rEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4LpUErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1" source="_s32SIUrDEem2BZRQc2M93A" target="_s4ImAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4ZEsErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1__158">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__init__trans__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s4MQYErDEem2BZRQc2M93A" name="Debug__Ac__Init__ReadConfig__1" source="_s4ImAErDEem2BZRQc2M93A" target="_s4J0IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4MQYkrDEem2BZRQc2M93A" name="ENVInit" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4MQYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4M3cErDEem2BZRQc2M93A" name="Debug__En__ReadConfig" source="_s4J0IErDEem2BZRQc2M93A" target="_s4LCQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4NegErDEem2BZRQc2M93A" name="ReadConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__En__ReadConfig&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4M3cUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4OFkErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1" source="_s4LCQErDEem2BZRQc2M93A" target="_s33gQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4d9MErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1__162">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__end__trans__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4OFkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_siujoEr4Eemntv5tDuspng" name="Trans__ex2491" source="_s33gQErDEem2BZRQc2M93A" target="_siesAEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_slYPAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__2554&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__2552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__2551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__2550&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_siwY0Er4Eemntv5tDuspng" name="Trans__Init__State__24902492" source="_simAwEr4Eemntv5tDuspng" target="_siesAEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_slT9kEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2490&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__2554&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2490&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__2552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2490&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__2551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2490&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__2550&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2490&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_si47sEr4Eemntv5tDuspng" name="From__Debug__B__Ac__Init__ReadConfig__1__2493" source="_s4ImAErDEem2BZRQc2M93A" target="_siesAEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sldukEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__2554&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__2552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__2551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__2550&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_si7_AEr4Eemntv5tDuspng" name="PME_Trig2494" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sjA3gEr4Eemntv5tDuspng" name="PME_Trig2495" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sjFI8Er4Eemntv5tDuspng" name="PME_Trig2496" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sjG-IEr4Eemntv5tDuspng" name="PME_Trig2497" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sjJaYEr4Eemntv5tDuspng" name="PME_Trig2498" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sjOS4Er4Eemntv5tDuspng" name="PME_Trig2499" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sjQIEEr4Eemntv5tDuspng" name="PME_Trig2500" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sjR9QEr4Eemntv5tDuspng" name="PME_Trig2501" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sjVnoEr4Eemntv5tDuspng" name="PME_Trig2502" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sjZ5EEr4Eemntv5tDuspng" name="PME_Trig2503" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sjbuQEr4Eemntv5tDuspng" name="PME_Trig2504" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sjexkEr4Eemntv5tDuspng" name="PME_Trig2505" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sjkRIEr4Eemntv5tDuspng" name="PME_Trig2506" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sjmtYEr4Eemntv5tDuspng" name="PME_Trig2507" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sjsM8Er4Eemntv5tDuspng" name="PME_Trig2508" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sjupMEr4Eemntv5tDuspng" name="PME_Trig2509" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sjweYEr4Eemntv5tDuspng" name="PME_Trig2510" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sj1W4Er4Eemntv5tDuspng" name="PME_Trig2511" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sj5BQEr4Eemntv5tDuspng" name="From__Debug__A__En__Init__ReadConfig__1__2512" source="_s4LCQErDEem2BZRQc2M93A" target="_siesAEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_slcgcEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__2554&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__2552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__2551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__2550&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sj62cEr4Eemntv5tDuspng" name="PME_Trig2513" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sj_H4Er4Eemntv5tDuspng" name="PME_Trig2514" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_skCyQEr4Eemntv5tDuspng" name="PME_Trig2515" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_skEncEr4Eemntv5tDuspng" name="PME_Trig2516" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_skLVIEr4Eemntv5tDuspng" name="PME_Trig2517" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_skMjQEr4Eemntv5tDuspng" name="PME_Trig2518" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_skO_gEr4Eemntv5tDuspng" name="PME_Trig2519" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_skTQ8Er4Eemntv5tDuspng" name="PME_Trig2520" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_skUfEEr4Eemntv5tDuspng" name="PME_Trig2521" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_skVtMEr4Eemntv5tDuspng" name="PME_Trig2522" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_skWUQEr4Eemntv5tDuspng" name="PME_Trig2523" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_skYwgEr4Eemntv5tDuspng" name="PME_Trig2524" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_skca4Er4Eemntv5tDuspng" name="PME_Trig2525" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ske3IEr4Eemntv5tDuspng" name="PME_Trig2526" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_skfeMEr4Eemntv5tDuspng" name="PME_Trig2527" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_skgsUEr4Eemntv5tDuspng" name="PME_Trig2528" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_skjIkEr4Eemntv5tDuspng" name="PME_Trig2529" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sknaAEr4Eemntv5tDuspng" name="PME_Trig2530" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_skooIEr4Eemntv5tDuspng" name="From__Debug__A__Ac__Init__ReadConfig__1__2531" source="_s4J0IErDEem2BZRQc2M93A" target="_siesAEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_slgx4Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__2554&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__2552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__2551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__2550&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_skpPMEr4Eemntv5tDuspng" name="PME_Trig2532" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_skqdUEr4Eemntv5tDuspng" name="PME_Trig2533" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_skrrcEr4Eemntv5tDuspng" name="PME_Trig2534" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_skuHsEr4Eemntv5tDuspng" name="PME_Trig2535" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_skzAMEr4Eemntv5tDuspng" name="PME_Trig2536" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_skznQEr4Eemntv5tDuspng" name="PME_Trig2537" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sk01YEr4Eemntv5tDuspng" name="PME_Trig2538" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sk2DgEr4Eemntv5tDuspng" name="PME_Trig2539" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sk5G0Er4Eemntv5tDuspng" name="PME_Trig2540" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sk8xMEr4Eemntv5tDuspng" name="PME_Trig2541" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sk9_UEr4Eemntv5tDuspng" name="PME_Trig2542" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sk_NcEr4Eemntv5tDuspng" name="PME_Trig2543" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_slBpsEr4Eemntv5tDuspng" name="PME_Trig2544" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_slFUEEr4Eemntv5tDuspng" name="PME_Trig2545" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_slHJQEr4Eemntv5tDuspng" name="PME_Trig2546" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_slHwUEr4Eemntv5tDuspng" name="PME_Trig2547" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_slI-cEr4Eemntv5tDuspng" name="PME_Trig2548" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_slKMkEr4Eemntv5tDuspng" name="PME_Trig2549" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_slQ6QEr4Eemntv5tDuspng" name="To__Debug__B__Ac__Init__ReadConfig__1__2550" guard="_sllqY0r4Eemntv5tDuspng" source="_siesAEr4Eemntv5tDuspng" target="_s4ImAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sllqY0r4Eemntv5tDuspng" name="PME_checkDecesion2558">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sllqYkr4Eemntv5tDuspng" name="PME_checkDecesion2558">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__ReadConfig__1__2550&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_slQ6QUr4Eemntv5tDuspng" name="To__Debug__A__En__Init__ReadConfig__1__2551" guard="_sllqYUr4Eemntv5tDuspng" source="_siesAEr4Eemntv5tDuspng" target="_s4LCQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sllqYUr4Eemntv5tDuspng" name="PME_checkDecesion2557">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sllqYEr4Eemntv5tDuspng" name="PME_checkDecesion2557">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Init__ReadConfig__1__2551&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_slQ6Qkr4Eemntv5tDuspng" name="To__Debug__A__Ac__Init__ReadConfig__1__2552" guard="_sllDUUr4Eemntv5tDuspng" source="_siesAEr4Eemntv5tDuspng" target="_s4J0IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sllDUUr4Eemntv5tDuspng" name="PME_checkDecesion2556">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sllDUEr4Eemntv5tDuspng" name="PME_checkDecesion2556">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__ReadConfig__1__2552&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_slSIYEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2553" source="_siViEEr4Eemntv5tDuspng" target="_siesAEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_slbSUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__2554&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__2552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__2551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__2550&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_slSIYUr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2554" guard="_slj1MUr4Eemntv5tDuspng" source="_siesAEr4Eemntv5tDuspng" target="_siZMcEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_slj1MUr4Eemntv5tDuspng" name="PME_checkDecesion2555">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_slj1MEr4Eemntv5tDuspng" name="PME_checkDecesion2555">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2554&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s4ImAErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4ImAUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4P6wUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1__154">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4J0IErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4J0IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4S-EErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1__155">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4LCQErDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4LCQUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4WocUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1__156">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_siesAEr4Eemntv5tDuspng" name="DecesionPoint__2489" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_simAwEr4Eemntv5tDuspng" name="Init__State__2490"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s4hAgErDEem2BZRQc2M93A" name="Debug__Path__RetryConfig" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s4iOoUrDEem2BZRQc2M93A" name="Debug__C__RetryConfig">
              <connectionPoint xmi:id="_s4jcwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s4kq4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_sayvoEr4Eemntv5tDuspng" name="From__Parent__2409" kind="entryPoint"/>
              <connectionPoint xmi:id="_sa42QEr4Eemntv5tDuspng" name="To__Parent__2411" kind="exitPoint"/>
              <region xmi:id="_s4iOokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4_hoErDEem2BZRQc2M93A" name="Debug__AC__RetryConfig" source="_s41woErDEem2BZRQc2M93A" target="_s46CEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5AIsErDEem2BZRQc2M93A" name="retry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: retrying configuation, The transtion Failure -> readConfig was taken \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__AC__RetryConfig&quot;,(char *)&quot;Debug__B__Ac__RetryConfig&quot;,(char *)&quot;Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4_hoUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5AvwErDEem2BZRQc2M93A" name="Debug__En__ReadConfig" source="_s46CEErDEem2BZRQc2M93A" target="_s49scErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5BW0ErDEem2BZRQc2M93A" name="ReadConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__En__ReadConfig&quot;,(char *)&quot;Debug__A__Ac__RetryConfig&quot;,(char *)&quot;Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5AvwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5BW0UrDEem2BZRQc2M93A" name="Debug__end__trans__RetryConfig" source="_s49scErDEem2BZRQc2M93A" target="_s4kq4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5TqsErDEem2BZRQc2M93A" name="Debug__end__trans__RetryConfig__187">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__end__trans__RetryConfig&quot;,(char *)&quot;Debug__A__En__ReadConfig&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5BW0krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_sbRQwEr4Eemntv5tDuspng" name="Trans__Init__State__24142415" source="_sbGRoEr4Eemntv5tDuspng" target="_sa9uwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_shP88Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2414&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__2477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2414&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2414&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2414&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__2479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2414&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sbSe4Er4Eemntv5tDuspng" name="Trans__en2416" source="_s4jcwErDEem2BZRQc2M93A" target="_sa9uwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sh8ggEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__2477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__2479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sbWJQEr4Eemntv5tDuspng" name="Trans__ex2417" source="_s4kq4UrDEem2BZRQc2M93A" target="_sa9uwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_shWqoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__2477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__2479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sbmn8Er4Eemntv5tDuspng" name="From__Debug__B__Ac__RetryConfig__2418" source="_s41woErDEem2BZRQc2M93A" target="_sa9uwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_shktEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__2477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__2479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sbq5YEr4Eemntv5tDuspng" name="PME_Trig2419" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sb0DUEr4Eemntv5tDuspng" name="PME_Trig2420" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sb7YEEr4Eemntv5tDuspng" name="PME_Trig2421" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_scA3oEr4Eemntv5tDuspng" name="PME_Trig2422" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_scKBkEr4Eemntv5tDuspng" name="PME_Trig2423" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_scTLgEr4Eemntv5tDuspng" name="PME_Trig2424" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_scc8gEr4Eemntv5tDuspng" name="PME_Trig2425" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_scf_0Er4Eemntv5tDuspng" name="PME_Trig2426" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sclfYEr4Eemntv5tDuspng" name="PME_Trig2427" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_scpJwEr4Eemntv5tDuspng" name="PME_Trig2428" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_scxFkEr4Eemntv5tDuspng" name="PME_Trig2429" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sc3MMEr4Eemntv5tDuspng" name="PME_Trig2430" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sc8rwEr4Eemntv5tDuspng" name="PME_Trig2431" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sdF1sEr4Eemntv5tDuspng" name="PME_Trig2432" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sdKHIEr4Eemntv5tDuspng" name="PME_Trig2433" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sdSC8Er4Eemntv5tDuspng" name="PME_Trig2434" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sdYwoEr4Eemntv5tDuspng" name="PME_Trig2435" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sdgFYEr4Eemntv5tDuspng" name="PME_Trig2436" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sdk94Er4Eemntv5tDuspng" name="From__Debug__A__Ac__RetryConfig__2437" source="_s46CEErDEem2BZRQc2M93A" target="_sa9uwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_shxhYEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__2477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__2479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sdoBMEr4Eemntv5tDuspng" name="PME_Trig2438" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sdtgwEr4Eemntv5tDuspng" name="PME_Trig2439" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sdzAUEr4Eemntv5tDuspng" name="PME_Trig2440" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sd5uAEr4Eemntv5tDuspng" name="PME_Trig2441" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sd-mgEr4Eemntv5tDuspng" name="PME_Trig2442" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_seC38Er4Eemntv5tDuspng" name="PME_Trig2443" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_seJloEr4Eemntv5tDuspng" name="PME_Trig2444" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_seQTUEr4Eemntv5tDuspng" name="PME_Trig2445" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_seZdQEr4Eemntv5tDuspng" name="PME_Trig2446" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_segyAEr4Eemntv5tDuspng" name="PME_Trig2447" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sem4oEr4Eemntv5tDuspng" name="PME_Trig2448" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_setmUEr4Eemntv5tDuspng" name="PME_Trig2449" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_se3XUEr4Eemntv5tDuspng" name="PME_Trig2450" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_se7BsEr4Eemntv5tDuspng" name="PME_Trig2451" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_se_6MEr4Eemntv5tDuspng" name="PME_Trig2452" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sfEysEr4Eemntv5tDuspng" name="PME_Trig2453" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sfJrMEr4Eemntv5tDuspng" name="PME_Trig2454" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sfPKwEr4Eemntv5tDuspng" name="PME_Trig2455" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sfUDQEr4Eemntv5tDuspng" name="From__Debug__A__En__ReadConfig__2456" source="_s49scErDEem2BZRQc2M93A" target="_sa9uwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_shcKMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__2477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__2479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sfYUsEr4Eemntv5tDuspng" name="PME_Trig2457" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sfdNMEr4Eemntv5tDuspng" name="PME_Trig2458" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sfheoEr4Eemntv5tDuspng" name="PME_Trig2459" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sfnlQEr4Eemntv5tDuspng" name="PME_Trig2460" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sftE0Er4Eemntv5tDuspng" name="PME_Trig2461" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sfzLcEr4Eemntv5tDuspng" name="PME_Trig2462" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sf7HQEr4Eemntv5tDuspng" name="PME_Trig2463" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sf-xoEr4Eemntv5tDuspng" name="PME_Trig2464" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sgDDEEr4Eemntv5tDuspng" name="PME_Trig2465" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sgHUgEr4Eemntv5tDuspng" name="PME_Trig2466" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sgM0EEr4Eemntv5tDuspng" name="PME_Trig2467" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sgRskEr4Eemntv5tDuspng" name="PME_Trig2468" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sgZBUEr4Eemntv5tDuspng" name="PME_Trig2469" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sgdSwEr4Eemntv5tDuspng" name="PME_Trig2470" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sgkAcEr4Eemntv5tDuspng" name="PME_Trig2471" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sgl1oEr4Eemntv5tDuspng" name="PME_Trig2472" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sgqHEEr4Eemntv5tDuspng" name="PME_Trig2473" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sgz4EEr4Eemntv5tDuspng" name="PME_Trig2474" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_shAFUEr4Eemntv5tDuspng" name="To__Debug__B__Ac__RetryConfig__2475" guard="_siJ74Ur4Eemntv5tDuspng" source="_sa9uwEr4Eemntv5tDuspng" target="_s41woErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_siJ74Ur4Eemntv5tDuspng" name="PME_checkDecesion2481">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_siJ74Er4Eemntv5tDuspng" name="PME_checkDecesion2481">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,&quot;Debug__B__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_shDIoEr4Eemntv5tDuspng" name="To__Debug__A__Ac__RetryConfig__2476" guard="_siLxEUr4Eemntv5tDuspng" source="_sa9uwEr4Eemntv5tDuspng" target="_s46CEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_siLxEUr4Eemntv5tDuspng" name="PME_checkDecesion2482">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_siLxEEr4Eemntv5tDuspng" name="PME_checkDecesion2482">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,&quot;Debug__A__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_shEWwEr4Eemntv5tDuspng" name="To__Debug__A__En__ReadConfig__2477" guard="_siJU0Ur4Eemntv5tDuspng" source="_sa9uwEr4Eemntv5tDuspng" target="_s49scErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_siJU0Ur4Eemntv5tDuspng" name="PME_checkDecesion2480">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_siJU0Er4Eemntv5tDuspng" name="PME_checkDecesion2480">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ReadConfig__2477&quot;,&quot;Debug__A__En__ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_shIBIEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2478" source="_sayvoEr4Eemntv5tDuspng" target="_sa9uwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_siHfoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__2477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__2476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__2479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_shJPQEr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2479" guard="_siO0YUr4Eemntv5tDuspng" source="_sa9uwEr4Eemntv5tDuspng" target="_sa42QEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_siO0YUr4Eemntv5tDuspng" name="PME_checkDecesion2483">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_siO0YEr4Eemntv5tDuspng" name="PME_checkDecesion2483">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2479&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s41woErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s41woUrDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5G2YErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig__177">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s46CEErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s46CEUrDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5J5sErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig__178">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s49scErDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s49scUrDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5Lu4ErDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig__179">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sa9uwEr4Eemntv5tDuspng" name="DecesionPoint__2413" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sbGRoEr4Eemntv5tDuspng" name="Init__State__2414"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s5YjMErDEem2BZRQc2M93A" name="Debug__Path__QueryConfig" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s5ZKQUrDEem2BZRQc2M93A" name="Debug__C__QueryConfig">
              <connectionPoint xmi:id="_s5a_cUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ssRhMUr4Eemntv5tDuspng" name="From__Parent__2785" kind="entryPoint"/>
              <connectionPoint xmi:id="_ssSvUEr4Eemntv5tDuspng" name="To__Parent__2787" kind="exitPoint"/>
              <region xmi:id="_s5ZKQkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s5vIgUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s5q3EErDEem2BZRQc2M93A" target="_s5sFMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5_nMErDEem2BZRQc2M93A" name="Debug__Ex__Running__208">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5vIgkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5vvkErDEem2BZRQc2M93A" name="Debug__AC__QueryConfig" source="_s5sFMErDEem2BZRQc2M93A" target="_s5ssQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5wWoErDEem2BZRQc2M93A" name="configReply" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The Config request replied at index&quot; &lt;&lt; msg->sapIndex0_&lt;&lt; &quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ConfigComm.ReplyConfig(systemConfig).sendAt(tempid);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__AC__QueryConfig&quot;,(char *)&quot;Debug__B__Ac__QueryConfig&quot;,(char *)&quot;Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5vvkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5wWoUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s5ssQErDEem2BZRQc2M93A" target="_s5t6YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5w9sErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__QueryConfig&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5wWokrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5w9sUrDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig" source="_s5t6YErDEem2BZRQc2M93A" target="_s5a_cUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6EfsErDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig__212">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__end__trans__QueryConfig&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5w9skrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ssXn0Er4Eemntv5tDuspng" name="Trans__ex2791" source="_s5a_cUrDEem2BZRQc2M93A" target="_ssTWYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_surU8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2870&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__2874&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ssY18Er4Eemntv5tDuspng" name="Trans__Init__State__27902792" source="_ssUkgEr4Eemntv5tDuspng" target="_ssTWYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sulOUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2790&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2790&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2870&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2790&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2790&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__2874&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2790&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2790&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ssb5QEr4Eemntv5tDuspng" name="From__Debug__A__En__Running__2793" source="_s5t6YErDEem2BZRQc2M93A" target="_ssTWYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_suu_UEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2870&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__2874&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sscgUEr4Eemntv5tDuspng" name="PME_Trig2794" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ssducEr4Eemntv5tDuspng" name="PME_Trig2795" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ssfjoEr4Eemntv5tDuspng" name="PME_Trig2796" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ssgxwEr4Eemntv5tDuspng" name="PME_Trig2797" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ssj1EEr4Eemntv5tDuspng" name="PME_Trig2798" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sslqQEr4Eemntv5tDuspng" name="PME_Trig2799" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ssm4YEr4Eemntv5tDuspng" name="PME_Trig2800" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ssoGgEr4Eemntv5tDuspng" name="PME_Trig2801" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ssqiwEr4Eemntv5tDuspng" name="PME_Trig2802" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sstmEEr4Eemntv5tDuspng" name="PME_Trig2803" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ssvbQEr4Eemntv5tDuspng" name="PME_Trig2804" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sswCUEr4Eemntv5tDuspng" name="PME_Trig2805" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ssxQcEr4Eemntv5tDuspng" name="PME_Trig2806" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ssyekEr4Eemntv5tDuspng" name="PME_Trig2807" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sszssEr4Eemntv5tDuspng" name="PME_Trig2808" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ss5MQEr4Eemntv5tDuspng" name="PME_Trig2809" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ss6aYEr4Eemntv5tDuspng" name="PME_Trig2810" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ss7ogEr4Eemntv5tDuspng" name="PME_Trig2811" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_ss82oEr4Eemntv5tDuspng" name="From__Debug__B__Ex__Running__2812" source="_s5q3EErDEem2BZRQc2M93A" target="_ssTWYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_suypsEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2870&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__2874&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ss_58Er4Eemntv5tDuspng" name="PME_Trig2813" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stDkUEr4Eemntv5tDuspng" name="PME_Trig2814" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stELYEr4Eemntv5tDuspng" name="PME_Trig2815" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stFZgEr4Eemntv5tDuspng" name="PME_Trig2816" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_stGAkEr4Eemntv5tDuspng" name="PME_Trig2817" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stIc0Er4Eemntv5tDuspng" name="PME_Trig2818" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_stK5EEr4Eemntv5tDuspng" name="PME_Trig2819" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stNVUEr4Eemntv5tDuspng" name="PME_Trig2820" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stN8YEr4Eemntv5tDuspng" name="PME_Trig2821" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stPKgEr4Eemntv5tDuspng" name="PME_Trig2822" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stQYoEr4Eemntv5tDuspng" name="PME_Trig2823" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_stSN0Er4Eemntv5tDuspng" name="PME_Trig2824" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_stVRIEr4Eemntv5tDuspng" name="PME_Trig2825" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stXtYEr4Eemntv5tDuspng" name="PME_Trig2826" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_stY7gEr4Eemntv5tDuspng" name="PME_Trig2827" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stZikEr4Eemntv5tDuspng" name="PME_Trig2828" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_stawsEr4Eemntv5tDuspng" name="PME_Trig2829" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stcl4Er4Eemntv5tDuspng" name="PME_Trig2830" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_stfCIEr4Eemntv5tDuspng" name="From__Debug__B__Ac__QueryConfig__2831" source="_s5sFMErDEem2BZRQc2M93A" target="_ssTWYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_susjEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2870&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__2874&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_stheYEr4Eemntv5tDuspng" name="PME_Trig2832" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stisgEr4Eemntv5tDuspng" name="PME_Trig2833" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stj6oEr4Eemntv5tDuspng" name="PME_Trig2834" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stkhsEr4Eemntv5tDuspng" name="PME_Trig2835" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_stmW4Er4Eemntv5tDuspng" name="PME_Trig2836" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stozIEr4Eemntv5tDuspng" name="PME_Trig2837" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_str2cEr4Eemntv5tDuspng" name="PME_Trig2838" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_stsdgEr4Eemntv5tDuspng" name="PME_Trig2839" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sttroEr4Eemntv5tDuspng" name="PME_Trig2840" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stu5wEr4Eemntv5tDuspng" name="PME_Trig2841" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_stvg0Er4Eemntv5tDuspng" name="PME_Trig2842" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_stykIEr4Eemntv5tDuspng" name="PME_Trig2843" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_st1ncEr4Eemntv5tDuspng" name="PME_Trig2844" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_st21kEr4Eemntv5tDuspng" name="PME_Trig2845" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_st3coEr4Eemntv5tDuspng" name="PME_Trig2846" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_st4qwEr4Eemntv5tDuspng" name="PME_Trig2847" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_st544Er4Eemntv5tDuspng" name="PME_Trig2848" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_st9jQEr4Eemntv5tDuspng" name="PME_Trig2849" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_suAmkEr4Eemntv5tDuspng" name="From__Debug__A__Ac__QueryConfig__2850" source="_s5ssQErDEem2BZRQc2M93A" target="_ssTWYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_supfwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2870&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__2874&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_suBNoEr4Eemntv5tDuspng" name="PME_Trig2851" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_suCbwEr4Eemntv5tDuspng" name="PME_Trig2852" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_suDC0Er4Eemntv5tDuspng" name="PME_Trig2853" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_suDp4Er4Eemntv5tDuspng" name="PME_Trig2854" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_suGGIEr4Eemntv5tDuspng" name="PME_Trig2855" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_suJwgEr4Eemntv5tDuspng" name="PME_Trig2856" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_suK-oEr4Eemntv5tDuspng" name="PME_Trig2857" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_suMMwEr4Eemntv5tDuspng" name="PME_Trig2858" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_suMz0Er4Eemntv5tDuspng" name="PME_Trig2859" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_suOB8Er4Eemntv5tDuspng" name="PME_Trig2860" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_suRFQEr4Eemntv5tDuspng" name="PME_Trig2861" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_suUIkEr4Eemntv5tDuspng" name="PME_Trig2862" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_suVWsEr4Eemntv5tDuspng" name="PME_Trig2863" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_suV9wEr4Eemntv5tDuspng" name="PME_Trig2864" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_suXL4Er4Eemntv5tDuspng" name="PME_Trig2865" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_suYaAEr4Eemntv5tDuspng" name="PME_Trig2866" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_suaPMEr4Eemntv5tDuspng" name="PME_Trig2867" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sudSgEr4Eemntv5tDuspng" name="PME_Trig2868" event="_pkZKQEr4Eemntv5tDuspng" port="_sWuH8Er4Eemntv5tDuspng"/>
                </transition>
                <transition xmi:id="_sufuwEr4Eemntv5tDuspng" name="To__Debug__A__En__Running__2869" guard="_suz30Ur4Eemntv5tDuspng" source="_ssTWYEr4Eemntv5tDuspng" target="_s5t6YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_suz30Ur4Eemntv5tDuspng" name="PME_checkDecesion2877">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_suz30Er4Eemntv5tDuspng" name="PME_checkDecesion2877">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__2869&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sugV0Er4Eemntv5tDuspng" name="To__Debug__B__Ex__Running__2870" guard="_suzQw0r4Eemntv5tDuspng" source="_ssTWYEr4Eemntv5tDuspng" target="_s5q3EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_suzQw0r4Eemntv5tDuspng" name="PME_checkDecesion2876">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_suzQwkr4Eemntv5tDuspng" name="PME_checkDecesion2876">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__2870&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sugV0Ur4Eemntv5tDuspng" name="To__Debug__B__Ac__QueryConfig__2871" guard="_suzQwUr4Eemntv5tDuspng" source="_ssTWYEr4Eemntv5tDuspng" target="_s5sFMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_suzQwUr4Eemntv5tDuspng" name="PME_checkDecesion2875">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_suzQwEr4Eemntv5tDuspng" name="PME_checkDecesion2875">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,&quot;Debug__B__Ac__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sugV0kr4Eemntv5tDuspng" name="To__Debug__A__Ac__QueryConfig__2872" guard="_su0e40r4Eemntv5tDuspng" source="_ssTWYEr4Eemntv5tDuspng" target="_s5ssQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_su0e40r4Eemntv5tDuspng" name="PME_checkDecesion2879">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_su0e4kr4Eemntv5tDuspng" name="PME_checkDecesion2879">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,&quot;Debug__A__Ac__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_suhj8Er4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2873" source="_ssRhMUr4Eemntv5tDuspng" target="_ssTWYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_suoRoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__2871&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2870&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__2874&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__2872&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_suhj8Ur4Eemntv5tDuspng" name="To__Parent__StateMachine1__2874" guard="_su0e4Ur4Eemntv5tDuspng" source="_ssTWYEr4Eemntv5tDuspng" target="_ssSvUEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_su0e4Ur4Eemntv5tDuspng" name="PME_checkDecesion2878">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_su0e4Er4Eemntv5tDuspng" name="PME_checkDecesion2878">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2874&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s5q3EErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5q3EUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5yy4ErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__201">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5sFMErDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5sFMUrDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;QueryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s52dQErDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig__202">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5ssQErDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5ssQUrDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;QueryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s55gkErDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig__203">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5t6YErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5t6YUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s57VwErDEem2BZRQc2M93A" name="Debug__A__En__Running__204">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ssTWYEr4Eemntv5tDuspng" name="DecesionPoint__2789" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ssUkgEr4Eemntv5tDuspng" name="Init__State__2790"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s6YowErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_sZCcIEr4Eemntv5tDuspng" name="DecesionPoint__2357" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_su-C8ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_su9b4ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>ConfigComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svWdcUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_svWdcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;AnnouncmentServerTimeout,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncmentServerTimeout!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncmentServerTimeout);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svdyMErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_svaH0ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;AnnouncmentServerTimeout&quot;==tempVarName){
    AnnouncmentServerTimeout=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sv86YErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_svrNkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sX-sMEr4Eemntv5tDuspng" name="loadHeap" specification="_sX-FIEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.AnnouncmentServerTimeout&quot;,this->AnnouncmentServerTimeout);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYFZ4Er4Eemntv5tDuspng" name="unLoadHeap" specification="_sYEy0Er4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.AnnouncmentServerTimeout&quot;,&amp;this->AnnouncmentServerTimeout);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYaKAUr4Eemntv5tDuspng" name="sendMessage" specification="_sYaKAEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;ReplyReplicationMode&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyReplicationMode( boost::any_cast&lt;int>(message.payload[&quot;RunningMode&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyServerRole( boost::any_cast&lt;int>(message.payload[&quot;ServerRole&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;Shutdown&quot;) {
   if(message.payload.size()==0){
    ConfigComm.Shutdown().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;StartUp&quot;) {
   if(message.payload.size()==1){
    ConfigComm.StartUp( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyConfig&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyConfig( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyMasterId&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyMasterId( boost::any_cast&lt;int>(message.payload[&quot;MasterId&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;BIT&quot;) {
   if(message.payload.size()==0){
    ConfigComm.BIT().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYdNUUr4Eemntv5tDuspng" name="sendInternalMessage" specification="_sYdNUEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY6gUUr4Eemntv5tDuspng" name="initForPMD" specification="_sY6gUEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ENV::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ENV::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;FailureTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;BITTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;GeneralTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer1&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer2&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;configTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_su9b4ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_su-C8ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svWdcErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_svWdcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svaH0ErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_svdyMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svb9AErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svckEErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svdLIErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_svrNkErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sv86YErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svrNkUrDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svwtIErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svzJYErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv1loErDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv2MsErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv4B4ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv5QAUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv53EErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv7sQErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv8TUErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sX-FIEr4Eemntv5tDuspng" name="loadHeap" visibility="private" method="_sX-sMEr4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_sYEy0Er4Eemntv5tDuspng" name="unLoadHeap" visibility="private" method="_sYFZ4Er4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_sYaKAEr4Eemntv5tDuspng" name="sendMessage" visibility="private" method="_sYaKAUr4Eemntv5tDuspng">
          <ownedParameter xmi:id="_sYaxEEr4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sYbYIEr4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sYdNUEr4Eemntv5tDuspng" name="sendInternalMessage" visibility="private" method="_sYdNUUr4Eemntv5tDuspng">
          <ownedParameter xmi:id="_sYd0YEr4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sYfpkEr4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sY6gUEr4Eemntv5tDuspng" name="initForPMD" visibility="private" method="_sY6gUUr4Eemntv5tDuspng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Y0NjUAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_nk_BAAgzEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_aaXBwAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_v000cAgsEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_fXXuUAxwEeaB2MeL96fedA" memberEnd="_fXb_wAxwEeaB2MeL96fedA _fXcm0AxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_fXaKkAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_fXaxoAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_fXcm0AxwEeaB2MeL96fedA" name="env" type="_sMZ5EAgoEea_md0mpENoqg" association="_fXXuUAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_z1vioAggEea_md0mpENoqg" name="Hosts">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_wVFC0AghEea_md0mpENoqg" client="_z1vioAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4_oYIAghEea_md0mpENoqg" name="Host" isActive="true">
        <ownedAttribute xmi:id="_qKL_IAgnEea_md0mpENoqg" name="hostInfo" type="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_wp2QEAltEea_md0mpENoqg" name="hostConfig" type="_Y1UDYAg6Eea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_MFku4Ao-EeaGqPUk-4V4qQ" name="TimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_yqPtMgxwEeaB2MeL96fedA" name="hostinfo" type="_JesyoAgiEea_md0mpENoqg" aggregation="composite" association="_yqOfEAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_z8hNYQxwEeaB2MeL96fedA" name="configuration" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_z8f_QAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_dCa_wPMYEeauO5SNGpOV7w" name="logfile"/>
        <ownedAttribute xmi:id="_nU84IPMbEeauO5SNGpOV7w" name="ts">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IWYV4G6NEeSyDdTKostG4Q"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_G0bAoPMlEeauO5SNGpOV7w" name="messageID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
          <defaultValue xmi:type="uml:LiteralReal" xmi:id="_G0bAofMlEeauO5SNGpOV7w"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_xCGHkAgmEea_md0mpENoqg" name="Server" classifierBehavior="_lT4V0AlLEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_6zESYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-3KD0AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xByucAlLEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xB_iwAlLEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pQ6HcAnMEeaGqPUk-4V4qQ" name="ServerComm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etWXMAnOEeaGqPUk-4V4qQ" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_euWcwAnOEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_HIvrsApCEeaGqPUk-4V4qQ" name="Master" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_ZDrx0ApDEeaGqPUk-4V4qQ" name="KeepAliveTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Vj1U4ApFEeaGqPUk-4V4qQ" name="MasterAnnounceTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6YR3oApGEeaGqPUk-4V4qQ" name="KeepAliveTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ceg-8ApHEeaGqPUk-4V4qQ" name="KeepAliveTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Ceg-8QpHEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_N795sApHEeaGqPUk-4V4qQ" name="AnnouncementTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_YVMXUApHEeaGqPUk-4V4qQ" name="AnnouncementTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_YVMXUQpHEeaGqPUk-4V4qQ" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_855RMAs1EeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rmnI0OM8EeaTpaLNj-zYpw" name="Slave" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sxfygErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxhAoUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sxhnsErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxz7kErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx0ioErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx1JsErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx2X0ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_qvj84Er4Eemntv5tDuspng" name="dbgPortForServer" visibility="protected" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qvj84Ur4Eemntv5tDuspng" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_qvkj8Er4Eemntv5tDuspng" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_lT4V0AlLEea_md0mpENoqg" name="ServerStateMachine">
          <region xmi:id="_lvCAwAlLEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_myR7kAlNEea_md0mpENoqg" name="Init__StandBy__3" source="_tC5EgErDEem2BZRQc2M93A" target="_jLPjcAlNEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vR0TsAlNEea_md0mpENoqg" name="InitLog">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Init__StandBy__3&quot;,(char *)&quot;Debug__Path__Init__StandBy__3&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_pku_oAlOEea_md0mpENoqg" name="Recover" source="_tAaYQErDEem2BZRQc2M93A" target="_Pyhf8Ap5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yH_CUAp7EeaGqPUk-4V4qQ" name="Recover">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: is recovering\n&quot;;
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Recover&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_kdt_gAlvEea_md0mpENoqg" name="BeSlave" source="_tFEOwErDEem2BZRQc2M93A" target="_88oQAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFaNAErDEem2BZRQc2M93A" name="BeSlave__571">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::BeSlave&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;Pseudo5&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_i_dO4Ap5EeaGqPUk-4V4qQ" name="ActiveMode" source="_s_-6cErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAX8AErDEem2BZRQc2M93A" name="ActiveMode__400">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ActiveMode&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_wPvR0Ap8EeaGqPUk-4V4qQ" name="PassiveMode" source="_tCc_oErDEem2BZRQc2M93A" target="_887yAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tC1aIErDEem2BZRQc2M93A" name="PassiveMode__482">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::PassiveMode&quot;,(char *)&quot;Debug__Path__PassiveMode&quot;,(char *)&quot;Pseudo2&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7mwwErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7nX0ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange__246">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s7mwwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7ol8ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7p0EErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint__247">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7pNAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7rCMErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7rCMkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint__248">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7rCMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7sQUErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7sQUkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints__249">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7sQUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7s3YErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7s3YkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode__250">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s7s3YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7tecErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7vToErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg__251">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7tecUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uskErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9UA8ErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9UoAErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange__295">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s9UA8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9VPEErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9VPEkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint__296">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9VPEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9V2IErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9WdMErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint__297">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9V2IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9YSYErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9YSYkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints__298">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9YSYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9Y5cErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ZggErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode__299">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s9Y5cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9ZggUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9auoUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg__300">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9aHkErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9auoErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-EO4ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-E18ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange__322">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s-EO4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-FdAErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-FdAkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint__323">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-FdAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-GrIErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-GrIkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint__324">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-GrIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-HSMErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-H5QErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints__325">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-HSMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-IgUErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-IgUkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode__326">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s-IgUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-JHYErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-KVgErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg__327">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-JHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JuckrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tACk0UrDEem2BZRQc2M93A" name="Debug__ActiveMode" guard="_OyNyIAp8EeaGqPUk-4V4qQ" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_s_-6cErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_OyNyIAp8EeaGqPUk-4V4qQ" name="checkConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyOZMAp8EeaGqPUk-4V4qQ" name="checkConfig">
                  <language>C++</language>
                  <body>    if (hostConfig.RunningMode==0)
    return true;
    else return false;
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tACk0krDEem2BZRQc2M93A" name="Debug__ActiveMode__388">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ActiveMode&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tADy8ErDEem2BZRQc2M93A" name="Debug__ActiveMode__S" guard="_tAFBEUrDEem2BZRQc2M93A" source="_s_-6cErDEem2BZRQc2M93A" target="_tAAvoUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tAFBEUrDEem2BZRQc2M93A" name="Debug__GuardActiveMode">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tAFBEErDEem2BZRQc2M93A" name="Debug__GuardActiveMode">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Choice1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAGPMErDEem2BZRQc2M93A" name="Debug__ActiveMode__S__390">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ActiveMode__S&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAJ5kErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAJ5kkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange__393">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAJ5kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAKgoErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tALHsUrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint__394">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tALHsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAMV0ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAMV0krDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint__395">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAMV0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAM84ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tANj8UrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints__396">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tANj8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOLAErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAOLAkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode__397">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAOLAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOyEErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAQnQErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg__398">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAPZIErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAPZIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAge4ErDEem2BZRQc2M93A" name="Debug__Recover__S" guard="_tAhF8UrDEem2BZRQc2M93A" source="_tAaYQErDEem2BZRQc2M93A" target="_tAbmYUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tAhF8UrDEem2BZRQc2M93A" name="Debug__GuardRecover">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tAhF8ErDEem2BZRQc2M93A" name="Debug__GuardRecover">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAhtAErDEem2BZRQc2M93A" name="Debug__Recover__S__404">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover__S&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAjiMErDEem2BZRQc2M93A" name="Debug__Recover__E" source="_tAc0gUrDEem2BZRQc2M93A" target="_Pyhf8Ap5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAkJQErDEem2BZRQc2M93A" name="Debug__Recover__E__405">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAlXYErDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAlXYkrDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange__407">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAlXYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAl-cErDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAl-ckrDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint__408">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAl-cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAmlgErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnMkErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint__409">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAmlgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAnzoErDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnzokrDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints__410">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAnzoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAoasErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAoaskrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode__411">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAoasUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tApBwErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAqP4UrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg__412">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tApBwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAqP4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBIxAUrDEem2BZRQc2M93A" name="Debug__BeingMaster" source="_kLngAAp5EeaGqPUk-4V4qQ" target="_tBD4gErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBJYEErDEem2BZRQc2M93A" name="Debug__BeingMaster__423">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeingMaster&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;Debug__Path__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tBOQkErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBO3oUrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange__428">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tBO3oErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBPesErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBPeskrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint__429">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBPesUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQFwErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBQFwkrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint__430">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQFwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQs0ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBRT4ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints__431">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQs0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBRT4UrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBR68ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode__432">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tBRT4krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBSiAErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBTwIErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg__433">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBSiAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCgqAUrDEem2BZRQc2M93A" name="Debug__PassiveMode" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_tCc_oErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tChREErDEem2BZRQc2M93A" name="Debug__PassiveMode__470">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__PassiveMode&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;Debug__Path__PassiveMode&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tC9V8UrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3" source="_tJHBQErDEem2BZRQc2M93A" target="_tC5EgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tC99AErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__484">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tJI2cErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tC_yMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S" guard="_tDAZQUrDEem2BZRQc2M93A" source="_tC5EgErDEem2BZRQc2M93A" target="_tC7gwErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tDAZQUrDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDAZQErDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDBAUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S__486">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Init__StandBy__3__S&quot;,(char *)&quot;Debug__Path__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tDCOcErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__E" source="_tC8u4UrDEem2BZRQc2M93A" target="_jLPjcAlNEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDCOcUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__E__487">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Init__StandBy__3__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tDEDoErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDEqsErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange__489">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tDEDoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDFRwErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDF40ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint__490">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDFRwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDGf4ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHG8ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint__491">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDGf4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDHuAErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHuAkrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints__492">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDHuAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDIVEErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDI8IUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode__493">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tDI8IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDJjMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDKxUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg__494">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDJjMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDJjMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEIaoErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEJBsUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange__526">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEJBsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEJowErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEKP0ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint__527">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEJowUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEKP0UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEK24ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint__528">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEKP0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEK24UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tELd8ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints__529">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEK24krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tELd8UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEMFAUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode__530">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tEMFAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEMsEErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEN6MErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg__531">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEMsEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tEMsEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEzJAErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEzwEUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange__550">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEzwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE0XIErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE0-MUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint__551">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE0-MErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE1lQErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2MUErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint__552">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE1lQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE2zYErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2zYkrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints__553">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE2zYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE3acErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE4BgUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode__554">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tE4BgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE4okErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE52sUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg__555">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE4okUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE52sErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFJHQUrDEem2BZRQc2M93A" name="Debug__BeSlave" source="_Rrrc0AlvEea_md0mpENoqg" target="_tFEOwErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFJHQkrDEem2BZRQc2M93A" name="Debug__BeSlave__559">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave&quot;,(char *)&quot;CheckConfig&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFKVYErDEem2BZRQc2M93A" name="Debug__BeSlave__S" guard="_tFK8cUrDEem2BZRQc2M93A" source="_tFEOwErDEem2BZRQc2M93A" target="_tFGrAErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tFK8cUrDEem2BZRQc2M93A" name="Debug__GuardBeSlave">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tFK8cErDEem2BZRQc2M93A" name="Debug__GuardBeSlave">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;CheckConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFLjgErDEem2BZRQc2M93A" name="Debug__BeSlave__S__561">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave__S&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFMxoErDEem2BZRQc2M93A" name="Debug__BeSlave__E" source="_tFIgMUrDEem2BZRQc2M93A" target="_88oQAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFMxoUrDEem2BZRQc2M93A" name="Debug__BeSlave__E__562">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Pseudo5&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFOm0ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFPN4ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange__564">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tFOm0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFP08ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFP08krDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint__565">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFP08UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFQcAErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRDEErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint__566">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFQcAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRDEUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRqIUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints__567">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFRqIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRqIkrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFSRMErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode__568">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tFRqI0rDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFSRMUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFS4Q0rDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg__569">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFSRMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGDtQErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGDtQkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange__592">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tGDtQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGE7YErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGE7YkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint__593">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGE7YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGFicErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGFickrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint__594">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGFicUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJgErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGJgkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints__595">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGGJgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJg0rDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGwkUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode__596">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tGGwkErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGHXoErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGIlwErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg__597">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGHXoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGHXokrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG3lkErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__E" source="_tGyGAkrDEem2BZRQc2M93A" target="_Rrrc0AlvEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG4MoErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__E__614">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__StandBy__CheckConfig__6__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;CheckConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tG6B0ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG6B0krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange__616">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tG6B0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG7P8ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG7P8krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint__617">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG7P8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG8eEErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG8eEkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint__618">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG8eEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9FIErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG9sMErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints__619">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG9FIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9sMUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG-TQErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode__620">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tG9sMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG-TQUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG_hYUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg__621">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG-6UErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG_hYErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHfQoErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHf3sUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange__637">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tHf3sErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhF0ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHhF0krDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint__638">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHhF0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhs4ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHiT8UrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint__639">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHiT8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHi7AErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHjiEErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints__640">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHi7AUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHjiEUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHkJIErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode__641">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tHjiEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHkwMErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHl-UUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg__642">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHkwMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHkwMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHlXQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHl-UErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_q1VNsEr4Eemntv5tDuspng" name="Trans__Init__State__793794" source="_q0uJsEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sQKM8Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__793&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__793&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q1VNsUr4Eemntv5tDuspng" name="Trans__Debug__Path__BeingMaster795" source="_tBD4gErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP9YoEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q1Wb0Er4Eemntv5tDuspng" name="Trans__Debug__Path__MasterAnnounce796" source="_tEAe0ErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sOjDYEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q1XC4Er4Eemntv5tDuspng" name="Trans__Debug__Path__ServerFaliure797" source="_s7c_wErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPEn0Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2PMoEr4Eemntv5tDuspng" name="798" source="_tC5EgErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sNCAcEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2RB0Er4Eemntv5tDuspng" name="799" source="_s_-6cErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sQEtYEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2SP8Er4Eemntv5tDuspng" name="800" source="_tFEOwErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sN1RsEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2S3AEr4Eemntv5tDuspng" name="801" source="_Rrrc0AlvEea_md0mpENoqg" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sMIBgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;CheckConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2UFIEr4Eemntv5tDuspng" name="802" source="_tBD4gErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPjwAEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2UsMEr4Eemntv5tDuspng" name="803" source="_tCc_oErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sNmBIEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2XvgEr4Eemntv5tDuspng" name="804" source="_tEAe0ErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPqdsEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2aLwEr4Eemntv5tDuspng" name="805" source="_tAaYQErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sO2lYEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2bZ4Er4Eemntv5tDuspng" name="806" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sOaggEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Choice1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2coAEr4Eemntv5tDuspng" name="807" source="_s7c_wErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sOtbcEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q2edMEr4Eemntv5tDuspng" name="From__StandBy__808" source="_jLPjcAlNEea_md0mpENoqg" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPznoEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_q2mZAEr4Eemntv5tDuspng" name="PME_Trig809" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q2nnIEr4Eemntv5tDuspng" name="PME_Trig810" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_q22QoEr4Eemntv5tDuspng" name="PME_Trig811" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q24F0Er4Eemntv5tDuspng" name="PME_Trig812" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_q28XQEr4Eemntv5tDuspng" name="PME_Trig813" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q3AosEr4Eemntv5tDuspng" name="PME_Trig814" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_q3DE8Er4Eemntv5tDuspng" name="PME_Trig815" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_q3H9cEr4Eemntv5tDuspng" name="PME_Trig816" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q3KZsEr4Eemntv5tDuspng" name="PME_Trig817" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_q3Ln0Er4Eemntv5tDuspng" name="PME_Trig818" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q3RHYEr4Eemntv5tDuspng" name="PME_Trig819" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_q3TjoEr4Eemntv5tDuspng" name="PME_Trig820" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
              <trigger xmi:id="_q3UxwEr4Eemntv5tDuspng" name="PME_Trig821" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q3VY0Er4Eemntv5tDuspng" name="PME_Trig822" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_q3a4YEr4Eemntv5tDuspng" name="PME_Trig823" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_q3d7sEr4Eemntv5tDuspng" name="PME_Trig824" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_q3fw4Er4Eemntv5tDuspng" name="PME_Trig825" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_q3mekEr4Eemntv5tDuspng" name="PME_Trig826" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_q3ph4Er4Eemntv5tDuspng" name="PME_Trig827" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q3tzUEr4Eemntv5tDuspng" name="PME_Trig828" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_q35ZgEr4Eemntv5tDuspng" name="PME_Trig829" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_q4BVUEr4Eemntv5tDuspng" name="From__Debug__InitState__830" source="_tJHBQErDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sNIHEEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_q4LGUEr4Eemntv5tDuspng" name="PME_Trig831" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q4MUcEr4Eemntv5tDuspng" name="PME_Trig832" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_q4RM8Er4Eemntv5tDuspng" name="PME_Trig833" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q4WsgEr4Eemntv5tDuspng" name="PME_Trig834" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_q4YhsEr4Eemntv5tDuspng" name="PME_Trig835" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q4daMEr4Eemntv5tDuspng" name="PME_Trig836" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_q4gdgEr4Eemntv5tDuspng" name="PME_Trig837" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_q4hroEr4Eemntv5tDuspng" name="PME_Trig838" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q4kH4Er4Eemntv5tDuspng" name="PME_Trig839" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_q4q1kEr4Eemntv5tDuspng" name="PME_Trig840" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q4sDsEr4Eemntv5tDuspng" name="PME_Trig841" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_q4vHAEr4Eemntv5tDuspng" name="PME_Trig842" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
              <trigger xmi:id="_q4wVIEr4Eemntv5tDuspng" name="PME_Trig843" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q444AEr4Eemntv5tDuspng" name="PME_Trig844" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_q49wgEr4Eemntv5tDuspng" name="PME_Trig845" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_q4--oEr4Eemntv5tDuspng" name="PME_Trig846" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_q4_lsEr4Eemntv5tDuspng" name="PME_Trig847" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_q5Ba4Er4Eemntv5tDuspng" name="PME_Trig848" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_q5D3IEr4Eemntv5tDuspng" name="PME_Trig849" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_q5EeMEr4Eemntv5tDuspng" name="PME_Trig850" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_q5FFQEr4Eemntv5tDuspng" name="PME_Trig851" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_q5MaAEr4Eemntv5tDuspng" name="To__StandBy__852" guard="_sQnf8kr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_jLPjcAlNEea_md0mpENoqg">
              <ownedRule xmi:id="_sQnf8kr4Eemntv5tDuspng" name="PME_checkDecesion2247">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQnf8Ur4Eemntv5tDuspng" name="PME_checkDecesion2247">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBy__852&quot;,&quot;StandBy&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_q5OPMEr4Eemntv5tDuspng" name="To__Debug__InitState__853" guard="_sQrKUUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_tJHBQErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_sQrKUUr4Eemntv5tDuspng" name="PME_checkDecesion2253">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQrKUEr4Eemntv5tDuspng" name="PME_checkDecesion2253">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__853&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_q5QEYEr4Eemntv5tDuspng" name="Trans__ex854" source="_tF7xcUrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sL_eoEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q5RSgUr4Eemntv5tDuspng" name="To__Substates__Debug__C__ServiceRequest__856" guard="_sQwp4Ur4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_q5QrcEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQwp4Ur4Eemntv5tDuspng" name="PME_checkDecesion2256">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQwp4Er4Eemntv5tDuspng" name="PME_checkDecesion2256">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_q5WyEUr4Eemntv5tDuspng" name="From__Substates__Debug__C__ServiceRequest__858" source="_q5TuwEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sMlUgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q9edEUr4Eemntv5tDuspng" name="To__Substates__Debug__C__ExitPoint1__BeMaster__4__959" guard="_sQsYcUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_q9dO8Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQsYcUr4Eemntv5tDuspng" name="PME_checkDecesion2254">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQsYcEr4Eemntv5tDuspng" name="PME_checkDecesion2254">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_q9g5UUr4Eemntv5tDuspng" name="From__Substates__Debug__C__ExitPoint1__BeMaster__4__961" source="_q9gSQEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPL8kEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q-tMIEr4Eemntv5tDuspng" name="Trans__ex992" source="_tGyGAkrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sQgyQEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_q-tzMUr4Eemntv5tDuspng" name="To__Substates__Debug__C__StandBy__CheckConfig__6__994" guard="_sQmR0Ur4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_q-tMIUr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQmR0Ur4Eemntv5tDuspng" name="PME_checkDecesion2244">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQmR0Er4Eemntv5tDuspng" name="PME_checkDecesion2244">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_q-vBUUr4Eemntv5tDuspng" name="From__Substates__Debug__C__StandBy__CheckConfig__6__996" source="_q-uaQEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sNQp8Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rBnWMEr4Eemntv5tDuspng" name="Trans__ex1051" source="_s99hMUrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sN7_YEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rBpycUr4Eemntv5tDuspng" name="To__Substates__Debug__C__initTimer__1053" guard="_sQnf8Er4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rBokUEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQnf8Er4Eemntv5tDuspng" name="PME_checkDecesion2246">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQm44kr4Eemntv5tDuspng" name="PME_checkDecesion2246">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__initTimer__1053&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rBtc0Er4Eemntv5tDuspng" name="From__Substates__Debug__C__initTimer__1055" source="_rBrAkEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPeQcEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rDaF8Er4Eemntv5tDuspng" name="Trans__ex1087" source="_tAc0gUrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sL3i0Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rDb7IEr4Eemntv5tDuspng" name="To__Substates__Debug__C__Recover__1089" guard="_sQpVIUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rDaF8Ur4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQpVIUr4Eemntv5tDuspng" name="PME_checkDecesion2251">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQpVIEr4Eemntv5tDuspng" name="PME_checkDecesion2251">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Recover__1089&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rDgMkUr4Eemntv5tDuspng" name="From__Substates__Debug__C__Recover__1091" source="_rDe-cEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sQSIwEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rGcL0Er4Eemntv5tDuspng" name="Trans__ex1146" source="_s7e08UrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sNWJgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rGf2MUr4Eemntv5tDuspng" name="To__Substates__Debug__C__ServerFaliure__1148" guard="_sQx4AUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rGfPIEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQx4AUr4Eemntv5tDuspng" name="PME_checkDecesion2258">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQx4AEr4Eemntv5tDuspng" name="PME_checkDecesion2258">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rGhrYUr4Eemntv5tDuspng" name="From__Substates__Debug__C__ServerFaliure__1150" source="_rGhEUEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sMNhEEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rJdqoUr4Eemntv5tDuspng" name="To__Substates__Debug__C__KeepAlive__1206" guard="_sQxQ8Ur4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rJdDkEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQxQ8Ur4Eemntv5tDuspng" name="PME_checkDecesion2257">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQxQ8Er4Eemntv5tDuspng" name="PME_checkDecesion2257">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rJff0Er4Eemntv5tDuspng" name="From__Substates__Debug__C__KeepAlive__1208" source="_rJeRsEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sNvLEEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rNYhUEr4Eemntv5tDuspng" name="Trans__ex1285" source="_tC8u4UrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sOVA8Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rNaWgUr4Eemntv5tDuspng" name="To__Substates__Debug__C__Init__StandBy__3__1287" guard="_sQlDsEr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rNZvcEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQlDsEr4Eemntv5tDuspng" name="PME_checkDecesion2243">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQkcoEr4Eemntv5tDuspng" name="PME_checkDecesion2243">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rNa9kkr4Eemntv5tDuspng" name="From__Substates__Debug__C__Init__StandBy__3__1289" source="_rNa9kEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPVGgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rPpyMEr4Eemntv5tDuspng" name="Trans__ex1344" source="_tEC7EUrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sNdeQEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rPrAUUr4Eemntv5tDuspng" name="To__Substates__Debug__C__MasterAnnounce__1346" guard="_sQoHAUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rPqZQEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQoHAUr4Eemntv5tDuspng" name="PME_checkDecesion2248">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQoHAEr4Eemntv5tDuspng" name="PME_checkDecesion2248">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rPvRwEr4Eemntv5tDuspng" name="From__Substates__Debug__C__MasterAnnounce__1348" source="_rPs1gEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sM750Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rWgoIEr4Eemntv5tDuspng" name="To__Substates__Debug__C__purgeotherMessage__1449" guard="_sQp8MUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rWdk0Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQp8MUr4Eemntv5tDuspng" name="PME_checkDecesion2252">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQp8MEr4Eemntv5tDuspng" name="PME_checkDecesion2252">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rWmHsEr4Eemntv5tDuspng" name="From__Substates__Debug__C__purgeotherMessage__1451" source="_rWjrcEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sOEiQEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rf4mkEr4Eemntv5tDuspng" name="Trans__ex1529" source="_tBIJ8UrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sQaroEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rf-tMUr4Eemntv5tDuspng" name="To__Substates__Debug__C__BeingMaster__1531" guard="_sQouEUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rf7C0Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQouEUr4Eemntv5tDuspng" name="PME_checkDecesion2249">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQouEEr4Eemntv5tDuspng" name="PME_checkDecesion2249">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rgBwgEr4Eemntv5tDuspng" name="From__Substates__Debug__C__BeingMaster__1533" source="_rgAiYEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sO_IQEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rkeLoEr4Eemntv5tDuspng" name="Trans__ex1610" source="_tFIgMUrDEem2BZRQc2M93A" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sONsMEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_rkeysUr4Eemntv5tDuspng" name="To__Substates__Debug__C__BeSlave__1612" guard="_sQm44Ur4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_rkeLoUr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQm44Ur4Eemntv5tDuspng" name="PME_checkDecesion2245">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQm44Er4Eemntv5tDuspng" name="PME_checkDecesion2245">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeSlave__1612&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rkjrMUr4Eemntv5tDuspng" name="From__Substates__Debug__C__BeSlave__1614" source="_rkh2AEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sMU10Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_roSUoEr4Eemntv5tDuspng" name="Trans__ExitPoint11668" source="_M8iZcONCEeaTpaLNj-zYpw" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sMsCMEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_roX0MUr4Eemntv5tDuspng" name="To__Substates__Backup__1670" guard="_sQouE0r4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_roUw4Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQouE0r4Eemntv5tDuspng" name="PME_checkDecesion2250">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQouEkr4Eemntv5tDuspng" name="PME_checkDecesion2250">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Backup__1670&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_rokBcUr4Eemntv5tDuspng" name="From__Substates__Backup__1672" source="_roeh4Er4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sMd_wEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sKzy4Er4Eemntv5tDuspng" name="To__Substates__Debug__C__ActiveMode__2209" guard="_sQuNoUr4Eemntv5tDuspng" source="_q0rGYEr4Eemntv5tDuspng" target="_sKykwEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sQuNoUr4Eemntv5tDuspng" name="PME_checkDecesion2255">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sQuNoEr4Eemntv5tDuspng" name="PME_checkDecesion2255">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sK3dQEr4Eemntv5tDuspng" name="From__Substates__Debug__C__ActiveMode__2211" source="_sK1BAEr4Eemntv5tDuspng" target="_q0rGYEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sMz-AEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__994&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1053&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__852&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1670&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1089&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1449&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__959&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__2209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__856&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__1148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:State" xmi:id="_jLPjcAlNEea_md0mpENoqg" name="StandBy">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0ErDEem2BZRQc2M93A" name="StandBy__679">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0UrDEem2BZRQc2M93A" name="StandBy__680">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Rrrc0AlvEea_md0mpENoqg" name="CheckConfig" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Pyhf8Ap5EeaGqPUk-4V4qQ" name="Choice1" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_kLngAAp5EeaGqPUk-4V4qQ" name="BeMaster" kind="junction"/>
            <subvertex xmi:type="uml:State" xmi:id="_2g5S0ONBEeaTpaLNj-zYpw" name="Backup">
              <connectionPoint xmi:id="_M8iZcONCEeaTpaLNj-zYpw" name="ExitPoint1" kind="exitPoint"/>
              <connectionPoint xmi:id="_88oQAKozEeiNHY6qjNhZ4w" name="Pseudo5" kind="entryPoint"/>
              <connectionPoint xmi:id="_887yAKozEeiNHY6qjNhZ4w" name="Pseudo2" kind="entryPoint"/>
              <connectionPoint xmi:id="_roUw4Er4Eemntv5tDuspng" name="From__Parent__1669" kind="entryPoint"/>
              <connectionPoint xmi:id="_roeh4Er4Eemntv5tDuspng" name="To__Parent__1671" kind="exitPoint"/>
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJjtMErDEem2BZRQc2M93A" name="Backup__681">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJkUQErDEem2BZRQc2M93A" name="Backup__682">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
              <region xmi:id="_ThAzEONCEeaTpaLNj-zYpw" name="Region1">
                <transition xmi:id="_LmVmEONDEeaTpaLNj-zYpw" name="NokeepAlive" source="_s-oPkErDEem2BZRQc2M93A" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_LmWNIONDEeaTpaLNj-zYpw" name="CancellTimer">
                    <language>C++</language>
                    <body>    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No keep Alive message from Master, Try to be Master-------\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(2,0),4);
    ConfigComm.QueryConfig().send();
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to be Master\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::NokeepAlive&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_R_7lYONDEeaTpaLNj-zYpw" name="BackToSlave" source="_s8TUUErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_R_7lYeNDEeaTpaLNj-zYpw" name="MasterRecovered">
                    <language>C++</language>
                    <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: The Master recovered itself, backing to slave mode\n&quot;;
    //if (TimerId.isValid())
    //	Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::BackToSlave&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_dg_NwONDEeaTpaLNj-zYpw" name="backtoslave1" source="_tDikwErDEem2BZRQc2M93A" target="_5yefMAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD9bgErDEem2BZRQc2M93A" name="backtoslave1__519">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::backtoslave1&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;Slave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_mHBPcONDEeaTpaLNj-zYpw" name="KeepAliveMsg" source="_tBq8gErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mHBPceNDEeaTpaLNj-zYpw" name="ProcessKeppAlive">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Keep Alive Message from &quot;&lt;&lt; ServerName&lt;&lt;&quot;\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    //KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::KeepAliveMsg&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_-mdZ0ONDEeaTpaLNj-zYpw" name="Initial1__RunAsSlave__7" source="_tIHiwErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIv04ErDEem2BZRQc2M93A" name="Initial1__RunAsSlave__7__678">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s68pcErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s69QgUrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange__223">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s69QgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s693kErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s693kkrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint__224">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s693kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6-eoErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6_FsErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint__225">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6-eoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6_swErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7AT0ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints__226">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6_swUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7A64ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7Bh8ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode__227">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s7A64UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7Bh8UrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7DXIErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg__228">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s7CJAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CJAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8W-sUrDEem2BZRQc2M93A" name="Debug__BackToSlave" guard="_sKWf4Ur4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_s8TUUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sKWf4Ur4Eemntv5tDuspng" name="PME_checkDecesion2197">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKWf4Er4Eemntv5tDuspng" name="PME_checkDecesion2197">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;Debug__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8XlwErDEem2BZRQc2M93A" name="Debug__BackToSlave__265">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_R_7lYuNDEeaTpaLNj-zYpw" name="BackToSlave" event="_xM6tkApBEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_s8Yz4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__S" guard="_s8Za8UrDEem2BZRQc2M93A" source="_s8TUUErDEem2BZRQc2M93A" target="_s8VwkUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s8Za8UrDEem2BZRQc2M93A" name="Debug__GuardBackToSlave">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s8Za8ErDEem2BZRQc2M93A" name="Debug__GuardBackToSlave">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8aCAErDEem2BZRQc2M93A" name="Debug__BackToSlave__S__267">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave__S&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s8ceQErDEem2BZRQc2M93A" name="Debug__BackToSlave__E" source="_s8WXoUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8ceQUrDEem2BZRQc2M93A" name="Debug__BackToSlave__E__268">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s8dsYErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8eTcErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange__270">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s8dsYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8eTcUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8e6gUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint__271">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8e6gErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8fhkErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gIoErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint__272">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8fhkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8gvsErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gvskrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints__273">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8gvsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8hWwErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8h90ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode__274">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s8hWwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8ik4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8jzAErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg__275">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8ik4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik40rDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8jL8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-r58UrDEem2BZRQc2M93A" name="Debug__NokeepAlive" source="_ZaK1gAlOEea_md0mpENoqg" target="_s-oPkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-shAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__339">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_LmWNIeNDEeaTpaLNj-zYpw" name="KeepAliveTimer" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-vkUErDEem2BZRQc2M93A" name="Debug__NokeepAlive__E" source="_s-rS4UrDEem2BZRQc2M93A" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-vkUUrDEem2BZRQc2M93A" name="Debug__NokeepAlive__E__342">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-xZgErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-yAkErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange__344">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s-xZgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-ynoErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-ynokrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint__345">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-ynoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-zOsErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-zOskrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint__346">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-zOsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-z1wErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-0c0ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints__347">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-z1wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-0c0UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-1D4ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode__348">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s-0c0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-1D4UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-2SAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg__349">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-1D4krDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8krDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_gZUErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hAYErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange__369">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s_gZUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_hncErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hnckrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint__370">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_hncUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_i1kErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_kDsErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint__371">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_i1kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_kqwErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_lR0ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints__372">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_kqwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_l44ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_mf8ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode__373">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s_l44UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_mf8UrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_nuEkrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg__374">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_nHAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nHAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBtYw0rDEem2BZRQc2M93A" name="Debug__KeepAliveMsg" source="_ZaK1gAlOEea_md0mpENoqg" target="_tBq8gErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBt_0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__445">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_mHBPcuNDEeaTpaLNj-zYpw" name="IAmlive" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                </transition>
                <transition xmi:id="_tBvN8ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S" guard="_tBv1AUrDEem2BZRQc2M93A" source="_tBq8gErDEem2BZRQc2M93A" target="_tBsxsUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tBv1AUrDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tBv1AErDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBxDIErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S__447">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__S&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tByRQErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E" source="_tBtYwUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBy4UErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E__448">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tB0GcErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB0GckrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange__450">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tB0GcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB0tgErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB1UkErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint__451">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB0tgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB17oErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB17okrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint__452">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB17oUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB2isErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB2iskrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints__453">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB2isUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB3JwErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB3w0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode__454">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tB3JwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB4X4ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB5mAErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg__455">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB4X4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4X4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDorYErDEem2BZRQc2M93A" name="Debug__backtoslave1__S" guard="_tDpScUrDEem2BZRQc2M93A" source="_tDikwErDEem2BZRQc2M93A" target="_tDlBAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tDpScUrDEem2BZRQc2M93A" name="Debug__Guardbacktoslave1">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDpScErDEem2BZRQc2M93A" name="Debug__Guardbacktoslave1">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Choice2&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDp5gErDEem2BZRQc2M93A" name="Debug__backtoslave1__S__509">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1__S&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDsVwErDEem2BZRQc2M93A" name="Debug__backtoslave1__E" source="_tDloEUrDEem2BZRQc2M93A" target="_5yefMAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDs80ErDEem2BZRQc2M93A" name="Debug__backtoslave1__E__510">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Slave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDuyAErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDuyAkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange__512">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tDuyAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDvZEErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDwAIUrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint__513">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwAIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDwnMErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDxOQErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint__514">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwnMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDx1UErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDx1UkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints__515">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDx1UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDycYErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDycYkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode__516">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tDycYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDzDcErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD04oErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg__517">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDzqgErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tDzqgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFj-AErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E" source="_tFfFgUrDEem2BZRQc2M93A" target="_M8iZcONCEeaTpaLNj-zYpw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFklEErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E__576">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFmaQErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFnBUUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange__578">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tFnBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFnoYErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFoPcErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint__579">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFnoYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFo2gErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFpdkErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint__580">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFo2gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqEoErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFqrsErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints__581">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFqEoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqrsUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFrSwErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode__582">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tFqrskrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFrSwUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFsg4ErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg__583">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFr50ErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50UrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50krDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr500rDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tILNIUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7" source="_8WMAUONDEeaTpaLNj-zYpw" target="_tIHiwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIL0MErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__656">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7&quot;,(char *)&quot;Initial1&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIO3gErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E" source="_tIKmEUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIO3gUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E__659">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIQFoErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIQssUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange__661">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tIQssErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIRTwErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIR60UrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint__662">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIR60ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tITI8ErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tITwAUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint__663">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tITwAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIUXEErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIU-IUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints__664">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIU-IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIU-IkrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIVlMUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode__665">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tIVlMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIWMQErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIYBcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg__666">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIWzUErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIWzUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rpWroEr4Eemntv5tDuspng" name="Trans__ExitPoint11674" source="_M8iZcONCEeaTpaLNj-zYpw" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sHFJcEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rpXSsEr4Eemntv5tDuspng" name="Trans__Pseudo51675" source="_88oQAKozEeiNHY6qjNhZ4w" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sIZYEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rpX5wEr4Eemntv5tDuspng" name="Trans__Slave1676" source="_5yefMAszEeaGqPUk-4V4qQ" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKRAUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Slave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rpZu8Er4Eemntv5tDuspng" name="Trans__Pseudo21677" source="_887yAKozEeiNHY6qjNhZ4w" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sFz-IEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rqOOUEr4Eemntv5tDuspng" name="1678" source="_s8TUUErDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJK0IEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rqO1YEr4Eemntv5tDuspng" name="1679" source="_tBq8gErDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sINx4Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rqPccEr4Eemntv5tDuspng" name="1680" source="_s-oPkErDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sGi98Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rqQqkEr4Eemntv5tDuspng" name="1681" source="_tDikwErDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sHs0gEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rqSfwEr4Eemntv5tDuspng" name="1682" source="_tIHiwErDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sH4asEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rqXYQEr4Eemntv5tDuspng" name="From__TryBeMaster__1683" source="_Px2BIAqSEeaGqPUk-4V4qQ" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sHTy8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rqc30Er4Eemntv5tDuspng" name="PME_Trig1684" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rqf7IEr4Eemntv5tDuspng" name="PME_Trig1685" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rqlasEr4Eemntv5tDuspng" name="PME_Trig1686" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rqpFEEr4Eemntv5tDuspng" name="PME_Trig1687" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rqt9kEr4Eemntv5tDuspng" name="PME_Trig1688" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rqyPAEr4Eemntv5tDuspng" name="PME_Trig1689" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rq1SUEr4Eemntv5tDuspng" name="PME_Trig1690" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rq48sEr4Eemntv5tDuspng" name="PME_Trig1691" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rq_DUEr4Eemntv5tDuspng" name="PME_Trig1692" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rrFxAEr4Eemntv5tDuspng" name="PME_Trig1693" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rrJbYEr4Eemntv5tDuspng" name="PME_Trig1694" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rrNFwEr4Eemntv5tDuspng" name="PME_Trig1695" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rrUagEr4Eemntv5tDuspng" name="PME_Trig1696" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rrkSIEr4Eemntv5tDuspng" name="PME_Trig1697" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rrtcEEr4Eemntv5tDuspng" name="PME_Trig1698" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rry7oEr4Eemntv5tDuspng" name="PME_Trig1699" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rr5CQEr4Eemntv5tDuspng" name="PME_Trig1700" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rr96wEr4Eemntv5tDuspng" name="PME_Trig1701" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rsDaUEr4Eemntv5tDuspng" name="PME_Trig1702" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rsOZcEr4Eemntv5tDuspng" name="PME_Trig1703" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rsT5AEr4Eemntv5tDuspng" name="PME_Trig1704" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rsbNwEr4Eemntv5tDuspng" name="From__RunAsSlave__1705" source="_ZaK1gAlOEea_md0mpENoqg" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKGoQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rsh7cEr4Eemntv5tDuspng" name="PME_Trig1706" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rsk-wEr4Eemntv5tDuspng" name="PME_Trig1707" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rsmz8Er4Eemntv5tDuspng" name="PME_Trig1708" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rssTgEr4Eemntv5tDuspng" name="PME_Trig1709" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rsv94Er4Eemntv5tDuspng" name="PME_Trig1710" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rs2rkEr4Eemntv5tDuspng" name="PME_Trig1711" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rs69AEr4Eemntv5tDuspng" name="PME_Trig1712" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rs_1gEr4Eemntv5tDuspng" name="PME_Trig1713" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rtC40Er4Eemntv5tDuspng" name="PME_Trig1714" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rtEuAEr4Eemntv5tDuspng" name="PME_Trig1715" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rtNQ4Er4Eemntv5tDuspng" name="PME_Trig1716" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rtVzwEr4Eemntv5tDuspng" name="PME_Trig1717" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rtchcEr4Eemntv5tDuspng" name="PME_Trig1718" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rtgy4Er4Eemntv5tDuspng" name="PME_Trig1719" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rtioEEr4Eemntv5tDuspng" name="PME_Trig1720" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rtngkEr4Eemntv5tDuspng" name="PME_Trig1721" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rtp80Er4Eemntv5tDuspng" name="PME_Trig1722" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rtyfsEr4Eemntv5tDuspng" name="PME_Trig1723" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rt0U4Er4Eemntv5tDuspng" name="PME_Trig1724" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rt9e0Er4Eemntv5tDuspng" name="To__TryBeMaster__1725" guard="_sKu6YUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <ownedRule xmi:id="_sKu6YUr4Eemntv5tDuspng" name="PME_checkDecesion2202">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKu6YEr4Eemntv5tDuspng" name="PME_checkDecesion2202">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__TryBeMaster__1725&quot;,&quot;TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rt9e0Ur4Eemntv5tDuspng" name="To__RunAsSlave__1726" guard="_sKtFMUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_ZaK1gAlOEea_md0mpENoqg">
                  <ownedRule xmi:id="_sKtFMUr4Eemntv5tDuspng" name="PME_checkDecesion2199">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKtFMEr4Eemntv5tDuspng" name="PME_checkDecesion2199">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__RunAsSlave__1726&quot;,&quot;RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ruBwQUr4Eemntv5tDuspng" name="To__Substates__Debug__C__ReplyConfig__1728" guard="_sKx9sUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_ruAiIEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKx9sUr4Eemntv5tDuspng" name="PME_checkDecesion2207">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKx9sEr4Eemntv5tDuspng" name="PME_checkDecesion2207">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ruGBsUr4Eemntv5tDuspng" name="From__Substates__Debug__C__ReplyConfig__1730" source="_ruC-YEr4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sGJ8YEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rwAtQEr4Eemntv5tDuspng" name="Trans__ex1762" source="_tDloEUrDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJgLUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rwAtQ0r4Eemntv5tDuspng" name="To__Substates__Debug__C__backtoslave1__1764" guard="_sKwIgUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_rwAtQUr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKwIgUr4Eemntv5tDuspng" name="PME_checkDecesion2205">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKwIgEr4Eemntv5tDuspng" name="PME_checkDecesion2205">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rwBUUkr4Eemntv5tDuspng" name="From__Substates__Debug__C__backtoslave1__1766" source="_rwBUUEr4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ7pIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rxnPwEr4Eemntv5tDuspng" name="Trans__ex1798" source="_tFfFgUrDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sI_1AEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rxod4Ur4Eemntv5tDuspng" name="To__Substates__Debug__C__CheckNoMaster__1800" guard="_sKu6Y0r4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_rxn20Er4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKu6Y0r4Eemntv5tDuspng" name="PME_checkDecesion2203">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKu6Ykr4Eemntv5tDuspng" name="PME_checkDecesion2203">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rxq6IUr4Eemntv5tDuspng" name="From__Substates__Debug__C__CheckNoMaster__1802" source="_rxpE8Er4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sIpPsEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rzbNoEr4Eemntv5tDuspng" name="Trans__ex1834" source="_s8WXoUrDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJVMMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rzhUQEr4Eemntv5tDuspng" name="To__Substates__Debug__C__BackToSlave__1836" guard="_sKtsQUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_rzb0sEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKtsQUr4Eemntv5tDuspng" name="PME_checkDecesion2200">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKtsQEr4Eemntv5tDuspng" name="PME_checkDecesion2200">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rzjwgEr4Eemntv5tDuspng" name="From__Substates__Debug__C__BackToSlave__1838" source="_rzh7UEr4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sIDZ0Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_r1Jr8Er4Eemntv5tDuspng" name="Trans__ex1870" source="_s-rS4UrDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sF-9QEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_r1LhIEr4Eemntv5tDuspng" name="To__Substates__Debug__C__NokeepAlive__1872" guard="_sKvhcUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_r1KTAEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKvhcUr4Eemntv5tDuspng" name="PME_checkDecesion2204">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKvhcEr4Eemntv5tDuspng" name="PME_checkDecesion2204">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_r1NWUEr4Eemntv5tDuspng" name="From__Substates__Debug__C__NokeepAlive__1874" source="_r1MIMEr4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sHh1YEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_r5FwwEr4Eemntv5tDuspng" name="Trans__ex1952" source="_tIKmEUrDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sGwZUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_r5G-4Er4Eemntv5tDuspng" name="To__Substates__Debug__C__Initial1__RunAsSlave__7__1954" guard="_sKZjMUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_r5GX0Er4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKZjMUr4Eemntv5tDuspng" name="PME_checkDecesion2198">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKZjMEr4Eemntv5tDuspng" name="PME_checkDecesion2198">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_r5I0EUr4Eemntv5tDuspng" name="From__Substates__Debug__C__Initial1__RunAsSlave__7__1956" source="_r5G-4Ur4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sI1c8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_r9fvoEr4Eemntv5tDuspng" name="To__Substates__Debug__C__backtoslave__2034" guard="_sKUqsUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_r9cFQEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKUqsUr4Eemntv5tDuspng" name="PME_checkDecesion2196">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKUqsEr4Eemntv5tDuspng" name="PME_checkDecesion2196">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave__2034&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_r9iL4Er4Eemntv5tDuspng" name="From__Substates__Debug__C__backtoslave__2036" source="_r9g9wEr4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sHNsUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sAGXsEr4Eemntv5tDuspng" name="Trans__ex2090" source="_tBtYwUrDEem2BZRQc2M93A" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sGWJoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sAIz8Er4Eemntv5tDuspng" name="To__Substates__Debug__C__KeepAliveMsg__2092" guard="_sKwvkUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_sAHl0Er4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKwvkUr4Eemntv5tDuspng" name="PME_checkDecesion2206">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKwvkEr4Eemntv5tDuspng" name="PME_checkDecesion2206">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sAL3QEr4Eemntv5tDuspng" name="From__Substates__Debug__C__KeepAliveMsg__2094" source="_sAIz8Ur4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJtmsEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sFi4YEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__2194" source="_roUw4Er4Eemntv5tDuspng" target="_ronEwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sG7YcEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2034&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1954&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1726&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1836&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2195&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1725&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1800&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1872&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1764&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1728&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sFjfcEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__2195" guard="_sKuTUUr4Eemntv5tDuspng" source="_ronEwEr4Eemntv5tDuspng" target="_roeh4Er4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sKuTUUr4Eemntv5tDuspng" name="PME_checkDecesion2201">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKuTUEr4Eemntv5tDuspng" name="PME_checkDecesion2201">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2195&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_Px2BIAqSEeaGqPUk-4V4qQ" name="TryBeMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_6FKVcAqVEeaGqPUk-4V4qQ" name="trytobemasterinit">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to Be Master ------------\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJolsErDEem2BZRQc2M93A" name="TryBeMaster__684">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_ZaK1gAlOEea_md0mpENoqg" name="RunAsSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_JeHBoAlzEea_md0mpENoqg" name="RunAsSlaveEntry">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJmJcErDEem2BZRQc2M93A" name="RunAsSlave__683">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_5yefMAszEeaGqPUk-4V4qQ" name="Slave" kind="junction"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_8WMAUONDEeaTpaLNj-zYpw" name="Initial1"/>
                <subvertex xmi:type="uml:State" xmi:id="_s60GkUrDEem2BZRQc2M93A" name="Debug__C__ReplyConfig">
                  <connectionPoint xmi:id="_s61UsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_ruAiIEr4Eemntv5tDuspng" name="From__Parent__1727" kind="entryPoint"/>
                  <connectionPoint xmi:id="_ruC-YEr4Eemntv5tDuspng" name="To__Parent__1729" kind="exitPoint"/>
                  <region xmi:id="_s60GkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_ruId8Er4Eemntv5tDuspng" name="Trans__en1733" source="_s61UsUrDEem2BZRQc2M93A" target="_ruGowEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rv2VMEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__1759&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ruJFAEr4Eemntv5tDuspng" name="Trans__Init__State__17321734" source="_ruHP0Er4Eemntv5tDuspng" target="_ruGowEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rv3jUEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1732&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1732&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__1759&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1732&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ruK6MEr4Eemntv5tDuspng" name="From__Debug__B__Ac__ReplyConfig__1735" source="_s7JdwErDEem2BZRQc2M93A" target="_ruGowEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rvw1oEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__1759&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ruN9gEr4Eemntv5tDuspng" name="PME_Trig1736" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ruS2AEr4Eemntv5tDuspng" name="PME_Trig1737" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ruax0Er4Eemntv5tDuspng" name="PME_Trig1738" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_runmIEr4Eemntv5tDuspng" name="PME_Trig1739" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ruqpcEr4Eemntv5tDuspng" name="PME_Trig1740" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ruzMUEr4Eemntv5tDuspng" name="PME_Trig1741" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ru1BgEr4Eemntv5tDuspng" name="PME_Trig1742" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ru56AEr4Eemntv5tDuspng" name="PME_Trig1743" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ru8WQEr4Eemntv5tDuspng" name="PME_Trig1744" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_rvDD8Er4Eemntv5tDuspng" name="PME_Trig1745" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rvESEEr4Eemntv5tDuspng" name="PME_Trig1746" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_rvH8cEr4Eemntv5tDuspng" name="PME_Trig1747" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_rvLm0Er4Eemntv5tDuspng" name="PME_Trig1748" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rvP4QEr4Eemntv5tDuspng" name="PME_Trig1749" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_rvSUgEr4Eemntv5tDuspng" name="PME_Trig1750" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_rvYbIEr4Eemntv5tDuspng" name="PME_Trig1751" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_rvbecEr4Eemntv5tDuspng" name="PME_Trig1752" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_rvdToEr4Eemntv5tDuspng" name="PME_Trig1753" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_rviMIEr4Eemntv5tDuspng" name="PME_Trig1754" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rvjaQEr4Eemntv5tDuspng" name="PME_Trig1755" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_rvlPcEr4Eemntv5tDuspng" name="PME_Trig1756" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_rvnrsEr4Eemntv5tDuspng" name="To__Debug__B__Ac__ReplyConfig__1757" guard="_rv7NsUr4Eemntv5tDuspng" source="_ruGowEr4Eemntv5tDuspng" target="_s7JdwErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_rv7NsUr4Eemntv5tDuspng" name="PME_checkDecesion1760">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rv7NsEr4Eemntv5tDuspng" name="PME_checkDecesion1760">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ReplyConfig__1757&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_rvr9IEr4Eemntv5tDuspng" name="From__Parnet__Backup__1758" source="_ruAiIEr4Eemntv5tDuspng" target="_ruGowEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rv6moEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__1759&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rvtLQEr4Eemntv5tDuspng" name="To__Parent__Backup__1759" guard="_rv_fIUr4Eemntv5tDuspng" source="_ruGowEr4Eemntv5tDuspng" target="_ruC-YEr4Eemntv5tDuspng">
                      <ownedRule xmi:id="_rv_fIUr4Eemntv5tDuspng" name="PME_checkDecesion1761">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rv_fIEr4Eemntv5tDuspng" name="PME_checkDecesion1761">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1759&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s7JdwErDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7JdwUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReplyConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s7QygUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig__230">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ruGowEr4Eemntv5tDuspng" name="DecesionPoint__1731" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ruHP0Er4Eemntv5tDuspng" name="Init__State__1732"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s8TUUErDEem2BZRQc2M93A" name="Debug__Path__BackToSlave" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s8T7YUrDEem2BZRQc2M93A" name="Debug__C__BackToSlave">
                  <connectionPoint xmi:id="_s8VwkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s8WXoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_rzb0sEr4Eemntv5tDuspng" name="From__Parent__1835" kind="entryPoint"/>
                  <connectionPoint xmi:id="_rzh7UEr4Eemntv5tDuspng" name="To__Parent__1837" kind="exitPoint"/>
                  <region xmi:id="_s8T7YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s8uLEErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave" source="_s8VwkUrDEem2BZRQc2M93A" target="_s8ndYUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8-CsErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave__281">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__init__trans__BackToSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rzs6cEr4Eemntv5tDuspng" name="Trans__Init__State__18401841" source="_rzrsUEr4Eemntv5tDuspng" target="_rzk-oEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r08QkEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1840&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1865&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1840&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1867&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1840&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rzthgEr4Eemntv5tDuspng" name="Trans__ex1842" source="_s8WXoUrDEem2BZRQc2M93A" target="_rzk-oEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r1GooEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1865&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1867&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rzv9wEr4Eemntv5tDuspng" name="From__Debug__B__Ex__TryBeMaster__1843" source="_s8ndYUrDEem2BZRQc2M93A" target="_rzk-oEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r1BwIEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1865&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1867&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_rzxL4Er4Eemntv5tDuspng" name="PME_Trig1844" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rz1dUEr4Eemntv5tDuspng" name="PME_Trig1845" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_rz3SgEr4Eemntv5tDuspng" name="PME_Trig1846" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rz6V0Er4Eemntv5tDuspng" name="PME_Trig1847" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r0BDgEr4Eemntv5tDuspng" name="PME_Trig1848" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r0GjEEr4Eemntv5tDuspng" name="PME_Trig1849" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r0I_UEr4Eemntv5tDuspng" name="PME_Trig1850" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r0KNcEr4Eemntv5tDuspng" name="PME_Trig1851" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r0LbkEr4Eemntv5tDuspng" name="PME_Trig1852" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r0Oe4Er4Eemntv5tDuspng" name="PME_Trig1853" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r0SwUEr4Eemntv5tDuspng" name="PME_Trig1854" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r0T-cEr4Eemntv5tDuspng" name="PME_Trig1855" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r0VMkEr4Eemntv5tDuspng" name="PME_Trig1856" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r0Xo0Er4Eemntv5tDuspng" name="PME_Trig1857" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r0bTMEr4Eemntv5tDuspng" name="PME_Trig1858" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r0gLsEr4Eemntv5tDuspng" name="PME_Trig1859" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r0lrQEr4Eemntv5tDuspng" name="PME_Trig1860" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r0oHgEr4Eemntv5tDuspng" name="PME_Trig1861" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_r0pVoEr4Eemntv5tDuspng" name="PME_Trig1862" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r0tAAEr4Eemntv5tDuspng" name="PME_Trig1863" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r0x4gEr4Eemntv5tDuspng" name="PME_Trig1864" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r0ztsEr4Eemntv5tDuspng" name="To__Debug__B__Ex__TryBeMaster__1865" guard="_r1HPsUr4Eemntv5tDuspng" source="_rzk-oEr4Eemntv5tDuspng" target="_s8ndYUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_r1HPsUr4Eemntv5tDuspng" name="PME_checkDecesion1868">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r1HPsEr4Eemntv5tDuspng" name="PME_checkDecesion1868">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__TryBeMaster__1865&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r00UwEr4Eemntv5tDuspng" name="From__Parnet__Backup__1866" source="_rzb0sEr4Eemntv5tDuspng" target="_rzk-oEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r0_T4Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1865&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1867&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r0070Er4Eemntv5tDuspng" name="To__Parent__Backup__1867" guard="_r1H2wUr4Eemntv5tDuspng" source="_rzk-oEr4Eemntv5tDuspng" target="_rzh7UEr4Eemntv5tDuspng">
                      <ownedRule xmi:id="_r1H2wUr4Eemntv5tDuspng" name="PME_checkDecesion1869">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r1H2wEr4Eemntv5tDuspng" name="PME_checkDecesion1869">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1867&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s8ndYUrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8oEcErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8ycgErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster__276">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_rzk-oEr4Eemntv5tDuspng" name="DecesionPoint__1839" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_rzrsUEr4Eemntv5tDuspng" name="Init__State__1840"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s-oPkErDEem2BZRQc2M93A" name="Debug__Path__NokeepAlive" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s-pdsUrDEem2BZRQc2M93A" name="Debug__C__NokeepAlive">
                  <connectionPoint xmi:id="_s-rS4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_r1KTAEr4Eemntv5tDuspng" name="From__Parent__1871" kind="entryPoint"/>
                  <connectionPoint xmi:id="_r1MIMEr4Eemntv5tDuspng" name="To__Parent__1873" kind="exitPoint"/>
                  <region xmi:id="_s-pdskrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s--N0UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave" source="_s-5VUErDEem2BZRQc2M93A" target="_s-58YErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_OFcErDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave__357">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s--04ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s--04UrDEem2BZRQc2M93A" name="Debug__AC__NokeepAlive" source="_s-58YErDEem2BZRQc2M93A" target="_s-7xkErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-_b8UrDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No keep Alive message from Master, Try to be Master-------\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(2,0),4);
    ConfigComm.QueryConfig().send();
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to be Master\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__AC__NokeepAlive&quot;,(char *)&quot;Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s-_b8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_r1VSIEr4Eemntv5tDuspng" name="Trans__Init__State__18761877" source="_r1SO0Er4Eemntv5tDuspng" target="_r1PLgEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r47_wEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1876&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1876&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1944&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1876&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1876&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1945&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1876&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r1V5MEr4Eemntv5tDuspng" name="Trans__ex1878" source="_s-rS4UrDEem2BZRQc2M93A" target="_r1PLgEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r4_DEEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1944&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1945&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r1cm4Er4Eemntv5tDuspng" name="From__Debug__A__Ac__NokeepAlive__1879" source="_s-7xkErDEem2BZRQc2M93A" target="_r1PLgEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r46xoEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1944&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1945&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r1ecEEr4Eemntv5tDuspng" name="PME_Trig1880" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r1iGcEr4Eemntv5tDuspng" name="PME_Trig1881" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r1lJwEr4Eemntv5tDuspng" name="PME_Trig1882" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r1m-8Er4Eemntv5tDuspng" name="PME_Trig1883" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r1pbMEr4Eemntv5tDuspng" name="PME_Trig1884" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r1vh0Er4Eemntv5tDuspng" name="PME_Trig1885" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r1wv8Er4Eemntv5tDuspng" name="PME_Trig1886" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r1zMMEr4Eemntv5tDuspng" name="PME_Trig1887" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r15S0Er4Eemntv5tDuspng" name="PME_Trig1888" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r17IAEr4Eemntv5tDuspng" name="PME_Trig1889" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r1-LUEr4Eemntv5tDuspng" name="PME_Trig1890" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r2Dq4Er4Eemntv5tDuspng" name="PME_Trig1891" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r2E5AEr4Eemntv5tDuspng" name="PME_Trig1892" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r2H8UEr4Eemntv5tDuspng" name="PME_Trig1893" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r2Nb4Er4Eemntv5tDuspng" name="PME_Trig1894" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r2OqAEr4Eemntv5tDuspng" name="PME_Trig1895" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r2PREEr4Eemntv5tDuspng" name="PME_Trig1896" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r2TigEr4Eemntv5tDuspng" name="PME_Trig1897" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_r2ZCEEr4Eemntv5tDuspng" name="PME_Trig1898" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r2beUEr4Eemntv5tDuspng" name="PME_Trig1899" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r2ehoEr4Eemntv5tDuspng" name="PME_Trig1900" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r2iMAEr4Eemntv5tDuspng" name="From__Debug__B__Ex__RunAsSlave__1901" source="_s-5VUErDEem2BZRQc2M93A" target="_r1PLgEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r4wZkEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1944&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1945&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r2izEEr4Eemntv5tDuspng" name="PME_Trig1902" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r2koQEr4Eemntv5tDuspng" name="PME_Trig1903" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r2nEgEr4Eemntv5tDuspng" name="PME_Trig1904" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r2skEEr4Eemntv5tDuspng" name="PME_Trig1905" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r2tyMEr4Eemntv5tDuspng" name="PME_Trig1906" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r2w1gEr4Eemntv5tDuspng" name="PME_Trig1907" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r24KQEr4Eemntv5tDuspng" name="PME_Trig1908" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r27NkEr4Eemntv5tDuspng" name="PME_Trig1909" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r3B7QEr4Eemntv5tDuspng" name="PME_Trig1910" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r3DwcEr4Eemntv5tDuspng" name="PME_Trig1911" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r3FloEr4Eemntv5tDuspng" name="PME_Trig1912" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r3LFMEr4Eemntv5tDuspng" name="PME_Trig1913" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r3M6YEr4Eemntv5tDuspng" name="PME_Trig1914" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r3PWoEr4Eemntv5tDuspng" name="PME_Trig1915" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r3VdQEr4Eemntv5tDuspng" name="PME_Trig1916" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r3XScEr4Eemntv5tDuspng" name="PME_Trig1917" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r3ZusEr4Eemntv5tDuspng" name="PME_Trig1918" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r3fOQEr4Eemntv5tDuspng" name="PME_Trig1919" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r3gcYEr4Eemntv5tDuspng" name="PME_Trig1920" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r3iRkEr4Eemntv5tDuspng" name="PME_Trig1921" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r3nKEEr4Eemntv5tDuspng" name="From__Debug__B__Ac__NokeepAlive__1922" source="_s-58YErDEem2BZRQc2M93A" target="_r1PLgEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r41SEEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1944&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1945&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r3o_QEr4Eemntv5tDuspng" name="PME_Trig1923" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r3qNYEr4Eemntv5tDuspng" name="PME_Trig1924" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r3tQsEr4Eemntv5tDuspng" name="PME_Trig1925" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r3ywQEr4Eemntv5tDuspng" name="PME_Trig1926" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r30lcEr4Eemntv5tDuspng" name="PME_Trig1927" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r33owEr4Eemntv5tDuspng" name="PME_Trig1928" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r38hQEr4Eemntv5tDuspng" name="PME_Trig1929" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r3-WcEr4Eemntv5tDuspng" name="PME_Trig1930" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r4ALoEr4Eemntv5tDuspng" name="PME_Trig1931" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r4Cn4Er4Eemntv5tDuspng" name="PME_Trig1932" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r4IHcEr4Eemntv5tDuspng" name="PME_Trig1933" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r4JVkEr4Eemntv5tDuspng" name="PME_Trig1934" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r4Lx0Er4Eemntv5tDuspng" name="PME_Trig1935" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r4SfgEr4Eemntv5tDuspng" name="PME_Trig1936" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r4Vi0Er4Eemntv5tDuspng" name="PME_Trig1937" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r4Ww8Er4Eemntv5tDuspng" name="PME_Trig1938" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r4bpcEr4Eemntv5tDuspng" name="PME_Trig1939" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r4c3kEr4Eemntv5tDuspng" name="PME_Trig1940" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r4eFsEr4Eemntv5tDuspng" name="PME_Trig1941" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r4i-MEr4Eemntv5tDuspng" name="PME_Trig1942" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r4nPoEr4Eemntv5tDuspng" name="To__Debug__A__Ac__NokeepAlive__1943" guard="_r5EioUr4Eemntv5tDuspng" source="_r1PLgEr4Eemntv5tDuspng" target="_s-7xkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_r5EioUr4Eemntv5tDuspng" name="PME_checkDecesion1950">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r5EioEr4Eemntv5tDuspng" name="PME_checkDecesion1950">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NokeepAlive__1943&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r4n2sEr4Eemntv5tDuspng" name="To__Debug__B__Ex__RunAsSlave__1944" guard="_r5D7kkr4Eemntv5tDuspng" source="_r1PLgEr4Eemntv5tDuspng" target="_s-5VUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_r5D7kkr4Eemntv5tDuspng" name="PME_checkDecesion1949">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r5D7kUr4Eemntv5tDuspng" name="PME_checkDecesion1949">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__1944&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r4n2sUr4Eemntv5tDuspng" name="To__Debug__B__Ac__NokeepAlive__1945" guard="_r5FJsUr4Eemntv5tDuspng" source="_r1PLgEr4Eemntv5tDuspng" target="_s-58YErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_r5FJsUr4Eemntv5tDuspng" name="PME_checkDecesion1951">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r5FJsEr4Eemntv5tDuspng" name="PME_checkDecesion1951">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NokeepAlive__1945&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r4qS8Er4Eemntv5tDuspng" name="From__Parnet__Backup__1946" source="_r1KTAEr4Eemntv5tDuspng" target="_r1PLgEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r4yOwEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1944&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1945&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r4q6AEr4Eemntv5tDuspng" name="To__Parent__Backup__1947" guard="_r5D7kEr4Eemntv5tDuspng" source="_r1PLgEr4Eemntv5tDuspng" target="_r1MIMEr4Eemntv5tDuspng">
                      <ownedRule xmi:id="_r5D7kEr4Eemntv5tDuspng" name="PME_checkDecesion1948">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r5DUgEr4Eemntv5tDuspng" name="PME_checkDecesion1948">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1947&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s-5VUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-5VUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_CfQErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__350">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-58YErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-6jcErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_E7gUrDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive__351">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-7xkErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-7xkUrDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_H-0ErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive__352">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_r1PLgEr4Eemntv5tDuspng" name="DecesionPoint__1875" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_r1SO0Er4Eemntv5tDuspng" name="Init__State__1876"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s_WoUUrDEem2BZRQc2M93A" name="Debug__C__backtoslave">
                  <connectionPoint xmi:id="_r9cFQEr4Eemntv5tDuspng" name="From__Parent__2033" kind="entryPoint"/>
                  <connectionPoint xmi:id="_r9g9wEr4Eemntv5tDuspng" name="To__Parent__2035" kind="exitPoint"/>
                  <region xmi:id="_s_XPYErDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s_tNoUrDEem2BZRQc2M93A" name="Debug__Ac__backtoslave" source="_s_pjQUrDEem2BZRQc2M93A" target="_s_qxYErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_5a4ErDEem2BZRQc2M93A" name="Debug__Ac__backtoslave__381">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__Ac__backtoslave&quot;,(char *)&quot;Debug__B__Ac__backtoslave&quot;,(char *)&quot;Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_tNokrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_r9mdUEr4Eemntv5tDuspng" name="Trans__Init__State__20382039" source="_r9jaAEr4Eemntv5tDuspng" target="_r9iL4Ur4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sAEigEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2038&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2086&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2038&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2083&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2038&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2038&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r9sj8Er4Eemntv5tDuspng" name="From__Debug__A__Ac__backtoslave__2040" source="_s_qxYErDEem2BZRQc2M93A" target="_r9iL4Ur4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r_7_oEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2086&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2083&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r9tLAEr4Eemntv5tDuspng" name="PME_Trig2041" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r9wOUEr4Eemntv5tDuspng" name="PME_Trig2042" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r92U8Er4Eemntv5tDuspng" name="PME_Trig2043" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r93jEEr4Eemntv5tDuspng" name="PME_Trig2044" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r97NcEr4Eemntv5tDuspng" name="PME_Trig2045" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r9_e4Er4Eemntv5tDuspng" name="PME_Trig2046" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r-B7IEr4Eemntv5tDuspng" name="PME_Trig2047" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r-EXYEr4Eemntv5tDuspng" name="PME_Trig2048" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r-LFEEr4Eemntv5tDuspng" name="PME_Trig2049" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r-M6QEr4Eemntv5tDuspng" name="PME_Trig2050" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r-UPAEr4Eemntv5tDuspng" name="PME_Trig2051" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r-WEMEr4Eemntv5tDuspng" name="PME_Trig2052" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r-X5YEr4Eemntv5tDuspng" name="PME_Trig2053" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r-fOIEr4Eemntv5tDuspng" name="PME_Trig2054" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r-i4gEr4Eemntv5tDuspng" name="PME_Trig2055" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r-ktsEr4Eemntv5tDuspng" name="PME_Trig2056" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r-pmMEr4Eemntv5tDuspng" name="PME_Trig2057" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r-spgEr4Eemntv5tDuspng" name="PME_Trig2058" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_r-t3oEr4Eemntv5tDuspng" name="PME_Trig2059" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r-wT4Er4Eemntv5tDuspng" name="PME_Trig2060" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r-z-QEr4Eemntv5tDuspng" name="PME_Trig2061" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r-1MYEr4Eemntv5tDuspng" name="From__Debug__B__Ac__backtoslave__2062" source="_s_pjQUrDEem2BZRQc2M93A" target="_r9iL4Ur4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r_1R8Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2086&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2083&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r-3BkEr4Eemntv5tDuspng" name="PME_Trig2063" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r-6r8Er4Eemntv5tDuspng" name="PME_Trig2064" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r-_kcEr4Eemntv5tDuspng" name="PME_Trig2065" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r_G5MEr4Eemntv5tDuspng" name="PME_Trig2066" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r_IHUEr4Eemntv5tDuspng" name="PME_Trig2067" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r_JVcEr4Eemntv5tDuspng" name="PME_Trig2068" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r_LxsEr4Eemntv5tDuspng" name="PME_Trig2069" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r_M_0Er4Eemntv5tDuspng" name="PME_Trig2070" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r_ON8Er4Eemntv5tDuspng" name="PME_Trig2071" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r_SfYEr4Eemntv5tDuspng" name="PME_Trig2072" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r_TtgEr4Eemntv5tDuspng" name="PME_Trig2073" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r_WJwEr4Eemntv5tDuspng" name="PME_Trig2074" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r_c3cEr4Eemntv5tDuspng" name="PME_Trig2075" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r_f6wEr4Eemntv5tDuspng" name="PME_Trig2076" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r_laUEr4Eemntv5tDuspng" name="PME_Trig2077" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r_mocEr4Eemntv5tDuspng" name="PME_Trig2078" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r_n2kEr4Eemntv5tDuspng" name="PME_Trig2079" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r_qS0Er4Eemntv5tDuspng" name="PME_Trig2080" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r_ukQEr4Eemntv5tDuspng" name="PME_Trig2081" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r_vyYEr4Eemntv5tDuspng" name="PME_Trig2082" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r_xnkEr4Eemntv5tDuspng" name="To__Debug__A__Ac__backtoslave__2083" guard="_sAFJk0r4Eemntv5tDuspng" source="_r9iL4Ur4Eemntv5tDuspng" target="_s_qxYErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_sAFJk0r4Eemntv5tDuspng" name="PME_checkDecesion2088">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sAFJkkr4Eemntv5tDuspng" name="PME_checkDecesion2088">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave__2083&quot;,&quot;Debug__A__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r_xnkUr4Eemntv5tDuspng" name="To__Debug__B__Ac__backtoslave__2084" guard="_sAFwoUr4Eemntv5tDuspng" source="_r9iL4Ur4Eemntv5tDuspng" target="_s_pjQUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_sAFwoUr4Eemntv5tDuspng" name="PME_checkDecesion2089">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sAFwoEr4Eemntv5tDuspng" name="PME_checkDecesion2089">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave__2084&quot;,&quot;Debug__B__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r_yOoEr4Eemntv5tDuspng" name="From__Parnet__Backup__2085" source="_r9cFQEr4Eemntv5tDuspng" target="_r9iL4Ur4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sABfMEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2086&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2083&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r_yOoUr4Eemntv5tDuspng" name="To__Parent__Backup__2086" guard="_sAFJkUr4Eemntv5tDuspng" source="_r9iL4Ur4Eemntv5tDuspng" target="_r9g9wEr4Eemntv5tDuspng">
                      <ownedRule xmi:id="_sAFJkUr4Eemntv5tDuspng" name="PME_checkDecesion2087">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sAFJkEr4Eemntv5tDuspng" name="PME_checkDecesion2087">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2086&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s_pjQUrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qKUErDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_vp4UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave__375">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s_qxYErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qxYUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_ytMUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave__376">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_r9iL4Ur4Eemntv5tDuspng" name="DecesionPoint__2037" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_r9jaAEr4Eemntv5tDuspng" name="Init__State__2038"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tBq8gErDEem2BZRQc2M93A" name="Debug__Path__KeepAliveMsg" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tBrjkUrDEem2BZRQc2M93A" name="Debug__C__KeepAliveMsg">
                  <connectionPoint xmi:id="_tBsxsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tBtYwUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_sAHl0Er4Eemntv5tDuspng" name="From__Parent__2091" kind="entryPoint"/>
                  <connectionPoint xmi:id="_sAIz8Ur4Eemntv5tDuspng" name="To__Parent__2093" kind="exitPoint"/>
                  <region xmi:id="_tBrjkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tCBh0ErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAliveMsg" source="_tBsxsUrDEem2BZRQc2M93A" target="_tB8pUErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCSnkErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAliveMsg__461">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__init__trans__KeepAliveMsg&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_tCBh0UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave" source="_tB8pUErDEem2BZRQc2M93A" target="_tB9QYErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCVD0ErDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave__463">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCBh0krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCCI4ErDEem2BZRQc2M93A" name="Debug__AC__KeepAliveMsg" source="_tB9QYErDEem2BZRQc2M93A" target="_tB-egErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCCv8ErDEem2BZRQc2M93A" name="ProcessKeppAlive" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Keep Alive Message from &quot;&lt;&lt; ServerName&lt;&lt;&quot;\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    //KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__AC__KeepAliveMsg&quot;,(char *)&quot;Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCCI4UrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCCv8UrDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_tB-egErDEem2BZRQc2M93A" target="_tCATsErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCDXAErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCCv8krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCD-EErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg" source="_tCATsErDEem2BZRQc2M93A" target="_tBtYwUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCZVQErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg__467">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__end__trans__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCD-EUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_sAQIsEr4Eemntv5tDuspng" name="Trans__Init__State__20962097" source="_sAOTgEr4Eemntv5tDuspng" target="_sANFYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sE5_MEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2096&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_sAQIsUr4Eemntv5tDuspng" name="Trans__ex2098" source="_tBtYwUrDEem2BZRQc2M93A" target="_sANFYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sFcxwEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_sAagwEr4Eemntv5tDuspng" name="From__Debug__B__Ac__KeepAliveMsg__2099" source="_tB9QYErDEem2BZRQc2M93A" target="_sANFYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sFAF0Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_sAc9AEr4Eemntv5tDuspng" name="PME_Trig2100" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sAhOcEr4Eemntv5tDuspng" name="PME_Trig2101" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sAnVEEr4Eemntv5tDuspng" name="PME_Trig2102" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sAtbsEr4Eemntv5tDuspng" name="PME_Trig2103" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sAvQ4Er4Eemntv5tDuspng" name="PME_Trig2104" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sA3zwEr4Eemntv5tDuspng" name="PME_Trig2105" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_sA6QAEr4Eemntv5tDuspng" name="PME_Trig2106" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sBBkwEr4Eemntv5tDuspng" name="PME_Trig2107" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sBCy4Er4Eemntv5tDuspng" name="PME_Trig2108" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_sBEoEEr4Eemntv5tDuspng" name="PME_Trig2109" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sBLVwEr4Eemntv5tDuspng" name="PME_Trig2110" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_sBMj4Er4Eemntv5tDuspng" name="PME_Trig2111" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_sBNyAEr4Eemntv5tDuspng" name="PME_Trig2112" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sBQ1UEr4Eemntv5tDuspng" name="PME_Trig2113" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sBYKEEr4Eemntv5tDuspng" name="PME_Trig2114" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sBb0cEr4Eemntv5tDuspng" name="PME_Trig2115" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sBgs8Er4Eemntv5tDuspng" name="PME_Trig2116" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_sBh7EEr4Eemntv5tDuspng" name="PME_Trig2117" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sBkXUEr4Eemntv5tDuspng" name="PME_Trig2118" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_sBoBsEr4Eemntv5tDuspng" name="PME_Trig2119" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_sBqd8Er4Eemntv5tDuspng" name="From__Debug__A__En__RunAsSlave__2120" source="_tCATsErDEem2BZRQc2M93A" target="_sANFYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sFVdAEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_sBrFAEr4Eemntv5tDuspng" name="PME_Trig2121" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sBsTIEr4Eemntv5tDuspng" name="PME_Trig2122" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sBuvYEr4Eemntv5tDuspng" name="PME_Trig2123" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sB2EIEr4Eemntv5tDuspng" name="PME_Trig2124" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sB5ugEr4Eemntv5tDuspng" name="PME_Trig2125" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sB-nAEr4Eemntv5tDuspng" name="PME_Trig2126" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_sB_1IEr4Eemntv5tDuspng" name="PME_Trig2127" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sCAcMEr4Eemntv5tDuspng" name="PME_Trig2128" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sCDfgEr4Eemntv5tDuspng" name="PME_Trig2129" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_sCHw8Er4Eemntv5tDuspng" name="PME_Trig2130" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sCI_EEr4Eemntv5tDuspng" name="PME_Trig2131" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_sCKNMEr4Eemntv5tDuspng" name="PME_Trig2132" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_sCMpcEr4Eemntv5tDuspng" name="PME_Trig2133" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sCSwEEr4Eemntv5tDuspng" name="PME_Trig2134" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sCUlQEr4Eemntv5tDuspng" name="PME_Trig2135" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sCXokEr4Eemntv5tDuspng" name="PME_Trig2136" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sCb6AEr4Eemntv5tDuspng" name="PME_Trig2137" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_sCdvMEr4Eemntv5tDuspng" name="PME_Trig2138" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sCe9UEr4Eemntv5tDuspng" name="PME_Trig2139" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_sCgygEr4Eemntv5tDuspng" name="PME_Trig2140" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_sCiAoEr4Eemntv5tDuspng" name="From__Debug__B__Ex__RunAsSlave__2141" source="_tB8pUErDEem2BZRQc2M93A" target="_sANFYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sFLsAEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_sCinsEr4Eemntv5tDuspng" name="PME_Trig2142" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sCngMEr4Eemntv5tDuspng" name="PME_Trig2143" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sCouUEr4Eemntv5tDuspng" name="PME_Trig2144" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sCrKkEr4Eemntv5tDuspng" name="PME_Trig2145" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sCsYsEr4Eemntv5tDuspng" name="PME_Trig2146" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sCyfUEr4Eemntv5tDuspng" name="PME_Trig2147" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_sC07kEr4Eemntv5tDuspng" name="PME_Trig2148" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sC2wwEr4Eemntv5tDuspng" name="PME_Trig2149" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sC7CMEr4Eemntv5tDuspng" name="PME_Trig2150" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_sC9ecEr4Eemntv5tDuspng" name="PME_Trig2151" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sDEzMEr4Eemntv5tDuspng" name="PME_Trig2152" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_sDGoYEr4Eemntv5tDuspng" name="PME_Trig2153" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_sDJrsEr4Eemntv5tDuspng" name="PME_Trig2154" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sDOkMEr4Eemntv5tDuspng" name="PME_Trig2155" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sDRAcEr4Eemntv5tDuspng" name="PME_Trig2156" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sDS1oEr4Eemntv5tDuspng" name="PME_Trig2157" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sDY8QEr4Eemntv5tDuspng" name="PME_Trig2158" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_sDbYgEr4Eemntv5tDuspng" name="PME_Trig2159" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sDeb0Er4Eemntv5tDuspng" name="PME_Trig2160" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_sDj7YEr4Eemntv5tDuspng" name="PME_Trig2161" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_sDlwkEr4Eemntv5tDuspng" name="From__Debug__A__Ac__KeepAliveMsg__2162" source="_tB-egErDEem2BZRQc2M93A" target="_sANFYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sFOvUEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_sDoM0Er4Eemntv5tDuspng" name="PME_Trig2163" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sDtsYEr4Eemntv5tDuspng" name="PME_Trig2164" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sDvhkEr4Eemntv5tDuspng" name="PME_Trig2165" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sDyk4Er4Eemntv5tDuspng" name="PME_Trig2166" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sD4rgEr4Eemntv5tDuspng" name="PME_Trig2167" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sD6gsEr4Eemntv5tDuspng" name="PME_Trig2168" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_sD9kAEr4Eemntv5tDuspng" name="PME_Trig2169" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sEDDkEr4Eemntv5tDuspng" name="PME_Trig2170" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sEGG4Er4Eemntv5tDuspng" name="PME_Trig2171" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_sEJKMEr4Eemntv5tDuspng" name="PME_Trig2172" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sENboEr4Eemntv5tDuspng" name="PME_Trig2173" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_sEPQ0Er4Eemntv5tDuspng" name="PME_Trig2174" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_sEUJUEr4Eemntv5tDuspng" name="PME_Trig2175" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sEXzsEr4Eemntv5tDuspng" name="PME_Trig2176" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_sEa3AEr4Eemntv5tDuspng" name="PME_Trig2177" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sEcsMEr4Eemntv5tDuspng" name="PME_Trig2178" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_sEhksEr4Eemntv5tDuspng" name="PME_Trig2179" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_sEjZ4Er4Eemntv5tDuspng" name="PME_Trig2180" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_sEo5cEr4Eemntv5tDuspng" name="PME_Trig2181" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_sEr8wEr4Eemntv5tDuspng" name="PME_Trig2182" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_sEvnIEr4Eemntv5tDuspng" name="To__Debug__B__Ac__KeepAliveMsg__2183" guard="_sFd_40r4Eemntv5tDuspng" source="_sANFYEr4Eemntv5tDuspng" target="_tB9QYErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_sFd_40r4Eemntv5tDuspng" name="PME_checkDecesion2190">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sFd_4kr4Eemntv5tDuspng" name="PME_checkDecesion2190">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_sEwOMEr4Eemntv5tDuspng" name="To__Debug__A__En__RunAsSlave__2184" guard="_sFfOAUr4Eemntv5tDuspng" source="_sANFYEr4Eemntv5tDuspng" target="_tCATsErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_sFfOAUr4Eemntv5tDuspng" name="PME_checkDecesion2192">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sFfOAEr4Eemntv5tDuspng" name="PME_checkDecesion2192">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsSlave__2184&quot;,&quot;Debug__A__En__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_sEw1QEr4Eemntv5tDuspng" name="To__Debug__B__Ex__RunAsSlave__2185" guard="_sFd_4Ur4Eemntv5tDuspng" source="_sANFYEr4Eemntv5tDuspng" target="_tB8pUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_sFd_4Ur4Eemntv5tDuspng" name="PME_checkDecesion2189">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sFd_4Er4Eemntv5tDuspng" name="PME_checkDecesion2189">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_sEyqcEr4Eemntv5tDuspng" name="To__Debug__A__Ac__KeepAliveMsg__2186" guard="_sFem8Ur4Eemntv5tDuspng" source="_sANFYEr4Eemntv5tDuspng" target="_tB-egErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_sFem8Ur4Eemntv5tDuspng" name="PME_checkDecesion2191">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sFem8Er4Eemntv5tDuspng" name="PME_checkDecesion2191">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_sE1twEr4Eemntv5tDuspng" name="From__Parnet__Backup__2187" source="_sAHl0Er4Eemntv5tDuspng" target="_sANFYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sFDwMEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_sE2U0Er4Eemntv5tDuspng" name="To__Parent__Backup__2188" guard="_sFf1EUr4Eemntv5tDuspng" source="_sANFYEr4Eemntv5tDuspng" target="_sAIz8Ur4Eemntv5tDuspng">
                      <ownedRule xmi:id="_sFf1EUr4Eemntv5tDuspng" name="PME_checkDecesion2193">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_sFf1EEr4Eemntv5tDuspng" name="PME_checkDecesion2193">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2188&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tB8pUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB8pUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCGaUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__456">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tB9QYErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB9QYUrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCJdoErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg__457">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tB-egErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB_FkErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCL54UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg__458">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tCATsErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCATsUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCOWIErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave__459">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_sANFYEr4Eemntv5tDuspng" name="DecesionPoint__2095" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_sAOTgEr4Eemntv5tDuspng" name="Init__State__2096"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tDikwErDEem2BZRQc2M93A" name="Debug__Path__backtoslave1" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tDjy4UrDEem2BZRQc2M93A" name="Debug__C__backtoslave1">
                  <connectionPoint xmi:id="_tDlBAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tDloEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_rwAtQUr4Eemntv5tDuspng" name="From__Parent__1763" kind="entryPoint"/>
                  <connectionPoint xmi:id="_rwBUUEr4Eemntv5tDuspng" name="To__Parent__1765" kind="exitPoint"/>
                  <region xmi:id="_tDjy4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tD6_QErDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave1" source="_tD5KEErDEem2BZRQc2M93A" target="_tDloEUrDEem2BZRQc2M93A">
                      <trigger xmi:id="_tD6_QUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_rwFlwEr4Eemntv5tDuspng" name="Trans__Init__State__17681769" source="_rwDwkEr4Eemntv5tDuspng" target="_rwB7YEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rxeF0Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1768&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1793&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1768&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1795&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1768&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rwGM0Er4Eemntv5tDuspng" name="Trans__ex1770" source="_tDloEUrDEem2BZRQc2M93A" target="_rwB7YEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rxVi8Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1793&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1795&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rwGz4Er4Eemntv5tDuspng" name="Trans__en1771" source="_tDlBAErDEem2BZRQc2M93A" target="_rwB7YEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rxc3sEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1793&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1795&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rwMTcEr4Eemntv5tDuspng" name="From__Debug__A__Ac__backtoslave1__1772" source="_tD5KEErDEem2BZRQc2M93A" target="_rwB7YEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rxgiEEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1793&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1795&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_rwPWwEr4Eemntv5tDuspng" name="PME_Trig1773" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rwVdYEr4Eemntv5tDuspng" name="PME_Trig1774" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_rwXSkEr4Eemntv5tDuspng" name="PME_Trig1775" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rwZu0Er4Eemntv5tDuspng" name="PME_Trig1776" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_rweAQEr4Eemntv5tDuspng" name="PME_Trig1777" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rwfOYEr4Eemntv5tDuspng" name="PME_Trig1778" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_rwhDkEr4Eemntv5tDuspng" name="PME_Trig1779" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_rwjf0Er4Eemntv5tDuspng" name="PME_Trig1780" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rwl8EEr4Eemntv5tDuspng" name="PME_Trig1781" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_rwrboEr4Eemntv5tDuspng" name="PME_Trig1782" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rwyJUEr4Eemntv5tDuspng" name="PME_Trig1783" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_rwzXcEr4Eemntv5tDuspng" name="PME_Trig1784" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_rw0lkEr4Eemntv5tDuspng" name="PME_Trig1785" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rw3o4Er4Eemntv5tDuspng" name="PME_Trig1786" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_rw9IcEr4Eemntv5tDuspng" name="PME_Trig1787" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_rw-WkEr4Eemntv5tDuspng" name="PME_Trig1788" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_rw_ksEr4Eemntv5tDuspng" name="PME_Trig1789" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_rxG5cEr4Eemntv5tDuspng" name="PME_Trig1790" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rxJVsEr4Eemntv5tDuspng" name="PME_Trig1791" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_rxNAEEr4Eemntv5tDuspng" name="PME_Trig1792" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_rxSfoEr4Eemntv5tDuspng" name="To__Debug__A__Ac__backtoslave1__1793" guard="_rxhJIUr4Eemntv5tDuspng" source="_rwB7YEr4Eemntv5tDuspng" target="_tD5KEErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_rxhJIUr4Eemntv5tDuspng" name="PME_checkDecesion1796">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rxhJIEr4Eemntv5tDuspng" name="PME_checkDecesion1796">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave1__1793&quot;,&quot;Debug__A__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_rxTGsEr4Eemntv5tDuspng" name="From__Parnet__Backup__1794" source="_rwAtQUr4Eemntv5tDuspng" target="_rwB7YEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rxabcEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1793&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1795&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rxTGsUr4Eemntv5tDuspng" name="To__Parent__Backup__1795" guard="_rxjlYEr4Eemntv5tDuspng" source="_rwB7YEr4Eemntv5tDuspng" target="_rwBUUEr4Eemntv5tDuspng">
                      <ownedRule xmi:id="_rxjlYEr4Eemntv5tDuspng" name="PME_checkDecesion1797">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rxi-UEr4Eemntv5tDuspng" name="PME_checkDecesion1797">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1795&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tD5KEErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD5KEUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_rwB7YEr4Eemntv5tDuspng" name="DecesionPoint__1767" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_rwDwkEr4Eemntv5tDuspng" name="Init__State__1768"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tFd3YUrDEem2BZRQc2M93A" name="Debug__C__CheckNoMaster">
                  <connectionPoint xmi:id="_tFeecUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tFfFgUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_rxn20Er4Eemntv5tDuspng" name="From__Parent__1799" kind="entryPoint"/>
                  <connectionPoint xmi:id="_rxpE8Er4Eemntv5tDuspng" name="To__Parent__1801" kind="exitPoint"/>
                  <region xmi:id="_tFd3YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tFxZYErDEem2BZRQc2M93A" name="Debug__init__trans__CheckNoMaster" source="_tFeecUrDEem2BZRQc2M93A" target="_tFvkMErDEem2BZRQc2M93A"/>
                    <transition xmi:id="_rxxn0Er4Eemntv5tDuspng" name="Trans__ex1805" source="_tFfFgUrDEem2BZRQc2M93A" target="_rxtWYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rzSDsEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1829&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rxyO4Er4Eemntv5tDuspng" name="Trans__Init__State__18041806" source="_rxwZsEr4Eemntv5tDuspng" target="_rxtWYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rzNLMEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1804&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1829&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1804&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1804&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rx0EEEr4Eemntv5tDuspng" name="From__Debug__B__Ac__CheckNoMaster__1807" source="_tFvkMErDEem2BZRQc2M93A" target="_rxtWYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rzQOgEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1829&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_rx1SMEr4Eemntv5tDuspng" name="PME_Trig1808" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rx7Y0Er4Eemntv5tDuspng" name="PME_Trig1809" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_rx91EEr4Eemntv5tDuspng" name="PME_Trig1810" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rx_qQEr4Eemntv5tDuspng" name="PME_Trig1811" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ryHmEEr4Eemntv5tDuspng" name="PME_Trig1812" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ryOTwEr4Eemntv5tDuspng" name="PME_Trig1813" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ryPh4Er4Eemntv5tDuspng" name="PME_Trig1814" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ryTMQEr4Eemntv5tDuspng" name="PME_Trig1815" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ryUaYEr4Eemntv5tDuspng" name="PME_Trig1816" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ryXdsEr4Eemntv5tDuspng" name="PME_Trig1817" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_rydkUEr4Eemntv5tDuspng" name="PME_Trig1818" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ryhOsEr4Eemntv5tDuspng" name="PME_Trig1819" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_rymHMEr4Eemntv5tDuspng" name="PME_Trig1820" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ryrmwEr4Eemntv5tDuspng" name="PME_Trig1821" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ryv4MEr4Eemntv5tDuspng" name="PME_Trig1822" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ryzikEr4Eemntv5tDuspng" name="PME_Trig1823" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ry30AEr4Eemntv5tDuspng" name="PME_Trig1824" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ry5CIEr4Eemntv5tDuspng" name="PME_Trig1825" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_ry6QQEr4Eemntv5tDuspng" name="PME_Trig1826" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ry8FcEr4Eemntv5tDuspng" name="PME_Trig1827" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ry_IwEr4Eemntv5tDuspng" name="PME_Trig1828" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_rzGdgEr4Eemntv5tDuspng" name="To__Debug__B__Ac__CheckNoMaster__1829" guard="_rzYKUUr4Eemntv5tDuspng" source="_rxtWYEr4Eemntv5tDuspng" target="_tFvkMErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_rzYKUUr4Eemntv5tDuspng" name="PME_checkDecesion1832">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rzYKUEr4Eemntv5tDuspng" name="PME_checkDecesion1832">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__CheckNoMaster__1829&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_rzKH4Er4Eemntv5tDuspng" name="From__Parnet__Backup__1830" source="_rxn20Er4Eemntv5tDuspng" target="_rxtWYEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rzUf8Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1829&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_rzLWAEr4Eemntv5tDuspng" name="To__Parent__Backup__1831" guard="_rzamkUr4Eemntv5tDuspng" source="_rxtWYEr4Eemntv5tDuspng" target="_rxpE8Er4Eemntv5tDuspng">
                      <ownedRule xmi:id="_rzamkUr4Eemntv5tDuspng" name="PME_checkDecesion1833">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_rzamkEr4Eemntv5tDuspng" name="PME_checkDecesion1833">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1831&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tFvkMErDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFvkMUrDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;CheckNoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_rxtWYEr4Eemntv5tDuspng" name="DecesionPoint__1803" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_rxwZsEr4Eemntv5tDuspng" name="Init__State__1804"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tIHiwErDEem2BZRQc2M93A" name="Debug__Path__Initial1__RunAsSlave__7" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tIIw4UrDEem2BZRQc2M93A" name="Debug__C__Initial1__RunAsSlave__7">
                  <connectionPoint xmi:id="_tIKmEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_r5GX0Er4Eemntv5tDuspng" name="From__Parent__1953" kind="entryPoint"/>
                  <connectionPoint xmi:id="_r5G-4Ur4Eemntv5tDuspng" name="To__Parent__1955" kind="exitPoint"/>
                  <region xmi:id="_tIIw4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tIeIEUrDEem2BZRQc2M93A" name="Debug__Ac__Initial1__RunAsSlave__7" source="_tIbEwUrDEem2BZRQc2M93A" target="_tIbr0ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIrjcErDEem2BZRQc2M93A" name="Debug__Ac__Initial1__RunAsSlave__7__673">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tIeIEkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tIevIErDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_tIbr0ErDEem2BZRQc2M93A" target="_tIc58ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIfWMErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tIevIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tIfWMUrDEem2BZRQc2M93A" name="Debug__end__trans__Initial1__RunAsSlave__7" source="_tIc58ErDEem2BZRQc2M93A" target="_tIKmEUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIumwErDEem2BZRQc2M93A" name="Debug__end__trans__Initial1__RunAsSlave__7__676">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__end__trans__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tIf9QErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_r5PhwEr4Eemntv5tDuspng" name="Trans__Init__State__19581959" source="_r5L3YEr4Eemntv5tDuspng" target="_r5JbIEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r9WlsEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1958&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__2028&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1958&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__2025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1958&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__2024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1958&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__2026&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1958&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r5QI0Er4Eemntv5tDuspng" name="Trans__ex1960" source="_tIKmEUrDEem2BZRQc2M93A" target="_r5JbIEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r9PQ8Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__2028&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__2025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__2024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__2026&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r5TMIEr4Eemntv5tDuspng" name="From__Debug__B__Ac__Initial1__RunAsSlave__7__1961" source="_tIbEwUrDEem2BZRQc2M93A" target="_r5JbIEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r9AAYEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__2028&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__2025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__2024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__2026&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r5VoYEr4Eemntv5tDuspng" name="PME_Trig1962" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r5ZSwEr4Eemntv5tDuspng" name="PME_Trig1963" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r5ag4Er4Eemntv5tDuspng" name="PME_Trig1964" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r5c9IEr4Eemntv5tDuspng" name="PME_Trig1965" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r5gngEr4Eemntv5tDuspng" name="PME_Trig1966" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r5kR4Er4Eemntv5tDuspng" name="PME_Trig1967" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r5lgAEr4Eemntv5tDuspng" name="PME_Trig1968" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r5n8QEr4Eemntv5tDuspng" name="PME_Trig1969" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r5tb0Er4Eemntv5tDuspng" name="PME_Trig1970" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r5vRAEr4Eemntv5tDuspng" name="PME_Trig1971" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r5xtQEr4Eemntv5tDuspng" name="PME_Trig1972" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r51XoEr4Eemntv5tDuspng" name="PME_Trig1973" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r53z4Er4Eemntv5tDuspng" name="PME_Trig1974" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r55pEEr4Eemntv5tDuspng" name="PME_Trig1975" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r58FUEr4Eemntv5tDuspng" name="PME_Trig1976" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r6CL8Er4Eemntv5tDuspng" name="PME_Trig1977" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r6FPQEr4Eemntv5tDuspng" name="PME_Trig1978" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r6L88Er4Eemntv5tDuspng" name="PME_Trig1979" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r6NyIEr4Eemntv5tDuspng" name="PME_Trig1980" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r6Q1cEr4Eemntv5tDuspng" name="PME_Trig1981" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r6W8EEr4Eemntv5tDuspng" name="From__Debug__A__Ac__Initial1__RunAsSlave__7__1982" source="_tIbr0ErDEem2BZRQc2M93A" target="_r5JbIEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r87H4Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__2028&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__2025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__2024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__2026&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r6YKMEr4Eemntv5tDuspng" name="PME_Trig1983" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r6b0kEr4Eemntv5tDuspng" name="PME_Trig1984" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r6h7MEr4Eemntv5tDuspng" name="PME_Trig1985" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r6k-gEr4Eemntv5tDuspng" name="PME_Trig1986" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r6rFIEr4Eemntv5tDuspng" name="PME_Trig1987" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r6s6UEr4Eemntv5tDuspng" name="PME_Trig1988" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r6yZ4Er4Eemntv5tDuspng" name="PME_Trig1989" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r62EQEr4Eemntv5tDuspng" name="PME_Trig1990" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r64ggEr4Eemntv5tDuspng" name="PME_Trig1991" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r65uoEr4Eemntv5tDuspng" name="PME_Trig1992" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r68x8Er4Eemntv5tDuspng" name="PME_Trig1993" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r6_1QEr4Eemntv5tDuspng" name="PME_Trig1994" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r7CRgEr4Eemntv5tDuspng" name="PME_Trig1995" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r7EGsEr4Eemntv5tDuspng" name="PME_Trig1996" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r7I_MEr4Eemntv5tDuspng" name="PME_Trig1997" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r7LbcEr4Eemntv5tDuspng" name="PME_Trig1998" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r7OewEr4Eemntv5tDuspng" name="PME_Trig1999" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r7T-UEr4Eemntv5tDuspng" name="PME_Trig2000" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r7WakEr4Eemntv5tDuspng" name="PME_Trig2001" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r7Y20Er4Eemntv5tDuspng" name="PME_Trig2002" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r7aE8Er4Eemntv5tDuspng" name="From__Debug__A__En__Initial1__RunAsSlave__7__2003" source="_tIc58ErDEem2BZRQc2M93A" target="_r5JbIEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r9E44Er4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__2028&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__2025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__2024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__2026&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_r7fkgEr4Eemntv5tDuspng" name="PME_Trig2004" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r7m5QEr4Eemntv5tDuspng" name="PME_Trig2005" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r7pVgEr4Eemntv5tDuspng" name="PME_Trig2006" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r7rxwEr4Eemntv5tDuspng" name="PME_Trig2007" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r7x4YEr4Eemntv5tDuspng" name="PME_Trig2008" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r7ztkEr4Eemntv5tDuspng" name="PME_Trig2009" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_r73_AEr4Eemntv5tDuspng" name="PME_Trig2010" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r78QcEr4Eemntv5tDuspng" name="PME_Trig2011" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r79ekEr4Eemntv5tDuspng" name="PME_Trig2012" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_r7_60Er4Eemntv5tDuspng" name="PME_Trig2013" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r8FaYEr4Eemntv5tDuspng" name="PME_Trig2014" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_r8GogEr4Eemntv5tDuspng" name="PME_Trig2015" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                      <trigger xmi:id="_r8IdsEr4Eemntv5tDuspng" name="PME_Trig2016" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r8LhAEr4Eemntv5tDuspng" name="PME_Trig2017" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_r8SOsEr4Eemntv5tDuspng" name="PME_Trig2018" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r8VSAEr4Eemntv5tDuspng" name="PME_Trig2019" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_r8b_sEr4Eemntv5tDuspng" name="PME_Trig2020" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_r8gRIEr4Eemntv5tDuspng" name="PME_Trig2021" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_r8lJoEr4Eemntv5tDuspng" name="PME_Trig2022" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_r8m-0Er4Eemntv5tDuspng" name="PME_Trig2023" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_r8wIwEr4Eemntv5tDuspng" name="To__Debug__B__Ac__Initial1__RunAsSlave__7__2024" guard="_r9Ya4Ur4Eemntv5tDuspng" source="_r5JbIEr4Eemntv5tDuspng" target="_tIbEwUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_r9Ya4Ur4Eemntv5tDuspng" name="PME_checkDecesion2031">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r9Ya4Er4Eemntv5tDuspng" name="PME_checkDecesion2031">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__2024&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r8wv0Er4Eemntv5tDuspng" name="To__Debug__A__Ac__Initial1__RunAsSlave__7__2025" guard="_r9Xz00r4Eemntv5tDuspng" source="_r5JbIEr4Eemntv5tDuspng" target="_tIbr0ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_r9Xz00r4Eemntv5tDuspng" name="PME_checkDecesion2030">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r9Xz0kr4Eemntv5tDuspng" name="PME_checkDecesion2030">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__2025&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r8x98Er4Eemntv5tDuspng" name="To__Debug__A__En__Initial1__RunAsSlave__7__2026" guard="_r9ZpAUr4Eemntv5tDuspng" source="_r5JbIEr4Eemntv5tDuspng" target="_tIc58ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_r9ZpAUr4Eemntv5tDuspng" name="PME_checkDecesion2032">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r9ZpAEr4Eemntv5tDuspng" name="PME_checkDecesion2032">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Initial1__RunAsSlave__7__2026&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_r84EkEr4Eemntv5tDuspng" name="From__Parnet__Backup__2027" source="_r5GX0Er4Eemntv5tDuspng" target="_r5JbIEr4Eemntv5tDuspng">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r9M0sEr4Eemntv5tDuspng">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__2028&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__2025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__2024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__2026&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_r84roEr4Eemntv5tDuspng" name="To__Parent__Backup__2028" guard="_r9Xz0Ur4Eemntv5tDuspng" source="_r5JbIEr4Eemntv5tDuspng" target="_r5G-4Ur4Eemntv5tDuspng">
                      <ownedRule xmi:id="_r9Xz0Ur4Eemntv5tDuspng" name="PME_checkDecesion2029">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_r9Xz0Er4Eemntv5tDuspng" name="PME_checkDecesion2029">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2028&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tIbEwUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIbEwkrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;Initial1__RunAsSlave__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tIhLYUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7__667">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tIbr0ErDEem2BZRQc2M93A" name="Debug__A__Ac__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIbr0UrDEem2BZRQc2M93A" name="Debug__A__Ac__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;Initial1__RunAsSlave__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tIjnoErDEem2BZRQc2M93A" name="Debug__A__Ac__Initial1__RunAsSlave__7__668">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tIc58ErDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIc58UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tImD4UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7__669">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_r5JbIEr4Eemntv5tDuspng" name="DecesionPoint__1957" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_r5L3YEr4Eemntv5tDuspng" name="Init__State__1958"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ronEwEr4Eemntv5tDuspng" name="DecesionPoint__1673" kind="choice"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s7c_wErDEem2BZRQc2M93A" name="Debug__Path__ServerFaliure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s7dm0UrDEem2BZRQc2M93A" name="Debug__C__ServerFaliure">
              <connectionPoint xmi:id="_s7e08UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_rGfPIEr4Eemntv5tDuspng" name="From__Parent__1147" kind="entryPoint"/>
              <connectionPoint xmi:id="_rGhEUEr4Eemntv5tDuspng" name="To__Parent__1149" kind="exitPoint"/>
              <region xmi:id="_s7dm0krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s74dkErDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_s7y-AErDEem2BZRQc2M93A" target="_s70MIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s75rsErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s75EoErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rGqOQEr4Eemntv5tDuspng" name="Trans__Init__State__11521153" source="_rGlVwEr4Eemntv5tDuspng" target="_rGkHoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rJZZMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1152&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1152&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1152&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1152&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rGsqgEr4Eemntv5tDuspng" name="Trans__ex1154" source="_s7e08UrDEem2BZRQc2M93A" target="_rGkHoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rJT5oEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rGvt0Er4Eemntv5tDuspng" name="From__Debug__B__Ex__RunAsMaster__1155" source="_s7y-AErDEem2BZRQc2M93A" target="_rGkHoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rJW88Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rGyKEEr4Eemntv5tDuspng" name="PME_Trig1156" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rG5e0Er4Eemntv5tDuspng" name="PME_Trig1157" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rG-XUEr4Eemntv5tDuspng" name="PME_Trig1158" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rG_lcEr4Eemntv5tDuspng" name="PME_Trig1159" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rHBaoEr4Eemntv5tDuspng" name="PME_Trig1160" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rHEd8Er4Eemntv5tDuspng" name="PME_Trig1161" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rHNn4Er4Eemntv5tDuspng" name="PME_Trig1162" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rHR5UEr4Eemntv5tDuspng" name="PME_Trig1163" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rHTugEr4Eemntv5tDuspng" name="PME_Trig1164" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rHU8oEr4Eemntv5tDuspng" name="PME_Trig1165" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rHcRYEr4Eemntv5tDuspng" name="PME_Trig1166" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rHeGkEr4Eemntv5tDuspng" name="PME_Trig1167" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rHfUsEr4Eemntv5tDuspng" name="PME_Trig1168" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rHiYAEr4Eemntv5tDuspng" name="PME_Trig1169" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rHkNMEr4Eemntv5tDuspng" name="PME_Trig1170" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rHrh8Er4Eemntv5tDuspng" name="PME_Trig1171" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rHswEEr4Eemntv5tDuspng" name="PME_Trig1172" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rHvMUEr4Eemntv5tDuspng" name="PME_Trig1173" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rH5kYEr4Eemntv5tDuspng" name="PME_Trig1174" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rH7ZkEr4Eemntv5tDuspng" name="PME_Trig1175" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rH8nsEr4Eemntv5tDuspng" name="From__Debug__B__Ac__ServerFaliure__1176" source="_s70MIErDEem2BZRQc2M93A" target="_rGkHoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rJPBIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rH910Er4Eemntv5tDuspng" name="PME_Trig1177" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rIEjgEr4Eemntv5tDuspng" name="PME_Trig1178" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rIGYsEr4Eemntv5tDuspng" name="PME_Trig1179" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rII08Er4Eemntv5tDuspng" name="PME_Trig1180" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rIL4QEr4Eemntv5tDuspng" name="PME_Trig1181" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rIQJsEr4Eemntv5tDuspng" name="PME_Trig1182" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rIT0EEr4Eemntv5tDuspng" name="PME_Trig1183" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rIVpQEr4Eemntv5tDuspng" name="PME_Trig1184" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rIahwEr4Eemntv5tDuspng" name="PME_Trig1185" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rIc-AEr4Eemntv5tDuspng" name="PME_Trig1186" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rIjrsEr4Eemntv5tDuspng" name="PME_Trig1187" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rIlg4Er4Eemntv5tDuspng" name="PME_Trig1188" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rImvAEr4Eemntv5tDuspng" name="PME_Trig1189" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rIqZYEr4Eemntv5tDuspng" name="PME_Trig1190" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rIv48Er4Eemntv5tDuspng" name="PME_Trig1191" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rI2moEr4Eemntv5tDuspng" name="PME_Trig1192" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rI30wEr4Eemntv5tDuspng" name="PME_Trig1193" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rI5p8Er4Eemntv5tDuspng" name="PME_Trig1194" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rI7fIEr4Eemntv5tDuspng" name="PME_Trig1195" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rI97YEr4Eemntv5tDuspng" name="PME_Trig1196" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rI-icEr4Eemntv5tDuspng" name="PME_Trig1197" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rJEpEEr4Eemntv5tDuspng" name="To__Debug__B__Ex__RunAsMaster__1198" guard="_rJb1cUr4Eemntv5tDuspng" source="_rGkHoEr4Eemntv5tDuspng" target="_s7y-AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rJb1cUr4Eemntv5tDuspng" name="PME_checkDecesion1203">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rJb1cEr4Eemntv5tDuspng" name="PME_checkDecesion1203">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1198&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rJEpEUr4Eemntv5tDuspng" name="To__Debug__B__Ac__ServerFaliure__1199" guard="_rJanUUr4Eemntv5tDuspng" source="_rGkHoEr4Eemntv5tDuspng" target="_s70MIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rJanUUr4Eemntv5tDuspng" name="PME_checkDecesion1202">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rJanUEr4Eemntv5tDuspng" name="PME_checkDecesion1202">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServerFaliure__1199&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rJITcEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1200" source="_rGfPIEr4Eemntv5tDuspng" target="_rGkHoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rJNL8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rJJhkEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1201" guard="_rJccgUr4Eemntv5tDuspng" source="_rGkHoEr4Eemntv5tDuspng" target="_rGhEUEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rJccgUr4Eemntv5tDuspng" name="PME_checkDecesion1204">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rJccgEr4Eemntv5tDuspng" name="PME_checkDecesion1204">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1201&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s7y-AErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7y-AUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s79WEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__252">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s70MIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s70MIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8AZYErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure__253">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rGkHoEr4Eemntv5tDuspng" name="DecesionPoint__1151" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rGlVwEr4Eemntv5tDuspng" name="Init__State__1152"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s9K3AUrDEem2BZRQc2M93A" name="Debug__C__purgeotherMessage">
              <connectionPoint xmi:id="_s9MFIErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_rWdk0Er4Eemntv5tDuspng" name="From__Parent__1448" kind="entryPoint"/>
              <connectionPoint xmi:id="_rWjrcEr4Eemntv5tDuspng" name="To__Parent__1450" kind="exitPoint"/>
              <region xmi:id="_s9K3AkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s9hcUErDEem2BZRQc2M93A" name="Debug__init__trans__purgeotherMessage" source="_s9MFIErDEem2BZRQc2M93A" target="_s9dx8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ws4ErDEem2BZRQc2M93A" name="Debug__init__trans__purgeotherMessage__306">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__init__trans__purgeotherMessage&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s9iDYErDEem2BZRQc2M93A" name="Debug__Ex__Failure" source="_s9dx8ErDEem2BZRQc2M93A" target="_s9fAEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9x7AErDEem2BZRQc2M93A" name="Debug__Ex__Failure__308">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__Ex__Failure&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9iDYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rW0xMEr4Eemntv5tDuspng" name="Trans__Init__State__14531454" source="_rWuqkEr4Eemntv5tDuspng" target="_rWqZIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rfY3UEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1453&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1453&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1520&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1453&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1453&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1521&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1453&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rW-iMEr4Eemntv5tDuspng" name="From__Debug__A__En__Failure__1455" source="_s9g1QErDEem2BZRQc2M93A" target="_rWqZIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rfDgIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1520&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1521&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rXAXYEr4Eemntv5tDuspng" name="PME_Trig1456" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rXEo0Er4Eemntv5tDuspng" name="PME_Trig1457" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rXI6QEr4Eemntv5tDuspng" name="PME_Trig1458" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rXNywEr4Eemntv5tDuspng" name="PME_Trig1459" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rXSEMEr4Eemntv5tDuspng" name="PME_Trig1460" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rXVukEr4Eemntv5tDuspng" name="PME_Trig1461" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rXccQEr4Eemntv5tDuspng" name="PME_Trig1462" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rXgGoEr4Eemntv5tDuspng" name="PME_Trig1463" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rXmNQEr4Eemntv5tDuspng" name="PME_Trig1464" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rXnbYEr4Eemntv5tDuspng" name="PME_Trig1465" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rXoCcEr4Eemntv5tDuspng" name="PME_Trig1466" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rXrFwEr4Eemntv5tDuspng" name="PME_Trig1467" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rXwlUEr4Eemntv5tDuspng" name="PME_Trig1468" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rX2E4Er4Eemntv5tDuspng" name="PME_Trig1469" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rX_O0Er4Eemntv5tDuspng" name="PME_Trig1470" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rYF8gEr4Eemntv5tDuspng" name="PME_Trig1471" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rYKN8Er4Eemntv5tDuspng" name="PME_Trig1472" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rYQ7oEr4Eemntv5tDuspng" name="PME_Trig1473" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rYZegEr4Eemntv5tDuspng" name="PME_Trig1474" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rYbTsEr4Eemntv5tDuspng" name="PME_Trig1475" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rYflIEr4Eemntv5tDuspng" name="PME_Trig1476" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rYiocEr4Eemntv5tDuspng" name="From__Debug__B__Ex__Failure__1477" source="_s9dx8ErDEem2BZRQc2M93A" target="_rWqZIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_re69QEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1520&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1521&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rYkdoEr4Eemntv5tDuspng" name="PME_Trig1478" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rYlrwEr4Eemntv5tDuspng" name="PME_Trig1479" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rYtAgEr4Eemntv5tDuspng" name="PME_Trig1480" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rY2KcEr4Eemntv5tDuspng" name="PME_Trig1481" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rZCXsEr4Eemntv5tDuspng" name="PME_Trig1482" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rZH3QEr4Eemntv5tDuspng" name="PME_Trig1483" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rZRBMEr4Eemntv5tDuspng" name="PME_Trig1484" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rZYV8Er4Eemntv5tDuspng" name="PME_Trig1485" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rZdOcEr4Eemntv5tDuspng" name="PME_Trig1486" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rZhf4Er4Eemntv5tDuspng" name="PME_Trig1487" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rZj8IEr4Eemntv5tDuspng" name="PME_Trig1488" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rZoNkEr4Eemntv5tDuspng" name="PME_Trig1489" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rZttIEr4Eemntv5tDuspng" name="PME_Trig1490" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rZyloEr4Eemntv5tDuspng" name="PME_Trig1491" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rZ1o8Er4Eemntv5tDuspng" name="PME_Trig1492" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rZ5TUEr4Eemntv5tDuspng" name="PME_Trig1493" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rZ_Z8Er4Eemntv5tDuspng" name="PME_Trig1494" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_raCdQEr4Eemntv5tDuspng" name="PME_Trig1495" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_raIj4Er4Eemntv5tDuspng" name="PME_Trig1496" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_raOqgEr4Eemntv5tDuspng" name="PME_Trig1497" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rbMT0Er4Eemntv5tDuspng" name="From__Debug__B__Ac__purgeotherMessage__1498" source="_s9fAEErDEem2BZRQc2M93A" target="_rWqZIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rfKN0Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1520&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1521&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rbRMUEr4Eemntv5tDuspng" name="PME_Trig1499" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rbTokEr4Eemntv5tDuspng" name="PME_Trig1500" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rbdZkEr4Eemntv5tDuspng" name="PME_Trig1501" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rboYsEr4Eemntv5tDuspng" name="PME_Trig1502" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rbywwEr4Eemntv5tDuspng" name="PME_Trig1503" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rb9v4Er4Eemntv5tDuspng" name="PME_Trig1504" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rcIvAEr4Eemntv5tDuspng" name="PME_Trig1505" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rcQq0Er4Eemntv5tDuspng" name="PME_Trig1506" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rcX_kEr4Eemntv5tDuspng" name="PME_Trig1507" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rcZ0wEr4Eemntv5tDuspng" name="PME_Trig1508" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rchJgEr4Eemntv5tDuspng" name="PME_Trig1509" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rcmCAEr4Eemntv5tDuspng" name="PME_Trig1510" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rcsvsEr4Eemntv5tDuspng" name="PME_Trig1511" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rcvzAEr4Eemntv5tDuspng" name="PME_Trig1512" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rc2gsEr4Eemntv5tDuspng" name="PME_Trig1513" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rc4V4Er4Eemntv5tDuspng" name="PME_Trig1514" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rdARsEr4Eemntv5tDuspng" name="PME_Trig1515" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_reNLkEr4Eemntv5tDuspng" name="PME_Trig1516" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_reSrIEr4Eemntv5tDuspng" name="PME_Trig1517" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_reopYEr4Eemntv5tDuspng" name="PME_Trig1518" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_reqekEr4Eemntv5tDuspng" name="PME_Trig1519" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rezogEr4Eemntv5tDuspng" name="To__Debug__A__En__Failure__1520" guard="_rfou8Ur4Eemntv5tDuspng" source="_rWqZIEr4Eemntv5tDuspng" target="_s9g1QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rfou8Ur4Eemntv5tDuspng" name="PME_checkDecesion1526">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rfou8Er4Eemntv5tDuspng" name="PME_checkDecesion1526">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Failure__1520&quot;,&quot;Debug__A__En__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_re0PkEr4Eemntv5tDuspng" name="To__Debug__B__Ex__Failure__1521" guard="_rf1jQUr4Eemntv5tDuspng" source="_rWqZIEr4Eemntv5tDuspng" target="_s9dx8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rf1jQUr4Eemntv5tDuspng" name="PME_checkDecesion1528">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rf1jQEr4Eemntv5tDuspng" name="PME_checkDecesion1528">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__1521&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_re0PkUr4Eemntv5tDuspng" name="To__Debug__B__Ac__purgeotherMessage__1522" guard="_rf0VIUr4Eemntv5tDuspng" source="_rWqZIEr4Eemntv5tDuspng" target="_s9fAEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rf0VIUr4Eemntv5tDuspng" name="PME_checkDecesion1527">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rf0VIEr4Eemntv5tDuspng" name="PME_checkDecesion1527">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__purgeotherMessage__1522&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_re2EwEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1523" source="_rWdk0Er4Eemntv5tDuspng" target="_rWqZIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rfTXwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1520&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1521&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_re2r0Er4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1524" guard="_rfgMEUr4Eemntv5tDuspng" source="_rWqZIEr4Eemntv5tDuspng" target="_rWjrcEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rfgMEUr4Eemntv5tDuspng" name="PME_checkDecesion1525">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rfgMEEr4Eemntv5tDuspng" name="PME_checkDecesion1525">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1524&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s9dx8ErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9dx8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9ltwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__301">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9fAEErDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9fAEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;purgeotherMessage&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9oxEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage__302">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9g1QErDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9g1QUrDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9uQoErDEem2BZRQc2M93A" name="Debug__A__En__Failure__304">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rWqZIEr4Eemntv5tDuspng" name="DecesionPoint__1452" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rWuqkEr4Eemntv5tDuspng" name="Init__State__1453"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s97sAUrDEem2BZRQc2M93A" name="Debug__C__initTimer">
              <connectionPoint xmi:id="_s986IUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s99hMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_rBokUEr4Eemntv5tDuspng" name="From__Parent__1052" kind="entryPoint"/>
              <connectionPoint xmi:id="_rBrAkEr4Eemntv5tDuspng" name="To__Parent__1054" kind="exitPoint"/>
              <region xmi:id="_s98TEErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s-S4YUrDEem2BZRQc2M93A" name="Debug__end__trans__initTimer" source="_s-QcIErDEem2BZRQc2M93A" target="_s99hMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-jXEErDEem2BZRQc2M93A" name="Debug__end__trans__initTimer__336">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__end__trans__initTimer&quot;,(char *)&quot;Debug__A__En__initTimer&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-S4YkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rB0KgEr4Eemntv5tDuspng" name="Trans__en1058" source="_s986IUrDEem2BZRQc2M93A" target="_rBwgIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rDGj8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rB0xkEr4Eemntv5tDuspng" name="Trans__Init__State__10571059" source="_rBy8YEr4Eemntv5tDuspng" target="_rBwgIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rC-oIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1057&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1057&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1057&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rB0xkUr4Eemntv5tDuspng" name="Trans__ex1060" source="_s99hMUrDEem2BZRQc2M93A" target="_rBwgIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rDRjEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rB5DAEr4Eemntv5tDuspng" name="From__Debug__A__En__initTimer__1061" source="_s-QcIErDEem2BZRQc2M93A" target="_rBwgIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rDEuwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rB64MEr4Eemntv5tDuspng" name="PME_Trig1062" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rCBl4Er4Eemntv5tDuspng" name="PME_Trig1063" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rCC0AEr4Eemntv5tDuspng" name="PME_Trig1064" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rCECIEr4Eemntv5tDuspng" name="PME_Trig1065" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rCGeYEr4Eemntv5tDuspng" name="PME_Trig1066" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rCITkEr4Eemntv5tDuspng" name="PME_Trig1067" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rCKIwEr4Eemntv5tDuspng" name="PME_Trig1068" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rCQPYEr4Eemntv5tDuspng" name="PME_Trig1069" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rCSroEr4Eemntv5tDuspng" name="PME_Trig1070" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rCUg0Er4Eemntv5tDuspng" name="PME_Trig1071" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rCccoEr4Eemntv5tDuspng" name="PME_Trig1072" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rCdqwEr4Eemntv5tDuspng" name="PME_Trig1073" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rCgHAEr4Eemntv5tDuspng" name="PME_Trig1074" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rCnbwEr4Eemntv5tDuspng" name="PME_Trig1075" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rCqfEEr4Eemntv5tDuspng" name="PME_Trig1076" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rCrtMEr4Eemntv5tDuspng" name="PME_Trig1077" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rCs7UEr4Eemntv5tDuspng" name="PME_Trig1078" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rCv-oEr4Eemntv5tDuspng" name="PME_Trig1079" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rCxMwEr4Eemntv5tDuspng" name="PME_Trig1080" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rCya4Er4Eemntv5tDuspng" name="PME_Trig1081" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rC4hgEr4Eemntv5tDuspng" name="To__Debug__A__En__initTimer__1082" guard="_rDSKIUr4Eemntv5tDuspng" source="_rBwgIEr4Eemntv5tDuspng" target="_s-QcIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rDSKIUr4Eemntv5tDuspng" name="PME_checkDecesion1085">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rDSKIEr4Eemntv5tDuspng" name="PME_checkDecesion1085">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__initTimer__1082&quot;,&quot;Debug__A__En__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rC7k0Er4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1083" source="_rBokUEr4Eemntv5tDuspng" target="_rBwgIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rDPG0Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1084&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rC7k0Ur4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1084" guard="_rDXpsUr4Eemntv5tDuspng" source="_rBwgIEr4Eemntv5tDuspng" target="_rBrAkEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rDXpsUr4Eemntv5tDuspng" name="PME_checkDecesion1086">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rDXpsEr4Eemntv5tDuspng" name="PME_checkDecesion1086">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1084&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s-QcIErDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-QcIUrDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-bbQErDEem2BZRQc2M93A" name="Debug__A__En__initTimer__330">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rBwgIEr4Eemntv5tDuspng" name="DecesionPoint__1056" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rBy8YEr4Eemntv5tDuspng" name="Init__State__1057"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_-6cErDEem2BZRQc2M93A" name="Debug__Path__ActiveMode" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAAIkErDEem2BZRQc2M93A" name="Debug__C__ActiveMode">
              <connectionPoint xmi:id="_tAAvoUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_sKykwEr4Eemntv5tDuspng" name="From__Parent__2208" kind="entryPoint"/>
              <connectionPoint xmi:id="_sK1BAEr4Eemntv5tDuspng" name="To__Parent__2210" kind="exitPoint"/>
              <region xmi:id="_tAAIkUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_sK55gEr4Eemntv5tDuspng" name="Trans__en2214" source="_tAAvoUrDEem2BZRQc2M93A" target="_sK4EUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sLsjsEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__2238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__2240&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sK55gUr4Eemntv5tDuspng" name="Trans__Init__State__22132215" source="_sK5ScEr4Eemntv5tDuspng" target="_sK4EUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sLmdEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2213&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__2238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2213&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__2240&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2213&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sK7HoEr4Eemntv5tDuspng" name="From__Debug__A__Ac__ActiveMode__2216" source="_tATqkErDEem2BZRQc2M93A" target="_sK4EUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sLjZwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__2238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__2240&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sK7usEr4Eemntv5tDuspng" name="PME_Trig2217" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sK-K8Er4Eemntv5tDuspng" name="PME_Trig2218" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sLBOQEr4Eemntv5tDuspng" name="PME_Trig2219" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sLCcYEr4Eemntv5tDuspng" name="PME_Trig2220" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sLDqgEr4Eemntv5tDuspng" name="PME_Trig2221" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sLERkEr4Eemntv5tDuspng" name="PME_Trig2222" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_sLFfsEr4Eemntv5tDuspng" name="PME_Trig2223" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sLH78Er4Eemntv5tDuspng" name="PME_Trig2224" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sLK_QEr4Eemntv5tDuspng" name="PME_Trig2225" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_sLMNYEr4Eemntv5tDuspng" name="PME_Trig2226" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sLNbgEr4Eemntv5tDuspng" name="PME_Trig2227" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sLOpoEr4Eemntv5tDuspng" name="PME_Trig2228" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_sLP3wEr4Eemntv5tDuspng" name="PME_Trig2229" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sLRs8Er4Eemntv5tDuspng" name="PME_Trig2230" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sLV-YEr4Eemntv5tDuspng" name="PME_Trig2231" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sLWlcEr4Eemntv5tDuspng" name="PME_Trig2232" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_sLXzkEr4Eemntv5tDuspng" name="PME_Trig2233" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sLZBsEr4Eemntv5tDuspng" name="PME_Trig2234" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_sLaP0Er4Eemntv5tDuspng" name="PME_Trig2235" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_sLdTIEr4Eemntv5tDuspng" name="PME_Trig2236" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sLgWcEr4Eemntv5tDuspng" name="PME_Trig2237" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_sLhkkEr4Eemntv5tDuspng" name="To__Debug__A__Ac__ActiveMode__2238" guard="_sLtKwUr4Eemntv5tDuspng" source="_sK4EUEr4Eemntv5tDuspng" target="_tATqkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sLtKwUr4Eemntv5tDuspng" name="PME_checkDecesion2241">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sLtKwEr4Eemntv5tDuspng" name="PME_checkDecesion2241">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ActiveMode__2238&quot;,&quot;Debug__A__Ac__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sLiLoEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__2239" source="_sKykwEr4Eemntv5tDuspng" target="_sK4EUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sLrVkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__2238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__2240&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sLiysEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__2240" guard="_sLtKw0r4Eemntv5tDuspng" source="_sK4EUEr4Eemntv5tDuspng" target="_sK1BAEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sLtKw0r4Eemntv5tDuspng" name="PME_checkDecesion2242">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sLtKwkr4Eemntv5tDuspng" name="PME_checkDecesion2242">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2240&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tATqkErDEem2BZRQc2M93A" name="Debug__A__Ac__ActiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tATqkUrDEem2BZRQc2M93A" name="Debug__A__Ac__ActiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ActiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sK4EUEr4Eemntv5tDuspng" name="DecesionPoint__2212" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sK5ScEr4Eemntv5tDuspng" name="Init__State__2213"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tAaYQErDEem2BZRQc2M93A" name="Debug__Path__Recover" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAa_UUrDEem2BZRQc2M93A" name="Debug__C__Recover">
              <connectionPoint xmi:id="_tAbmYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tAc0gUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_rDaF8Ur4Eemntv5tDuspng" name="From__Parent__1088" kind="entryPoint"/>
              <connectionPoint xmi:id="_rDe-cEr4Eemntv5tDuspng" name="To__Parent__1090" kind="exitPoint"/>
              <region xmi:id="_tAa_UkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tAw9kErDEem2BZRQc2M93A" name="Debug__init__trans__Recover" source="_tAbmYUrDEem2BZRQc2M93A" target="_tAt6QErDEem2BZRQc2M93A"/>
                <transition xmi:id="_tAxko0rDEem2BZRQc2M93A" name="Debug__end__trans__Recover" source="_tAvvcErDEem2BZRQc2M93A" target="_tAc0gUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tA_AAErDEem2BZRQc2M93A" name="Debug__end__trans__Recover__420">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__end__trans__Recover&quot;,(char *)&quot;Debug__A__Ac__Recover&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAxkpErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rDlFEEr4Eemntv5tDuspng" name="Trans__ex1094" source="_tAc0gUrDEem2BZRQc2M93A" target="_rDgzoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rGMUMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1139&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1140&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1142&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rDlFEUr4Eemntv5tDuspng" name="Trans__Init__State__10931095" source="_rDjP4Er4Eemntv5tDuspng" target="_rDgzoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rGP-kEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1093&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1139&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1093&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1140&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1093&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1142&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1093&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rDrLsEr4Eemntv5tDuspng" name="From__Debug__B__Ex__Failure__1096" source="_tAt6QErDEem2BZRQc2M93A" target="_rDgzoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rF-40Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1139&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1140&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1142&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rDu2EEr4Eemntv5tDuspng" name="PME_Trig1097" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rDygcEr4Eemntv5tDuspng" name="PME_Trig1098" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rDzukEr4Eemntv5tDuspng" name="PME_Trig1099" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rD1jwEr4Eemntv5tDuspng" name="PME_Trig1100" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rD5OIEr4Eemntv5tDuspng" name="PME_Trig1101" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rD6cQEr4Eemntv5tDuspng" name="PME_Trig1102" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rECYEEr4Eemntv5tDuspng" name="PME_Trig1103" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rEHQkEr4Eemntv5tDuspng" name="PME_Trig1104" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rEJFwEr4Eemntv5tDuspng" name="PME_Trig1105" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rEMJEEr4Eemntv5tDuspng" name="PME_Trig1106" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rEOlUEr4Eemntv5tDuspng" name="PME_Trig1107" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rEWhIEr4Eemntv5tDuspng" name="PME_Trig1108" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rEXvQEr4Eemntv5tDuspng" name="PME_Trig1109" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rEbZoEr4Eemntv5tDuspng" name="PME_Trig1110" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rEec8Er4Eemntv5tDuspng" name="PME_Trig1111" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rEhgQEr4Eemntv5tDuspng" name="PME_Trig1112" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rEiuYEr4Eemntv5tDuspng" name="PME_Trig1113" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rEpcEEr4Eemntv5tDuspng" name="PME_Trig1114" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rErRQEr4Eemntv5tDuspng" name="PME_Trig1115" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rEsfYEr4Eemntv5tDuspng" name="PME_Trig1116" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rEttgEr4Eemntv5tDuspng" name="PME_Trig1117" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rEwJwEr4Eemntv5tDuspng" name="From__Debug__A__Ac__Recover__1118" source="_tAvvcErDEem2BZRQc2M93A" target="_rDgzoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rGFmgEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1139&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1140&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1142&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rEz0IEr4Eemntv5tDuspng" name="PME_Trig1119" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rE2QYEr4Eemntv5tDuspng" name="PME_Trig1120" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rE3egEr4Eemntv5tDuspng" name="PME_Trig1121" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rE4soEr4Eemntv5tDuspng" name="PME_Trig1122" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rE-zQEr4Eemntv5tDuspng" name="PME_Trig1123" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rFBPgEr4Eemntv5tDuspng" name="PME_Trig1124" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rFGIAEr4Eemntv5tDuspng" name="PME_Trig1125" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rFOD0Er4Eemntv5tDuspng" name="PME_Trig1126" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rFPR8Er4Eemntv5tDuspng" name="PME_Trig1127" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rFQgEEr4Eemntv5tDuspng" name="PME_Trig1128" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rFTjYEr4Eemntv5tDuspng" name="PME_Trig1129" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rFVYkEr4Eemntv5tDuspng" name="PME_Trig1130" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rFaREEr4Eemntv5tDuspng" name="PME_Trig1131" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rFcGQEr4Eemntv5tDuspng" name="PME_Trig1132" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rFgXsEr4Eemntv5tDuspng" name="PME_Trig1133" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rFlQMEr4Eemntv5tDuspng" name="PME_Trig1134" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rFoTgEr4Eemntv5tDuspng" name="PME_Trig1135" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rFr94Er4Eemntv5tDuspng" name="PME_Trig1136" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rFvoQEr4Eemntv5tDuspng" name="PME_Trig1137" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rFzSoEr4Eemntv5tDuspng" name="PME_Trig1138" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rF5ZQEr4Eemntv5tDuspng" name="To__Debug__B__Ex__Failure__1139" guard="_rGWsQUr4Eemntv5tDuspng" source="_rDgzoEr4Eemntv5tDuspng" target="_tAt6QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rGWsQUr4Eemntv5tDuspng" name="PME_checkDecesion1143">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rGWsQEr4Eemntv5tDuspng" name="PME_checkDecesion1143">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__1139&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rF5ZQUr4Eemntv5tDuspng" name="To__Debug__A__Ac__Recover__1140" guard="_rGXTUUr4Eemntv5tDuspng" source="_rDgzoEr4Eemntv5tDuspng" target="_tAvvcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rGXTUUr4Eemntv5tDuspng" name="PME_checkDecesion1144">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rGXTUEr4Eemntv5tDuspng" name="PME_checkDecesion1144">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Recover__1140&quot;,&quot;Debug__A__Ac__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rF8ckEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1141" source="_rDaF8Ur4Eemntv5tDuspng" target="_rDgzoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rGWFMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1139&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1140&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1142&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rF8ckUr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1142" guard="_rGX6YUr4Eemntv5tDuspng" source="_rDgzoEr4Eemntv5tDuspng" target="_rDe-cEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rGX6YUr4Eemntv5tDuspng" name="PME_checkDecesion1145">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rGX6YEr4Eemntv5tDuspng" name="PME_checkDecesion1145">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1142&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tAt6QErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAt6QUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tAyywUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__413">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tAvvcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAwWgErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Recover&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tA5gcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover__415">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rDgzoEr4Eemntv5tDuspng" name="DecesionPoint__1092" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rDjP4Er4Eemntv5tDuspng" name="Init__State__1093"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tBD4gErDEem2BZRQc2M93A" name="Debug__Path__BeingMaster" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tBFGoUrDEem2BZRQc2M93A" name="Debug__C__BeingMaster">
              <connectionPoint xmi:id="_tBIJ8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_rf7C0Er4Eemntv5tDuspng" name="From__Parent__1530" kind="entryPoint"/>
              <connectionPoint xmi:id="_rgAiYEr4Eemntv5tDuspng" name="To__Parent__1532" kind="exitPoint"/>
              <region xmi:id="_tBFGokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tBYooUrDEem2BZRQc2M93A" name="Debug__Ac__BeingMaster" source="_tBVlUUrDEem2BZRQc2M93A" target="_tBWzcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBZPsUrDEem2BZRQc2M93A" name="BeMaster" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(360000);
    TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__Ac__BeingMaster&quot;,(char *)&quot;Debug__B__Ac__BeingMaster&quot;,(char *)&quot;Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBZPsErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBZPskrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tBWzcErDEem2BZRQc2M93A" target="_tBYBkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBZ2wErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__BeingMaster&quot;,(char *)&quot;Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBZPs0rDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBZ2wUrDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster" source="_tBYBkErDEem2BZRQc2M93A" target="_tBIJ8UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBmrEErDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster__442">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__end__trans__BeingMaster&quot;,(char *)&quot;Debug__A__En__BeingMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBad0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rgdOUEr4Eemntv5tDuspng" name="Trans__Init__State__15351536" source="_rgPy8Er4Eemntv5tDuspng" target="_rgIeMEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rkZ6MEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1535&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__1603&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1535&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1535&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1535&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__1601&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1535&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rgdOUUr4Eemntv5tDuspng" name="Trans__ex1537" source="_tBIJ8UrDEem2BZRQc2M93A" target="_rgIeMEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rkRXUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__1603&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__1601&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rgiG0Er4Eemntv5tDuspng" name="From__Debug__A__En__BeingMaster__1538" source="_tBYBkErDEem2BZRQc2M93A" target="_rgIeMEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rkJbgEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__1603&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__1601&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rgwJQEr4Eemntv5tDuspng" name="PME_Trig1539" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rg4sIEr4Eemntv5tDuspng" name="PME_Trig1540" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rhJK0Er4Eemntv5tDuspng" name="PME_Trig1541" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rhLAAEr4Eemntv5tDuspng" name="PME_Trig1542" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rhXNQEr4Eemntv5tDuspng" name="PME_Trig1543" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rhhlUEr4Eemntv5tDuspng" name="PME_Trig1544" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rhkooEr4Eemntv5tDuspng" name="PME_Trig1545" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rhnE4Er4Eemntv5tDuspng" name="PME_Trig1546" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rhrWUEr4Eemntv5tDuspng" name="PME_Trig1547" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rhuZoEr4Eemntv5tDuspng" name="PME_Trig1548" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rhxc8Er4Eemntv5tDuspng" name="PME_Trig1549" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rhyrEEr4Eemntv5tDuspng" name="PME_Trig1550" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rh4xsEr4Eemntv5tDuspng" name="PME_Trig1551" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rh7N8Er4Eemntv5tDuspng" name="PME_Trig1552" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rh9DIEr4Eemntv5tDuspng" name="PME_Trig1553" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_riB7oEr4Eemntv5tDuspng" name="PME_Trig1554" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_riDJwEr4Eemntv5tDuspng" name="PME_Trig1555" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_riGNEEr4Eemntv5tDuspng" name="PME_Trig1556" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_riG0IEr4Eemntv5tDuspng" name="PME_Trig1557" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_riICQEr4Eemntv5tDuspng" name="PME_Trig1558" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_riLsoEr4Eemntv5tDuspng" name="From__Debug__A__Ac__BeingMaster__1559" source="_tBWzcErDEem2BZRQc2M93A" target="_rgIeMEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rkUaoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__1603&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__1601&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_riPXAEr4Eemntv5tDuspng" name="PME_Trig1560" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_riQlIEr4Eemntv5tDuspng" name="PME_Trig1561" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_riU2kEr4Eemntv5tDuspng" name="PME_Trig1562" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_riWrwEr4Eemntv5tDuspng" name="PME_Trig1563" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_riX54Er4Eemntv5tDuspng" name="PME_Trig1564" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_riaWIEr4Eemntv5tDuspng" name="PME_Trig1565" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ricLUEr4Eemntv5tDuspng" name="PME_Trig1566" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rigcwEr4Eemntv5tDuspng" name="PME_Trig1567" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rihq4Er4Eemntv5tDuspng" name="PME_Trig1568" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rijgEEr4Eemntv5tDuspng" name="PME_Trig1569" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rilVQEr4Eemntv5tDuspng" name="PME_Trig1570" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ripmsEr4Eemntv5tDuspng" name="PME_Trig1571" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_riq00Er4Eemntv5tDuspng" name="PME_Trig1572" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_risC8Er4Eemntv5tDuspng" name="PME_Trig1573" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_riufMEr4Eemntv5tDuspng" name="PME_Trig1574" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rivtUEr4Eemntv5tDuspng" name="PME_Trig1575" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ri1M4Er4Eemntv5tDuspng" name="PME_Trig1576" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ri43QEr4Eemntv5tDuspng" name="PME_Trig1577" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ri9IsEr4Eemntv5tDuspng" name="PME_Trig1578" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rjAMAEr4Eemntv5tDuspng" name="PME_Trig1579" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rjCoQEr4Eemntv5tDuspng" name="From__Debug__B__Ac__BeingMaster__1580" source="_tBVlUUrDEem2BZRQc2M93A" target="_rgIeMEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rkL3wEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__1603&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__1601&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rjDPUEr4Eemntv5tDuspng" name="PME_Trig1581" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rjEdcEr4Eemntv5tDuspng" name="PME_Trig1582" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rjG5sEr4Eemntv5tDuspng" name="PME_Trig1583" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rjKkEEr4Eemntv5tDuspng" name="PME_Trig1584" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rjMZQEr4Eemntv5tDuspng" name="PME_Trig1585" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rjNnYEr4Eemntv5tDuspng" name="PME_Trig1586" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rjSf4Er4Eemntv5tDuspng" name="PME_Trig1587" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rjTuAEr4Eemntv5tDuspng" name="PME_Trig1588" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rjWxUEr4Eemntv5tDuspng" name="PME_Trig1589" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rjX_cEr4Eemntv5tDuspng" name="PME_Trig1590" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rjdfAEr4Eemntv5tDuspng" name="PME_Trig1591" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rjgiUEr4Eemntv5tDuspng" name="PME_Trig1592" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rjhwcEr4Eemntv5tDuspng" name="PME_Trig1593" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rjnQAEr4Eemntv5tDuspng" name="PME_Trig1594" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rjpFMEr4Eemntv5tDuspng" name="PME_Trig1595" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rjtWoEr4Eemntv5tDuspng" name="PME_Trig1596" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rjy2MEr4Eemntv5tDuspng" name="PME_Trig1597" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rj1ScEr4Eemntv5tDuspng" name="PME_Trig1598" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rj3HoEr4Eemntv5tDuspng" name="PME_Trig1599" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rj8nMEr4Eemntv5tDuspng" name="PME_Trig1600" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rkARkEr4Eemntv5tDuspng" name="To__Debug__A__En__BeingMaster__1601" guard="_rkc9gUr4Eemntv5tDuspng" source="_rgIeMEr4Eemntv5tDuspng" target="_tBYBkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rkc9gUr4Eemntv5tDuspng" name="PME_checkDecesion1609">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rkc9gEr4Eemntv5tDuspng" name="PME_checkDecesion1609">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__BeingMaster__1601&quot;,&quot;Debug__A__En__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rkA4oEr4Eemntv5tDuspng" name="To__Debug__A__Ac__BeingMaster__1602" guard="_rkbvYUr4Eemntv5tDuspng" source="_rgIeMEr4Eemntv5tDuspng" target="_tBWzcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rkbvYUr4Eemntv5tDuspng" name="PME_checkDecesion1608">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rkbvYEr4Eemntv5tDuspng" name="PME_checkDecesion1608">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeingMaster__1602&quot;,&quot;Debug__A__Ac__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rkA4oUr4Eemntv5tDuspng" name="To__Debug__B__Ac__BeingMaster__1603" guard="_rkahQUr4Eemntv5tDuspng" source="_rgIeMEr4Eemntv5tDuspng" target="_tBVlUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rkahQUr4Eemntv5tDuspng" name="PME_checkDecesion1606">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rkahQEr4Eemntv5tDuspng" name="PME_checkDecesion1606">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BeingMaster__1603&quot;,&quot;Debug__B__Ac__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rkFxIEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1604" source="_rf7C0Er4Eemntv5tDuspng" target="_rgIeMEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rkQJMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__1603&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__1601&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rkGYMEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1605" guard="_rkbIUUr4Eemntv5tDuspng" source="_rgIeMEr4Eemntv5tDuspng" target="_rgAiYEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rkbIUUr4Eemntv5tDuspng" name="PME_checkDecesion1607">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rkbIUEr4Eemntv5tDuspng" name="PME_checkDecesion1607">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1605&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tBVlUUrDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBWMYErDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeingMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBbr8UrDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster__434">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBWzcErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBWzcUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeingMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBfWUErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster__435">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBYBkErDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBYBkUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBhLgUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster__436">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rgIeMEr4Eemntv5tDuspng" name="DecesionPoint__1534" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rgPy8Er4Eemntv5tDuspng" name="Init__State__1535"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tCc_oErDEem2BZRQc2M93A" name="Debug__Path__PassiveMode" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tC5EgErDEem2BZRQc2M93A" name="Debug__Path__Init__StandBy__3" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tC6SoUrDEem2BZRQc2M93A" name="Debug__C__Init__StandBy__3">
              <connectionPoint xmi:id="_tC7gwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tC8u4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_rNZvcEr4Eemntv5tDuspng" name="From__Parent__1286" kind="entryPoint"/>
              <connectionPoint xmi:id="_rNa9kEr4Eemntv5tDuspng" name="To__Parent__1288" kind="exitPoint"/>
              <region xmi:id="_tC6SokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tDQ38ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3" source="_tC7gwErDEem2BZRQc2M93A" target="_tDN0oUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDZa0ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3__499">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__init__trans__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDQ38UrDEem2BZRQc2M93A" name="Debug__Ac__Init__StandBy__3" source="_tDN0oUrDEem2BZRQc2M93A" target="_tDPCwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDRfAUrDEem2BZRQc2M93A" name="InitLog" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tDRfAErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rNfPAEr4Eemntv5tDuspng" name="Trans__Init__State__12911292" source="_rNcywEr4Eemntv5tDuspng" target="_rNbkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rPeMAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1291&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1291&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1291&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1338&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1291&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rNgdIEr4Eemntv5tDuspng" name="Trans__ex1293" source="_tC8u4UrDEem2BZRQc2M93A" target="_rNbkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rPkSoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1338&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rNkukEr4Eemntv5tDuspng" name="From__Debug__A__Ac__Init__StandBy__3__1294" source="_tDPCwErDEem2BZRQc2M93A" target="_rNbkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rPfaIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1338&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rNlVoEr4Eemntv5tDuspng" name="PME_Trig1295" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rNmjwEr4Eemntv5tDuspng" name="PME_Trig1296" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rNoY8Er4Eemntv5tDuspng" name="PME_Trig1297" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rNyxAEr4Eemntv5tDuspng" name="PME_Trig1298" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rN0mMEr4Eemntv5tDuspng" name="PME_Trig1299" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rN4QkEr4Eemntv5tDuspng" name="PME_Trig1300" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rN9wIEr4Eemntv5tDuspng" name="PME_Trig1301" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rN--QEr4Eemntv5tDuspng" name="PME_Trig1302" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rOBagEr4Eemntv5tDuspng" name="PME_Trig1303" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rOD2wEr4Eemntv5tDuspng" name="PME_Trig1304" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rOG6EEr4Eemntv5tDuspng" name="PME_Trig1305" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rOLLgEr4Eemntv5tDuspng" name="PME_Trig1306" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rONnwEr4Eemntv5tDuspng" name="PME_Trig1307" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rOO14Er4Eemntv5tDuspng" name="PME_Trig1308" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rOTuYEr4Eemntv5tDuspng" name="PME_Trig1309" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rOWKoEr4Eemntv5tDuspng" name="PME_Trig1310" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rOX_0Er4Eemntv5tDuspng" name="PME_Trig1311" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rOZN8Er4Eemntv5tDuspng" name="PME_Trig1312" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rOcRQEr4Eemntv5tDuspng" name="PME_Trig1313" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rOfUkEr4Eemntv5tDuspng" name="PME_Trig1314" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rOmCQEr4Eemntv5tDuspng" name="PME_Trig1315" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rOmpUEr4Eemntv5tDuspng" name="From__Debug__B__Ac__Init__StandBy__3__1316" source="_tDN0oUrDEem2BZRQc2M93A" target="_rNbkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rPmu4Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1338&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rOnQYEr4Eemntv5tDuspng" name="PME_Trig1317" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rOoegEr4Eemntv5tDuspng" name="PME_Trig1318" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rOq6wEr4Eemntv5tDuspng" name="PME_Trig1319" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rOsI4Er4Eemntv5tDuspng" name="PME_Trig1320" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rOtXAEr4Eemntv5tDuspng" name="PME_Trig1321" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rOwaUEr4Eemntv5tDuspng" name="PME_Trig1322" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rOzdoEr4Eemntv5tDuspng" name="PME_Trig1323" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rO2g8Er4Eemntv5tDuspng" name="PME_Trig1324" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rO3vEEr4Eemntv5tDuspng" name="PME_Trig1325" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rO9OoEr4Eemntv5tDuspng" name="PME_Trig1326" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rO_D0Er4Eemntv5tDuspng" name="PME_Trig1327" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rPA5AEr4Eemntv5tDuspng" name="PME_Trig1328" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rPCHIEr4Eemntv5tDuspng" name="PME_Trig1329" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rPJb4Er4Eemntv5tDuspng" name="PME_Trig1330" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rPLREEr4Eemntv5tDuspng" name="PME_Trig1331" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rPMfMEr4Eemntv5tDuspng" name="PME_Trig1332" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rPQwoEr4Eemntv5tDuspng" name="PME_Trig1333" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rPR-wEr4Eemntv5tDuspng" name="PME_Trig1334" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rPUbAEr4Eemntv5tDuspng" name="PME_Trig1335" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rPVpIEr4Eemntv5tDuspng" name="PME_Trig1336" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rPahoEr4Eemntv5tDuspng" name="To__Debug__A__Ac__Init__StandBy__3__1337" guard="_rPokEUr4Eemntv5tDuspng" source="_rNbkoEr4Eemntv5tDuspng" target="_tDPCwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rPokEUr4Eemntv5tDuspng" name="PME_checkDecesion1342">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rPokEEr4Eemntv5tDuspng" name="PME_checkDecesion1342">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__StandBy__3__1337&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rPbIsEr4Eemntv5tDuspng" name="To__Debug__B__Ac__Init__StandBy__3__1338" guard="_rPpLIUr4Eemntv5tDuspng" source="_rNbkoEr4Eemntv5tDuspng" target="_tDN0oUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rPpLIUr4Eemntv5tDuspng" name="PME_checkDecesion1343">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rPpLIEr4Eemntv5tDuspng" name="PME_checkDecesion1343">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__StandBy__3__1338&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rPbvwEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1339" source="_rNZvcEr4Eemntv5tDuspng" target="_rNbkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rPlgwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1338&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rPcW0Er4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1340" guard="_rPnV8Ur4Eemntv5tDuspng" source="_rNbkoEr4Eemntv5tDuspng" target="_rNa9kEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rPnV8Ur4Eemntv5tDuspng" name="PME_checkDecesion1341">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rPnV8Er4Eemntv5tDuspng" name="PME_checkDecesion1341">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1340&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tDN0oUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDObsErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDTUMUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3__495">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tDPCwErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDPCwUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDVJYUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3__496">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rNbkoEr4Eemntv5tDuspng" name="DecesionPoint__1290" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rNcywEr4Eemntv5tDuspng" name="Init__State__1291"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tEAe0ErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnounce" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tEBF4UrDEem2BZRQc2M93A" name="Debug__C__MasterAnnounce">
              <connectionPoint xmi:id="_tEC7EUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_rPqZQEr4Eemntv5tDuspng" name="From__Parent__1345" kind="entryPoint"/>
              <connectionPoint xmi:id="_rPs1gEr4Eemntv5tDuspng" name="To__Parent__1347" kind="exitPoint"/>
              <region xmi:id="_tEBs8ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tEUn4UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tEQWcUrDEem2BZRQc2M93A" target="_tERkkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEVO8ErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEUn4krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEVO8UrDEem2BZRQc2M93A" name="Debug__AC__MasterAnnounce" source="_tERkkErDEem2BZRQc2M93A" target="_tESysErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEV2AErDEem2BZRQc2M93A" name="MasterAnnounce" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;&quot;keepAliveStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__AC__MasterAnnounce&quot;,(char *)&quot;Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEVO8krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEV2AUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tESysErDEem2BZRQc2M93A" target="_tEUA0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEWdEErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEV2AkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEWdEUrDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnounce" source="_tEUA0ErDEem2BZRQc2M93A" target="_tEC7EUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEmUsErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnounce__542">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__end__trans__MasterAnnounce&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEWdEkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rP0KQEr4Eemntv5tDuspng" name="Trans__ex1351" source="_tEC7EUrDEem2BZRQc2M93A" target="_rPv40Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rV3H4Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1442&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rP0xUEr4Eemntv5tDuspng" name="Trans__Init__State__13501352" source="_rPyVEEr4Eemntv5tDuspng" target="_rPv40Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rWO7UEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1350&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1442&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1350&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1350&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1350&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1350&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1350&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rP97QEr4Eemntv5tDuspng" name="From__Debug__B__Ac__MasterAnnounce__1353" source="_tERkkErDEem2BZRQc2M93A" target="_rPv40Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rWHmkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1442&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rP_JYEr4Eemntv5tDuspng" name="PME_Trig1354" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rQDa0Er4Eemntv5tDuspng" name="PME_Trig1355" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rQJhcEr4Eemntv5tDuspng" name="PME_Trig1356" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rQPBAEr4Eemntv5tDuspng" name="PME_Trig1357" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rQRdQEr4Eemntv5tDuspng" name="PME_Trig1358" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rQVHoEr4Eemntv5tDuspng" name="PME_Trig1359" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rQffsEr4Eemntv5tDuspng" name="PME_Trig1360" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rQhU4Er4Eemntv5tDuspng" name="PME_Trig1361" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rQjKEEr4Eemntv5tDuspng" name="PME_Trig1362" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rQk_QEr4Eemntv5tDuspng" name="PME_Trig1363" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rQnbgEr4Eemntv5tDuspng" name="PME_Trig1364" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rQv-YEr4Eemntv5tDuspng" name="PME_Trig1365" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rQxMgEr4Eemntv5tDuspng" name="PME_Trig1366" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rQ0P0Er4Eemntv5tDuspng" name="PME_Trig1367" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rQ69gEr4Eemntv5tDuspng" name="PME_Trig1368" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rQ8LoEr4Eemntv5tDuspng" name="PME_Trig1369" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rQ-n4Er4Eemntv5tDuspng" name="PME_Trig1370" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rRFVkEr4Eemntv5tDuspng" name="PME_Trig1371" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rRK1IEr4Eemntv5tDuspng" name="PME_Trig1372" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rRN4cEr4Eemntv5tDuspng" name="PME_Trig1373" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rRPGkEr4Eemntv5tDuspng" name="From__Debug__B__Ex__RunAsMaster__1374" source="_tEQWcUrDEem2BZRQc2M93A" target="_rPv40Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rWCHAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1442&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rRQUsEr4Eemntv5tDuspng" name="PME_Trig1375" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rRRi0Er4Eemntv5tDuspng" name="PME_Trig1376" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rRXpcEr4Eemntv5tDuspng" name="PME_Trig1377" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rRb64Er4Eemntv5tDuspng" name="PME_Trig1378" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rRgzYEr4Eemntv5tDuspng" name="PME_Trig1379" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rRj2sEr4Eemntv5tDuspng" name="PME_Trig1380" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rRlE0Er4Eemntv5tDuspng" name="PME_Trig1381" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rRnhEEr4Eemntv5tDuspng" name="PME_Trig1382" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rRygMEr4Eemntv5tDuspng" name="PME_Trig1383" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rRzuUEr4Eemntv5tDuspng" name="PME_Trig1384" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rR2xoEr4Eemntv5tDuspng" name="PME_Trig1385" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rR4m0Er4Eemntv5tDuspng" name="PME_Trig1386" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rSAioEr4Eemntv5tDuspng" name="PME_Trig1387" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rSHQUEr4Eemntv5tDuspng" name="PME_Trig1388" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rSIecEr4Eemntv5tDuspng" name="PME_Trig1389" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rSNW8Er4Eemntv5tDuspng" name="PME_Trig1390" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rSQaQEr4Eemntv5tDuspng" name="PME_Trig1391" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rSRoYEr4Eemntv5tDuspng" name="PME_Trig1392" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rSS2gEr4Eemntv5tDuspng" name="PME_Trig1393" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rSVSwEr4Eemntv5tDuspng" name="PME_Trig1394" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rSWg4Er4Eemntv5tDuspng" name="From__Debug__A__En__RunAsMaster__1395" source="_tEUA0ErDEem2BZRQc2M93A" target="_rPv40Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rVsIwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1442&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rSZkMEr4Eemntv5tDuspng" name="PME_Trig1396" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rScAcEr4Eemntv5tDuspng" name="PME_Trig1397" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rSdOkEr4Eemntv5tDuspng" name="PME_Trig1398" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rSgR4Er4Eemntv5tDuspng" name="PME_Trig1399" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rShgAEr4Eemntv5tDuspng" name="PME_Trig1400" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rSm_kEr4Eemntv5tDuspng" name="PME_Trig1401" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rSo0wEr4Eemntv5tDuspng" name="PME_Trig1402" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rSqp8Er4Eemntv5tDuspng" name="PME_Trig1403" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rSr4EEr4Eemntv5tDuspng" name="PME_Trig1404" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rSu7YEr4Eemntv5tDuspng" name="PME_Trig1405" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rSx-sEr4Eemntv5tDuspng" name="PME_Trig1406" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rS0a8Er4Eemntv5tDuspng" name="PME_Trig1407" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rS1pEEr4Eemntv5tDuspng" name="PME_Trig1408" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rS23MEr4Eemntv5tDuspng" name="PME_Trig1409" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rS6hkEr4Eemntv5tDuspng" name="PME_Trig1410" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rS_aEEr4Eemntv5tDuspng" name="PME_Trig1411" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rTDEcEr4Eemntv5tDuspng" name="PME_Trig1412" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rTIkAEr4Eemntv5tDuspng" name="PME_Trig1413" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rTJyIEr4Eemntv5tDuspng" name="PME_Trig1414" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rTLnUEr4Eemntv5tDuspng" name="PME_Trig1415" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rTP4wEr4Eemntv5tDuspng" name="From__Debug__A__Ac__MasterAnnounce__1416" source="_tESysErDEem2BZRQc2M93A" target="_rPv40Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rWLQ8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1442&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rTSVAEr4Eemntv5tDuspng" name="PME_Trig1417" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rTTjIEr4Eemntv5tDuspng" name="PME_Trig1418" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rTXNgEr4Eemntv5tDuspng" name="PME_Trig1419" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rTaQ0Er4Eemntv5tDuspng" name="PME_Trig1420" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rTdUIEr4Eemntv5tDuspng" name="PME_Trig1421" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rTeiQEr4Eemntv5tDuspng" name="PME_Trig1422" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rTgXcEr4Eemntv5tDuspng" name="PME_Trig1423" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rTrWkEr4Eemntv5tDuspng" name="PME_Trig1424" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rTw2IEr4Eemntv5tDuspng" name="PME_Trig1425" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rT6AEEr4Eemntv5tDuspng" name="PME_Trig1426" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rUHbcEr4Eemntv5tDuspng" name="PME_Trig1427" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rUOJIEr4Eemntv5tDuspng" name="PME_Trig1428" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rUU20Er4Eemntv5tDuspng" name="PME_Trig1429" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rUhrIEr4Eemntv5tDuspng" name="PME_Trig1430" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rUtRUEr4Eemntv5tDuspng" name="PME_Trig1431" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rUyJ0Er4Eemntv5tDuspng" name="PME_Trig1432" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rU3CUEr4Eemntv5tDuspng" name="PME_Trig1433" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rVEdsEr4Eemntv5tDuspng" name="PME_Trig1434" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rVIvIEr4Eemntv5tDuspng" name="PME_Trig1435" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rVQq8Er4Eemntv5tDuspng" name="PME_Trig1436" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rVYmwEr4Eemntv5tDuspng" name="To__Debug__B__Ac__MasterAnnounce__1437" guard="_rWVB8Ur4Eemntv5tDuspng" source="_rPv40Er4Eemntv5tDuspng" target="_tERkkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rWVB8Ur4Eemntv5tDuspng" name="PME_checkDecesion1444">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rWVB8Er4Eemntv5tDuspng" name="PME_checkDecesion1444">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rVZN0Er4Eemntv5tDuspng" name="To__Debug__B__Ex__RunAsMaster__1438" guard="_rWVpA0r4Eemntv5tDuspng" source="_rPv40Er4Eemntv5tDuspng" target="_tEQWcUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rWVpA0r4Eemntv5tDuspng" name="PME_checkDecesion1446">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rWVpAkr4Eemntv5tDuspng" name="PME_checkDecesion1446">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rVbqEEr4Eemntv5tDuspng" name="To__Debug__A__En__RunAsMaster__1439" guard="_rWVpAUr4Eemntv5tDuspng" source="_rPv40Er4Eemntv5tDuspng" target="_tEUA0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rWVpAUr4Eemntv5tDuspng" name="PME_checkDecesion1445">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rWVpAEr4Eemntv5tDuspng" name="PME_checkDecesion1445">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1439&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rVdfQEr4Eemntv5tDuspng" name="To__Debug__A__Ac__MasterAnnounce__1440" guard="_rWWQEUr4Eemntv5tDuspng" source="_rPv40Er4Eemntv5tDuspng" target="_tESysErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rWWQEUr4Eemntv5tDuspng" name="PME_checkDecesion1447">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rWWQEEr4Eemntv5tDuspng" name="PME_checkDecesion1447">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rVlbEEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1441" source="_rPqZQEr4Eemntv5tDuspng" target="_rPv40Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rVwaMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1442&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1438&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1440&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rVmCIEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1442" guard="_rWTMwUr4Eemntv5tDuspng" source="_rPv40Er4Eemntv5tDuspng" target="_rPs1gEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rWTMwUr4Eemntv5tDuspng" name="PME_checkDecesion1443">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rWTMwEr4Eemntv5tDuspng" name="PME_checkDecesion1443">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1442&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tEQWcUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEQWckrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEXrMErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__532">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tERkkErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tERkkUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnounce&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEaHcUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce__533">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tESysErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tESysUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnounce&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEcjsErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce__534">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tEUA0ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEUA0UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEeY4ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__535">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rPv40Er4Eemntv5tDuspng" name="DecesionPoint__1349" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rPyVEEr4Eemntv5tDuspng" name="Init__State__1350"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tEqmIUrDEem2BZRQc2M93A" name="Debug__C__ExitPoint1__BeMaster__4">
              <connectionPoint xmi:id="_tEr0QUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_q9dO8Er4Eemntv5tDuspng" name="From__Parent__958" kind="entryPoint"/>
              <connectionPoint xmi:id="_q9gSQEr4Eemntv5tDuspng" name="To__Parent__960" kind="exitPoint"/>
              <region xmi:id="_tErNMErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tE-vMErDEem2BZRQc2M93A" name="Debug__init__trans__ExitPoint1__BeMaster__4" source="_tEr0QUrDEem2BZRQc2M93A" target="_tE86AErDEem2BZRQc2M93A"/>
                <transition xmi:id="_q9jVkEr4Eemntv5tDuspng" name="Trans__Init__State__963964" source="_q9iHcEr4Eemntv5tDuspng" target="_q9hgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q-lQUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__963&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__989&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__963&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__987&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__963&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_q9rRYEr4Eemntv5tDuspng" name="From__Debug__B__Ac__ExitPoint1__BeMaster__4__965" source="_tE86AErDEem2BZRQc2M93A" target="_q9hgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q-eioEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__989&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__987&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_q9r4cEr4Eemntv5tDuspng" name="PME_Trig966" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q9sfgEr4Eemntv5tDuspng" name="PME_Trig967" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q9vi0Er4Eemntv5tDuspng" name="PME_Trig968" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q9ymIEr4Eemntv5tDuspng" name="PME_Trig969" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q90bUEr4Eemntv5tDuspng" name="PME_Trig970" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q91pcEr4Eemntv5tDuspng" name="PME_Trig971" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_q92QgEr4Eemntv5tDuspng" name="PME_Trig972" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q93eoEr4Eemntv5tDuspng" name="PME_Trig973" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q94swEr4Eemntv5tDuspng" name="PME_Trig974" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_q97JAEr4Eemntv5tDuspng" name="PME_Trig975" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q-ABgEr4Eemntv5tDuspng" name="PME_Trig976" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_q-BPoEr4Eemntv5tDuspng" name="PME_Trig977" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_q-B2sEr4Eemntv5tDuspng" name="PME_Trig978" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q-Dr4Er4Eemntv5tDuspng" name="PME_Trig979" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q-HWQEr4Eemntv5tDuspng" name="PME_Trig980" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q-JLcEr4Eemntv5tDuspng" name="PME_Trig981" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q-KZkEr4Eemntv5tDuspng" name="PME_Trig982" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_q-LnsEr4Eemntv5tDuspng" name="PME_Trig983" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_q-OD8Er4Eemntv5tDuspng" name="PME_Trig984" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q-QgMEr4Eemntv5tDuspng" name="PME_Trig985" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_q-TjgEr4Eemntv5tDuspng" name="PME_Trig986" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_q-VYsEr4Eemntv5tDuspng" name="To__Debug__B__Ac__ExitPoint1__BeMaster__4__987" guard="_q-r-AUr4Eemntv5tDuspng" source="_q9hgYEr4Eemntv5tDuspng" target="_tE86AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_q-r-AUr4Eemntv5tDuspng" name="PME_checkDecesion991">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_q-r-AEr4Eemntv5tDuspng" name="PME_checkDecesion991">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__987&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_q-bfUEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__988" source="_q9dO8Er4Eemntv5tDuspng" target="_q9hgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q-fwwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__989&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__987&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_q-bfUUr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__989" guard="_q-o6sUr4Eemntv5tDuspng" source="_q9hgYEr4Eemntv5tDuspng" target="_q9gSQEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_q-o6sUr4Eemntv5tDuspng" name="PME_checkDecesion990">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_q-o6sEr4Eemntv5tDuspng" name="PME_checkDecesion990">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__989&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tE86AErDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE86AUrDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_q9hgYEr4Eemntv5tDuspng" name="DecesionPoint__962" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_q9iHcEr4Eemntv5tDuspng" name="Init__State__963"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFEOwErDEem2BZRQc2M93A" name="Debug__Path__BeSlave" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tFE10UrDEem2BZRQc2M93A" name="Debug__C__BeSlave">
              <connectionPoint xmi:id="_tFGrAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tFIgMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_rkeLoUr4Eemntv5tDuspng" name="From__Parent__1611" kind="entryPoint"/>
              <connectionPoint xmi:id="_rkh2AEr4Eemntv5tDuspng" name="To__Parent__1613" kind="exitPoint"/>
              <region xmi:id="_tFE10krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tFXJsErDEem2BZRQc2M93A" name="Debug__init__trans__BeSlave" source="_tFGrAErDEem2BZRQc2M93A" target="_tFVUgUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tFXJsUrDEem2BZRQc2M93A" name="Debug__Ac__BeSlave" source="_tFVUgUrDEem2BZRQc2M93A" target="_tFWioErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tFXJskrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFXJs0rDEem2BZRQc2M93A" name="Debug__end__trans__BeSlave" source="_tFWioErDEem2BZRQc2M93A" target="_tFIgMUrDEem2BZRQc2M93A">
                  <trigger xmi:id="_tFXJtErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rkpx0Er4Eemntv5tDuspng" name="Trans__Init__State__16161617" source="_rkojsEr4Eemntv5tDuspng" target="_rklgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rnwwMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1616&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1662&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1616&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1664&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1616&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__1661&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1616&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rkqY4Er4Eemntv5tDuspng" name="Trans__ex1618" source="_tFIgMUrDEem2BZRQc2M93A" target="_rklgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rnzzgEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1662&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1664&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__1661&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rky7wEr4Eemntv5tDuspng" name="From__Debug__B__Ac__BeSlave__1619" source="_tFVUgUrDEem2BZRQc2M93A" target="_rklgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rnm_MEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1662&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1664&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__1661&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rk0J4Er4Eemntv5tDuspng" name="PME_Trig1620" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rk30QEr4Eemntv5tDuspng" name="PME_Trig1621" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rk8swEr4Eemntv5tDuspng" name="PME_Trig1622" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rlCMUEr4Eemntv5tDuspng" name="PME_Trig1623" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rlDacEr4Eemntv5tDuspng" name="PME_Trig1624" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rlGdwEr4Eemntv5tDuspng" name="PME_Trig1625" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rlHr4Er4Eemntv5tDuspng" name="PME_Trig1626" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rlMkYEr4Eemntv5tDuspng" name="PME_Trig1627" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rlNygEr4Eemntv5tDuspng" name="PME_Trig1628" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rlVHQEr4Eemntv5tDuspng" name="PME_Trig1629" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rlam0Er4Eemntv5tDuspng" name="PME_Trig1630" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rlhUgEr4Eemntv5tDuspng" name="PME_Trig1631" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rljJsEr4Eemntv5tDuspng" name="PME_Trig1632" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rlll8Er4Eemntv5tDuspng" name="PME_Trig1633" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rlrFgEr4Eemntv5tDuspng" name="PME_Trig1634" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rluv4Er4Eemntv5tDuspng" name="PME_Trig1635" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rlv-AEr4Eemntv5tDuspng" name="PME_Trig1636" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rlyaQEr4Eemntv5tDuspng" name="PME_Trig1637" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rl2rsEr4Eemntv5tDuspng" name="PME_Trig1638" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rl5vAEr4Eemntv5tDuspng" name="PME_Trig1639" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rl6WEEr4Eemntv5tDuspng" name="From__Debug__A__Ac__BeSlave__1640" source="_tFWioErDEem2BZRQc2M93A" target="_rklgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rn220Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1662&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1664&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__1661&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rl69IEr4Eemntv5tDuspng" name="PME_Trig1641" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rl-AcEr4Eemntv5tDuspng" name="PME_Trig1642" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rmDgAEr4Eemntv5tDuspng" name="PME_Trig1643" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rmEuIEr4Eemntv5tDuspng" name="PME_Trig1644" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rmLb0Er4Eemntv5tDuspng" name="PME_Trig1645" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rmQUUEr4Eemntv5tDuspng" name="PME_Trig1646" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rmYQIEr4Eemntv5tDuspng" name="PME_Trig1647" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rmasYEr4Eemntv5tDuspng" name="PME_Trig1648" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rmioMEr4Eemntv5tDuspng" name="PME_Trig1649" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rmou0Er4Eemntv5tDuspng" name="PME_Trig1650" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rmtAQEr4Eemntv5tDuspng" name="PME_Trig1651" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rmwDkEr4Eemntv5tDuspng" name="PME_Trig1652" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rm2xQEr4Eemntv5tDuspng" name="PME_Trig1653" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rm4mcEr4Eemntv5tDuspng" name="PME_Trig1654" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rm7CsEr4Eemntv5tDuspng" name="PME_Trig1655" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rnBJUEr4Eemntv5tDuspng" name="PME_Trig1656" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rnHP8Er4Eemntv5tDuspng" name="PME_Trig1657" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rnJFIEr4Eemntv5tDuspng" name="PME_Trig1658" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rnRoAEr4Eemntv5tDuspng" name="PME_Trig1659" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rnVSYEr4Eemntv5tDuspng" name="PME_Trig1660" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rncnIEr4Eemntv5tDuspng" name="To__Debug__B__Ac__BeSlave__1661" guard="_rn7IQUr4Eemntv5tDuspng" source="_rklgYEr4Eemntv5tDuspng" target="_tFVUgUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rn7IQUr4Eemntv5tDuspng" name="PME_checkDecesion1667">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rn7IQEr4Eemntv5tDuspng" name="PME_checkDecesion1667">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BeSlave__1661&quot;,&quot;Debug__B__Ac__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rncnIUr4Eemntv5tDuspng" name="To__Debug__A__Ac__BeSlave__1662" guard="_rn5TEUr4Eemntv5tDuspng" source="_rklgYEr4Eemntv5tDuspng" target="_tFWioErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rn5TEUr4Eemntv5tDuspng" name="PME_checkDecesion1665">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rn5TEEr4Eemntv5tDuspng" name="PME_checkDecesion1665">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeSlave__1662&quot;,&quot;Debug__A__Ac__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rnfqcEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1663" source="_rkeLoUr4Eemntv5tDuspng" target="_rklgYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rnviEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1662&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1664&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__1661&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rngRgEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1664" guard="_rn6hMUr4Eemntv5tDuspng" source="_rklgYEr4Eemntv5tDuspng" target="_rkh2AEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rn6hMUr4Eemntv5tDuspng" name="PME_checkDecesion1666">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rn6hMEr4Eemntv5tDuspng" name="PME_checkDecesion1666">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1664&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tFVUgUrDEem2BZRQc2M93A" name="Debug__B__Ac__BeSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFV7kErDEem2BZRQc2M93A" name="Debug__B__Ac__BeSlave">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tFWioErDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFWioUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rklgYEr4Eemntv5tDuspng" name="DecesionPoint__1615" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rkojsEr4Eemntv5tDuspng" name="Init__State__1616"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tF58QErDEem2BZRQc2M93A" name="Debug__C__ServiceRequest">
              <connectionPoint xmi:id="_tF7KYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tF7xcUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_q5QrcEr4Eemntv5tDuspng" name="From__Parent__855" kind="entryPoint"/>
              <connectionPoint xmi:id="_q5TuwEr4Eemntv5tDuspng" name="To__Parent__857" kind="exitPoint"/>
              <region xmi:id="_tF58QUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tGVaEErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest" source="_tF7KYUrDEem2BZRQc2M93A" target="_tGLCAUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGmf0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest__603">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__init__trans__ServiceRequest&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tGVaEUrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tGLCAUrDEem2BZRQc2M93A" target="_tGMQIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGWoMErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGWBIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGXPQErDEem2BZRQc2M93A" name="Debug__AC__ServiceRequest" source="_tGMQIErDEem2BZRQc2M93A" target="_tGPTcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGYdYErDEem2BZRQc2M93A" name="ReplyRequest" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>   //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ClientRequest,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Message from client replied at index &quot;&lt;&lt;msg->sapIndex0_&lt;&lt;&quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ServerComm.Reply(0).sendAt(tempid);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;
    //ts.getclock(ts);
    //if (logfile.is_open())
    //logfile&lt;&lt;&quot;CleintReply,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__AC__ServiceRequest&quot;,(char *)&quot;Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGX2UErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGYdYUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tGPTcErDEem2BZRQc2M93A" target="_tGQhkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGZEcUrDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGZEcErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGZrgErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceRequest" source="_tGQhkErDEem2BZRQc2M93A" target="_tF7xcUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGsmcErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceRequest__608">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__end__trans__ServiceRequest&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGZrgUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_q5iYQEr4Eemntv5tDuspng" name="Trans__Init__State__860861" source="_q5accEr4Eemntv5tDuspng" target="_q5YnQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q9UFAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__860&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__860&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__860&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__860&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__860&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__952&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__860&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_q5i_UEr4Eemntv5tDuspng" name="Trans__ex862" source="_tF7xcUrDEem2BZRQc2M93A" target="_q5YnQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q9RowEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__952&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_q5lbkEr4Eemntv5tDuspng" name="From__Debug__B__Ex__RunAsMaster__863" source="_tGLCAUrDEem2BZRQc2M93A" target="_q5YnQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q9MwQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__952&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_q5mpsEr4Eemntv5tDuspng" name="PME_Trig864" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q5t-cEr4Eemntv5tDuspng" name="PME_Trig865" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q5xo0Er4Eemntv5tDuspng" name="PME_Trig866" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q53IYEr4Eemntv5tDuspng" name="PME_Trig867" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q55koEr4Eemntv5tDuspng" name="PME_Trig868" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q6CHgEr4Eemntv5tDuspng" name="PME_Trig869" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_q6Fx4Er4Eemntv5tDuspng" name="PME_Trig870" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q6HAAEr4Eemntv5tDuspng" name="PME_Trig871" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q6JcQEr4Eemntv5tDuspng" name="PME_Trig872" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_q6MfkEr4Eemntv5tDuspng" name="PME_Trig873" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q6QxAEr4Eemntv5tDuspng" name="PME_Trig874" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_q6VpgEr4Eemntv5tDuspng" name="PME_Trig875" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_q6W3oEr4Eemntv5tDuspng" name="PME_Trig876" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q6Ys0Er4Eemntv5tDuspng" name="PME_Trig877" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q6dlUEr4Eemntv5tDuspng" name="PME_Trig878" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q6gBkEr4Eemntv5tDuspng" name="PME_Trig879" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q6hPsEr4Eemntv5tDuspng" name="PME_Trig880" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_q6id0Er4Eemntv5tDuspng" name="PME_Trig881" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q6lhIEr4Eemntv5tDuspng" name="PME_Trig882" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_q6qZoEr4Eemntv5tDuspng" name="PME_Trig883" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_q6rnwEr4Eemntv5tDuspng" name="From__Debug__A__En__RunAsMaster__884" source="_tGQhkErDEem2BZRQc2M93A" target="_q5YnQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q9V6MEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__952&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_q6uEAEr4Eemntv5tDuspng" name="PME_Trig885" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q6zjkEr4Eemntv5tDuspng" name="PME_Trig886" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q60xsEr4Eemntv5tDuspng" name="PME_Trig887" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q61_0Er4Eemntv5tDuspng" name="PME_Trig888" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q66RQEr4Eemntv5tDuspng" name="PME_Trig889" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q69UkEr4Eemntv5tDuspng" name="PME_Trig890" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_q6_JwEr4Eemntv5tDuspng" name="PME_Trig891" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q7AX4Er4Eemntv5tDuspng" name="PME_Trig892" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q7C0IEr4Eemntv5tDuspng" name="PME_Trig893" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_q7Jh0Er4Eemntv5tDuspng" name="PME_Trig894" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q7Kv8Er4Eemntv5tDuspng" name="PME_Trig895" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_q7SEsEr4Eemntv5tDuspng" name="PME_Trig896" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_q7TS0Er4Eemntv5tDuspng" name="PME_Trig897" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q7VIAEr4Eemntv5tDuspng" name="PME_Trig898" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q7ccwEr4Eemntv5tDuspng" name="PME_Trig899" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q7hVQEr4Eemntv5tDuspng" name="PME_Trig900" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q7ijYEr4Eemntv5tDuspng" name="PME_Trig901" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_q7lmsEr4Eemntv5tDuspng" name="PME_Trig902" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q7oC8Er4Eemntv5tDuspng" name="PME_Trig903" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_q7rGQEr4Eemntv5tDuspng" name="PME_Trig904" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_q7wl0Er4Eemntv5tDuspng" name="From__Debug__A__Ac__ServiceRequest__905" source="_tGPTcErDEem2BZRQc2M93A" target="_q5YnQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q9N-YEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__952&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_q7xM4Er4Eemntv5tDuspng" name="PME_Trig906" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q7ybAEr4Eemntv5tDuspng" name="PME_Trig907" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q72scEr4Eemntv5tDuspng" name="PME_Trig908" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q76W0Er4Eemntv5tDuspng" name="PME_Trig909" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q77k8Er4Eemntv5tDuspng" name="PME_Trig910" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q78zEEr4Eemntv5tDuspng" name="PME_Trig911" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_q79aIEr4Eemntv5tDuspng" name="PME_Trig912" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q7-oQEr4Eemntv5tDuspng" name="PME_Trig913" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8CSoEr4Eemntv5tDuspng" name="PME_Trig914" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_q8FV8Er4Eemntv5tDuspng" name="PME_Trig915" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8GkEEr4Eemntv5tDuspng" name="PME_Trig916" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_q8IZQEr4Eemntv5tDuspng" name="PME_Trig917" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_q8LckEr4Eemntv5tDuspng" name="PME_Trig918" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8MqsEr4Eemntv5tDuspng" name="PME_Trig919" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q8PG8Er4Eemntv5tDuspng" name="PME_Trig920" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q8PuAEr4Eemntv5tDuspng" name="PME_Trig921" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q8Q8IEr4Eemntv5tDuspng" name="PME_Trig922" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_q8SKQEr4Eemntv5tDuspng" name="PME_Trig923" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8VNkEr4Eemntv5tDuspng" name="PME_Trig924" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_q8YQ4Er4Eemntv5tDuspng" name="PME_Trig925" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_q8Y38Er4Eemntv5tDuspng" name="From__Debug__B__Ac__ServiceRequest__926" source="_tGMQIErDEem2BZRQc2M93A" target="_q5YnQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q9XIUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__952&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_q8ZfAEr4Eemntv5tDuspng" name="PME_Trig927" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8atIEr4Eemntv5tDuspng" name="PME_Trig928" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q8dJYEr4Eemntv5tDuspng" name="PME_Trig929" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8gMsEr4Eemntv5tDuspng" name="PME_Trig930" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q8io8Er4Eemntv5tDuspng" name="PME_Trig931" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8j3EEr4Eemntv5tDuspng" name="PME_Trig932" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_q8keIEr4Eemntv5tDuspng" name="PME_Trig933" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q8lsQEr4Eemntv5tDuspng" name="PME_Trig934" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8qkwEr4Eemntv5tDuspng" name="PME_Trig935" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_q8tBAEr4Eemntv5tDuspng" name="PME_Trig936" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8toEEr4Eemntv5tDuspng" name="PME_Trig937" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_q8u2MEr4Eemntv5tDuspng" name="PME_Trig938" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_q8vdQEr4Eemntv5tDuspng" name="PME_Trig939" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8zHoEr4Eemntv5tDuspng" name="PME_Trig940" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q81j4Er4Eemntv5tDuspng" name="PME_Trig941" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q83ZEEr4Eemntv5tDuspng" name="PME_Trig942" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q84nMEr4Eemntv5tDuspng" name="PME_Trig943" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_q86cYEr4Eemntv5tDuspng" name="PME_Trig944" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q8-GwEr4Eemntv5tDuspng" name="PME_Trig945" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_q8_U4Er4Eemntv5tDuspng" name="PME_Trig946" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_q9CYMEr4Eemntv5tDuspng" name="To__Debug__B__Ex__RunAsMaster__947" guard="_q9Y9gUr4Eemntv5tDuspng" source="_q5YnQEr4Eemntv5tDuspng" target="_tGLCAUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_q9Y9gUr4Eemntv5tDuspng" name="PME_checkDecesion956">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_q9Y9gEr4Eemntv5tDuspng" name="PME_checkDecesion956">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_q9C_QEr4Eemntv5tDuspng" name="To__Debug__A__En__RunAsMaster__948" guard="_q9XvYUr4Eemntv5tDuspng" source="_q5YnQEr4Eemntv5tDuspng" target="_tGQhkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_q9XvYUr4Eemntv5tDuspng" name="PME_checkDecesion953">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_q9XvYEr4Eemntv5tDuspng" name="PME_checkDecesion953">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__948&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_q9C_QUr4Eemntv5tDuspng" name="To__Debug__A__Ac__ServiceRequest__949" guard="_q9YWc0r4Eemntv5tDuspng" source="_q5YnQEr4Eemntv5tDuspng" target="_tGPTcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_q9YWc0r4Eemntv5tDuspng" name="PME_checkDecesion955">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_q9YWckr4Eemntv5tDuspng" name="PME_checkDecesion955">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_q9DmUEr4Eemntv5tDuspng" name="To__Debug__B__Ac__ServiceRequest__950" guard="_q9YWcUr4Eemntv5tDuspng" source="_q5YnQEr4Eemntv5tDuspng" target="_tGMQIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_q9YWcUr4Eemntv5tDuspng" name="PME_checkDecesion954">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_q9YWcEr4Eemntv5tDuspng" name="PME_checkDecesion954">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_q9E0cEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__951" source="_q5QrcEr4Eemntv5tDuspng" target="_q5YnQEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_q9LiIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__947&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__952&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_q9GpoEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__952" guard="_q9aysUr4Eemntv5tDuspng" source="_q5YnQEr4Eemntv5tDuspng" target="_q5TuwEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_q9aysUr4Eemntv5tDuspng" name="PME_checkDecesion957">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_q9aysEr4Eemntv5tDuspng" name="PME_checkDecesion957">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__952&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tGLCAUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGLpEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGa5oUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__598">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGMQIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGMQIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGd88ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest__599">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGPTcErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGPTcUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGgZMUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest__600">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGQhkErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGQhkUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGjcgErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__601">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_q5YnQEr4Eemntv5tDuspng" name="DecesionPoint__859" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_q5accEr4Eemntv5tDuspng" name="Init__State__860"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tGw34UrDEem2BZRQc2M93A" name="Debug__C__StandBy__CheckConfig__6">
              <connectionPoint xmi:id="_tGyGAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tGyGAkrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_q-tMIUr4Eemntv5tDuspng" name="From__Parent__993" kind="entryPoint"/>
              <connectionPoint xmi:id="_q-uaQEr4Eemntv5tDuspng" name="To__Parent__995" kind="exitPoint"/>
              <region xmi:id="_tGw34krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHFoAErDEem2BZRQc2M93A" name="Debug__init__trans__StandBy__CheckConfig__6" source="_tGyGAErDEem2BZRQc2M93A" target="_tHDLwUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tHGPEErDEem2BZRQc2M93A" name="Debug__Ex__StandBy" source="_tHDLwUrDEem2BZRQc2M93A" target="_tHDy0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHROMErDEem2BZRQc2M93A" name="Debug__Ex__StandBy__626">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHGPEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_q-4yUEr4Eemntv5tDuspng" name="Trans__ex999" source="_tGyGAkrDEem2BZRQc2M93A" target="_q-voYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rBOUoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1044&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1045&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_q-5ZYEr4Eemntv5tDuspng" name="Trans__Init__State__9981000" source="_q-29IEr4Eemntv5tDuspng" target="_q-voYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rBfaYEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__998&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__998&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1044&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__998&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1045&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__998&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_q_AuIEr4Eemntv5tDuspng" name="From__Debug__B__Ex__StandBy__1001" source="_tHDLwUrDEem2BZRQc2M93A" target="_q-voYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rBgogEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1044&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1045&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_q_B8QEr4Eemntv5tDuspng" name="PME_Trig1002" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q_CjUEr4Eemntv5tDuspng" name="PME_Trig1003" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q_FmoEr4Eemntv5tDuspng" name="PME_Trig1004" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q_LGMEr4Eemntv5tDuspng" name="PME_Trig1005" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q_MUUEr4Eemntv5tDuspng" name="PME_Trig1006" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q_NicEr4Eemntv5tDuspng" name="PME_Trig1007" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_q_RM0Er4Eemntv5tDuspng" name="PME_Trig1008" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q_TCAEr4Eemntv5tDuspng" name="PME_Trig1009" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q_YhkEr4Eemntv5tDuspng" name="PME_Trig1010" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_q_bk4Er4Eemntv5tDuspng" name="PME_Trig1011" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q_czAEr4Eemntv5tDuspng" name="PME_Trig1012" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_q_gdYEr4Eemntv5tDuspng" name="PME_Trig1013" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_q_l88Er4Eemntv5tDuspng" name="PME_Trig1014" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q_nLEEr4Eemntv5tDuspng" name="PME_Trig1015" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_q_sDkEr4Eemntv5tDuspng" name="PME_Trig1016" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q_wVAEr4Eemntv5tDuspng" name="PME_Trig1017" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_q_10kEr4Eemntv5tDuspng" name="PME_Trig1018" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_q_5e8Er4Eemntv5tDuspng" name="PME_Trig1019" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_q_7UIEr4Eemntv5tDuspng" name="PME_Trig1020" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rAAzsEr4Eemntv5tDuspng" name="PME_Trig1021" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rADP8Er4Eemntv5tDuspng" name="From__Debug__B__Ac__StandBy__CheckConfig__6__1022" source="_tHDy0ErDEem2BZRQc2M93A" target="_q-voYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rBbI8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1044&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1045&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rAFFIEr4Eemntv5tDuspng" name="PME_Trig1023" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rAGTQEr4Eemntv5tDuspng" name="PME_Trig1024" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rALy0Er4Eemntv5tDuspng" name="PME_Trig1025" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rAOPEEr4Eemntv5tDuspng" name="PME_Trig1026" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rAPdMEr4Eemntv5tDuspng" name="PME_Trig1027" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rAU8wEr4Eemntv5tDuspng" name="PME_Trig1028" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rAYAEEr4Eemntv5tDuspng" name="PME_Trig1029" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rAZOMEr4Eemntv5tDuspng" name="PME_Trig1030" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rAc4kEr4Eemntv5tDuspng" name="PME_Trig1031" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rAmCgEr4Eemntv5tDuspng" name="PME_Trig1032" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rAnQoEr4Eemntv5tDuspng" name="PME_Trig1033" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rApF0Er4Eemntv5tDuspng" name="PME_Trig1034" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rAswMEr4Eemntv5tDuspng" name="PME_Trig1035" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rAvMcEr4Eemntv5tDuspng" name="PME_Trig1036" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rA2hMEr4Eemntv5tDuspng" name="PME_Trig1037" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rA4WYEr4Eemntv5tDuspng" name="PME_Trig1038" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rA9O4Er4Eemntv5tDuspng" name="PME_Trig1039" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rBASMEr4Eemntv5tDuspng" name="PME_Trig1040" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rBBgUEr4Eemntv5tDuspng" name="PME_Trig1041" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rBCucEr4Eemntv5tDuspng" name="PME_Trig1042" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rBIOAEr4Eemntv5tDuspng" name="PME_Trig1043" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rBLRUEr4Eemntv5tDuspng" name="To__Debug__B__Ex__StandBy__1044" guard="_rBjr0Ur4Eemntv5tDuspng" source="_q-voYEr4Eemntv5tDuspng" target="_tHDLwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rBjr0Ur4Eemntv5tDuspng" name="PME_checkDecesion1049">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rBjr0Er4Eemntv5tDuspng" name="PME_checkDecesion1049">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBy__1044&quot;,&quot;Debug__B__Ex__StandBy&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rBL4YEr4Eemntv5tDuspng" name="To__Debug__B__Ac__StandBy__CheckConfig__6__1045" guard="_rBmIEUr4Eemntv5tDuspng" source="_q-voYEr4Eemntv5tDuspng" target="_tHDy0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rBmIEUr4Eemntv5tDuspng" name="PME_checkDecesion1050">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rBmIEEr4Eemntv5tDuspng" name="PME_checkDecesion1050">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1045&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rBMfcEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1046" source="_q-tMIUr4Eemntv5tDuspng" target="_q-voYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rBWQcEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1044&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1045&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rBNGgEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1047" guard="_rBhPkUr4Eemntv5tDuspng" source="_q-voYEr4Eemntv5tDuspng" target="_q-uaQEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rBhPkUr4Eemntv5tDuspng" name="PME_checkDecesion1048">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rBhPkEr4Eemntv5tDuspng" name="PME_checkDecesion1048">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1047&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHDLwUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDLwkrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHIEQErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy__622">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHDy0ErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDy0UrDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy__CheckConfig__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHM8wErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6__623">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_q-voYEr4Eemntv5tDuspng" name="DecesionPoint__997" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_q-29IEr4Eemntv5tDuspng" name="Init__State__998"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tHWtwUrDEem2BZRQc2M93A" name="Debug__C__KeepAlive">
              <connectionPoint xmi:id="_rJdDkEr4Eemntv5tDuspng" name="From__Parent__1205" kind="entryPoint"/>
              <connectionPoint xmi:id="_rJeRsEr4Eemntv5tDuspng" name="To__Parent__1207" kind="exitPoint"/>
              <region xmi:id="_tHWtwkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHvvUErDEem2BZRQc2M93A" name="Debug__AC__KeepAlive" source="_tHq20ErDEem2BZRQc2M93A" target="_tHsE8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHvvUkrDEem2BZRQc2M93A" name="SendKeepAlive" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    if (hostConfig.RunningMode==1)
    Master.IAmAlive((char *)this->getName()).send();
    std::cout&lt;&lt;&quot;Master: Keep Alive is sent\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__AC__KeepAlive&quot;,(char *)&quot;Debug__B__Ac__KeepAlive&quot;,(char *)&quot;Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHvvUUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHwWYErDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tHsE8ErDEem2BZRQc2M93A" target="_tHt6IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHw9cErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__KeepAlive&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHwWYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_rJsUIEr4Eemntv5tDuspng" name="Trans__Init__State__12101211" source="_rJqe8Er4Eemntv5tDuspng" target="_rJijIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rNP-cEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1210&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1210&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1210&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1276&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1210&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1280&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1210&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rJv-gEr4Eemntv5tDuspng" name="From__Debug__B__Ac__KeepAlive__1212" source="_tHq20ErDEem2BZRQc2M93A" target="_rJijIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rNLF8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1276&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1280&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rJxMoEr4Eemntv5tDuspng" name="PME_Trig1213" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rJyawEr4Eemntv5tDuspng" name="PME_Trig1214" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rJ3TQEr4Eemntv5tDuspng" name="PME_Trig1215" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rJ5vgEr4Eemntv5tDuspng" name="PME_Trig1216" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rJ8LwEr4Eemntv5tDuspng" name="PME_Trig1217" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rKCSYEr4Eemntv5tDuspng" name="PME_Trig1218" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rKFVsEr4Eemntv5tDuspng" name="PME_Trig1219" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rKGj0Er4Eemntv5tDuspng" name="PME_Trig1220" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rKMqcEr4Eemntv5tDuspng" name="PME_Trig1221" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rKPGsEr4Eemntv5tDuspng" name="PME_Trig1222" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rKQU0Er4Eemntv5tDuspng" name="PME_Trig1223" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rKV0YEr4Eemntv5tDuspng" name="PME_Trig1224" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rKY3sEr4Eemntv5tDuspng" name="PME_Trig1225" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rKaF0Er4Eemntv5tDuspng" name="PME_Trig1226" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rKbT8Er4Eemntv5tDuspng" name="PME_Trig1227" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rKiosEr4Eemntv5tDuspng" name="PME_Trig1228" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rKkd4Er4Eemntv5tDuspng" name="PME_Trig1229" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rKp9cEr4Eemntv5tDuspng" name="PME_Trig1230" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rKuO4Er4Eemntv5tDuspng" name="PME_Trig1231" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rKzHYEr4Eemntv5tDuspng" name="PME_Trig1232" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rK1joEr4Eemntv5tDuspng" name="From__Debug__A__En__RunAsMaster__1233" source="_tHt6IErDEem2BZRQc2M93A" target="_rJijIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rNG0gEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1276&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1280&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rK3Y0Er4Eemntv5tDuspng" name="PME_Trig1234" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rK5OAEr4Eemntv5tDuspng" name="PME_Trig1235" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rK7qQEr4Eemntv5tDuspng" name="PME_Trig1236" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rLGpYEr4Eemntv5tDuspng" name="PME_Trig1237" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rLIekEr4Eemntv5tDuspng" name="PME_Trig1238" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rLNXEEr4Eemntv5tDuspng" name="PME_Trig1239" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rLSPkEr4Eemntv5tDuspng" name="PME_Trig1240" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rLV58Er4Eemntv5tDuspng" name="PME_Trig1241" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rLcAkEr4Eemntv5tDuspng" name="PME_Trig1242" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rLdOsEr4Eemntv5tDuspng" name="PME_Trig1243" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rLgSAEr4Eemntv5tDuspng" name="PME_Trig1244" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rLlxkEr4Eemntv5tDuspng" name="PME_Trig1245" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rLnmwEr4Eemntv5tDuspng" name="PME_Trig1246" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rLrRIEr4Eemntv5tDuspng" name="PME_Trig1247" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rLsfQEr4Eemntv5tDuspng" name="PME_Trig1248" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rLxXwEr4Eemntv5tDuspng" name="PME_Trig1249" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rL1CIEr4Eemntv5tDuspng" name="PME_Trig1250" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rL7v0Er4Eemntv5tDuspng" name="PME_Trig1251" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_rMCdgEr4Eemntv5tDuspng" name="PME_Trig1252" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rMDroEr4Eemntv5tDuspng" name="PME_Trig1253" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rME5wEr4Eemntv5tDuspng" name="PME_Trig1254" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rMGH4Er4Eemntv5tDuspng" name="From__Debug__A__Ac__KeepAlive__1255" source="_tHsE8ErDEem2BZRQc2M93A" target="_rJijIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rNICoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1276&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1280&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_rMGu8Er4Eemntv5tDuspng" name="PME_Trig1256" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rMJLMEr4Eemntv5tDuspng" name="PME_Trig1257" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rMKZUEr4Eemntv5tDuspng" name="PME_Trig1258" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rMLncEr4Eemntv5tDuspng" name="PME_Trig1259" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rMNcoEr4Eemntv5tDuspng" name="PME_Trig1260" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rMTjQEr4Eemntv5tDuspng" name="PME_Trig1261" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_rMUKUEr4Eemntv5tDuspng" name="PME_Trig1262" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rMV_gEr4Eemntv5tDuspng" name="PME_Trig1263" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rMfwgEr4Eemntv5tDuspng" name="PME_Trig1264" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_rMiz0Er4Eemntv5tDuspng" name="PME_Trig1265" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rMja4Er4Eemntv5tDuspng" name="PME_Trig1266" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_rMlQEEr4Eemntv5tDuspng" name="PME_Trig1267" event="_pkZKQEr4Eemntv5tDuspng" port="_qvj84Er4Eemntv5tDuspng"/>
                  <trigger xmi:id="_rMnsUEr4Eemntv5tDuspng" name="PME_Trig1268" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rMo6cEr4Eemntv5tDuspng" name="PME_Trig1269" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_rMuaAEr4Eemntv5tDuspng" name="PME_Trig1270" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rMvoIEr4Eemntv5tDuspng" name="PME_Trig1271" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_rMyEYEr4Eemntv5tDuspng" name="PME_Trig1272" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_rMzSgEr4Eemntv5tDuspng" name="PME_Trig1273" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_rM7OUEr4Eemntv5tDuspng" name="PME_Trig1274" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_rNAG0Er4Eemntv5tDuspng" name="PME_Trig1275" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_rNB8AEr4Eemntv5tDuspng" name="To__Debug__B__Ac__KeepAlive__1276" guard="_rNUP4Ur4Eemntv5tDuspng" source="_rJijIEr4Eemntv5tDuspng" target="_tHq20ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rNUP4Ur4Eemntv5tDuspng" name="PME_checkDecesion1283">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rNUP4Er4Eemntv5tDuspng" name="PME_checkDecesion1283">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__KeepAlive__1276&quot;,&quot;Debug__B__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rNB8AUr4Eemntv5tDuspng" name="To__Debug__A__En__RunAsMaster__1277" guard="_rNSasUr4Eemntv5tDuspng" source="_rJijIEr4Eemntv5tDuspng" target="_tHt6IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rNSasUr4Eemntv5tDuspng" name="PME_checkDecesion1282">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rNSasEr4Eemntv5tDuspng" name="PME_checkDecesion1282">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1277&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rNCjEEr4Eemntv5tDuspng" name="To__Debug__A__Ac__KeepAlive__1278" guard="_rNRzoUr4Eemntv5tDuspng" source="_rJijIEr4Eemntv5tDuspng" target="_tHsE8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_rNRzoUr4Eemntv5tDuspng" name="PME_checkDecesion1281">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rNRzoEr4Eemntv5tDuspng" name="PME_checkDecesion1281">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAlive__1278&quot;,&quot;Debug__A__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_rNDxMEr4Eemntv5tDuspng" name="From__Parnet__ServerStateMachine__1279" source="_rJdDkEr4Eemntv5tDuspng" target="_rJijIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rNRMkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1276&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1280&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_rNEYQEr4Eemntv5tDuspng" name="To__Parent__ServerStateMachine__1280" guard="_rNXTMUr4Eemntv5tDuspng" source="_rJijIEr4Eemntv5tDuspng" target="_rJeRsEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_rNXTMUr4Eemntv5tDuspng" name="PME_checkDecesion1284">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_rNXTMEr4Eemntv5tDuspng" name="PME_checkDecesion1284">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1280&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHq20ErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHq20UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH1O4UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive__644">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHsE8ErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHsE8UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH3rIUrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive__645">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHt6IErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHt6IUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH6HYErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__646">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rJijIEr4Eemntv5tDuspng" name="DecesionPoint__1209" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_rJqe8Er4Eemntv5tDuspng" name="Init__State__1210"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tJHBQErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_q0rGYEr4Eemntv5tDuspng" name="DecesionPoint__792" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_q0uJsEr4Eemntv5tDuspng" name="Init__State__793"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxfLcUrDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_sxfLcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Slave.recallAll();
ConfigComm.recallAll();
Master.recallAll();
ServerComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxvDEErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sxucAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;KeepAliveTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(KeepAliveTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,KeepAliveTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
tempS.append(&quot;AnnouncementTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncementTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncementTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxzUgUrDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxyGYErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;KeepAliveTimeOut&quot;==tempVarName){
    KeepAliveTimeOut=atoi(varValue);
    return true;
}else if (&quot;AnnouncementTimeOut&quot;==tempVarName){
    AnnouncementTimeOut=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_syDzMErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sx6CMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qzKqgUr4Eemntv5tDuspng" name="loadHeap" specification="_qzKqgEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.KeepAliveTimeOut&quot;,this->KeepAliveTimeOut);
heap.setVarValue(&quot;this.AnnouncementTimeOut&quot;,this->AnnouncementTimeOut);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qzPjAUr4Eemntv5tDuspng" name="unLoadHeap" specification="_qzPjAEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.KeepAliveTimeOut&quot;,&amp;this->KeepAliveTimeOut);
heap.loadVarFromHeap(&quot;this.AnnouncementTimeOut&quot;,&amp;this->AnnouncementTimeOut);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qzn9gUr4Eemntv5tDuspng" name="sendMessage" specification="_qzn9gEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;ServerComm&quot;) {
  if(message.signal==&quot;Reply&quot;) {
   if(message.payload.size()==1){
    ServerComm.Reply( boost::any_cast&lt;int>(message.payload[&quot;Result&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Master&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Master.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Slave&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Slave.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qzurMUr4Eemntv5tDuspng" name="sendInternalMessage" specification="_qzurMEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q0UhEUr4Eemntv5tDuspng" name="initForPMD" specification="_q0UhEEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Server::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Server::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ServerComm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;ServerComm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;KeepAliveTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;MasterAnnounceTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sxfLcErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_sxfLcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxucAErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sxvDEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxyGYErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxzUgUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxytcErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxytcUrDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxzUgErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sx6CMErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_syDzMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sx7QUErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx8ecUrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx9skErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-ToUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-6sErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syAI0ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8ErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8UrDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syClEErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syDMIErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_qzKqgEr4Eemntv5tDuspng" name="loadHeap" visibility="private" method="_qzKqgUr4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_qzPjAEr4Eemntv5tDuspng" name="unLoadHeap" visibility="private" method="_qzPjAUr4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_qzn9gEr4Eemntv5tDuspng" name="sendMessage" visibility="private" method="_qzn9gUr4Eemntv5tDuspng">
          <ownedParameter xmi:id="_qzrA0Er4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_qzsO8Er4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_qzurMEr4Eemntv5tDuspng" name="sendInternalMessage" visibility="private" method="_qzurMUr4Eemntv5tDuspng">
          <ownedParameter xmi:id="_qzvSQEr4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_qzv5UEr4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_q0UhEEr4Eemntv5tDuspng" name="initForPMD" visibility="private" method="_q0UhEUr4Eemntv5tDuspng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_zpdLYAgmEea_md0mpENoqg" name="Client" classifierBehavior="_BKT8EAlKEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_5utSYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_g3nG4AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kSO0IAliEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kSfS0AliEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_iLeRcAmuEea_md0mpENoqg" name="RequestTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_oWg3YAmuEea_md0mpENoqg" name="ConfigTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tP9SkAmuEea_md0mpENoqg" name="ResponseTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_fL3OQAnFEeaGqPUk-4V4qQ" name="Server1Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jNC1oAnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNNNsAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lRZpIAnFEeaGqPUk-4V4qQ" name="Server2Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pIHs8AnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pIOaoAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_8sGy4AovEeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swu9gErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swxZwUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swyA0ErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8ErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8UrDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxH_EErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxJNMUrDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pnjzAEr4Eemntv5tDuspng" name="dbgPortForClient" visibility="protected" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pnkaEEr4Eemntv5tDuspng" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_pnkaEUr4Eemntv5tDuspng" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_BKT8EAlKEea_md0mpENoqg" name="ClientStateMachine">
          <region xmi:id="_Bk0GwAlKEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_7y_ToAmtEea_md0mpENoqg" name="reqFlowInit" source="_tSQ9QErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTAkIErDEem2BZRQc2M93A" name="reqFlowInit__956">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::reqFlowInit&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_xsxFAAnCEeaGqPUk-4V4qQ" name="NoMaster" source="_tLzI4ErDEem2BZRQc2M93A" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMXJkErDEem2BZRQc2M93A" name="NoMaster__760">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::NoMaster&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_6NrWIAnCEeaGqPUk-4V4qQ" name="reqService" source="_tOHdEErDEem2BZRQc2M93A" target="_fO-gkAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvuAcAnEEeaGqPUk-4V4qQ" name="requestserive">
                <language>C++</language>
                <body>    
    messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,SendingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    if (hostConfig.MasterList[0] &amp;&amp; hostConfig.MasterList[1])
    {
    int r=rand()%2;
    if (r==0)
    {
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else{
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }
    }
    else if (hostConfig.MasterList[0]){
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else
    {
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::reqService&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_KpN_QAo2EeaGqPUk-4V4qQ" name="Retry" source="_tMY-wErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNJMsErDEem2BZRQc2M93A" name="Retry__787">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL4ocErDEem2BZRQc2M93A" name="Debug__NoMaster__S" guard="_tL5PgUrDEem2BZRQc2M93A" source="_tLzI4ErDEem2BZRQc2M93A" target="_tL0-EUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tL5PgUrDEem2BZRQc2M93A" name="Debug__GuardNoMaster">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tL5PgErDEem2BZRQc2M93A" name="Debug__GuardNoMaster">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;checkConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL6doErDEem2BZRQc2M93A" name="Debug__NoMaster__S__740">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoMaster__S&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL854ErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL9g8UrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange__743">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tL9g8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL-IAErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL-vEErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint__744">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL-IAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_WIErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL_WIkrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint__745">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_WIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_9MErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMAkQErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints__746">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_9MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMAkQUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMBLUErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode__747">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMAkQkrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMBLUUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMCZcUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg__748">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMByYErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMByYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMCZcErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMcCEUrDEem2BZRQc2M93A" name="Debug__Retry" source="_KwFHIAo0EeaGqPUk-4V4qQ" target="_tMY-wErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMcpIErDEem2BZRQc2M93A" name="Debug__Retry__762">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry&quot;,(char *)&quot;Retry&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_2jDQUAo3EeaGqPUk-4V4qQ" name="Retry" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMd3QErDEem2BZRQc2M93A" name="Debug__Retry__S" guard="_tMeeUUrDEem2BZRQc2M93A" source="_tMY-wErDEem2BZRQc2M93A" target="_tMaz8UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tMeeUUrDEem2BZRQc2M93A" name="Debug__GuardRetry">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tMeeUErDEem2BZRQc2M93A" name="Debug__GuardRetry">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Retry&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMfscErDEem2BZRQc2M93A" name="Debug__Retry__S__764">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry__S&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tMg6kErDEem2BZRQc2M93A" name="Debug__Retry__E" source="_tMbbAUrDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMg6kUrDEem2BZRQc2M93A" name="Debug__Retry__E__765">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tMiIsErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMivwErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange__767">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tMiIsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMj94ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMkk8ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint__768">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMj94UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMlzEErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMmaIErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint__769">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMlzEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnBMErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMnoQErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints__770">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMnBMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnoQUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMoPUUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode__771">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMoPUErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMo2YErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMqEgErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg__772">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMo2YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNP6YUrDEem2BZRQc2M93A" name="Debug__ServiceResult" source="_fO-gkAmtEea_md0mpENoqg" target="_tNLo8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNP6YkrDEem2BZRQc2M93A" name="Debug__ServiceResult__789">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_DEh6sAnGEeaGqPUk-4V4qQ" name="Result" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ _lRZpIAnFEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_tNRIgErDEem2BZRQc2M93A" name="Debug__ServiceResult__S" guard="_tNSWoUrDEem2BZRQc2M93A" source="_tNLo8ErDEem2BZRQc2M93A" target="_tNOFMErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tNSWoUrDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tNSWoErDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNS9sErDEem2BZRQc2M93A" name="Debug__ServiceResult__S__791">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__S&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNWBAErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNWoEErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange__794">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tNWBAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNXPIErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNYdQErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint__795">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNXPIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNZrYErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNZrYkrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint__796">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNZrYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNaScErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNa5gErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints__797">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNaScUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNa5gUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNbgkUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode__798">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tNbgkErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNdVwErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNd80krDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg__799">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNdVwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOiT0ErDEem2BZRQc2M93A" name="Debug__reqService__S" guard="_tOkJAUrDEem2BZRQc2M93A" source="_tOHdEErDEem2BZRQc2M93A" target="_tObmIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tOkJAUrDEem2BZRQc2M93A" name="Debug__GuardreqService">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tOkJAErDEem2BZRQc2M93A" name="Debug__GuardreqService">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;checkConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOlXIErDEem2BZRQc2M93A" name="Debug__reqService__S__815">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqService__S&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tOnzYErDEem2BZRQc2M93A" name="Debug__reqService__E" source="_tOc0QUrDEem2BZRQc2M93A" target="_fO-gkAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOoacErDEem2BZRQc2M93A" name="Debug__reqService__E__816">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqService__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tOsE0ErDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOsr4UrDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange__818">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tOsr4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOvvMErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOwWQErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint__819">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOvvMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOw9UErDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOw9UkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint__820">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOw9UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOxkYErDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOxkYkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints__821">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOxkYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyLcErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOyLckrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode__822">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tOyLcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyygErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOzZkkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg__823">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOyygUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPNCMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9" source="_aVMuMAmtEea_md0mpENoqg" target="_tPJ-4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPNCMUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__835">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_fW6vEAnCEeaGqPUk-4V4qQ" name="ConfigReply" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tPOQUErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S" guard="_tPO3YErDEem2BZRQc2M93A" source="_tPJ-4ErDEem2BZRQc2M93A" target="_tPLNAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tPO3YErDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tPOQUUrDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;getMasterName&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPPecErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S__837">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9__S&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tPShwErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTI0ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange__840">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tPShwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPTv4ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTv4krDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint__841">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPTv4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPUW8ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPU-AUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint__842">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPU-AErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPVlEErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWMIUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints__843">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPWMIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPWzMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWzMkrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode__844">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tPWzMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPXaQErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPYoYUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg__845">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPXaQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYoYErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP7a8ErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP7a8krDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange__863">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tP7a8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP8pEErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP8pEkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint__864">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP8pEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP9QIErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP93MUrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint__865">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP93MErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP-eQErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP-eQkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints__866">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP-eQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_FUErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP_FUkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode__867">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tP_FUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_sYErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQA6gErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg__868">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQATcErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATckrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQbKMErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__S" guard="_tQbxQUrDEem2BZRQc2M93A" source="_tQWRsErDEem2BZRQc2M93A" target="_tQYG4ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tQbxQUrDEem2BZRQc2M93A" name="Debug__GuardReqFlowDone">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tQbxQErDEem2BZRQc2M93A" name="Debug__GuardReqFlowDone">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQcYUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__S__883">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone__S&quot;,(char *)&quot;Debug__Path__ReqFlowDone&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tQmJUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQmwYUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange__886">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tQmwYErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQnXcErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQn-gErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint__887">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQnXcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQolkErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQolkkrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint__888">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQolkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQpzsErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQqawErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints__889">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQpzsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQqawUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQrB0UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode__890">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tQrB0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQro4ErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQsP8UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg__891">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQro4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQro4krDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQsP8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRfhMErDEem2BZRQc2M93A" name="Debug__StarupTransition__S" guard="_tRhWYErDEem2BZRQc2M93A" source="_tRT7AErDEem2BZRQc2M93A" target="_tRVwMUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tRhWYErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tRgvUErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;StandBY&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRh9cErDEem2BZRQc2M93A" name="Debug__StarupTransition__S__908">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition__S&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tRmO4ErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRm18UrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange__911">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tRm18ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRndAErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRoEEUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint__912">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRoEEErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRorIErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRpSMUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint__913">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRpSMErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRrHYErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRrucErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints__914">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRrHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRsVgErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRs8kErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode__915">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tRsVgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRs8kUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRuKsUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg__916">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRtjoErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRtjoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRuKsErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSauQErDEem2BZRQc2M93A" name="Debug__reqFlowInit__E" source="_tSUAkErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSauQUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__E__934">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tScjcErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSdKgErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange__936">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tScjcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSeYoErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSe_sUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint__937">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSe_sErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSfmwErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSgN0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint__938">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSfmwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tShb8ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSiqEErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints__939">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tShb8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSiqEUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSjRIUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode__940">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tSjRIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSj4MErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSlGUErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg__941">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSj4MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTNYcErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTNYckrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange__963">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tTNYcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTN_gErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTN_gkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint__964">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTN_gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTOmkErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTOmkkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint__965">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTOmkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTPNoErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTPNokrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints__966">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTPNoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTP0sErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTP0skrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode__967">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tTP0sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTQbwErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTRC0krDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg__968">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTQbwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tUApsErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_Oll1cAlKEea_md0mpENoqg" target="_tT_bkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tUApsUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_pw9moEr4Eemntv5tDuspng" name="2" source="_tLzI4ErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qsVCsEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxBRAEr4Eemntv5tDuspng" name="3" source="_tOHdEErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qp8dEEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxGJgEr4Eemntv5tDuspng" name="4" source="_tQWRsErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qskTQEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxH-sEr4Eemntv5tDuspng" name="5" source="_tRT7AErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_que-0Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxJz4Er4Eemntv5tDuspng" name="6" source="_tSQ9QErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qqWFsEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxOsYEr4Eemntv5tDuspng" name="7" source="_tMY-wErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qpLoEEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxSWwEr4Eemntv5tDuspng" name="8" source="_tNLo8ErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_quUmwEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxTk4Er4Eemntv5tDuspng" name="9" source="_tPJ-4ErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qq-X0Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_pxlRsEr4Eemntv5tDuspng" name="From__getMasterName__10" source="_aVMuMAmtEea_md0mpENoqg" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qsv5cEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_pxw34Er4Eemntv5tDuspng" name="PME_Trig11" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_px6B0Er4Eemntv5tDuspng" name="PME_Trig12" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_pyEZ4Er4Eemntv5tDuspng" name="PME_Trig13" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_pyKggEr4Eemntv5tDuspng" name="PME_Trig14" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_pyOx8Er4Eemntv5tDuspng" name="PME_Trig15" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_pyROMEr4Eemntv5tDuspng" name="PME_Trig16" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_pyZKAEr4Eemntv5tDuspng" name="PME_Trig17" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_pyc0YEr4Eemntv5tDuspng" name="PME_Trig18" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_pyi7AEr4Eemntv5tDuspng" name="PME_Trig19" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_pypBoEr4Eemntv5tDuspng" name="PME_Trig20" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
              <trigger xmi:id="_pyt6IEr4Eemntv5tDuspng" name="PME_Trig21" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_py0AwEr4Eemntv5tDuspng" name="PME_Trig22" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_py45QEr4Eemntv5tDuspng" name="PME_Trig23" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_pzA1EEr4Eemntv5tDuspng" name="PME_Trig24" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_pzG7sEr4Eemntv5tDuspng" name="PME_Trig25" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_pzNCUEr4Eemntv5tDuspng" name="PME_Trig26" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_pzVlMEr4Eemntv5tDuspng" name="PME_Trig27" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_pzq8YEr4Eemntv5tDuspng" name="PME_Trig28" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_pz17gEr4Eemntv5tDuspng" name="PME_Trig29" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_pz_FcEr4Eemntv5tDuspng" name="PME_Trig30" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_p0HoUEr4Eemntv5tDuspng" name="From__Retry__31" source="_KwFHIAo0EeaGqPUk-4V4qQ" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qpjbgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_p0SAYEr4Eemntv5tDuspng" name="PME_Trig32" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p0WR0Er4Eemntv5tDuspng" name="PME_Trig33" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p0dmkEr4Eemntv5tDuspng" name="PME_Trig34" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p0k7UEr4Eemntv5tDuspng" name="PME_Trig35" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p0nXkEr4Eemntv5tDuspng" name="PME_Trig36" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p0rpAEr4Eemntv5tDuspng" name="PME_Trig37" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p0xIkEr4Eemntv5tDuspng" name="PME_Trig38" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p01aAEr4Eemntv5tDuspng" name="PME_Trig39" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p08HsEr4Eemntv5tDuspng" name="PME_Trig40" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_p1EqkEr4Eemntv5tDuspng" name="PME_Trig41" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
              <trigger xmi:id="_p1GfwEr4Eemntv5tDuspng" name="PME_Trig42" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p1KxMEr4Eemntv5tDuspng" name="PME_Trig43" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_p1Q30Er4Eemntv5tDuspng" name="PME_Trig44" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p1W-cEr4Eemntv5tDuspng" name="PME_Trig45" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_p1bP4Er4Eemntv5tDuspng" name="PME_Trig46" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p1fhUEr4Eemntv5tDuspng" name="PME_Trig47" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p1lA4Er4Eemntv5tDuspng" name="PME_Trig48" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_p1p5YEr4Eemntv5tDuspng" name="PME_Trig49" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_p1vY8Er4Eemntv5tDuspng" name="PME_Trig50" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p13UwEr4Eemntv5tDuspng" name="PME_Trig51" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_p16YEEr4Eemntv5tDuspng" name="From__Debug__InitState__52" source="_tT_bkErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qqJ4cEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_p2EwIEr4Eemntv5tDuspng" name="PME_Trig53" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p2Ld0Er4Eemntv5tDuspng" name="PME_Trig54" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p2OhIEr4Eemntv5tDuspng" name="PME_Trig55" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p2XEAEr4Eemntv5tDuspng" name="PME_Trig56" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p2cjkEr4Eemntv5tDuspng" name="PME_Trig57" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p2iDIEr4Eemntv5tDuspng" name="PME_Trig58" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p2ltgEr4Eemntv5tDuspng" name="PME_Trig59" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p2rNEEr4Eemntv5tDuspng" name="PME_Trig60" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p2wFkEr4Eemntv5tDuspng" name="PME_Trig61" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p21lIEr4Eemntv5tDuspng" name="PME_Trig62" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_p25PgEr4Eemntv5tDuspng" name="PME_Trig63" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
              <trigger xmi:id="_p2_9MEr4Eemntv5tDuspng" name="PME_Trig64" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p3DnkEr4Eemntv5tDuspng" name="PME_Trig65" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_p3KVQEr4Eemntv5tDuspng" name="PME_Trig66" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p3S4IEr4Eemntv5tDuspng" name="PME_Trig67" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_p3UtUEr4Eemntv5tDuspng" name="PME_Trig68" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p3cpIEr4Eemntv5tDuspng" name="PME_Trig69" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p3fscEr4Eemntv5tDuspng" name="PME_Trig70" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_p3lzEEr4Eemntv5tDuspng" name="PME_Trig71" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_p3pdcEr4Eemntv5tDuspng" name="PME_Trig72" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p3wyMEr4Eemntv5tDuspng" name="PME_Trig73" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_p3z1gEr4Eemntv5tDuspng" name="From__WaitingForReply__74" source="_fO-gkAmtEea_md0mpENoqg" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qt1ekEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_p39mgEr4Eemntv5tDuspng" name="PME_Trig75" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p4DGEEr4Eemntv5tDuspng" name="PME_Trig76" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p4H-kEr4Eemntv5tDuspng" name="PME_Trig77" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p4OFMEr4Eemntv5tDuspng" name="PME_Trig78" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p4SWoEr4Eemntv5tDuspng" name="PME_Trig79" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p4XPIEr4Eemntv5tDuspng" name="PME_Trig80" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p4a5gEr4Eemntv5tDuspng" name="PME_Trig81" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p4ej4Er4Eemntv5tDuspng" name="PME_Trig82" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p4kDcEr4Eemntv5tDuspng" name="PME_Trig83" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p4l4oEr4Eemntv5tDuspng" name="PME_Trig84" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
              <trigger xmi:id="_p4smUEr4Eemntv5tDuspng" name="PME_Trig85" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p4wQsEr4Eemntv5tDuspng" name="PME_Trig86" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_p41wQEr4Eemntv5tDuspng" name="PME_Trig87" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p45aoEr4Eemntv5tDuspng" name="PME_Trig88" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_p47P0Er4Eemntv5tDuspng" name="PME_Trig89" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_p5AIUEr4Eemntv5tDuspng" name="PME_Trig90" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_p5DysEr4Eemntv5tDuspng" name="PME_Trig91" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_p5HdEEr4Eemntv5tDuspng" name="PME_Trig92" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_p5NjsEr4Eemntv5tDuspng" name="PME_Trig93" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_p5WGkEr4Eemntv5tDuspng" name="To__getMasterName__94" guard="_qvIfEUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_aVMuMAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_qvIfEUr4Eemntv5tDuspng" name="PME_checkDecesion783">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvIfEEr4Eemntv5tDuspng" name="PME_checkDecesion783">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__getMasterName__94&quot;,&quot;getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_p5XUsEr4Eemntv5tDuspng" name="To__Retry__95" guard="_qvS3IUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <ownedRule xmi:id="_qvS3IUr4Eemntv5tDuspng" name="PME_checkDecesion788">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvS3IEr4Eemntv5tDuspng" name="PME_checkDecesion788">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Retry__95&quot;,&quot;Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_p5Yi0Er4Eemntv5tDuspng" name="To__Debug__InitState__96" guard="_qvZk0Ur4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_tT_bkErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_qvZk0Ur4Eemntv5tDuspng" name="PME_checkDecesion791">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvZk0Er4Eemntv5tDuspng" name="PME_checkDecesion791">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__96&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_p5ZJ4Er4Eemntv5tDuspng" name="To__WaitingForReply__97" guard="_qvKUQUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_fO-gkAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_qvKUQUr4Eemntv5tDuspng" name="PME_checkDecesion785">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvKUQEr4Eemntv5tDuspng" name="PME_checkDecesion785">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__WaitingForReply__97&quot;,&quot;WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_p5hswEr4Eemntv5tDuspng" name="Trans__ex98" source="_tOc0QUrDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qu844Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_p5kJAEr4Eemntv5tDuspng" name="To__Substates__Debug__C__reqService__100" guard="_qvBKUUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_p5iT0Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvBKUUr4Eemntv5tDuspng" name="PME_checkDecesion780">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvBKUEr4Eemntv5tDuspng" name="PME_checkDecesion780">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqService__100&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_p5oacEr4Eemntv5tDuspng" name="From__Substates__Debug__C__reqService__102" source="_p5l-MEr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qrfVMEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qALHUEr4Eemntv5tDuspng" name="Trans__ex179" source="_tTGqwErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qsNt8Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qANjkUr4Eemntv5tDuspng" name="To__Substates__Debug__C__NoResponseFromServer__181" guard="_qu_8MUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qAMVcEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_qu_8MUr4Eemntv5tDuspng" name="PME_checkDecesion779">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qu_8MEr4Eemntv5tDuspng" name="PME_checkDecesion779">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qAPYwUr4Eemntv5tDuspng" name="From__Substates__Debug__C__NoResponseFromServer__183" source="_qAOKoEr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qpvBsEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qHCkUEr4Eemntv5tDuspng" name="Trans__ex261" source="_tPMbIErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qqpAoEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qHFAkEr4Eemntv5tDuspng" name="To__Substates__Debug__C__getMasterName__checkConfig__9__263" guard="_qu-uEUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qHDLYEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_qu-uEUr4Eemntv5tDuspng" name="PME_checkDecesion778">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qu-uEEr4Eemntv5tDuspng" name="PME_checkDecesion778">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qHMVUEr4Eemntv5tDuspng" name="From__Substates__Debug__C__getMasterName__checkConfig__9__265" source="_qHFnoEr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_quF9QEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qKVI4Er4Eemntv5tDuspng" name="To__Substates__Debug__C__NoMaster__299" guard="_qvJtMUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qKRegEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvJtMUr4Eemntv5tDuspng" name="PME_checkDecesion784">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvJtMEr4Eemntv5tDuspng" name="PME_checkDecesion784">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoMaster__299&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qKZaUUr4Eemntv5tDuspng" name="From__Substates__Debug__C__NoMaster__301" source="_qKYMMEr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qtjKsEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qSg0gEr4Eemntv5tDuspng" name="Trans__ex355" source="_tP1UUUrDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qrtXoEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qSoJQEr4Eemntv5tDuspng" name="To__Substates__Debug__C__inittrans__357" guard="_qvRB8Ur4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qSj30Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvRB8Ur4Eemntv5tDuspng" name="PME_checkDecesion786">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvRB8Er4Eemntv5tDuspng" name="PME_checkDecesion786">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__inittrans__357&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qS0WgEr4Eemntv5tDuspng" name="From__Substates__Debug__C__inittrans__359" source="_qSxTMEr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qurMEEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qW9PoUr4Eemntv5tDuspng" name="To__Substates__Debug__C__ServiceResult__393" guard="_qvH4AUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qW8okEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvH4AUr4Eemntv5tDuspng" name="PME_checkDecesion782">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvH4AEr4Eemntv5tDuspng" name="PME_checkDecesion782">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceResult__393&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qW_E0Er4Eemntv5tDuspng" name="From__Substates__Debug__C__ServiceResult__395" source="_qW92sEr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qt-BcEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qcnLsEr4Eemntv5tDuspng" name="Trans__ex472" source="_tSUAkErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qqz_wEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qcpn8Ur4Eemntv5tDuspng" name="To__Substates__Debug__C__reqFlowInit__474" guard="_qvUFQUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qcoZ0Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvUFQUr4Eemntv5tDuspng" name="PME_checkDecesion789">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvUFQEr4Eemntv5tDuspng" name="PME_checkDecesion789">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qcqPAUr4Eemntv5tDuspng" name="From__Substates__Debug__C__reqFlowInit__476" source="_qcpn8kr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qrTvAEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qgoJAEr4Eemntv5tDuspng" name="Trans__ex576" source="_tMbbAUrDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qtW9cEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qgowEUr4Eemntv5tDuspng" name="To__Substates__Debug__C__Retry__578" guard="_qvHQ8Ur4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qgoJAUr4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvHQ8Ur4Eemntv5tDuspng" name="PME_checkDecesion781">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvHQ8Er4Eemntv5tDuspng" name="PME_checkDecesion781">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Retry__578&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qgpXIUr4Eemntv5tDuspng" name="From__Substates__Debug__C__Retry__580" source="_qgowEkr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qs7foEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qjw8kEr4Eemntv5tDuspng" name="Trans__ex658" source="_tQYt8ErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qpZDcEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qjzY0Ur4Eemntv5tDuspng" name="To__Substates__Debug__C__ReqFlowDone__660" guard="_qvSQEUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qjyKsEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvSQEUr4Eemntv5tDuspng" name="PME_checkDecesion787">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvSQEEr4Eemntv5tDuspng" name="PME_checkDecesion787">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qj0m8Er4Eemntv5tDuspng" name="From__Substates__Debug__C__ReqFlowDone__662" source="_qjz_4Er4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qtF3sEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qmPo0Er4Eemntv5tDuspng" name="Trans__ex718" source="_tRYMcErDEem2BZRQc2M93A" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qrIv4Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_qmTTMUr4Eemntv5tDuspng" name="To__Substates__Debug__C__StarupTransition__720" guard="_qvXIkUr4Eemntv5tDuspng" source="_pu6YMEr4Eemntv5tDuspng" target="_qmQP4Er4Eemntv5tDuspng">
              <ownedRule xmi:id="_qvXIkUr4Eemntv5tDuspng" name="PME_checkDecesion790">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_qvXIkEr4Eemntv5tDuspng" name="PME_checkDecesion790">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StarupTransition__720&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_qmW9kUr4Eemntv5tDuspng" name="From__Substates__Debug__C__StarupTransition__722" source="_qmVvcEr4Eemntv5tDuspng" target="_pu6YMEr4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qr-dYEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__393&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__94&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__97&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__95&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__96&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Oll1cAlKEea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_aVMuMAmtEea_md0mpENoqg" name="getMasterName">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_nvRWkAnBEea_md0mpENoqg" name="GetMasterNameEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;getMasterName&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU2XMErDEem2BZRQc2M93A" name="getMasterName__983">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_fO-gkAmtEea_md0mpENoqg" name="WaitingForReply">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_SJEfMAo6EeaGqPUk-4V4qQ" name="WaitForReply">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_r05c0Ao9EeaGqPUk-4V4qQ" name="CancellTimer">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_KwFHIAo0EeaGqPUk-4V4qQ" name="Retry">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_1CJTsAo2EeaGqPUk-4V4qQ" name="RetryConfig">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Retry&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    int r=rand()%5;
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The master is not available, retry in &quot;&lt;&lt;r&lt;&lt; &quot; second\n&quot;;
    Timer.informIn(UMLRTTimespec(r,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tUyFwErDEem2BZRQc2M93A" name="Retry__982">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tLzI4ErDEem2BZRQc2M93A" name="Debug__Path__NoMaster" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tLzv8UrDEem2BZRQc2M93A" name="Debug__C__NoMaster">
              <connectionPoint xmi:id="_tL0-EUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_qKRegEr4Eemntv5tDuspng" name="From__Parent__298" kind="entryPoint"/>
              <connectionPoint xmi:id="_qKYMMEr4Eemntv5tDuspng" name="To__Parent__300" kind="exitPoint"/>
              <region xmi:id="_tLzv8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMJHIErDEem2BZRQc2M93A" name="Debug__init__trans__NoMaster" source="_tL0-EUrDEem2BZRQc2M93A" target="_tMFcwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMS4IErDEem2BZRQc2M93A" name="Debug__init__trans__NoMaster__753">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__init__trans__NoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tMJHIUrDEem2BZRQc2M93A" name="Debug__Ac__NoMaster" source="_tMFcwUrDEem2BZRQc2M93A" target="_tMGq4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMUGQErDEem2BZRQc2M93A" name="Debug__Ac__NoMaster__755">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__Ac__NoMaster&quot;,(char *)&quot;Debug__B__Ac__NoMaster&quot;,(char *)&quot;Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMJHIkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qKkZcEr4Eemntv5tDuspng" name="Trans__Init__State__303304" source="_qKdrwEr4Eemntv5tDuspng" target="_qKaBYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qR8MwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__349&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__348&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__303&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qKs8UEr4Eemntv5tDuspng" name="From__Debug__B__Ac__NoMaster__305" source="_tMFcwUrDEem2BZRQc2M93A" target="_qKaBYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qSKPMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__349&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__348&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qKuxgEr4Eemntv5tDuspng" name="PME_Trig306" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qK3UYEr4Eemntv5tDuspng" name="PME_Trig307" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qK6XsEr4Eemntv5tDuspng" name="PME_Trig308" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qLC6kEr4Eemntv5tDuspng" name="PME_Trig309" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qLHMAEr4Eemntv5tDuspng" name="PME_Trig310" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qLJoQEr4Eemntv5tDuspng" name="PME_Trig311" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qLV1gEr4Eemntv5tDuspng" name="PME_Trig312" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qLcjMEr4Eemntv5tDuspng" name="PME_Trig313" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qLg0oEr4Eemntv5tDuspng" name="PME_Trig314" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qLkfAEr4Eemntv5tDuspng" name="PME_Trig315" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qLrMsEr4Eemntv5tDuspng" name="PME_Trig316" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qLu3EEr4Eemntv5tDuspng" name="PME_Trig317" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qL1kwEr4Eemntv5tDuspng" name="PME_Trig318" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qL-HoEr4Eemntv5tDuspng" name="PME_Trig319" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qMBK8Er4Eemntv5tDuspng" name="PME_Trig320" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qMIfsEr4Eemntv5tDuspng" name="PME_Trig321" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qMLjAEr4Eemntv5tDuspng" name="PME_Trig322" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qMTe0Er4Eemntv5tDuspng" name="PME_Trig323" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qMZlcEr4Eemntv5tDuspng" name="PME_Trig324" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qMu8oEr4Eemntv5tDuspng" name="PME_Trig325" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qNB3kEr4Eemntv5tDuspng" name="From__Debug__A__Ac__NoMaster__326" source="_tMGq4ErDEem2BZRQc2M93A" target="_qKaBYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qRhWAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__349&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__348&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qNPS8Er4Eemntv5tDuspng" name="PME_Trig327" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qNlRMEr4Eemntv5tDuspng" name="PME_Trig328" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qODyUEr4Eemntv5tDuspng" name="PME_Trig329" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qOX7YEr4Eemntv5tDuspng" name="PME_Trig330" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qOmk4Er4Eemntv5tDuspng" name="PME_Trig331" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qO0nUEr4Eemntv5tDuspng" name="PME_Trig332" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qPFGAEr4Eemntv5tDuspng" name="PME_Trig333" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qPTIcEr4Eemntv5tDuspng" name="PME_Trig334" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qPeHkEr4Eemntv5tDuspng" name="PME_Trig335" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qPptwEr4Eemntv5tDuspng" name="PME_Trig336" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qP8BoEr4Eemntv5tDuspng" name="PME_Trig337" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qQFLkEr4Eemntv5tDuspng" name="PME_Trig338" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qQOVgEr4Eemntv5tDuspng" name="PME_Trig339" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qQW4YEr4Eemntv5tDuspng" name="PME_Trig340" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qQdmEEr4Eemntv5tDuspng" name="PME_Trig341" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qQkTwEr4Eemntv5tDuspng" name="PME_Trig342" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qQpMQEr4Eemntv5tDuspng" name="PME_Trig343" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qQxIEEr4Eemntv5tDuspng" name="PME_Trig344" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qQ3OsEr4Eemntv5tDuspng" name="PME_Trig345" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qQ8uQEr4Eemntv5tDuspng" name="PME_Trig346" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qRCN0Er4Eemntv5tDuspng" name="PME_Trig347" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qRNM8Er4Eemntv5tDuspng" name="To__Debug__B__Ac__NoMaster__348" guard="_qSZfwUr4Eemntv5tDuspng" source="_qKaBYEr4Eemntv5tDuspng" target="_tMFcwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qSZfwUr4Eemntv5tDuspng" name="PME_checkDecesion354">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qSZfwEr4Eemntv5tDuspng" name="PME_checkDecesion354">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoMaster__348&quot;,&quot;Debug__B__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qRObEEr4Eemntv5tDuspng" name="To__Debug__A__Ac__NoMaster__349" guard="_qSPuwEr4Eemntv5tDuspng" source="_qKaBYEr4Eemntv5tDuspng" target="_tMGq4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qSPuwEr4Eemntv5tDuspng" name="PME_checkDecesion352">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qSPHsEr4Eemntv5tDuspng" name="PME_checkDecesion352">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoMaster__349&quot;,&quot;Debug__A__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qRVIwEr4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__350" source="_qKRegEr4Eemntv5tDuspng" target="_qKaBYEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qRs8MEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__349&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__348&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qRWW4Er4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__351" guard="_qSVOUUr4Eemntv5tDuspng" source="_qKaBYEr4Eemntv5tDuspng" target="_qKYMMEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qSVOUUr4Eemntv5tDuspng" name="PME_checkDecesion353">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qSVOUEr4Eemntv5tDuspng" name="PME_checkDecesion353">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__351&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMFcwUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMFcwkrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMLjYUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster__749">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMGq4ErDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMGq4UrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMN_oUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster__750">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qKaBYEr4Eemntv5tDuspng" name="DecesionPoint__302" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qKdrwEr4Eemntv5tDuspng" name="Init__State__303"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tMY-wErDEem2BZRQc2M93A" name="Debug__Path__Retry" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tMaM4ErDEem2BZRQc2M93A" name="Debug__C__Retry">
              <connectionPoint xmi:id="_tMaz8UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tMbbAUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_qgoJAUr4Eemntv5tDuspng" name="From__Parent__577" kind="entryPoint"/>
              <connectionPoint xmi:id="_qgowEkr4Eemntv5tDuspng" name="To__Parent__579" kind="exitPoint"/>
              <region xmi:id="_tMaM4UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMyAUErDEem2BZRQc2M93A" name="Debug__init__trans__Retry" source="_tMaz8UrDEem2BZRQc2M93A" target="_tMtH0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNACwErDEem2BZRQc2M93A" name="Debug__init__trans__Retry__778">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__init__trans__Retry&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tMyAUUrDEem2BZRQc2M93A" name="Debug__Ex__Retry" source="_tMtH0ErDEem2BZRQc2M93A" target="_tMuV8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNB38ErDEem2BZRQc2M93A" name="Debug__Ex__Retry__780">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__Ex__Retry&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMyAUkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMyAU0rDEem2BZRQc2M93A" name="Debug__AC__Retry" source="_tMuV8ErDEem2BZRQc2M93A" target="_tMwLIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNEUMErDEem2BZRQc2M93A" name="Debug__AC__Retry__782">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__AC__Retry&quot;,(char *)&quot;Debug__B__Ac__Retry&quot;,(char *)&quot;Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMynYErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qgwr4Er4Eemntv5tDuspng" name="Trans__ex583" source="_tMbbAUrDEem2BZRQc2M93A" target="_qgp-MEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qjrdAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__649&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__650&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qgyhEEr4Eemntv5tDuspng" name="Trans__Init__State__582584" source="_qgqlQEr4Eemntv5tDuspng" target="_qgp-MEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qjgd4Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__582&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__582&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__649&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__582&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__582&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__650&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__582&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qg0WQEr4Eemntv5tDuspng" name="From__Debug__A__Ac__Retry__585" source="_tMwLIErDEem2BZRQc2M93A" target="_qgp-MEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qjjhMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__649&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__650&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qg09UEr4Eemntv5tDuspng" name="PME_Trig586" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qg-HQEr4Eemntv5tDuspng" name="PME_Trig587" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qhAjgEr4Eemntv5tDuspng" name="PME_Trig588" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qhGqIEr4Eemntv5tDuspng" name="PME_Trig589" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qhH4QEr4Eemntv5tDuspng" name="PME_Trig590" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qhJGYEr4Eemntv5tDuspng" name="PME_Trig591" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qhK7kEr4Eemntv5tDuspng" name="PME_Trig592" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qhSQUEr4Eemntv5tDuspng" name="PME_Trig593" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qhUskEr4Eemntv5tDuspng" name="PME_Trig594" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qhazMEr4Eemntv5tDuspng" name="PME_Trig595" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qhdPcEr4Eemntv5tDuspng" name="PME_Trig596" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qhjWEEr4Eemntv5tDuspng" name="PME_Trig597" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qhmZYEr4Eemntv5tDuspng" name="PME_Trig598" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qhoOkEr4Eemntv5tDuspng" name="PME_Trig599" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qhsgAEr4Eemntv5tDuspng" name="PME_Trig600" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qhwKYEr4Eemntv5tDuspng" name="PME_Trig601" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qhx_kEr4Eemntv5tDuspng" name="PME_Trig602" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qhymoEr4Eemntv5tDuspng" name="PME_Trig603" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qh4tQEr4Eemntv5tDuspng" name="PME_Trig604" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qh7wkEr4Eemntv5tDuspng" name="PME_Trig605" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qh_a8Er4Eemntv5tDuspng" name="PME_Trig606" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qiETcEr4Eemntv5tDuspng" name="From__Debug__B__Ex__Retry__607" source="_tMtH0ErDEem2BZRQc2M93A" target="_qgp-MEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qjqO4Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__649&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__650&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qiE6gEr4Eemntv5tDuspng" name="PME_Trig608" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qiGIoEr4Eemntv5tDuspng" name="PME_Trig609" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qiHWwEr4Eemntv5tDuspng" name="PME_Trig610" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qiNdYEr4Eemntv5tDuspng" name="PME_Trig611" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qiPSkEr4Eemntv5tDuspng" name="PME_Trig612" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qiQgsEr4Eemntv5tDuspng" name="PME_Trig613" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qiRu0Er4Eemntv5tDuspng" name="PME_Trig614" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qiYcgEr4Eemntv5tDuspng" name="PME_Trig615" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qiZqoEr4Eemntv5tDuspng" name="PME_Trig616" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qiaRsEr4Eemntv5tDuspng" name="PME_Trig617" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qibf0Er4Eemntv5tDuspng" name="PME_Trig618" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qifxQEr4Eemntv5tDuspng" name="PME_Trig619" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qijboEr4Eemntv5tDuspng" name="PME_Trig620" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qikCsEr4Eemntv5tDuspng" name="PME_Trig621" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qilQ0Er4Eemntv5tDuspng" name="PME_Trig622" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qintEEr4Eemntv5tDuspng" name="PME_Trig623" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qir-gEr4Eemntv5tDuspng" name="PME_Trig624" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qitMoEr4Eemntv5tDuspng" name="PME_Trig625" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qiuawEr4Eemntv5tDuspng" name="PME_Trig626" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qivB0Er4Eemntv5tDuspng" name="PME_Trig627" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qiw3AEr4Eemntv5tDuspng" name="From__Debug__B__Ac__Retry__628" source="_tMuV8ErDEem2BZRQc2M93A" target="_qgp-MEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qjnyoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__649&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__650&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qizTQEr4Eemntv5tDuspng" name="PME_Trig629" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qi29oEr4Eemntv5tDuspng" name="PME_Trig630" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qi3ksEr4Eemntv5tDuspng" name="PME_Trig631" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qi4y0Er4Eemntv5tDuspng" name="PME_Trig632" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qi6A8Er4Eemntv5tDuspng" name="PME_Trig633" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qi72IEr4Eemntv5tDuspng" name="PME_Trig634" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qjBVsEr4Eemntv5tDuspng" name="PME_Trig635" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qjCj0Er4Eemntv5tDuspng" name="PME_Trig636" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qjDK4Er4Eemntv5tDuspng" name="PME_Trig637" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qjEZAEr4Eemntv5tDuspng" name="PME_Trig638" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qjIDYEr4Eemntv5tDuspng" name="PME_Trig639" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qjKfoEr4Eemntv5tDuspng" name="PME_Trig640" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qjLtwEr4Eemntv5tDuspng" name="PME_Trig641" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qjM74Er4Eemntv5tDuspng" name="PME_Trig642" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qjNi8Er4Eemntv5tDuspng" name="PME_Trig643" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qjOxEEr4Eemntv5tDuspng" name="PME_Trig644" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qjTCgEr4Eemntv5tDuspng" name="PME_Trig645" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qjVewEr4Eemntv5tDuspng" name="PME_Trig646" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qjWs4Er4Eemntv5tDuspng" name="PME_Trig647" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qjXT8Er4Eemntv5tDuspng" name="PME_Trig648" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qjZJIEr4Eemntv5tDuspng" name="To__Debug__A__Ac__Retry__649" guard="_qjsrIUr4Eemntv5tDuspng" source="_qgp-MEr4Eemntv5tDuspng" target="_tMwLIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qjsrIUr4Eemntv5tDuspng" name="PME_checkDecesion655">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qjsrIEr4Eemntv5tDuspng" name="PME_checkDecesion655">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Retry__649&quot;,&quot;Debug__A__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qja-UEr4Eemntv5tDuspng" name="To__Debug__B__Ex__Retry__650" guard="_qjugUUr4Eemntv5tDuspng" source="_qgp-MEr4Eemntv5tDuspng" target="_tMtH0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qjugUUr4Eemntv5tDuspng" name="PME_checkDecesion657">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qjugUEr4Eemntv5tDuspng" name="PME_checkDecesion657">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Retry__650&quot;,&quot;Debug__B__Ex__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qjcMcEr4Eemntv5tDuspng" name="To__Debug__B__Ac__Retry__651" guard="_qjsEEUr4Eemntv5tDuspng" source="_qgp-MEr4Eemntv5tDuspng" target="_tMuV8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qjsEEUr4Eemntv5tDuspng" name="PME_checkDecesion654">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qjsEEEr4Eemntv5tDuspng" name="PME_checkDecesion654">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Retry__651&quot;,&quot;Debug__B__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qjfPwEr4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__652" source="_qgoJAUr4Eemntv5tDuspng" target="_qgp-MEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qjiTEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__649&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__650&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qjfPwUr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__653" guard="_qjtSMUr4Eemntv5tDuspng" source="_qgp-MEr4Eemntv5tDuspng" target="_qgowEkr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qjtSMUr4Eemntv5tDuspng" name="PME_checkDecesion656">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qjtSMEr4Eemntv5tDuspng" name="PME_checkDecesion656">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__653&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMtH0ErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMtH0UrDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM1DoErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry__773">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMuV8ErDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMuV8UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM3f4UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry__774">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMwLIErDEem2BZRQc2M93A" name="Debug__A__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMwLIUrDEem2BZRQc2M93A" name="Debug__A__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM58IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Retry__775">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qgp-MEr4Eemntv5tDuspng" name="DecesionPoint__581" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qgqlQEr4Eemntv5tDuspng" name="Init__State__582"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tNLo8ErDEem2BZRQc2M93A" name="Debug__Path__ServiceResult" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tNMQAUrDEem2BZRQc2M93A" name="Debug__C__ServiceResult">
              <connectionPoint xmi:id="_tNOFMErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_qW8okEr4Eemntv5tDuspng" name="From__Parent__392" kind="entryPoint"/>
              <connectionPoint xmi:id="_qW92sEr4Eemntv5tDuspng" name="To__Parent__394" kind="exitPoint"/>
              <region xmi:id="_tNMQAkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tNnt0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult" source="_tNOFMErDEem2BZRQc2M93A" target="_tNiOQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tN6BsErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult__805">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__init__trans__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tNnt0UrDEem2BZRQc2M93A" name="Debug__Ex__WaitingForReply" source="_tNiOQUrDEem2BZRQc2M93A" target="_tNjcYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNoU4ErDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNnt0krDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tNo78ErDEem2BZRQc2M93A" name="Debug__AC__ServiceResult" source="_tNjcYErDEem2BZRQc2M93A" target="_tNkqgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNpjAErDEem2BZRQc2M93A" name="getResponse" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: got reponse from server, go to process response state\n&quot;;
    int j=0;
    for (int i=0;i&lt;=100000;i++)
	j=j+1;
    std::cout&lt;&lt;j;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__AC__ServiceResult&quot;,(char *)&quot;Debug__B__Ac__ServiceResult&quot;,(char *)&quot;Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNo78UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qXJc4Er4Eemntv5tDuspng" name="Trans__Init__State__397398" source="_qXGZkEr4Eemntv5tDuspng" target="_qXCIIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qcf28Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__397&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__465&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__397&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__464&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__397&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__467&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__397&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__463&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__397&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qXSm0Er4Eemntv5tDuspng" name="From__Debug__B__Ac__ServiceResult__399" source="_tNjcYErDEem2BZRQc2M93A" target="_qXCIIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qccMkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__465&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__464&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__467&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__463&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qXW4QEr4Eemntv5tDuspng" name="PME_Trig400" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qXfbIEr4Eemntv5tDuspng" name="PME_Trig401" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qXmI0Er4Eemntv5tDuspng" name="PME_Trig402" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qXursEr4Eemntv5tDuspng" name="PME_Trig403" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qXwg4Er4Eemntv5tDuspng" name="PME_Trig404" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qX648Er4Eemntv5tDuspng" name="PME_Trig405" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qYEC4Er4Eemntv5tDuspng" name="PME_Trig406" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qYGfIEr4Eemntv5tDuspng" name="PME_Trig407" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qYPCAEr4Eemntv5tDuspng" name="PME_Trig408" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qYW90Er4Eemntv5tDuspng" name="PME_Trig409" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qYaBIEr4Eemntv5tDuspng" name="PME_Trig410" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qYikAEr4Eemntv5tDuspng" name="PME_Trig411" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qYncgEr4Eemntv5tDuspng" name="PME_Trig412" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qYs8EEr4Eemntv5tDuspng" name="PME_Trig413" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qYvYUEr4Eemntv5tDuspng" name="PME_Trig414" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qY2GAEr4Eemntv5tDuspng" name="PME_Trig415" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qY37MEr4Eemntv5tDuspng" name="PME_Trig416" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qY5wYEr4Eemntv5tDuspng" name="PME_Trig417" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qZBsMEr4Eemntv5tDuspng" name="PME_Trig418" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qZDhYEr4Eemntv5tDuspng" name="PME_Trig419" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qZLdMEr4Eemntv5tDuspng" name="From__Debug__A__Ac__ServiceResult__420" source="_tNkqgErDEem2BZRQc2M93A" target="_qXCIIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qchFEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__465&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__464&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__467&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__463&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qZNSYEr4Eemntv5tDuspng" name="PME_Trig421" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qZWcUEr4Eemntv5tDuspng" name="PME_Trig422" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qZe_MEr4Eemntv5tDuspng" name="PME_Trig423" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qZiCgEr4Eemntv5tDuspng" name="PME_Trig424" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qZmT8Er4Eemntv5tDuspng" name="PME_Trig425" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qZowMEr4Eemntv5tDuspng" name="PME_Trig426" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qZxTEEr4Eemntv5tDuspng" name="PME_Trig427" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qZ4AwEr4Eemntv5tDuspng" name="PME_Trig428" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qZ-ucEr4Eemntv5tDuspng" name="PME_Trig429" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qaC_4Er4Eemntv5tDuspng" name="PME_Trig430" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qaIfcEr4Eemntv5tDuspng" name="PME_Trig431" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qaK7sEr4Eemntv5tDuspng" name="PME_Trig432" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qaN_AEr4Eemntv5tDuspng" name="PME_Trig433" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qaQbQEr4Eemntv5tDuspng" name="PME_Trig434" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qacogEr4Eemntv5tDuspng" name="PME_Trig435" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qafEwEr4Eemntv5tDuspng" name="PME_Trig436" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qa9l4Er4Eemntv5tDuspng" name="PME_Trig437" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qbFhsEr4Eemntv5tDuspng" name="PME_Trig438" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qbHW4Er4Eemntv5tDuspng" name="PME_Trig439" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qbLBQEr4Eemntv5tDuspng" name="PME_Trig440" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qbOroEr4Eemntv5tDuspng" name="PME_Trig441" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qbP5wEr4Eemntv5tDuspng" name="From__Debug__B__Ex__WaitingForReply__442" source="_tNiOQUrDEem2BZRQc2M93A" target="_qXCIIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qcYiMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__465&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__464&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__467&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__463&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qbQg0Er4Eemntv5tDuspng" name="PME_Trig443" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qbRu8Er4Eemntv5tDuspng" name="PME_Trig444" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qbS9EEr4Eemntv5tDuspng" name="PME_Trig445" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qbX1kEr4Eemntv5tDuspng" name="PME_Trig446" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qbZqwEr4Eemntv5tDuspng" name="PME_Trig447" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qba44Er4Eemntv5tDuspng" name="PME_Trig448" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qbcHAEr4Eemntv5tDuspng" name="PME_Trig449" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qbgYcEr4Eemntv5tDuspng" name="PME_Trig450" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qbkC0Er4Eemntv5tDuspng" name="PME_Trig451" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qbl4AEr4Eemntv5tDuspng" name="PME_Trig452" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qbr-oEr4Eemntv5tDuspng" name="PME_Trig453" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qbvpAEr4Eemntv5tDuspng" name="PME_Trig454" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qb1voEr4Eemntv5tDuspng" name="PME_Trig455" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qb5aAEr4Eemntv5tDuspng" name="PME_Trig456" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qb72QEr4Eemntv5tDuspng" name="PME_Trig457" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qcB84Er4Eemntv5tDuspng" name="PME_Trig458" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qcDLAEr4Eemntv5tDuspng" name="PME_Trig459" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qcEZIEr4Eemntv5tDuspng" name="PME_Trig460" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qcJRoEr4Eemntv5tDuspng" name="PME_Trig461" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qcMU8Er4Eemntv5tDuspng" name="PME_Trig462" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qcP_UEr4Eemntv5tDuspng" name="To__Debug__B__Ac__ServiceResult__463" guard="_qci6QUr4Eemntv5tDuspng" source="_qXCIIEr4Eemntv5tDuspng" target="_tNjcYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qci6QUr4Eemntv5tDuspng" name="PME_checkDecesion471">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qci6QEr4Eemntv5tDuspng" name="PME_checkDecesion471">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceResult__463&quot;,&quot;Debug__B__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qcR0gEr4Eemntv5tDuspng" name="To__Debug__A__Ac__ServiceResult__464" guard="_qchsIUr4Eemntv5tDuspng" source="_qXCIIEr4Eemntv5tDuspng" target="_tNkqgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qchsIUr4Eemntv5tDuspng" name="PME_checkDecesion469">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qchsIEr4Eemntv5tDuspng" name="PME_checkDecesion469">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceResult__464&quot;,&quot;Debug__A__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qcSbkEr4Eemntv5tDuspng" name="To__Debug__B__Ex__WaitingForReply__465" guard="_qchFEkr4Eemntv5tDuspng" source="_qXCIIEr4Eemntv5tDuspng" target="_tNiOQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qchFEkr4Eemntv5tDuspng" name="PME_checkDecesion468">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qchFEUr4Eemntv5tDuspng" name="PME_checkDecesion468">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__465&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qcVe4Er4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__466" source="_qW8okEr4Eemntv5tDuspng" target="_qXCIIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qcXUEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__465&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__464&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__467&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__463&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qcWF8Er4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__467" guard="_qciTMUr4Eemntv5tDuspng" source="_qXCIIEr4Eemntv5tDuspng" target="_qW92sEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qciTMUr4Eemntv5tDuspng" name="PME_checkDecesion470">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qciTMEr4Eemntv5tDuspng" name="PME_checkDecesion470">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__467&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tNiOQUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNiOQkrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNtNYUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__800">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNjcYErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNjcYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNxe0ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult__801">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNkqgErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNkqgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN1JMErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult__802">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qXCIIEr4Eemntv5tDuspng" name="DecesionPoint__396" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qXGZkEr4Eemntv5tDuspng" name="Init__State__397"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tOHdEErDEem2BZRQc2M93A" name="Debug__Path__reqService" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tOXUsErDEem2BZRQc2M93A" name="Debug__C__reqService">
              <connectionPoint xmi:id="_tObmIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tOc0QUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_p5iT0Er4Eemntv5tDuspng" name="From__Parent__99" kind="entryPoint"/>
              <connectionPoint xmi:id="_p5l-MEr4Eemntv5tDuspng" name="To__Parent__101" kind="exitPoint"/>
              <region xmi:id="_tOXUsUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tO45IErDEem2BZRQc2M93A" name="Debug__init__trans__reqService" source="_tObmIUrDEem2BZRQc2M93A" target="_tO2c4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPCDEErDEem2BZRQc2M93A" name="Debug__init__trans__reqService__828">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__init__trans__reqService&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tO5gMErDEem2BZRQc2M93A" name="Debug__Ac__reqService" source="_tO2c4ErDEem2BZRQc2M93A" target="_tO3D8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tO5gMkrDEem2BZRQc2M93A" name="requestserive" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,SendingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    if (hostConfig.MasterList[0] &amp;&amp; hostConfig.MasterList[1])
    {
    int r=rand()%2;
    if (r==0)
    {
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else{
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }
    }
    else if (hostConfig.MasterList[0]){
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else
    {
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__Ac__reqService&quot;,(char *)&quot;Debug__B__Ac__reqService&quot;,(char *)&quot;Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO5gMUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tO5gM0rDEem2BZRQc2M93A" name="Debug__En__WaitingForReply" source="_tO3D8ErDEem2BZRQc2M93A" target="_tO4SEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tO6HQUrDEem2BZRQc2M93A" name="WaitForReply" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__En__WaitingForReply&quot;,(char *)&quot;Debug__A__Ac__reqService&quot;,(char *)&quot;Debug__A__En__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO6HQErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tO6HQkrDEem2BZRQc2M93A" name="Debug__end__trans__reqService" source="_tO4SEErDEem2BZRQc2M93A" target="_tOc0QUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPFtcErDEem2BZRQc2M93A" name="Debug__end__trans__reqService__832">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__end__trans__reqService&quot;,(char *)&quot;Debug__A__En__reqService&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO6HQ0rDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_p545IEr4Eemntv5tDuspng" name="Trans__ex105" source="_tOc0QUrDEem2BZRQc2M93A" target="_p5rdwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_p_QhUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__170&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__171&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__174&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_p56uUEr4Eemntv5tDuspng" name="Trans__Init__State__104106" source="_p5t6AEr4Eemntv5tDuspng" target="_p5rdwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_p_bgcEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__104&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__104&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__170&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__104&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__171&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__104&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__174&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__104&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_p6ZPcEr4Eemntv5tDuspng" name="From__Debug__A__Ac__reqService__107" source="_tO3D8ErDEem2BZRQc2M93A" target="_p5rdwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_p_wQkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__170&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__171&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__174&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_p6f9IEr4Eemntv5tDuspng" name="PME_Trig108" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p6puIEr4Eemntv5tDuspng" name="PME_Trig109" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p60GMEr4Eemntv5tDuspng" name="PME_Trig110" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p66M0Er4Eemntv5tDuspng" name="PME_Trig111" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p7ATcEr4Eemntv5tDuspng" name="PME_Trig112" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p7HoMEr4Eemntv5tDuspng" name="PME_Trig113" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p7KEcEr4Eemntv5tDuspng" name="PME_Trig114" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p7PkAEr4Eemntv5tDuspng" name="PME_Trig115" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p7TOYEr4Eemntv5tDuspng" name="PME_Trig116" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p7Yt8Er4Eemntv5tDuspng" name="PME_Trig117" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_p7cYUEr4Eemntv5tDuspng" name="PME_Trig118" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_p7eNgEr4Eemntv5tDuspng" name="PME_Trig119" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p7jtEEr4Eemntv5tDuspng" name="PME_Trig120" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_p7nXcEr4Eemntv5tDuspng" name="PME_Trig121" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p7ro4Er4Eemntv5tDuspng" name="PME_Trig122" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_p7whYEr4Eemntv5tDuspng" name="PME_Trig123" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p70LwEr4Eemntv5tDuspng" name="PME_Trig124" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p76SYEr4Eemntv5tDuspng" name="PME_Trig125" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_p78HkEr4Eemntv5tDuspng" name="PME_Trig126" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p7_x8Er4Eemntv5tDuspng" name="PME_Trig127" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_p8FRgEr4Eemntv5tDuspng" name="From__Debug__B__Ac__reqService__128" source="_tO2c4ErDEem2BZRQc2M93A" target="_p5rdwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_p_ULsEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__170&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__171&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__174&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_p8HGsEr4Eemntv5tDuspng" name="PME_Trig129" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p8LYIEr4Eemntv5tDuspng" name="PME_Trig130" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p8Q3sEr4Eemntv5tDuspng" name="PME_Trig131" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p8YMcEr4Eemntv5tDuspng" name="PME_Trig132" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p8aBoEr4Eemntv5tDuspng" name="PME_Trig133" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p8dE8Er4Eemntv5tDuspng" name="PME_Trig134" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p8jLkEr4Eemntv5tDuspng" name="PME_Trig135" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p8ln0Er4Eemntv5tDuspng" name="PME_Trig136" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p8s8kEr4Eemntv5tDuspng" name="PME_Trig137" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p8v_4Er4Eemntv5tDuspng" name="PME_Trig138" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_p83UoEr4Eemntv5tDuspng" name="PME_Trig139" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_p85w4Er4Eemntv5tDuspng" name="PME_Trig140" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p8-CUEr4Eemntv5tDuspng" name="PME_Trig141" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_p9C60Er4Eemntv5tDuspng" name="PME_Trig142" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p9F-IEr4Eemntv5tDuspng" name="PME_Trig143" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_p9LdsEr4Eemntv5tDuspng" name="PME_Trig144" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p9QWMEr4Eemntv5tDuspng" name="PME_Trig145" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p9XD4Er4Eemntv5tDuspng" name="PME_Trig146" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_p9aHMEr4Eemntv5tDuspng" name="PME_Trig147" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p9gN0Er4Eemntv5tDuspng" name="PME_Trig148" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_p9iqEEr4Eemntv5tDuspng" name="From__Debug__A__En__reqService__149" source="_tO4SEErDEem2BZRQc2M93A" target="_p5rdwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_p_oUwEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__170&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__171&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__174&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_p9mUcEr4Eemntv5tDuspng" name="PME_Trig150" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p9rM8Er4Eemntv5tDuspng" name="PME_Trig151" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p9zv0Er4Eemntv5tDuspng" name="PME_Trig152" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p92zIEr4Eemntv5tDuspng" name="PME_Trig153" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p9-H4Er4Eemntv5tDuspng" name="PME_Trig154" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p9_9EEr4Eemntv5tDuspng" name="PME_Trig155" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p-DncEr4Eemntv5tDuspng" name="PME_Trig156" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p-JuEEr4Eemntv5tDuspng" name="PME_Trig157" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p-MKUEr4Eemntv5tDuspng" name="PME_Trig158" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p-S4AEr4Eemntv5tDuspng" name="PME_Trig159" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_p-VUQEr4Eemntv5tDuspng" name="PME_Trig160" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_p-cpAEr4Eemntv5tDuspng" name="PME_Trig161" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p-eeMEr4Eemntv5tDuspng" name="PME_Trig162" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_p-gTYEr4Eemntv5tDuspng" name="PME_Trig163" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p-noIEr4Eemntv5tDuspng" name="PME_Trig164" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_p-pdUEr4Eemntv5tDuspng" name="PME_Trig165" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_p-tuwEr4Eemntv5tDuspng" name="PME_Trig166" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_p-ynQEr4Eemntv5tDuspng" name="PME_Trig167" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_p-1DgEr4Eemntv5tDuspng" name="PME_Trig168" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_p-8YQEr4Eemntv5tDuspng" name="PME_Trig169" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_p_EUEEr4Eemntv5tDuspng" name="To__Debug__A__Ac__reqService__170" guard="_p_-TAEr4Eemntv5tDuspng" source="_p5rdwEr4Eemntv5tDuspng" target="_tO3D8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_p_-TAEr4Eemntv5tDuspng" name="PME_checkDecesion176">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_p_9r8Er4Eemntv5tDuspng" name="PME_checkDecesion176">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqService__170&quot;,&quot;Debug__A__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_p_E7IEr4Eemntv5tDuspng" name="To__Debug__B__Ac__reqService__171" guard="_qACkcUr4Eemntv5tDuspng" source="_p5rdwEr4Eemntv5tDuspng" target="_tO2c4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qACkcUr4Eemntv5tDuspng" name="PME_checkDecesion177">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qACkcEr4Eemntv5tDuspng" name="PME_checkDecesion177">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqService__171&quot;,&quot;Debug__B__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_p_E7IUr4Eemntv5tDuspng" name="To__Debug__A__En__reqService__172" guard="_p_6ooUr4Eemntv5tDuspng" source="_p5rdwEr4Eemntv5tDuspng" target="_tO4SEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_p_6ooUr4Eemntv5tDuspng" name="PME_checkDecesion175">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_p_6ooEr4Eemntv5tDuspng" name="PME_checkDecesion175">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__reqService__172&quot;,&quot;Debug__A__En__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_p_HXYEr4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__173" source="_p5iT0Er4Eemntv5tDuspng" target="_p5rdwEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_p_5agEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__170&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__171&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__174&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_p_H-cEr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__174" guard="_qAEZoUr4Eemntv5tDuspng" source="_p5rdwEr4Eemntv5tDuspng" target="_p5l-MEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qAEZoUr4Eemntv5tDuspng" name="PME_checkDecesion178">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qAEZoEr4Eemntv5tDuspng" name="PME_checkDecesion178">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__174&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tO2c4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO2c4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO7VYErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService__824">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tO3D8ErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO3D8UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO-YsErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService__825">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tO4SEErDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO4SEUrDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPAN4UrDEem2BZRQc2M93A" name="Debug__A__En__reqService__826">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_p5rdwEr4Eemntv5tDuspng" name="DecesionPoint__103" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_p5t6AEr4Eemntv5tDuspng" name="Init__State__104"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tPJ-4ErDEem2BZRQc2M93A" name="Debug__Path__getMasterName__checkConfig__9" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tPKl8UrDEem2BZRQc2M93A" name="Debug__C__getMasterName__checkConfig__9">
              <connectionPoint xmi:id="_tPLNAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tPMbIErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_qHDLYEr4Eemntv5tDuspng" name="From__Parent__262" kind="entryPoint"/>
              <connectionPoint xmi:id="_qHFnoEr4Eemntv5tDuspng" name="To__Parent__264" kind="exitPoint"/>
              <region xmi:id="_tPKl8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_qHZJoEr4Eemntv5tDuspng" name="Trans__Init__State__267268" source="_qHVfQEr4Eemntv5tDuspng" target="_qHNjcEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qJ5EAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__267&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__293&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__267&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__295&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__267&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qHZwsEr4Eemntv5tDuspng" name="Trans__en269" source="_tPLNAUrDEem2BZRQc2M93A" target="_qHNjcEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qJ7gQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__293&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__295&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qHaXwEr4Eemntv5tDuspng" name="Trans__ex270" source="_tPMbIErDEem2BZRQc2M93A" target="_qHNjcEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qKDcEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__293&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__295&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qHiTkEr4Eemntv5tDuspng" name="From__Debug__B__Ac__getMasterName__checkConfig__9__271" source="_tPeH8ErDEem2BZRQc2M93A" target="_qHNjcEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qKF4UEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__293&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__295&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qHkIwEr4Eemntv5tDuspng" name="PME_Trig272" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qHtSsEr4Eemntv5tDuspng" name="PME_Trig273" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qH0ncEr4Eemntv5tDuspng" name="PME_Trig274" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qH5f8Er4Eemntv5tDuspng" name="PME_Trig275" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qIANoEr4Eemntv5tDuspng" name="PME_Trig276" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qIG7UEr4Eemntv5tDuspng" name="PME_Trig277" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qILMwEr4Eemntv5tDuspng" name="PME_Trig278" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qIRTYEr4Eemntv5tDuspng" name="PME_Trig279" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qIWL4Er4Eemntv5tDuspng" name="PME_Trig280" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qIeuwEr4Eemntv5tDuspng" name="PME_Trig281" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qIhLAEr4Eemntv5tDuspng" name="PME_Trig282" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qIpG0Er4Eemntv5tDuspng" name="PME_Trig283" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qIsxMEr4Eemntv5tDuspng" name="PME_Trig284" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qIze4Er4Eemntv5tDuspng" name="PME_Trig285" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qI4-cEr4Eemntv5tDuspng" name="PME_Trig286" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qI928Er4Eemntv5tDuspng" name="PME_Trig287" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qJGZ0Er4Eemntv5tDuspng" name="PME_Trig288" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qJLSUEr4Eemntv5tDuspng" name="PME_Trig289" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qJTOIEr4Eemntv5tDuspng" name="PME_Trig290" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qJbJ8Er4Eemntv5tDuspng" name="PME_Trig291" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qJdmMEr4Eemntv5tDuspng" name="PME_Trig292" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qJnXMEr4Eemntv5tDuspng" name="To__Debug__B__Ac__getMasterName__checkConfig__9__293" guard="_qKPCQUr4Eemntv5tDuspng" source="_qHNjcEr4Eemntv5tDuspng" target="_tPeH8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qKPCQUr4Eemntv5tDuspng" name="PME_checkDecesion296">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qKPCQEr4Eemntv5tDuspng" name="PME_checkDecesion296">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__293&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qJur8Er4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__294" source="_qHDLYEr4Eemntv5tDuspng" target="_qHNjcEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qKN0IEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__293&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__295&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qJvTAEr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__295" guard="_qKQQYUr4Eemntv5tDuspng" source="_qHNjcEr4Eemntv5tDuspng" target="_qHFnoEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qKQQYUr4Eemntv5tDuspng" name="PME_checkDecesion297">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qKQQYEr4Eemntv5tDuspng" name="PME_checkDecesion297">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__295&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tPeH8ErDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPeH8UrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName__checkConfig__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPk1oUrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9__847">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qHNjcEr4Eemntv5tDuspng" name="DecesionPoint__266" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qHVfQEr4Eemntv5tDuspng" name="Init__State__267"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tPy4EErDEem2BZRQc2M93A" name="Debug__C__inittrans">
              <connectionPoint xmi:id="_tPzfIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tP1UUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_qSj30Er4Eemntv5tDuspng" name="From__Parent__356" kind="entryPoint"/>
              <connectionPoint xmi:id="_qSxTMEr4Eemntv5tDuspng" name="To__Parent__358" kind="exitPoint"/>
              <region xmi:id="_tPy4EUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_qTS3oEr4Eemntv5tDuspng" name="Trans__ex362" source="_tP1UUUrDEem2BZRQc2M93A" target="_qS4A4Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qWxCYEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__387&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__389&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qTV68Er4Eemntv5tDuspng" name="Trans__en363" source="_tPzfIUrDEem2BZRQc2M93A" target="_qS4A4Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qWmqUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__387&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__389&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qTcooEr4Eemntv5tDuspng" name="Trans__Init__State__361364" source="_qTFcQEr4Eemntv5tDuspng" target="_qS4A4Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qWfVkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__361&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__387&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__361&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__389&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__361&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qTrSIEr4Eemntv5tDuspng" name="From__Debug__A__Ac__inittrans__365" source="_tQD90ErDEem2BZRQc2M93A" target="_qS4A4Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qWzeoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__387&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__389&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qTxYwEr4Eemntv5tDuspng" name="PME_Trig366" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qT6isEr4Eemntv5tDuspng" name="PME_Trig367" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qUH-EEr4Eemntv5tDuspng" name="PME_Trig368" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qUP54Er4Eemntv5tDuspng" name="PME_Trig369" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qUYcwEr4Eemntv5tDuspng" name="PME_Trig370" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qUgYkEr4Eemntv5tDuspng" name="PME_Trig371" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qUpigEr4Eemntv5tDuspng" name="PME_Trig372" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qUwQMEr4Eemntv5tDuspng" name="PME_Trig373" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qUz6kEr4Eemntv5tDuspng" name="PME_Trig374" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qU6oQEr4Eemntv5tDuspng" name="PME_Trig375" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qU_gwEr4Eemntv5tDuspng" name="PME_Trig376" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qVFAUEr4Eemntv5tDuspng" name="PME_Trig377" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qVLuAEr4Eemntv5tDuspng" name="PME_Trig378" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qVSbsEr4Eemntv5tDuspng" name="PME_Trig379" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qVcMsEr4Eemntv5tDuspng" name="PME_Trig380" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qVlWoEr4Eemntv5tDuspng" name="PME_Trig381" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qVt5gEr4Eemntv5tDuspng" name="PME_Trig382" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qV11UEr4Eemntv5tDuspng" name="PME_Trig383" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qWBbgEr4Eemntv5tDuspng" name="PME_Trig384" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qWJXUEr4Eemntv5tDuspng" name="PME_Trig385" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qWLzkEr4Eemntv5tDuspng" name="PME_Trig386" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qWUWcEr4Eemntv5tDuspng" name="To__Debug__A__Ac__inittrans__387" guard="_qW0swEr4Eemntv5tDuspng" source="_qS4A4Er4Eemntv5tDuspng" target="_tQD90ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qW0swEr4Eemntv5tDuspng" name="PME_checkDecesion390">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qW0FsEr4Eemntv5tDuspng" name="PME_checkDecesion390">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__inittrans__387&quot;,&quot;Debug__A__Ac__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qWZ2AEr4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__388" source="_qSj30Er4Eemntv5tDuspng" target="_qS4A4Er4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qWptoEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__387&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__389&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qWcSQEr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__389" guard="_qW2h8Ur4Eemntv5tDuspng" source="_qS4A4Er4Eemntv5tDuspng" target="_qSxTMEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qW2h8Ur4Eemntv5tDuspng" name="PME_checkDecesion391">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qW2h8Er4Eemntv5tDuspng" name="PME_checkDecesion391">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__389&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQD90ErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQEk4ErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;inittrans&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQL5oErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans__870">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qS4A4Er4Eemntv5tDuspng" name="DecesionPoint__360" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qTFcQEr4Eemntv5tDuspng" name="Init__State__361"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tQWRsErDEem2BZRQc2M93A" name="Debug__Path__ReqFlowDone" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tQW4wUrDEem2BZRQc2M93A" name="Debug__C__ReqFlowDone">
              <connectionPoint xmi:id="_tQYG4ErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tQYt8ErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_qjyKsEr4Eemntv5tDuspng" name="From__Parent__659" kind="entryPoint"/>
              <connectionPoint xmi:id="_qjz_4Er4Eemntv5tDuspng" name="To__Parent__661" kind="exitPoint"/>
              <region xmi:id="_tQW4wkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQ0LwErDEem2BZRQc2M93A" name="Debug__init__trans__ReqFlowDone" source="_tQYG4ErDEem2BZRQc2M93A" target="_tQvTQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tREDYUrDEem2BZRQc2M93A" name="Debug__init__trans__ReqFlowDone__897">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__init__trans__ReqFlowDone&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qj3DMEr4Eemntv5tDuspng" name="Trans__Init__State__664665" source="_qj11EEr4Eemntv5tDuspng" target="_qj0m8Ur4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qmCNcEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__664&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__664&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__711&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__664&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__712&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__664&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qj3qQEr4Eemntv5tDuspng" name="Trans__ex666" source="_tQYt8ErDEem2BZRQc2M93A" target="_qj0m8Ur4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qmKwUEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__711&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__712&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qj8iwEr4Eemntv5tDuspng" name="From__Debug__A__Ac__ReqFlowDone__667" source="_tQxvgErDEem2BZRQc2M93A" target="_qj0m8Ur4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qmNMkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__711&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__712&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qj-X8Er4Eemntv5tDuspng" name="PME_Trig668" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qj-_AEr4Eemntv5tDuspng" name="PME_Trig669" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qkANIEr4Eemntv5tDuspng" name="PME_Trig670" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qkDQcEr4Eemntv5tDuspng" name="PME_Trig671" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qkJXEEr4Eemntv5tDuspng" name="PME_Trig672" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qkKlMEr4Eemntv5tDuspng" name="PME_Trig673" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qkLzUEr4Eemntv5tDuspng" name="PME_Trig674" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qkR58Er4Eemntv5tDuspng" name="PME_Trig675" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qkTIEEr4Eemntv5tDuspng" name="PME_Trig676" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qkUWMEr4Eemntv5tDuspng" name="PME_Trig677" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qkVkUEr4Eemntv5tDuspng" name="PME_Trig678" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qkYnoEr4Eemntv5tDuspng" name="PME_Trig679" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qkcSAEr4Eemntv5tDuspng" name="PME_Trig680" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qkdgIEr4Eemntv5tDuspng" name="PME_Trig681" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qkeuQEr4Eemntv5tDuspng" name="PME_Trig682" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qkfVUEr4Eemntv5tDuspng" name="PME_Trig683" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qkkN0Er4Eemntv5tDuspng" name="PME_Trig684" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qknRIEr4Eemntv5tDuspng" name="PME_Trig685" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qkofQEr4Eemntv5tDuspng" name="PME_Trig686" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qkpGUEr4Eemntv5tDuspng" name="PME_Trig687" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qkq7gEr4Eemntv5tDuspng" name="PME_Trig688" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qkxpMEr4Eemntv5tDuspng" name="From__Debug__B__Ex__ProcessResponse__689" source="_tQvTQUrDEem2BZRQc2M93A" target="_qj0m8Ur4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qmDbkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__711&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__712&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qky3UEr4Eemntv5tDuspng" name="PME_Trig690" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qk0sgEr4Eemntv5tDuspng" name="PME_Trig691" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qk6zIEr4Eemntv5tDuspng" name="PME_Trig692" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qk8BQEr4Eemntv5tDuspng" name="PME_Trig693" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qk92cEr4Eemntv5tDuspng" name="PME_Trig694" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qlBg0Er4Eemntv5tDuspng" name="PME_Trig695" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qlGZUEr4Eemntv5tDuspng" name="PME_Trig696" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qlI1kEr4Eemntv5tDuspng" name="PME_Trig697" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qlPjQEr4Eemntv5tDuspng" name="PME_Trig698" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qlRYcEr4Eemntv5tDuspng" name="PME_Trig699" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qlTNoEr4Eemntv5tDuspng" name="PME_Trig700" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qlZUQEr4Eemntv5tDuspng" name="PME_Trig701" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qlaiYEr4Eemntv5tDuspng" name="PME_Trig702" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qlbwgEr4Eemntv5tDuspng" name="PME_Trig703" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qlfa4Er4Eemntv5tDuspng" name="PME_Trig704" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qlkTYEr4Eemntv5tDuspng" name="PME_Trig705" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qlmIkEr4Eemntv5tDuspng" name="PME_Trig706" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qlok0Er4Eemntv5tDuspng" name="PME_Trig707" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qlurcEr4Eemntv5tDuspng" name="PME_Trig708" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qlxHsEr4Eemntv5tDuspng" name="PME_Trig709" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qlzj8Er4Eemntv5tDuspng" name="PME_Trig710" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ql5qkEr4Eemntv5tDuspng" name="To__Debug__A__Ac__ReqFlowDone__711" guard="_qmOasUr4Eemntv5tDuspng" source="_qj0m8Ur4Eemntv5tDuspng" target="_tQxvgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qmOasUr4Eemntv5tDuspng" name="PME_checkDecesion716">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qmOasEr4Eemntv5tDuspng" name="PME_checkDecesion716">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ReqFlowDone__711&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ql5qkUr4Eemntv5tDuspng" name="To__Debug__B__Ex__ProcessResponse__712" guard="_qmPBwUr4Eemntv5tDuspng" source="_qj0m8Ur4Eemntv5tDuspng" target="_tQvTQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qmPBwUr4Eemntv5tDuspng" name="PME_checkDecesion717">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qmPBwEr4Eemntv5tDuspng" name="PME_checkDecesion717">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ProcessResponse__712&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ql64sEr4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__713" source="_qjyKsEr4Eemntv5tDuspng" target="_qj0m8Ur4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qmEpsEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__711&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__712&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ql7fwEr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__714" guard="_qmNzoUr4Eemntv5tDuspng" source="_qj0m8Ur4Eemntv5tDuspng" target="_qjz_4Er4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qmNzoUr4Eemntv5tDuspng" name="PME_checkDecesion715">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qmNzoEr4Eemntv5tDuspng" name="PME_checkDecesion715">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__714&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQvTQUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQvTQkrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQ32IUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse__892">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQxvgErDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQxvgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReqFlowDone&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRBAEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone__894">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qj0m8Ur4Eemntv5tDuspng" name="DecesionPoint__663" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qj11EEr4Eemntv5tDuspng" name="Init__State__664"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tRT7AErDEem2BZRQc2M93A" name="Debug__Path__StarupTransition" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tRUiEUrDEem2BZRQc2M93A" name="Debug__C__StarupTransition">
              <connectionPoint xmi:id="_tRVwMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tRYMcErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_qmQP4Er4Eemntv5tDuspng" name="From__Parent__719" kind="entryPoint"/>
              <connectionPoint xmi:id="_qmVvcEr4Eemntv5tDuspng" name="To__Parent__721" kind="exitPoint"/>
              <region xmi:id="_tRUiEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tR6X8ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition" source="_tR2GgErDEem2BZRQc2M93A" target="_tRYMcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSMr0ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition__928">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__end__trans__StarupTransition&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR6X8UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qmaA4Er4Eemntv5tDuspng" name="Trans__ex725" source="_tRYMcErDEem2BZRQc2M93A" target="_qmXkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qofrkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__771&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qmb2EEr4Eemntv5tDuspng" name="Trans__en726" source="_tRVwMUrDEem2BZRQc2M93A" target="_qmXkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qocoQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__771&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qmdrQEr4Eemntv5tDuspng" name="Trans__Init__State__724727" source="_qmYywEr4Eemntv5tDuspng" target="_qmXkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qomZQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__724&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__724&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__724&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__771&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__724&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qmhVoEr4Eemntv5tDuspng" name="From__Debug__B__Ac__StarupTransition__728" source="_tRycIErDEem2BZRQc2M93A" target="_qmXkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qor40Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__771&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qmh8sEr4Eemntv5tDuspng" name="PME_Trig729" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qmjK0Er4Eemntv5tDuspng" name="PME_Trig730" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qmkY8Er4Eemntv5tDuspng" name="PME_Trig731" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qmqfkEr4Eemntv5tDuspng" name="PME_Trig732" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qmrtsEr4Eemntv5tDuspng" name="PME_Trig733" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qmsUwEr4Eemntv5tDuspng" name="PME_Trig734" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qmti4Er4Eemntv5tDuspng" name="PME_Trig735" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qmuxAEr4Eemntv5tDuspng" name="PME_Trig736" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qmybYEr4Eemntv5tDuspng" name="PME_Trig737" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qm03oEr4Eemntv5tDuspng" name="PME_Trig738" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qm2FwEr4Eemntv5tDuspng" name="PME_Trig739" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qm2s0Er4Eemntv5tDuspng" name="PME_Trig740" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qm368Er4Eemntv5tDuspng" name="PME_Trig741" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qm5wIEr4Eemntv5tDuspng" name="PME_Trig742" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qm9agEr4Eemntv5tDuspng" name="PME_Trig743" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qm_PsEr4Eemntv5tDuspng" name="PME_Trig744" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qnAd0Er4Eemntv5tDuspng" name="PME_Trig745" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qnBE4Er4Eemntv5tDuspng" name="PME_Trig746" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qnCTAEr4Eemntv5tDuspng" name="PME_Trig747" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qnEIMEr4Eemntv5tDuspng" name="PME_Trig748" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qnJAsEr4Eemntv5tDuspng" name="PME_Trig749" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qnKO0Er4Eemntv5tDuspng" name="From__Debug__A__En__Ready__750" source="_tR2GgErDEem2BZRQc2M93A" target="_qmXkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qooOcEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__771&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qnK14Er4Eemntv5tDuspng" name="PME_Trig751" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qnMEAEr4Eemntv5tDuspng" name="PME_Trig752" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qnPHUEr4Eemntv5tDuspng" name="PME_Trig753" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qnT_0Er4Eemntv5tDuspng" name="PME_Trig754" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qnVN8Er4Eemntv5tDuspng" name="PME_Trig755" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qnWcEEr4Eemntv5tDuspng" name="PME_Trig756" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qnXqMEr4Eemntv5tDuspng" name="PME_Trig757" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qndw0Er4Eemntv5tDuspng" name="PME_Trig758" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qnfmAEr4Eemntv5tDuspng" name="PME_Trig759" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qngNEEr4Eemntv5tDuspng" name="PME_Trig760" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qnjQYEr4Eemntv5tDuspng" name="PME_Trig761" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qnpXAEr4Eemntv5tDuspng" name="PME_Trig762" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qnrMMEr4Eemntv5tDuspng" name="PME_Trig763" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qnzIAEr4Eemntv5tDuspng" name="PME_Trig764" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qn0WIEr4Eemntv5tDuspng" name="PME_Trig765" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qn3ZcEr4Eemntv5tDuspng" name="PME_Trig766" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qn9gEEr4Eemntv5tDuspng" name="PME_Trig767" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qn-uMEr4Eemntv5tDuspng" name="PME_Trig768" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qoCYkEr4Eemntv5tDuspng" name="PME_Trig769" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qoH4IEr4Eemntv5tDuspng" name="PME_Trig770" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qoRpIEr4Eemntv5tDuspng" name="To__Debug__B__Ac__StarupTransition__771" guard="_qo238Er4Eemntv5tDuspng" source="_qmXkoEr4Eemntv5tDuspng" target="_tRycIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qo238Er4Eemntv5tDuspng" name="PME_checkDecesion777">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qo2Q4Er4Eemntv5tDuspng" name="PME_checkDecesion777">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StarupTransition__771&quot;,&quot;Debug__B__Ac__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qoSQMEr4Eemntv5tDuspng" name="To__Debug__A__En__Ready__772" guard="_qou8IUr4Eemntv5tDuspng" source="_qmXkoEr4Eemntv5tDuspng" target="_tR2GgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qou8IUr4Eemntv5tDuspng" name="PME_checkDecesion775">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qou8IEr4Eemntv5tDuspng" name="PME_checkDecesion775">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__772&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qoYW0Er4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__773" source="_qmQP4Er4Eemntv5tDuspng" target="_qmXkoEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qotuAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__774&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__771&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qoaMAEr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__774" guard="_qox_cEr4Eemntv5tDuspng" source="_qmXkoEr4Eemntv5tDuspng" target="_qmVvcEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qox_cEr4Eemntv5tDuspng" name="PME_checkDecesion776">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qoxYYEr4Eemntv5tDuspng" name="PME_checkDecesion776">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__774&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tRycIErDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tRycIUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StarupTransition&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tR-CUUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition__918">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tR2GgErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR2tkErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSEI8ErDEem2BZRQc2M93A" name="Debug__A__En__Ready__920">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qmXkoEr4Eemntv5tDuspng" name="DecesionPoint__723" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qmYywEr4Eemntv5tDuspng" name="Init__State__724"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tSQ9QErDEem2BZRQc2M93A" name="Debug__Path__reqFlowInit" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tSRkUUrDEem2BZRQc2M93A" name="Debug__C__reqFlowInit">
              <connectionPoint xmi:id="_tSUAkErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_qcoZ0Er4Eemntv5tDuspng" name="From__Parent__473" kind="entryPoint"/>
              <connectionPoint xmi:id="_qcpn8kr4Eemntv5tDuspng" name="To__Parent__475" kind="exitPoint"/>
              <region xmi:id="_tSRkUkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tSuQQUrDEem2BZRQc2M93A" name="Debug__Ex__Ready" source="_tSpXwUrDEem2BZRQc2M93A" target="_tSql4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS6dgErDEem2BZRQc2M93A" name="Debug__Ex__Ready__949">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__Ex__Ready&quot;,(char *)&quot;Debug__B__Ex__Ready&quot;,(char *)&quot;Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSuQQkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSu3UErDEem2BZRQc2M93A" name="Debug__AC__reqFlowInit" source="_tSql4ErDEem2BZRQc2M93A" target="_tSr0AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS8SsErDEem2BZRQc2M93A" name="Debug__AC__reqFlowInit__951">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__AC__reqFlowInit&quot;,(char *)&quot;Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSu3UUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSu3UkrDEem2BZRQc2M93A" name="Debug__En__getMasterName" source="_tSr0AErDEem2BZRQc2M93A" target="_tStCIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSveYUrDEem2BZRQc2M93A" name="GetMasterNameEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__En__getMasterName&quot;,(char *)&quot;Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSveYErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSwFcErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit" source="_tStCIErDEem2BZRQc2M93A" target="_tSUAkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS_WAErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit__954">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__end__trans__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSwFcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qctSUEr4Eemntv5tDuspng" name="Trans__ex479" source="_tSUAkErDEem2BZRQc2M93A" target="_qcq2EEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qgPugEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__566&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__570&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qct5YEr4Eemntv5tDuspng" name="Trans__Init__State__478480" source="_qcsEMEr4Eemntv5tDuspng" target="_qcq2EEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qgdw8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__478&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__566&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__478&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__478&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__478&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__478&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__570&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__478&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qc0AAEr4Eemntv5tDuspng" name="From__Debug__B__Ac__reqFlowInit__481" source="_tSql4ErDEem2BZRQc2M93A" target="_qcq2EEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qgXDQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__566&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__570&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qc0nEEr4Eemntv5tDuspng" name="PME_Trig482" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qc11MEr4Eemntv5tDuspng" name="PME_Trig483" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qc3DUEr4Eemntv5tDuspng" name="PME_Trig484" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qc5fkEr4Eemntv5tDuspng" name="PME_Trig485" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qc9J8Er4Eemntv5tDuspng" name="PME_Trig486" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qc-YEEr4Eemntv5tDuspng" name="PME_Trig487" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qc_mMEr4Eemntv5tDuspng" name="PME_Trig488" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdA0UEr4Eemntv5tDuspng" name="PME_Trig489" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qdCCcEr4Eemntv5tDuspng" name="PME_Trig490" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdFFwEr4Eemntv5tDuspng" name="PME_Trig491" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qdIJEEr4Eemntv5tDuspng" name="PME_Trig492" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qdJXMEr4Eemntv5tDuspng" name="PME_Trig493" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qdKlUEr4Eemntv5tDuspng" name="PME_Trig494" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qdMagEr4Eemntv5tDuspng" name="PME_Trig495" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdRTAEr4Eemntv5tDuspng" name="PME_Trig496" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qdTvQEr4Eemntv5tDuspng" name="PME_Trig497" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qdVkcEr4Eemntv5tDuspng" name="PME_Trig498" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qdWLgEr4Eemntv5tDuspng" name="PME_Trig499" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qddgQEr4Eemntv5tDuspng" name="PME_Trig500" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdeuYEr4Eemntv5tDuspng" name="PME_Trig501" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qdf8gEr4Eemntv5tDuspng" name="From__Debug__B__Ex__Ready__502" source="_tSpXwUrDEem2BZRQc2M93A" target="_qcq2EEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qgaGkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__566&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__570&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qdhKoEr4Eemntv5tDuspng" name="PME_Trig503" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdofYEr4Eemntv5tDuspng" name="PME_Trig504" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qdpGcEr4Eemntv5tDuspng" name="PME_Trig505" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdqUkEr4Eemntv5tDuspng" name="PME_Trig506" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qdsJwEr4Eemntv5tDuspng" name="PME_Trig507" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdt-8Er4Eemntv5tDuspng" name="PME_Trig508" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qdumAEr4Eemntv5tDuspng" name="PME_Trig509" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qdv0IEr4Eemntv5tDuspng" name="PME_Trig510" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qdy3cEr4Eemntv5tDuspng" name="PME_Trig511" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qd3v8Er4Eemntv5tDuspng" name="PME_Trig512" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qd7aUEr4Eemntv5tDuspng" name="PME_Trig513" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qd8BYEr4Eemntv5tDuspng" name="PME_Trig514" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qd9PgEr4Eemntv5tDuspng" name="PME_Trig515" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qd-doEr4Eemntv5tDuspng" name="PME_Trig516" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qd_EsEr4Eemntv5tDuspng" name="PME_Trig517" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qeCIAEr4Eemntv5tDuspng" name="PME_Trig518" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qeFyYEr4Eemntv5tDuspng" name="PME_Trig519" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qeHAgEr4Eemntv5tDuspng" name="PME_Trig520" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qeIOoEr4Eemntv5tDuspng" name="PME_Trig521" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qeI1sEr4Eemntv5tDuspng" name="PME_Trig522" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qeNHIEr4Eemntv5tDuspng" name="From__Debug__A__En__getMasterName__523" source="_tStCIErDEem2BZRQc2M93A" target="_qcq2EEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qgVOEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__566&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__570&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qeO8UEr4Eemntv5tDuspng" name="PME_Trig524" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qeQKcEr4Eemntv5tDuspng" name="PME_Trig525" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qeRYkEr4Eemntv5tDuspng" name="PME_Trig526" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qeSmsEr4Eemntv5tDuspng" name="PME_Trig527" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qeT00Er4Eemntv5tDuspng" name="PME_Trig528" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qeXfMEr4Eemntv5tDuspng" name="PME_Trig529" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qeaigEr4Eemntv5tDuspng" name="PME_Trig530" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qebwoEr4Eemntv5tDuspng" name="PME_Trig531" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qecXsEr4Eemntv5tDuspng" name="PME_Trig532" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qedl0Er4Eemntv5tDuspng" name="PME_Trig533" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qegpIEr4Eemntv5tDuspng" name="PME_Trig534" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qejscEr4Eemntv5tDuspng" name="PME_Trig535" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qelhoEr4Eemntv5tDuspng" name="PME_Trig536" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qenW0Er4Eemntv5tDuspng" name="PME_Trig537" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qeuEgEr4Eemntv5tDuspng" name="PME_Trig538" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qevSoEr4Eemntv5tDuspng" name="PME_Trig539" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qewgwEr4Eemntv5tDuspng" name="PME_Trig540" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qexu4Er4Eemntv5tDuspng" name="PME_Trig541" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qe2nYEr4Eemntv5tDuspng" name="PME_Trig542" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qe6RwEr4Eemntv5tDuspng" name="PME_Trig543" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qe8G8Er4Eemntv5tDuspng" name="From__Debug__A__Ac__reqFlowInit__544" source="_tSr0AErDEem2BZRQc2M93A" target="_qcq2EEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qgfmIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__566&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__570&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qfDbsEr4Eemntv5tDuspng" name="PME_Trig545" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qfFQ4Er4Eemntv5tDuspng" name="PME_Trig546" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qfKJYEr4Eemntv5tDuspng" name="PME_Trig547" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qfNzwEr4Eemntv5tDuspng" name="PME_Trig548" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qfPB4Er4Eemntv5tDuspng" name="PME_Trig549" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qfQ3EEr4Eemntv5tDuspng" name="PME_Trig550" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qfW9sEr4Eemntv5tDuspng" name="PME_Trig551" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qfYL0Er4Eemntv5tDuspng" name="PME_Trig552" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qfZZ8Er4Eemntv5tDuspng" name="PME_Trig553" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qfb2MEr4Eemntv5tDuspng" name="PME_Trig554" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qfjK8Er4Eemntv5tDuspng" name="PME_Trig555" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qfkZEEr4Eemntv5tDuspng" name="PME_Trig556" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qfoqgEr4Eemntv5tDuspng" name="PME_Trig557" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qfsU4Er4Eemntv5tDuspng" name="PME_Trig558" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qftjAEr4Eemntv5tDuspng" name="PME_Trig559" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qfuxIEr4Eemntv5tDuspng" name="PME_Trig560" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qf2F4Er4Eemntv5tDuspng" name="PME_Trig561" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qf37EEr4Eemntv5tDuspng" name="PME_Trig562" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qf_24Er4Eemntv5tDuspng" name="PME_Trig563" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qgBsEEr4Eemntv5tDuspng" name="PME_Trig564" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qgKO8Er4Eemntv5tDuspng" name="To__Debug__B__Ac__reqFlowInit__565" guard="_qgiCYUr4Eemntv5tDuspng" source="_qcq2EEr4Eemntv5tDuspng" target="_tSql4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qgiCYUr4Eemntv5tDuspng" name="PME_checkDecesion574">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgiCYEr4Eemntv5tDuspng" name="PME_checkDecesion574">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qgKO8Ur4Eemntv5tDuspng" name="To__Debug__B__Ex__Ready__566" guard="_qggNMUr4Eemntv5tDuspng" source="_qcq2EEr4Eemntv5tDuspng" target="_tSpXwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qggNMUr4Eemntv5tDuspng" name="PME_checkDecesion571">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qggNMEr4Eemntv5tDuspng" name="PME_checkDecesion571">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Ready__566&quot;,&quot;Debug__B__Ex__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qgK2AEr4Eemntv5tDuspng" name="To__Debug__A__En__getMasterName__567" guard="_qgg0QUr4Eemntv5tDuspng" source="_qcq2EEr4Eemntv5tDuspng" target="_tStCIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qgg0QUr4Eemntv5tDuspng" name="PME_checkDecesion573">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgg0QEr4Eemntv5tDuspng" name="PME_checkDecesion573">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__567&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qgK2AUr4Eemntv5tDuspng" name="To__Debug__A__Ac__reqFlowInit__568" guard="_qggNM0r4Eemntv5tDuspng" source="_qcq2EEr4Eemntv5tDuspng" target="_tSr0AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qggNM0r4Eemntv5tDuspng" name="PME_checkDecesion572">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qggNMkr4Eemntv5tDuspng" name="PME_checkDecesion572">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qgMEIEr4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__569" source="_qcoZ0Er4Eemntv5tDuspng" target="_qcq2EEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qgT_8Er4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__566&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__568&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__565&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__570&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qgMrMEr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__570" guard="_qgmT0Ur4Eemntv5tDuspng" source="_qcq2EEr4Eemntv5tDuspng" target="_qcpn8kr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qgmT0Ur4Eemntv5tDuspng" name="PME_checkDecesion575">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qgmT0Er4Eemntv5tDuspng" name="PME_checkDecesion575">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__570&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tSpXwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSpXwkrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSxTkUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready__942">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tSql4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSql4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;reqFlowInit&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSzv0ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit__943">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tSr0AErDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSr0AUrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqFlowInit&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS098UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit__944">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tStCIErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tStCIUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS3aMErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__945">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qcq2EEr4Eemntv5tDuspng" name="DecesionPoint__477" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qcsEMEr4Eemntv5tDuspng" name="Init__State__478"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tTEOgUrDEem2BZRQc2M93A" name="Debug__C__NoResponseFromServer">
              <connectionPoint xmi:id="_tTFcoUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tTGqwErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_qAMVcEr4Eemntv5tDuspng" name="From__Parent__180" kind="entryPoint"/>
              <connectionPoint xmi:id="_qAOKoEr4Eemntv5tDuspng" name="To__Parent__182" kind="exitPoint"/>
              <region xmi:id="_tTEOgkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tTWiYErDEem2BZRQc2M93A" name="Debug__init__trans__NoResponseFromServer" source="_tTFcoUrDEem2BZRQc2M93A" target="_tTTfEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTgTYErDEem2BZRQc2M93A" name="Debug__init__trans__NoResponseFromServer__974">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__init__trans__NoResponseFromServer&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tTWiYUrDEem2BZRQc2M93A" name="Debug__Ex__WaitingForReply" source="_tTTfEErDEem2BZRQc2M93A" target="_tTUGIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTWiY0rDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTWiYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tTXJcErDEem2BZRQc2M93A" name="Debug__AC__NoResponseFromServer" source="_tTUGIErDEem2BZRQc2M93A" target="_tTUtMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTXwgErDEem2BZRQc2M93A" name="ServiceFailure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Service Failur.....\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__AC__NoResponseFromServer&quot;,(char *)&quot;Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTXJcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qAhFkEr4Eemntv5tDuspng" name="Trans__ex186" source="_tTGqwErDEem2BZRQc2M93A" target="_qATDIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qGcucEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__253&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qAhsoEr4Eemntv5tDuspng" name="Trans__Init__State__185187" source="_qAZJwEr4Eemntv5tDuspng" target="_qATDIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qF7KAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__185&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__185&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__185&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__185&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__253&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__185&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qApocEr4Eemntv5tDuspng" name="From__Debug__B__Ex__WaitingForReply__188" source="_tTTfEErDEem2BZRQc2M93A" target="_qATDIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qGnGgEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__253&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qAsrwEr4Eemntv5tDuspng" name="PME_Trig189" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qAyyYEr4Eemntv5tDuspng" name="PME_Trig190" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qA4R8Er4Eemntv5tDuspng" name="PME_Trig191" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qBCqAEr4Eemntv5tDuspng" name="PME_Trig192" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qBKl0Er4Eemntv5tDuspng" name="PME_Trig193" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qBNCEEr4Eemntv5tDuspng" name="PME_Trig194" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qBUW0Er4Eemntv5tDuspng" name="PME_Trig195" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qBZPUEr4Eemntv5tDuspng" name="PME_Trig196" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qBf9AEr4Eemntv5tDuspng" name="PME_Trig197" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qBnRwEr4Eemntv5tDuspng" name="PME_Trig198" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qBq8IEr4Eemntv5tDuspng" name="PME_Trig199" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qByQ4Er4Eemntv5tDuspng" name="PME_Trig200" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qB0tIEr4Eemntv5tDuspng" name="PME_Trig201" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qB9QAEr4Eemntv5tDuspng" name="PME_Trig202" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qB_sQEr4Eemntv5tDuspng" name="PME_Trig203" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qCHBAEr4Eemntv5tDuspng" name="PME_Trig204" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qCJdQEr4Eemntv5tDuspng" name="PME_Trig205" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qCSAIEr4Eemntv5tDuspng" name="PME_Trig206" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qCXfsEr4Eemntv5tDuspng" name="PME_Trig207" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qCdmUEr4Eemntv5tDuspng" name="PME_Trig208" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qCjs8Er4Eemntv5tDuspng" name="From__Debug__A__Ac__NoResponseFromServer__209" source="_tTUtMErDEem2BZRQc2M93A" target="_qATDIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qGRIQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__253&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qCmwQEr4Eemntv5tDuspng" name="PME_Trig210" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qCqaoEr4Eemntv5tDuspng" name="PME_Trig211" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qCyWcEr4Eemntv5tDuspng" name="PME_Trig212" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qC8HcEr4Eemntv5tDuspng" name="PME_Trig213" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qDFRYEr4Eemntv5tDuspng" name="PME_Trig214" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qDHtoEr4Eemntv5tDuspng" name="PME_Trig215" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qDPpcEr4Eemntv5tDuspng" name="PME_Trig216" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qDTT0Er4Eemntv5tDuspng" name="PME_Trig217" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qDZacEr4Eemntv5tDuspng" name="PME_Trig218" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qDbPoEr4Eemntv5tDuspng" name="PME_Trig219" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qDikYEr4Eemntv5tDuspng" name="PME_Trig220" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qDkZkEr4Eemntv5tDuspng" name="PME_Trig221" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qDm10Er4Eemntv5tDuspng" name="PME_Trig222" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qDs8cEr4Eemntv5tDuspng" name="PME_Trig223" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qDuxoEr4Eemntv5tDuspng" name="PME_Trig224" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qDzDEEr4Eemntv5tDuspng" name="PME_Trig225" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qD37kEr4Eemntv5tDuspng" name="PME_Trig226" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qD6X0Er4Eemntv5tDuspng" name="PME_Trig227" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qEBskEr4Eemntv5tDuspng" name="PME_Trig228" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_qEDhwEr4Eemntv5tDuspng" name="PME_Trig229" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qEMrsEr4Eemntv5tDuspng" name="PME_Trig230" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qEPvAEr4Eemntv5tDuspng" name="From__Debug__B__Ac__NoResponseFromServer__231" source="_tTUGIErDEem2BZRQc2M93A" target="_qATDIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qGGwMEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__253&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_qEWcsEr4Eemntv5tDuspng" name="PME_Trig232" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qEcjUEr4Eemntv5tDuspng" name="PME_Trig233" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qEg0wEr4Eemntv5tDuspng" name="PME_Trig234" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qEjRAEr4Eemntv5tDuspng" name="PME_Trig235" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qEp-sEr4Eemntv5tDuspng" name="PME_Trig236" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qErz4Er4Eemntv5tDuspng" name="PME_Trig237" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qEwsYEr4Eemntv5tDuspng" name="PME_Trig238" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qE0WwEr4Eemntv5tDuspng" name="PME_Trig239" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qE2L8Er4Eemntv5tDuspng" name="PME_Trig240" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qE8SkEr4Eemntv5tDuspng" name="PME_Trig241" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qE-HwEr4Eemntv5tDuspng" name="PME_Trig242" event="_pkZKQEr4Eemntv5tDuspng" port="_pnjzAEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_qE_88Er4Eemntv5tDuspng" name="PME_Trig243" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qFCZMEr4Eemntv5tDuspng" name="PME_Trig244" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_qFIf0Er4Eemntv5tDuspng" name="PME_Trig245" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qFK8EEr4Eemntv5tDuspng" name="PME_Trig246" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_qFRpwEr4Eemntv5tDuspng" name="PME_Trig247" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_qFUGAEr4Eemntv5tDuspng" name="PME_Trig248" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_qFXwYEr4Eemntv5tDuspng" name="PME_Trig249" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_qFdP8Er4Eemntv5tDuspng" name="PME_Trig250" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_qFfFIEr4Eemntv5tDuspng" name="PME_Trig251" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_qFnA8Er4Eemntv5tDuspng" name="To__Debug__B__Ex__WaitingForReply__252" guard="_qG6BcUr4Eemntv5tDuspng" source="_qATDIEr4Eemntv5tDuspng" target="_tTTfEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qG6BcUr4Eemntv5tDuspng" name="PME_checkDecesion259">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qG6BcEr4Eemntv5tDuspng" name="PME_checkDecesion259">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__252&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qFnoAEr4Eemntv5tDuspng" name="To__Debug__A__Ac__NoResponseFromServer__253" guard="_qG6ogUr4Eemntv5tDuspng" source="_qATDIEr4Eemntv5tDuspng" target="_tTUtMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qG6ogUr4Eemntv5tDuspng" name="PME_checkDecesion260">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qG6ogEr4Eemntv5tDuspng" name="PME_checkDecesion260">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoResponseFromServer__253&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qFoPEEr4Eemntv5tDuspng" name="To__Debug__B__Ac__NoResponseFromServer__254" guard="_qG5aYUr4Eemntv5tDuspng" source="_qATDIEr4Eemntv5tDuspng" target="_tTUGIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_qG5aYUr4Eemntv5tDuspng" name="PME_checkDecesion258">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qG5aYEr4Eemntv5tDuspng" name="PME_checkDecesion258">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoResponseFromServer__254&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_qFrSYEr4Eemntv5tDuspng" name="From__Parnet__ClientStateMachine__255" source="_qAMVcEr4Eemntv5tDuspng" target="_qATDIEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_qGw3gEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__253&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_qFsggEr4Eemntv5tDuspng" name="To__Parent__ClientStateMachine__256" guard="_qG2XEUr4Eemntv5tDuspng" source="_qATDIEr4Eemntv5tDuspng" target="_qAOKoEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_qG2XEUr4Eemntv5tDuspng" name="PME_checkDecesion257">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_qG2XEEr4Eemntv5tDuspng" name="PME_checkDecesion257">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__256&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tTTfEErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTTfEUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTY-oUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__969">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTUGIErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUGIUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTba4ErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer__970">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTUtMErDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUtMUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTcpAUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer__971">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qATDIEr4Eemntv5tDuspng" name="DecesionPoint__184" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_qAZJwEr4Eemntv5tDuspng" name="Init__State__185"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tT_bkErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_pu6YMEr4Eemntv5tDuspng" name="DecesionPoint__1" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swtvYErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swtIUErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Server1Comm.recallAll();
ConfigComm.recallAll();
Server2Comm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sw_cMUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sw_cMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxFi0ErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxDGkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxYdwErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sxOswErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_pqekIEr4Eemntv5tDuspng" name="loadHeap" specification="_pqdWAEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_pqvp4Er4Eemntv5tDuspng" name="unLoadHeap" specification="_pqvC0Er4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_pscTAUr4Eemntv5tDuspng" name="sendMessage" specification="_pscTAEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server1Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server1Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server2Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server2Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ps3w0Er4Eemntv5tDuspng" name="sendInternalMessage" specification="_ps3JwEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_pujL0Ur4Eemntv5tDuspng" name="initForPMD" specification="_pujL0Er4Eemntv5tDuspng">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Client::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Client::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Server1Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Server2Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;RequestTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ConfigTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ResponseTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Server1Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Server2Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swtIUErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swtvYErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sw_cMErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sw_cMUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxDGkErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxFi0ErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxDtoErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxEUsErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxE7wErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sxOswErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sxYdwErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxPT0ErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxQh8ErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxRwEUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxS-MUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxTlQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxUzYUrDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxWBgUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxXPoErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sUrDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_pqdWAEr4Eemntv5tDuspng" name="loadHeap" visibility="private" method="_pqekIEr4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_pqvC0Er4Eemntv5tDuspng" name="unLoadHeap" visibility="private" method="_pqvp4Er4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_pscTAEr4Eemntv5tDuspng" name="sendMessage" visibility="private" method="_pscTAUr4Eemntv5tDuspng">
          <ownedParameter xmi:id="_psjnwEr4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_pspuYEr4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ps3JwEr4Eemntv5tDuspng" name="sendInternalMessage" visibility="private" method="_ps3w0Er4Eemntv5tDuspng">
          <ownedParameter xmi:id="_ps93cEr4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ps_FkEr4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_pujL0Er4Eemntv5tDuspng" name="initForPMD" visibility="private" method="_pujL0Ur4Eemntv5tDuspng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_yqOfEAxwEeaB2MeL96fedA" memberEnd="_yqPtMgxwEeaB2MeL96fedA _yqQUQAxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_yqPtMAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_yqPtMQxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_yqQUQAxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_yqOfEAxwEeaB2MeL96fedA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_z8f_QAxwEeaB2MeL96fedA" memberEnd="_z8hNYQxwEeaB2MeL96fedA _z8hNYgxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_z8gmUAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_z8hNYAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_z8hNYgxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_z8f_QAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_OiTE0AghEea_md0mpENoqg" name="Utility">
      <packagedElement xmi:type="uml:Class" xmi:id="_JesyoAgiEea_md0mpENoqg" name="HostInfo" visibility="public">
        <ownedAttribute xmi:id="_l4sHAAgiEea_md0mpENoqg" name="hostType" type="_TE8UIAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_6EOE0AglEea_md0mpENoqg" name="status" type="_gf1EkAglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_TE8UIAgiEea_md0mpENoqg" name="HostType">
        <ownedLiteral xmi:id="_Y-NNkAgiEea_md0mpENoqg" name="CLI"/>
        <ownedLiteral xmi:id="_aJOPMAgiEea_md0mpENoqg" name="SRV"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_gf1EkAglEea_md0mpENoqg" name="HostStatus" visibility="public">
        <ownedLiteral xmi:id="_ygyIkAglEea_md0mpENoqg" name="Active"/>
        <ownedLiteral xmi:id="_0Co84AglEea_md0mpENoqg" name="Deactive"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_-VDn4AglEea_md0mpENoqg" name="ServerRole">
        <ownedLiteral xmi:id="_GJYf0AgmEea_md0mpENoqg" name="Master"/>
        <ownedLiteral xmi:id="_HZTPkAgmEea_md0mpENoqg" name="Slave"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_T635wAgmEea_md0mpENoqg" name="ServerInfo">
        <generalization xmi:id="_jCuQYAgrEea_md0mpENoqg" general="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_Y5vngAgmEea_md0mpENoqg" name="role" type="_-VDn4AglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04e0AgsEea_md0mpENoqg" name="ConfigProtocol">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_v000cAgsEea_md0mpENoqg" name="ConfigProtocol">
          <interfaceRealization xmi:id="_v0_zkAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v09XUAgsEea_md0mpENoqg" contract="_v09XUAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_v1SHcAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg" contract="_v1PrMAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v09XUAgsEea_md0mpENoqg" name="ConfigProtocol">
          <ownedOperation xmi:id="_Mnix4AgtEea_md0mpENoqg" name="ReplyReplicationMode">
            <ownedParameter xmi:id="_Mnix4QgtEea_md0mpENoqg" name="RunningMode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_GvEtMAguEea_md0mpENoqg" name="ReplyServerRole">
            <ownedParameter xmi:id="_GvEtMQguEea_md0mpENoqg" name="ServerRole">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlnCwAguEea_md0mpENoqg" name="StartUp">
            <ownedParameter xmi:id="_oGfrwAlpEea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OMA_4AguEea_md0mpENoqg" name="Shutdown"/>
          <ownedOperation xmi:id="_QoJEEAguEea_md0mpENoqg" name="BIT"/>
          <ownedOperation xmi:id="_mLtTMAguEea_md0mpENoqg" name="ReplyMasterId">
            <ownedParameter xmi:id="_s-1M0AguEea_md0mpENoqg" name="MasterId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Iv10IAl4Eea_md0mpENoqg" name="ReplyConfig">
            <ownedParameter xmi:id="_Iv10IQl4Eea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1I9gAgsEea_md0mpENoqg" name="ConfigProtocol~">
          <ownedOperation xmi:id="_AW3DYAgtEea_md0mpENoqg" name="QueryReplicationMode"/>
          <ownedOperation xmi:id="_yDGNYAgtEea_md0mpENoqg" name="QueryServerRole">
            <ownedParameter xmi:id="_yDGNYQgtEea_md0mpENoqg" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_hZgIcAguEea_md0mpENoqg" name="QueryMasterId"/>
          <ownedOperation xmi:id="_BB20wAl4Eea_md0mpENoqg" name="QueryConfig"/>
          <ownedOperation xmi:id="_xu1hMAl4Eea_md0mpENoqg" name="IAMMaster">
            <ownedParameter xmi:id="_xu1hMQl4Eea_md0mpENoqg" name="MasterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1MA0AgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1I9gAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_v1N2AAgsEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1PrMAgsEea_md0mpENoqg" name="ConfigProtocolIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1SugAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_AW3qcAgtEea_md0mpENoqg" operation="_AW3DYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MnkAAAgtEea_md0mpENoqg" operation="_Mnix4AgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_yDG0cAgtEea_md0mpENoqg" operation="_yDGNYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_GvF7UAguEea_md0mpENoqg" operation="_GvEtMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MloQ4AguEea_md0mpENoqg" operation="_MlnCwAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_OMBm8AguEea_md0mpENoqg" operation="_OMA_4AguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_QoLgUAguEea_md0mpENoqg" operation="_QoJEEAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_hZh9oAguEea_md0mpENoqg" operation="_hZgIcAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_mLvIYAguEea_md0mpENoqg" operation="_mLtTMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_BB3b0Al4Eea_md0mpENoqg" operation="_BB20wAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_Iv3CQAl4Eea_md0mpENoqg" operation="_Iv10IAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xu1hMgl4Eea_md0mpENoqg" operation="_xu1hMAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RLyKYAgzEea_md0mpENoqg" name="EchoCapsule" classifierBehavior="_WlNQsAg0Eea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_PdYSYAg0Eea_md0mpENoqg" name="Echo" visibility="public" type="_nk_BAAgzEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WNSukAm2Eea_md0mpENoqg" value="8"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WOSNEAm2Eea_md0mpENoqg" value="8"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swEPIErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swFdQUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swGEUErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swS4oErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swTfsErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swUt0ErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swXKEErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sSkAsEr4Eemntv5tDuspng" name="dbgPortForEchoCapsule" visibility="protected" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sSknwEr4Eemntv5tDuspng" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sSknwUr4Eemntv5tDuspng" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WlNQsAg0Eea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_abLcsAg0Eea_md0mpENoqg" name="Region1">
            <transition xmi:id="_ftWg8Ag0Eea_md0mpENoqg" name="init__WaitForEcho__8" source="_tKgvcErDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Izo0QAiiEea_md0mpENoqg" name="init">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;EchoCapsule: Intializing\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::init__WaitForEcho__8&quot;,(char *)&quot;Debug__Path__init__WaitForEcho__8&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJ4dUErDEem2BZRQc2M93A" name="Debug__DoEcho__E" source="_tJxvoUrDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ5EYErDEem2BZRQc2M93A" name="Debug__DoEcho__E__690">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__DoEcho__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJ6SgErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ6SgkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange__692">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tJ6SgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ65kErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ65kkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint__693">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ65kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ7goErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ7gokrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint__694">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ7goUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8HsErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ8uwErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints__695">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ8HsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8uwUrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ9V0UrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode__696">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tJ9V0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ984ErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ984krDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg__697">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ984UrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKln8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8" source="_tLME4ErDEem2BZRQc2M93A" target="_tKgvcErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKln8UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__713">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;init&quot;,&quot;&quot;,&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitForEcho&quot;,&quot;DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;Echo&quot;,&quot;Echo&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tLOhIErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKp5YErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__E" source="_tKkZ0UrDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKqgcErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__E__716">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__init__WaitForEcho__8__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tKsVoErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKs8sErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange__718">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tKsVoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKtjwErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKtjwkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint__719">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKtjwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKuK0ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKux4UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint__720">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKux4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKvY8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKvY8krDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints__721">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKvY8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwAAErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwAAkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode__722">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tKwAAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwnEErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwnEkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg__723">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKwnEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tLNTAErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_bHyrEAg0Eea_md0mpENoqg" target="_tLME4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLNTAUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_sTcKcEr4Eemntv5tDuspng" name="2260" source="_tKgvcErDEem2BZRQc2M93A" target="_sTNg8Er4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWLVYEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2285&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2282&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sTdYkEr4Eemntv5tDuspng" name="From__Debug__InitState__2261" source="_tLME4ErDEem2BZRQc2M93A" target="_sTNg8Er4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWXioEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2285&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2282&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_sTd_oEr4Eemntv5tDuspng" name="PME_Trig2262" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_sTfNwEr4Eemntv5tDuspng" name="PME_Trig2263" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sTf00Er4Eemntv5tDuspng" name="PME_Trig2264" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sTiREEr4Eemntv5tDuspng" name="PME_Trig2265" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sTktUEr4Eemntv5tDuspng" name="PME_Trig2266" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_sTnwoEr4Eemntv5tDuspng" name="PME_Trig2267" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_sToXsEr4Eemntv5tDuspng" name="PME_Trig2268" event="_pkZKQEr4Eemntv5tDuspng" port="_sSkAsEr4Eemntv5tDuspng"/>
              <trigger xmi:id="_sTpl0Er4Eemntv5tDuspng" name="PME_Trig2269" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_sTqM4Er4Eemntv5tDuspng" name="PME_Trig2270" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_sTspIEr4Eemntv5tDuspng" name="From__WaitForEcho__2271" source="_cfbzcAg0Eea_md0mpENoqg" target="_sTNg8Er4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWF10Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2285&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2282&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_sTvFYEr4Eemntv5tDuspng" name="PME_Trig2272" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_sTxhoEr4Eemntv5tDuspng" name="PME_Trig2273" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sTyIsEr4Eemntv5tDuspng" name="PME_Trig2274" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sTzW0Er4Eemntv5tDuspng" name="PME_Trig2275" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_sTz94Er4Eemntv5tDuspng" name="PME_Trig2276" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_sT1zEEr4Eemntv5tDuspng" name="PME_Trig2277" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_sT3BMEr4Eemntv5tDuspng" name="PME_Trig2278" event="_pkZKQEr4Eemntv5tDuspng" port="_sSkAsEr4Eemntv5tDuspng"/>
              <trigger xmi:id="_sT6rkEr4Eemntv5tDuspng" name="PME_Trig2279" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_sT75sEr4Eemntv5tDuspng" name="PME_Trig2280" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_sT9u4Er4Eemntv5tDuspng" name="To__Debug__InitState__2281" guard="_sWnaQUr4Eemntv5tDuspng" source="_sTNg8Er4Eemntv5tDuspng" target="_tLME4ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_sWnaQUr4Eemntv5tDuspng" name="PME_checkDecesion2354">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sWnaQEr4Eemntv5tDuspng" name="PME_checkDecesion2354">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__2281&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sT9u4Ur4Eemntv5tDuspng" name="To__WaitForEcho__2282" guard="_sWpPcUr4Eemntv5tDuspng" source="_sTNg8Er4Eemntv5tDuspng" target="_cfbzcAg0Eea_md0mpENoqg">
              <ownedRule xmi:id="_sWpPcUr4Eemntv5tDuspng" name="PME_checkDecesion2355">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sWpPcEr4Eemntv5tDuspng" name="PME_checkDecesion2355">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__WaitForEcho__2282&quot;,&quot;WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sT-9AEr4Eemntv5tDuspng" name="Trans__ex2283" source="_tJxvoUrDEem2BZRQc2M93A" target="_sTNg8Er4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWWUgEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2285&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2282&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sT_kEUr4Eemntv5tDuspng" name="To__Substates__Debug__C__DoEcho__2285" guard="_sWk-AUr4Eemntv5tDuspng" source="_sTNg8Er4Eemntv5tDuspng" target="_sT-9AUr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sWk-AUr4Eemntv5tDuspng" name="PME_checkDecesion2353">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sWk-AEr4Eemntv5tDuspng" name="PME_checkDecesion2353">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__DoEcho__2285&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sUBZQEr4Eemntv5tDuspng" name="From__Substates__Debug__C__DoEcho__2287" source="_sUALIEr4Eemntv5tDuspng" target="_sTNg8Er4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWO_wEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2285&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2282&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sVR9gEr4Eemntv5tDuspng" name="Trans__ex2329" source="_tKkZ0UrDEem2BZRQc2M93A" target="_sTNg8Er4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWjI0Er4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2285&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2282&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_sVSkkkr4Eemntv5tDuspng" name="To__Substates__Debug__C__init__WaitForEcho__8__2331" guard="_sWqdkUr4Eemntv5tDuspng" source="_sTNg8Er4Eemntv5tDuspng" target="_sVSkkEr4Eemntv5tDuspng">
              <ownedRule xmi:id="_sWqdkUr4Eemntv5tDuspng" name="PME_checkDecesion2356">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sWqdkEr4Eemntv5tDuspng" name="PME_checkDecesion2356">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_sVTLokr4Eemntv5tDuspng" name="From__Substates__Debug__C__init__WaitForEcho__8__2333" source="_sVTLoEr4Eemntv5tDuspng" target="_sTNg8Er4Eemntv5tDuspng">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWfecEr4Eemntv5tDuspng">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2285&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2282&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2331&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_bHyrEAg0Eea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_cfbzcAg0Eea_md0mpENoqg" name="WaitForEcho">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tLow0ErDEem2BZRQc2M93A" name="WaitForEcho__735">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLpX4ErDEem2BZRQc2M93A" name="WaitForEcho__736">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tJwhgErDEem2BZRQc2M93A" name="Debug__C__DoEcho">
              <connectionPoint xmi:id="_tJxIkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tJxvoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_sT-9AUr4Eemntv5tDuspng" name="From__Parent__2284" kind="entryPoint"/>
              <connectionPoint xmi:id="_sUALIEr4Eemntv5tDuspng" name="To__Parent__2286" kind="exitPoint"/>
              <region xmi:id="_tJwhgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tKFRoErDEem2BZRQc2M93A" name="Debug__init__trans__DoEcho" source="_tJxIkUrDEem2BZRQc2M93A" target="_tKAZIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKStAErDEem2BZRQc2M93A" name="Debug__init__trans__DoEcho__703">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__init__trans__DoEcho&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tKFRoUrDEem2BZRQc2M93A" name="Debug__Ex__WaitForEcho" source="_tKAZIErDEem2BZRQc2M93A" target="_tKBnQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKUiMErDEem2BZRQc2M93A" name="Debug__Ex__WaitForEcho__705">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__Ex__WaitForEcho&quot;,(char *)&quot;Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKFRokrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tKHG0ErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho" source="_tKEDgErDEem2BZRQc2M93A" target="_tJxvoUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKdFEErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho__710">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__end__trans__DoEcho&quot;,(char *)&quot;Debug__A__En__WaitForEcho&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKHG0UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_sUGRwEr4Eemntv5tDuspng" name="Trans__ex2290" source="_tJxvoUrDEem2BZRQc2M93A" target="_sUCAUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sVIzkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__2324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__2322&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__2320&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__2321&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sUG40Er4Eemntv5tDuspng" name="Trans__Init__State__22892291" source="_sUFDoEr4Eemntv5tDuspng" target="_sUCAUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sVO6MEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2289&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__2324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2289&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__2322&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2289&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__2320&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2289&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__2321&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2289&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sUIG8Er4Eemntv5tDuspng" name="From__Debug__B__Ac__DoEcho__2292" source="_tKBnQErDEem2BZRQc2M93A" target="_sUCAUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sVFwQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__2324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__2322&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__2320&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__2321&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sUIuAEr4Eemntv5tDuspng" name="PME_Trig2293" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sULKQEr4Eemntv5tDuspng" name="PME_Trig2294" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUM_cEr4Eemntv5tDuspng" name="PME_Trig2295" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUQCwEr4Eemntv5tDuspng" name="PME_Trig2296" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUQp0Er4Eemntv5tDuspng" name="PME_Trig2297" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sUR38Er4Eemntv5tDuspng" name="PME_Trig2298" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_sUTGEEr4Eemntv5tDuspng" name="PME_Trig2299" event="_pkZKQEr4Eemntv5tDuspng" port="_sSkAsEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_sUUUMEr4Eemntv5tDuspng" name="PME_Trig2300" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sUWwcEr4Eemntv5tDuspng" name="PME_Trig2301" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_sUZzwEr4Eemntv5tDuspng" name="From__Debug__B__Ex__WaitForEcho__2302" source="_tKAZIErDEem2BZRQc2M93A" target="_sUCAUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sVNsEEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__2324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__2322&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__2320&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__2321&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sUaa0Er4Eemntv5tDuspng" name="PME_Trig2303" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sUbo8Er4Eemntv5tDuspng" name="PME_Trig2304" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUc3EEr4Eemntv5tDuspng" name="PME_Trig2305" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUesQEr4Eemntv5tDuspng" name="PME_Trig2306" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUf6YEr4Eemntv5tDuspng" name="PME_Trig2307" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sUhvkEr4Eemntv5tDuspng" name="PME_Trig2308" event="_pkZKQEr4Eemntv5tDuspng" port="_sSkAsEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_sUlZ8Er4Eemntv5tDuspng" name="PME_Trig2309" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sUmBAEr4Eemntv5tDuspng" name="PME_Trig2310" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_sUnPIEr4Eemntv5tDuspng" name="From__Debug__A__En__WaitForEcho__2311" source="_tKEDgErDEem2BZRQc2M93A" target="_sUCAUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sVEiIEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__2324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__2322&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__2320&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__2321&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sUpEUEr4Eemntv5tDuspng" name="PME_Trig2312" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sUsusEr4Eemntv5tDuspng" name="PME_Trig2313" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUuj4Er4Eemntv5tDuspng" name="PME_Trig2314" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUvK8Er4Eemntv5tDuspng" name="PME_Trig2315" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sUwZEEr4Eemntv5tDuspng" name="PME_Trig2316" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sUxnMEr4Eemntv5tDuspng" name="PME_Trig2317" event="_pkZKQEr4Eemntv5tDuspng" port="_sSkAsEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_sUy1UEr4Eemntv5tDuspng" name="PME_Trig2318" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sU0qgEr4Eemntv5tDuspng" name="PME_Trig2319" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_sU6KEEr4Eemntv5tDuspng" name="To__Debug__B__Ac__DoEcho__2320" guard="_sVQvYUr4Eemntv5tDuspng" source="_sUCAUEr4Eemntv5tDuspng" target="_tKBnQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sVQvYUr4Eemntv5tDuspng" name="PME_checkDecesion2327">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sVQvYEr4Eemntv5tDuspng" name="PME_checkDecesion2327">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__DoEcho__2320&quot;,&quot;Debug__B__Ac__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sU6KEUr4Eemntv5tDuspng" name="To__Debug__B__Ex__WaitForEcho__2321" guard="_sVRWcUr4Eemntv5tDuspng" source="_sUCAUEr4Eemntv5tDuspng" target="_tKAZIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sVRWcUr4Eemntv5tDuspng" name="PME_checkDecesion2328">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sVRWcEr4Eemntv5tDuspng" name="PME_checkDecesion2328">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitForEcho__2321&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sU6xIEr4Eemntv5tDuspng" name="To__Debug__A__En__WaitForEcho__2322" guard="_sVQIUUr4Eemntv5tDuspng" source="_sUCAUEr4Eemntv5tDuspng" target="_tKEDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sVQIUUr4Eemntv5tDuspng" name="PME_checkDecesion2326">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sVQIUEr4Eemntv5tDuspng" name="PME_checkDecesion2326">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__WaitForEcho__2322&quot;,&quot;Debug__A__En__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sU7YMEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2323" source="_sT-9AUr4Eemntv5tDuspng" target="_sUCAUEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sU_CkEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__2324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__2322&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__2320&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__2321&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sU7_QEr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2324" guard="_sVPhQUr4Eemntv5tDuspng" source="_sUCAUEr4Eemntv5tDuspng" target="_sUALIEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sVPhQUr4Eemntv5tDuspng" name="PME_checkDecesion2325">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sVPhQEr4Eemntv5tDuspng" name="PME_checkDecesion2325">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2324&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKAZIErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKAZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKIU8UrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho__698">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKBnQErDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKBnQUrDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;DoEcho&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKKxMUrDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho__699">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKEDgErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKEqkErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKPCoErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho__701">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sUCAUEr4Eemntv5tDuspng" name="DecesionPoint__2288" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sUFDoEr4Eemntv5tDuspng" name="Init__State__2289"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tKgvcErDEem2BZRQc2M93A" name="Debug__Path__init__WaitForEcho__8" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tKh9kUrDEem2BZRQc2M93A" name="Debug__C__init__WaitForEcho__8">
              <connectionPoint xmi:id="_tKkZ0UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_sVSkkEr4Eemntv5tDuspng" name="From__Parent__2330" kind="entryPoint"/>
              <connectionPoint xmi:id="_sVTLoEr4Eemntv5tDuspng" name="To__Parent__2332" kind="exitPoint"/>
              <region xmi:id="_tKh9kkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_sVYrMUr4Eemntv5tDuspng" name="Trans__ex2336" source="_tKkZ0UrDEem2BZRQc2M93A" target="_sVTysEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sWA9UEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2348&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2350&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sVZSQEr4Eemntv5tDuspng" name="Trans__Init__State__23352337" source="_sVXdEEr4Eemntv5tDuspng" target="_sVTysEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sV2lQEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2335&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2348&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2335&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2350&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2335&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sVZ5UEr4Eemntv5tDuspng" name="From__Debug__B__Ac__init__WaitForEcho__8__2338" source="_tKzDUUrDEem2BZRQc2M93A" target="_sVTysEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sV5BgEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2348&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2350&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_sVagYEr4Eemntv5tDuspng" name="PME_Trig2339" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_sVc8oEr4Eemntv5tDuspng" name="PME_Trig2340" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sVf_8Er4Eemntv5tDuspng" name="PME_Trig2341" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sVh1IEr4Eemntv5tDuspng" name="PME_Trig2342" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_sVicMEr4Eemntv5tDuspng" name="PME_Trig2343" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_sVjqUEr4Eemntv5tDuspng" name="PME_Trig2344" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_sVk4cEr4Eemntv5tDuspng" name="PME_Trig2345" event="_pkZKQEr4Eemntv5tDuspng" port="_sSkAsEr4Eemntv5tDuspng"/>
                  <trigger xmi:id="_sVn7wEr4Eemntv5tDuspng" name="PME_Trig2346" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_sVrmIEr4Eemntv5tDuspng" name="PME_Trig2347" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_sVs0QEr4Eemntv5tDuspng" name="To__Debug__B__Ac__init__WaitForEcho__8__2348" guard="_sWA9Ukr4Eemntv5tDuspng" source="_sVTysEr4Eemntv5tDuspng" target="_tKzDUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_sWA9Ukr4Eemntv5tDuspng" name="PME_checkDecesion2351">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sWA9UUr4Eemntv5tDuspng" name="PME_checkDecesion2351">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__init__WaitForEcho__8__2348&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_sVuCYEr4Eemntv5tDuspng" name="From__Parnet__StateMachine1__2349" source="_sVSkkEr4Eemntv5tDuspng" target="_sVTysEr4Eemntv5tDuspng">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sV0JAEr4Eemntv5tDuspng">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2348&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2350&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_sVuCYUr4Eemntv5tDuspng" name="To__Parent__StateMachine1__2350" guard="_sWBkYUr4Eemntv5tDuspng" source="_sVTysEr4Eemntv5tDuspng" target="_sVTLoEr4Eemntv5tDuspng">
                  <ownedRule xmi:id="_sWBkYUr4Eemntv5tDuspng" name="PME_checkDecesion2352">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_sWBkYEr4Eemntv5tDuspng" name="PME_checkDecesion2352">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2350&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKzDUUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKzqYErDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK6YEUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8__724">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sVTysEr4Eemntv5tDuspng" name="DecesionPoint__2334" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_sVXdEEr4Eemntv5tDuspng" name="Init__State__2335"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tLME4ErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_sTNg8Er4Eemntv5tDuspng" name="DecesionPoint__2259" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swDoEErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swDBAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Echo.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swK80ErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_swKVwErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQcYErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_swOAIErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swnBsUrDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_swdQsErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sS27oUr4Eemntv5tDuspng" name="loadHeap" specification="_sS27oEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sS4JwEr4Eemntv5tDuspng" name="unLoadHeap" specification="_sS3isEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sS_egUr4Eemntv5tDuspng" name="sendMessage" specification="_sS_egEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;Echo&quot;) {
  if(message.signal==&quot;Echo&quot;) {
   if(message.payload.size()==0){
    Echo.Echo().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sTAsokr4Eemntv5tDuspng" name="sendInternalMessage" specification="_sTAsoUr4Eemntv5tDuspng">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sTLEsUr4Eemntv5tDuspng" name="initForPMD" specification="_sTLEsEr4Eemntv5tDuspng">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EchoCapsule::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EchoCapsule::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swDBAErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swDoEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swKVwErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_swK80ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swOAIErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_swQcYErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swOAIUrDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swOnMErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swP1UErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_swdQsErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_swnBsUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swd3wErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swee0UrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swg7EUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiJMUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiwQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swj-YErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlMgErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlzkErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swmaoErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swnBsErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sS27oEr4Eemntv5tDuspng" name="loadHeap" visibility="private" method="_sS27oUr4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_sS3isEr4Eemntv5tDuspng" name="unLoadHeap" visibility="private" method="_sS4JwEr4Eemntv5tDuspng"/>
        <ownedOperation xmi:id="_sS_egEr4Eemntv5tDuspng" name="sendMessage" visibility="private" method="_sS_egUr4Eemntv5tDuspng">
          <ownedParameter xmi:id="_sTAFkEr4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sTAFkUr4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sTAsoUr4Eemntv5tDuspng" name="sendInternalMessage" visibility="private" method="_sTAsokr4Eemntv5tDuspng">
          <ownedParameter xmi:id="_sTBTsEr4Eemntv5tDuspng" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sTBTsUr4Eemntv5tDuspng" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sTLEsEr4Eemntv5tDuspng" name="initForPMD" visibility="private" method="_sTLEsUr4Eemntv5tDuspng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nlBdQAgzEea_md0mpENoqg" name="Echo">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_nk_BAAgzEea_md0mpENoqg" name="Echo">
          <interfaceRealization xmi:id="_nlGVwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlD5gAgzEea_md0mpENoqg" contract="_nlD5gAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_nlZQsAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg" contract="_nlTKEAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlD5gAgzEea_md0mpENoqg" name="Echo"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlL1UAgzEea_md0mpENoqg" name="Echo~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlQGwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlL1UAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_nlR78AgzEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlTKEAgzEea_md0mpENoqg" name="EchoIO">
          <ownedOperation xmi:id="_7w0BIAgzEea_md0mpENoqg" name="Echo"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlae0AgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_7w0oMAgzEea_md0mpENoqg" operation="_7w0BIAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y1UDYAg6Eea_md0mpENoqg" name="SystemConfig">
        <ownedAttribute xmi:id="_lX6oUAg6Eea_md0mpENoqg" name="ConfigOK">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_lX6oUQg6Eea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rA4b8Ag6Eea_md0mpENoqg" name="RunningMode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_xR7jQAg6Eea_md0mpENoqg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4Gg1cAg6Eea_md0mpENoqg" name="MasterId">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_7FhkQAg6Eea_md0mpENoqg" name="MasterName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6tXsMAmpEea_md0mpENoqg" name="MasterList">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hzi4QAmqEea_md0mpENoqg" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HzxhwAmqEea_md0mpENoqg" value="2"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JwlzwAmqEea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_cYIKwAimEea_md0mpENoqg" name="loadConfig" specification="_QF0roAimEea_md0mpENoqg">
          <language>C++</language>
          <body>{
    /* UMLRTGEN-USERREGION-BEGIN platform:/resource/Replication/Replication.uml Replication::Configuration operation loadConfig */
    std::cout&lt;&lt;&quot;Config Class: load configuration from file\n&quot;;
    char result[PATH_MAX];
    readlink( &quot;/proc/self/exe&quot;, result, PATH_MAX );
    string temps=string(result);
    size_t tempP=temps.rfind('/');
    if (tempP>0)
    {
    temps=temps.substr(0,tempP);
    }
    else
    temps=&quot;&quot;;
    string MasterConfigFileName=&quot;./Master.config&quot;;
    string RunningModeConfigFileName=&quot;./RunningMode.config&quot;;
    string MasterConfigPath=temps+MasterConfigFileName;
    string RunningModeConfigPath=temps+RunningModeConfigFileName;
    cout &lt;&lt; RunningModeConfigPath &lt;&lt; endl;
    //ifstream RunningModeConfigFile(RunningModeConfigPath.c_str());
    ifstream RunningModeConfigFile(&quot;./RunningMode.config&quot;);
    string line;
    if (RunningModeConfigFile.is_open())
    {
    (getline(RunningModeConfigFile,line));
    {
    if (atoi(line.c_str())==0)
    {
    this->RunningMode=0;
    this->ConfigOK=true;
    RunningModeConfigFile.close();
    cout&lt;&lt;&quot;Configuration Loaded successfully, the running mode is active\n&quot;;
    //            			return true;
    }
    else if (atoi(line.c_str())==1)
    {
    this->RunningMode=1;
    //ifstream MasterConfigFile(MasterConfigPath.c_str());
    ifstream MasterConfigFile(&quot;Master.config&quot;);

    if (MasterConfigFile.is_open() &amp;&amp; (getline(MasterConfigFile,line)))
    if (line==&quot;server1&quot; || line==&quot;server2&quot;)
    {
    this->MasterName= new char[line.size()+1];
    strcpy(this->MasterName,line.c_str());
    cout &lt;&lt;&quot;Master Name is:&quot;&lt;&lt; this->MasterName&lt;&lt;endl;
    this->ConfigOK=true;
    cout &lt;&lt; &quot;configuration Loaded successfully, the running mode is passive|&quot;
    &lt;&lt;&quot; Master name is : &quot;&lt;&lt;this->MasterName&lt;&lt;endl;
    RunningModeConfigFile.close();
    MasterConfigFile.close();
    //           					return true;
    }
    else
    {
    cout&lt;&lt;&quot;Master Name is wrong, please fix it\n&quot;;
    this->ConfigOK=false;
    //           					return false;
    }
    else
    {
    cout&lt;&lt;&quot;Master config file(Master.config) cann't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //         				return false;
    }
    }
    else
    {
    cout&lt;&lt; &quot;The running mode value is incorrect, please fix that\n&quot;;
    this->ConfigOK=false;
    //       			return false;
    }
    }
    }
    else
    {
    cout&lt;&lt;&quot;The Running Mode config(RunningMode.config) file can't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //     	return false;
    }/* UMLRTGEN-USERREGION-END */
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QF0roAimEea_md0mpENoqg" name="loadConfig" method="_cYIKwAimEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4_QwUAnEEeaGqPUk-4V4qQ" name="Services">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_4--ccAnEEeaGqPUk-4V4qQ" name="Services">
          <interfaceRealization xmi:id="_5AwlIAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AqegAnEEeaGqPUk-4V4qQ" contract="_5AqegAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_5A8LUAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ" contract="_5A5IAAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AqegAnEEeaGqPUk-4V4qQ" name="Services">
          <ownedOperation xmi:id="_P49E4AnFEeaGqPUk-4V4qQ" name="Reply">
            <ownedParameter xmi:id="_P49E4QnFEeaGqPUk-4V4qQ" name="Result">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_P49E4gnFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AzBYAnEEeaGqPUk-4V4qQ" name="Services~">
          <ownedOperation xmi:id="_G3ENoAnFEeaGqPUk-4V4qQ" name="Request">
            <ownedParameter xmi:id="_G3ENoQnFEeaGqPUk-4V4qQ" name="ServiceID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_G3ENognFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A3S0AnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AzBYAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_5A354AnEEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5A5IAAnEEeaGqPUk-4V4qQ" name="ServicesIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A_1sAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_G3K7UAnFEeaGqPUk-4V4qQ" operation="_G3ENoAnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_P4-6EAnFEeaGqPUk-4V4qQ" operation="_P49E4AnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_f2zWUApBEeaGqPUk-4V4qQ" name="FailOver">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_f2ud0ApBEeaGqPUk-4V4qQ" name="FailOver">
          <interfaceRealization xmi:id="_f4EhoApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f39z8ApBEeaGqPUk-4V4qQ" contract="_f39z8ApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_f4O5sApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ" contract="_f4L2YApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f39z8ApBEeaGqPUk-4V4qQ" name="FailOver"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4FvwApBEeaGqPUk-4V4qQ" name="FailOver~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4KoQApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4FvwApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_f4LPUApBEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4L2YApBEeaGqPUk-4V4qQ" name="FailOverIO">
          <ownedOperation xmi:id="_xM6GgApBEeaGqPUk-4V4qQ" name="IAmAlive">
            <ownedParameter xmi:id="_xM6GgQpBEeaGqPUk-4V4qQ" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4Qu4ApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xM6tkApBEeaGqPUk-4V4qQ" operation="_xM6GgApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gDfqsAghEea_md0mpENoqg" name="Simulator">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_m1qiEAghEea_md0mpENoqg" client="_lYTBoAggEea_md0mpENoqg" supplier="_rPgFkAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_nyBcoAghEea_md0mpENoqg" client="_gDfqsAghEea_md0mpENoqg" supplier="_z1vioAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_d9MBUAgoEea_md0mpENoqg" name="Simulator" isActive="true">
        <ownedAttribute xmi:id="_ljfrYAgoEea_md0mpENoqg" name="server1" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ljjVwAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ljjVwQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_odv2AAgoEea_md0mpENoqg" name="client" visibility="protected" type="_zpdLYAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_odySQQgoEea_md0mpENoqg" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ody5UAgoEea_md0mpENoqg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_trcC4AgoEea_md0mpENoqg" name="ENV" visibility="protected" type="_sMZ5EAgoEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_trfGMAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trfGMQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6qCFoAg7Eea_md0mpENoqg" name="server2" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6qGXEAg7Eea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6qGXEQg7Eea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_O1v3cOM6EeaTpaLNj-zYpw" name="RTConnector6">
          <end xmi:id="_O1xsoOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_fL3OQAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_O1xsoeM6EeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_P9Q5IOM6EeaTpaLNj-zYpw" name="RTConnector7">
          <end xmi:id="_P9SHQOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_lRZpIAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_P9SHQeM6EeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_zuXWQONAEeaTpaLNj-zYpw" name="RTConnector8">
          <end xmi:id="_zuZygONAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_zuZygeNAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
        <ownedConnector xmi:id="_0bs9YONAEeaTpaLNj-zYpw" name="RTConnector9">
          <end xmi:id="_0buLgONAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_0buLgeNAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_stgqYErDEem2BZRQc2M93A" name="Debug__Top">
      <ownedAttribute xmi:id="_st6TAErDEem2BZRQc2M93A" name="Debug__Gateway">
        <type xmi:type="uml:Class" href="../CommGateWay/model.uml#_XIyCcAdxEeadtKuU2t6fMg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_st9WUErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_st99YErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_sufh0ErDEem2BZRQc2M93A" name="Debug__Simulator" type="_d9MBUAgoEea_md0mpENoqg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suhXAErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_suh-EErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_s00ZMEr4Eemntv5tDuspng" name="dbgAgent" type="_pjLpUEr4Eemntv5tDuspng">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_s021cEr4Eemntv5tDuspng" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_s021cUr4Eemntv5tDuspng" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pjLpUEr4Eemntv5tDuspng" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_pkaYYEr4Eemntv5tDuspng" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pkc0oEr4Eemntv5tDuspng" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_pkf38Er4Eemntv5tDuspng" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_pnsV4Er4Eemntv5tDuspng" name="dbgPortForClient" visibility="public" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pns88Er4Eemntv5tDuspng" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_pns88Ur4Eemntv5tDuspng" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_qvtG0Er4Eemntv5tDuspng" name="dbgPortForServer" visibility="public" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qvvjEEr4Eemntv5tDuspng" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_qvwKIEr4Eemntv5tDuspng" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sSnrEEr4Eemntv5tDuspng" name="dbgPortForEchoCapsule" visibility="public" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sSo5MEr4Eemntv5tDuspng" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sSo5MUr4Eemntv5tDuspng" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sWyZYEr4Eemntv5tDuspng" name="dbgPortForENV" visibility="public" type="_pj6CEUr4Eemntv5tDuspng" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sW0OkEr4Eemntv5tDuspng" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sW0OkUr4Eemntv5tDuspng" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_pjvC8Er4Eemntv5tDuspng" name="dbgAgent StateMachine">
        <region xmi:id="_s0isYEr4Eemntv5tDuspng" name="mainRegion">
          <transition xmi:id="_s0lIoUr4Eemntv5tDuspng" name="Trans__Init__State__30013002" source="_s0khkUr4Eemntv5tDuspng" target="_s0jTcUr4Eemntv5tDuspng">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qoMEr4Eemntv5tDuspng">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3001&quot;,&quot;New__State__3000&quot;,&quot;To__New__State__3000__3005&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3001&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_s0mWwEr4Eemntv5tDuspng" name="From__New__State__3000__3003" source="_s0j6gUr4Eemntv5tDuspng" target="_s0jTcUr4Eemntv5tDuspng">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qBIEr4Eemntv5tDuspng">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__3000&quot;,&quot;New__State__3000&quot;,&quot;To__New__State__3000__3005&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__3000&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_s0oL8Er4Eemntv5tDuspng" name="PME_Trig3004" port="_pkaYYEr4Eemntv5tDuspng">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_s0paEEr4Eemntv5tDuspng" name="To__New__State__3000__3005" guard="_s0rPQUr4Eemntv5tDuspng" source="_s0jTcUr4Eemntv5tDuspng" target="_s0j6gUr4Eemntv5tDuspng">
            <ownedRule xmi:id="_s0rPQUr4Eemntv5tDuspng" name="PME_checkDecesion3006">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0rPQEr4Eemntv5tDuspng" name="PME_checkDecesion3006">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__3000__3005&quot;,&quot;New__State__3000&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_s0jTcUr4Eemntv5tDuspng" name="DecesionPoint__2999" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_s0j6gUr4Eemntv5tDuspng" name="New__State__3000">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s03cgEr4Eemntv5tDuspng" name="New__State__3000">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_s0khkUr4Eemntv5tDuspng" name="Init__State__3001"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_s0GngUr4Eemntv5tDuspng" name="loadHeap" specification="_s0GngEr4Eemntv5tDuspng">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_s0H1oUr4Eemntv5tDuspng" name="unLoadHeap" specification="_s0H1oEr4Eemntv5tDuspng">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_s0PKYUr4Eemntv5tDuspng" name="sendMessage" specification="_s0PKYEr4Eemntv5tDuspng">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForClient&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForClient.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForServer&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForServer.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForEchoCapsule&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForEchoCapsule.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForENV&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForENV.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_s0VRAUr4Eemntv5tDuspng" name="sendInternalMessage" specification="_s0VRAEr4Eemntv5tDuspng">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_s0dM0Ur4Eemntv5tDuspng" name="initForPMD" specification="_s0dM0Er4Eemntv5tDuspng">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_s0GngEr4Eemntv5tDuspng" name="loadHeap" visibility="private" method="_s0GngUr4Eemntv5tDuspng"/>
      <ownedOperation xmi:id="_s0H1oEr4Eemntv5tDuspng" name="unLoadHeap" visibility="private" method="_s0H1oUr4Eemntv5tDuspng"/>
      <ownedOperation xmi:id="_s0PKYEr4Eemntv5tDuspng" name="sendMessage" visibility="private" method="_s0PKYUr4Eemntv5tDuspng">
        <ownedParameter xmi:id="_s0PxcEr4Eemntv5tDuspng" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_s0QYgEr4Eemntv5tDuspng" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_s0VRAEr4Eemntv5tDuspng" name="sendInternalMessage" visibility="private" method="_s0VRAUr4Eemntv5tDuspng">
        <ownedParameter xmi:id="_s0XGMEr4Eemntv5tDuspng" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_s0XGMUr4Eemntv5tDuspng" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_s0dM0Er4Eemntv5tDuspng" name="initForPMD" visibility="private" method="_s0dM0Ur4Eemntv5tDuspng"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_pj3l0Er4Eemntv5tDuspng" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_pj6CEUr4Eemntv5tDuspng" name="dbgProtocol">
        <interfaceRealization xmi:id="_pkQAUEr4Eemntv5tDuspng" client="_pj6CEUr4Eemntv5tDuspng" supplier="_pj73QUr4Eemntv5tDuspng" contract="_pj73QUr4Eemntv5tDuspng"/>
        <interfaceRealization xmi:id="_pkSckEr4Eemntv5tDuspng" client="_pj6CEUr4Eemntv5tDuspng" supplier="_pj-6kEr4Eemntv5tDuspng" contract="_pj-6kEr4Eemntv5tDuspng"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_pj73QUr4Eemntv5tDuspng" name="dbgProtocol">
        <ownedOperation xmi:id="_pkWG8Er4Eemntv5tDuspng" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_pj9scEr4Eemntv5tDuspng" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_pj-6kEr4Eemntv5tDuspng" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_pkB94Er4Eemntv5tDuspng" client="_pj6CEUr4Eemntv5tDuspng" supplier="_pj9scEr4Eemntv5tDuspng"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_pkDzEEr4Eemntv5tDuspng" client="_pj6CEUr4Eemntv5tDuspng" supplier="_pj-6kEr4Eemntv5tDuspng"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_pkZKQEr4Eemntv5tDuspng" operation="_pkWG8Er4Eemntv5tDuspng"/>
    </packagedElement>
    <profileApplication xmi:id="_lcu1sAggEea_md0mpENoqg">
      <eAnnotations xmi:id="_lcwq4AggEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_0p1pUAgxEea_md0mpENoqg">
      <eAnnotations xmi:id="_0p1pUQgxEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_iMahwAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMbv4AifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_iMeMIAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMgBUAifEea_md0mpENoqg" source="PapyrusVersion">
        <details xmi:id="_iMgBUQifEea_md0mpENoqg" key="Version" value="0.0.11"/>
        <details xmi:id="_iMgBUgifEea_md0mpENoqg" key="Comment" value=""/>
        <details xmi:id="_iMgBUwifEea_md0mpENoqg" key="Copyright" value=""/>
        <details xmi:id="_iMgBVAifEea_md0mpENoqg" key="Date" value="2015-12-10"/>
        <details xmi:id="_iMgBVQifEea_md0mpENoqg" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_iMeMIQifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_5AGSMAghEea_md0mpENoqg" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_xCrWYAgmEea_md0mpENoqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_zp7FcAgmEea_md0mpENoqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_d9rwkAgoEea_md0mpENoqg" base_Class="_d9MBUAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_ljiusAgoEea_md0mpENoqg" base_Property="_ljfrYAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_odySQAgoEea_md0mpENoqg" base_Property="_odv2AAgoEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_sM-g0AgoEea_md0mpENoqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_trefIAgoEea_md0mpENoqg" base_Property="_trcC4AgoEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_v05s8AgsEea_md0mpENoqg" base_Package="_v04e0AgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v09-YAgsEea_md0mpENoqg" base_Interface="_v09XUAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1KLoAgsEea_md0mpENoqg" base_Interface="_v1I9gAgsEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1Q5UAgsEea_md0mpENoqg" base_Interface="_v1PrMAgsEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_v1T8oAgsEea_md0mpENoqg" base_Collaboration="_v000cAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_GXxLAAgvEea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_GXsSgAgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_g3oVAAgvEea_md0mpENoqg" isWired="false" base_Port="_g3nG4AgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_-3NuMAgvEea_md0mpENoqg" isWired="false" base_Port="_-3KD0AgvEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_RMf8EAgzEea_md0mpENoqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_nlCrYAgzEea_md0mpENoqg" base_Package="_nlBdQAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlFHoAgzEea_md0mpENoqg" base_Interface="_nlD5gAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlO4oAgzEea_md0mpENoqg" base_Interface="_nlL1UAgzEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlW0cAgzEea_md0mpENoqg" base_Interface="_nlTKEAgzEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_nlbF4AgzEea_md0mpENoqg" base_Collaboration="_nk_BAAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_PdauoAg0Eea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_PdYSYAg0Eea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_6qFwAAg7Eea_md0mpENoqg" base_Property="_6qCFoAg7Eea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_l72A4AifEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include&lt;iostream>" base_Class="_sMZ5EAgoEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ZYVLEAihEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>" base_Class="_RLyKYAgzEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qp8qkAimEea_md0mpENoqg" implementationPreface="#include &lt;iostream>&#xA;#include &lt;fstream>&#xA;#include &lt;limits.h>&#xA;#include &lt;unistd.h>&#xA;using namespace std;" base_Class="_Y1UDYAg6Eea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_b2D_sAjLEea_md0mpENoqg" isWired="false" base_Port="_b1NrIAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_wQWSkAjLEea_md0mpENoqg" isWired="false" base_Port="_wQHCAAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_X4gvkAjMEea_md0mpENoqg" isWired="false" base_Port="_X4ceIAjMEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6nxNAAkFEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" implementationEnding="" base_Class="_xCGHkAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_skTr8AlKEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" base_Class="_zpdLYAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_iLgtsAmuEea_md0mpENoqg" isWired="false" base_Port="_iLeRcAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_oWjToAmuEea_md0mpENoqg" isWired="false" base_Port="_oWg3YAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_tQAV4AmuEea_md0mpENoqg" isWired="false" base_Port="_tP9SkAmuEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_5AbN8AnEEeaGqPUk-4V4qQ" base_Package="_4_QwUAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5AuI4AnEEeaGqPUk-4V4qQ" base_Interface="_5AqegAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A1doAnEEeaGqPUk-4V4qQ" base_Interface="_5AzBYAnEEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A69MAnEEeaGqPUk-4V4qQ" base_Interface="_5A5IAAnEEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_5BBq4AnEEeaGqPUk-4V4qQ" base_Collaboration="_4--ccAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_fMA_QAnFEeaGqPUk-4V4qQ" base_Port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lRkBMAnFEeaGqPUk-4V4qQ" base_Port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_pQ9x0AnMEeaGqPUk-4V4qQ" base_Port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8sLrYAovEeaGqPUk-4V4qQ" isWired="false" base_Port="_8sGy4AovEeaGqPUk-4V4qQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_f22ZoApBEeaGqPUk-4V4qQ" base_Package="_f2zWUApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4CscApBEeaGqPUk-4V4qQ" base_Interface="_f39z8ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4IMAApBEeaGqPUk-4V4qQ" base_Interface="_f4FvwApBEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4NrkApBEeaGqPUk-4V4qQ" base_Interface="_f4L2YApBEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_f4R9AApBEeaGqPUk-4V4qQ" base_Collaboration="_f2ud0ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_HIz9IApCEeaGqPUk-4V4qQ" base_Port="_HIvrsApCEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_ZDu1IApDEeaGqPUk-4V4qQ" isWired="false" base_Port="_ZDrx0ApDEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_Vj4_QApFEeaGqPUk-4V4qQ" isWired="false" base_Port="_Vj1U4ApFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lxxyEApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_lxs5kApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_rXbzAApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_rXZWwApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8587kAs1EeaGqPUk-4V4qQ" isWired="false" base_Port="_855RMAs1EeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_mKiJYOM2EeaTpaLNj-zYpw" isWired="false" base_Port="_mKfGEOM2EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_O1yTsOM6EeaTpaLNj-zYpw" base_Connector="_O1v3cOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_P9SuUOM6EeaTpaLNj-zYpw" base_Connector="_P9Q5IOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTPort xmi:id="_rmqMIOM8EeaTpaLNj-zYpw" base_Port="_rmnI0OM8EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_zuZyguNAEeaTpaLNj-zYpw" base_Connector="_zuXWQONAEeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_0bvZoONAEeaTpaLNj-zYpw" base_Connector="_0bs9YONAEeaTpaLNj-zYpw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_71nSEPMWEeauO5SNGpOV7w" headerPreface="#include &lt;fstream>" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <RTCppProperties:AttributeProperties xmi:id="_gvmcIPMYEeauO5SNGpOV7w" type="std::ofstream" base_Property="_dCa_wPMYEeauO5SNGpOV7w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_b45wYKozEeiNHY6qjNhZ4w" base_Region="_lvCAwAlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fAFjwKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_gOt6EKozEeiNHY6qjNhZ4w" base_State="_jLPjcAlNEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_hsv-UKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_i6NP8KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_kA2H4KozEeiNHY6qjNhZ4w" base_Pseudostate="_Rrrc0AlvEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_lJDGEKozEeiNHY6qjNhZ4w" base_Pseudostate="_Pyhf8Ap5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mRbDYKozEeiNHY6qjNhZ4w" base_Pseudostate="_kLngAAp5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_nsAyEKozEeiNHY6qjNhZ4w" base_State="_2g5S0ONBEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_o4vD4KozEeiNHY6qjNhZ4w" base_Pseudostate="_M8iZcONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTRegion xmi:id="_rpSf8KozEeiNHY6qjNhZ4w" base_Region="_ThAzEONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTState xmi:id="_tdqAkKozEeiNHY6qjNhZ4w" base_State="_Px2BIAqSEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ud1rMKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_veq2EKozEeiNHY6qjNhZ4w" base_State="_ZaK1gAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wg0PkKozEeiNHY6qjNhZ4w" base_Pseudostate="_5yefMAszEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xiP3YKozEeiNHY6qjNhZ4w" base_Pseudostate="_8WMAUONDEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_0dGe8KozEeiNHY6qjNhZ4w" base_StateMachine="_lT4V0AlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_880dQKozEeiNHY6qjNhZ4w" base_Pseudostate="_88oQAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_88_cYKozEeiNHY6qjNhZ4w" base_Pseudostate="_887yAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_Y4mLoKo0EeiNHY6qjNhZ4w" base_Region="_Bk0GwAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_bQ-_UKo0EeiNHY6qjNhZ4w" base_Pseudostate="_Oll1cAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_cpwwIKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_du4lIKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_eug2IKo0EeiNHY6qjNhZ4w" base_State="_aVMuMAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_f8K8EKo0EeiNHY6qjNhZ4w" base_State="_fO-gkAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_g871gKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_h7dTQKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_jFMigKo0EeiNHY6qjNhZ4w" base_State="_KwFHIAo0EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_k5P6EKo0EeiNHY6qjNhZ4w" base_StateMachine="_BKT8EAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_Rg85wKpiEeiNHY6qjNhZ4w" base_State="_cfbzcAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SuGpYKpiEeiNHY6qjNhZ4w" base_Pseudostate="_bHyrEAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ZzTxgKpiEeiNHY6qjNhZ4w" base_Region="_abLcsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_bJC1YKpiEeiNHY6qjNhZ4w" base_StateMachine="_WlNQsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1LnmcKpiEeiNHY6qjNhZ4w" base_Pseudostate="_npsCMAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_2O6PcKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_3WYN0KpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_4kr0AKpiEeiNHY6qjNhZ4w" base_State="_NvBagAgxEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uXY4KpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_8Lil8KpiEeiNHY6qjNhZ4w" base_Region="_jSIzIAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_BsmawKpjEeiNHY6qjNhZ4w" base_StateMachine="_gU8CMAgwEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_stxwIErDEem2BZRQc2M93A" base_Class="_stgqYErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_st8vQErDEem2BZRQc2M93A" base_Property="_st6TAErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_sugv8ErDEem2BZRQc2M93A" base_Property="_sufh0ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svEJkErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svHM4ErDEem2BZRQc2M93A" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sviqsErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_svhckErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_svluAErDEem2BZRQc2M93A" type="SROManager" base_Property="_svkf4ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_svoKQErDEem2BZRQc2M93A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_svu38ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_svrNkUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_svyiUErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_svwtIErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv0-kErDEem2BZRQc2M93A" type="const char *" base_Parameter="_svzJYErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv3a0ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv2MsErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv5QAErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv4B4ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swFdQErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swHScErDEem2BZRQc2M93A" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swWjAErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_swUt0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swYYMErDEem2BZRQc2M93A" type="SROManager" base_Property="_swXKEErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_swbbgErDEem2BZRQc2M93A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_swee0ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_swd3wErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swg7EErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_swee0UrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swiJMErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swg7EUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swjXUErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swiwQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swklcErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swj-YErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swxZwErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sw1EIErDEem2BZRQc2M93A" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxJNMErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sxH_EErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxLCYErDEem2BZRQc2M93A" type="SROManager" base_Property="_sxJNMUrDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sxM3kErDEem2BZRQc2M93A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxP64ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sxPT0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxRwEErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sxQh8ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxS-MErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxRwEUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxUzYErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxTlQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxWBgErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxUzYUrDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxhAoErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxjc4ErDEem2BZRQc2M93A" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx1wwErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sx1JsErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx2-4ErDEem2BZRQc2M93A" type="SROManager" base_Property="_sx2X0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sx40EErDEem2BZRQc2M93A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx8ecErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sx7QUErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx9FgErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sx8ecUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx-ToErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx9skErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx_hwErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx-6sErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_syAv4ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_syAI0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syTDwErDEem2BZRQc2M93A" base_Pseudostate="_syROkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_syVgAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syXVMErDEem2BZRQc2M93A" base_Pseudostate="_syVgAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syYjUErDEem2BZRQc2M93A" base_Pseudostate="_syX8QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_szFG4ErDEem2BZRQc2M93A" base_Region="_syTq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szGVAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szRUIErDEem2BZRQc2M93A" base_State="_szG8EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szU-gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szXawErDEem2BZRQc2M93A" base_State="_szMboErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szk2IErDEem2BZRQc2M93A" base_Pseudostate="_szkPEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szmrUErDEem2BZRQc2M93A" base_State="_szldMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sznSYErDEem2BZRQc2M93A" base_Pseudostate="_szmrUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szpuoErDEem2BZRQc2M93A" base_Pseudostate="_sznSYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sz93sErDEem2BZRQc2M93A" base_Region="_szldMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0KE8ErDEem2BZRQc2M93A" base_State="_sz-ewErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0NIQErDEem2BZRQc2M93A" base_State="_sz_s4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0PkgErDEem2BZRQc2M93A" base_State="_s0BiEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0T18ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0fcIErDEem2BZRQc2M93A" base_Pseudostate="_s0e1EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0gqQErDEem2BZRQc2M93A" base_State="_s0fcIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0hRUErDEem2BZRQc2M93A" base_Pseudostate="_s0gqQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0h4YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s00zUErDEem2BZRQc2M93A" base_Region="_s0fcIkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0_LYErDEem2BZRQc2M93A" base_State="_s01aYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1COsErDEem2BZRQc2M93A" base_State="_s02BcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1GgIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1L_sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ZbEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1apMErDEem2BZRQc2M93A" base_State="_s1ZbEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ceYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1dFcErDEem2BZRQc2M93A" base_Pseudostate="_s1ceYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s1uLMErDEem2BZRQc2M93A" base_Region="_s1ZbEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s11f8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s14jQErDEem2BZRQc2M93A" base_State="_s1uyQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s18NoErDEem2BZRQc2M93A" base_State="_s1wAYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2Ia4ErDEem2BZRQc2M93A" base_Pseudostate="_s2HMwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2JpAErDEem2BZRQc2M93A" base_State="_s2JB8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2K3IErDEem2BZRQc2M93A" base_Pseudostate="_s2KQEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2LeMErDEem2BZRQc2M93A" base_Pseudostate="_s2K3IUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s2eZIErDEem2BZRQc2M93A" base_Region="_s2JB8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2pYQErDEem2BZRQc2M93A" base_State="_s2eZIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2r0gErDEem2BZRQc2M93A" base_State="_s2gOUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2wF8ErDEem2BZRQc2M93A" base_State="_s2iDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s22zoErDEem2BZRQc2M93A" base_State="_s2j4sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3IgcErDEem2BZRQc2M93A" base_Pseudostate="_s3GEMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3JukErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3MK0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3Mx4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s3bbYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3hiAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3klUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3nooErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s31rEErDEem2BZRQc2M93A" base_Pseudostate="_s31EAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s32SIErDEem2BZRQc2M93A" base_State="_s31rEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s325MErDEem2BZRQc2M93A" base_Pseudostate="_s32SIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s34HUErDEem2BZRQc2M93A" base_Pseudostate="_s33gQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s4H-8ErDEem2BZRQc2M93A" base_Region="_s31rEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4P6wErDEem2BZRQc2M93A" base_State="_s4ImAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4SXAErDEem2BZRQc2M93A" base_State="_s4J0IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4WocErDEem2BZRQc2M93A" base_State="_s4LCQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4iOoErDEem2BZRQc2M93A" base_Pseudostate="_s4hAgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4i1sErDEem2BZRQc2M93A" base_State="_s4iOoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4kq4ErDEem2BZRQc2M93A" base_Pseudostate="_s4jcwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4lR8ErDEem2BZRQc2M93A" base_Pseudostate="_s4kq4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s40igErDEem2BZRQc2M93A" base_Region="_s4iOokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5DzEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5GPUErDEem2BZRQc2M93A" base_State="_s41woErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5JSoErDEem2BZRQc2M93A" base_State="_s46CEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5NkEErDEem2BZRQc2M93A" base_State="_s49scErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5ZKQErDEem2BZRQc2M93A" base_Pseudostate="_s5YjMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5ZxUErDEem2BZRQc2M93A" base_State="_s5ZKQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5a_cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5bmgErDEem2BZRQc2M93A" base_Pseudostate="_s5a_cUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s5qQAErDEem2BZRQc2M93A" base_Region="_s5ZKQkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5yL0ErDEem2BZRQc2M93A" base_State="_s5q3EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s512MErDEem2BZRQc2M93A" base_State="_s5sFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s545gErDEem2BZRQc2M93A" base_State="_s5ssQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s59K8ErDEem2BZRQc2M93A" base_State="_s5t6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s6Z24ErDEem2BZRQc2M93A" base_State="_s6YowErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s60GkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s61UsErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s617wErDEem2BZRQc2M93A" base_Pseudostate="_s61UsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s62i0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7GacErDEem2BZRQc2M93A" base_Region="_s60GkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7IPoErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7NvMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7QygErDEem2BZRQc2M93A" base_State="_s7JdwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7SnsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7dm0ErDEem2BZRQc2M93A" base_Pseudostate="_s7c_wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7eN4ErDEem2BZRQc2M93A" base_State="_s7dm0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7e08ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7fcAErDEem2BZRQc2M93A" base_Pseudostate="_s7e08UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7yW8ErDEem2BZRQc2M93A" base_Region="_s7dm0krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s78vAErDEem2BZRQc2M93A" base_State="_s7y-AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7_yUErDEem2BZRQc2M93A" base_State="_s70MIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8C1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8IVMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8T7YErDEem2BZRQc2M93A" base_Pseudostate="_s8TUUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8VwkErDEem2BZRQc2M93A" base_State="_s8T7YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8WXoErDEem2BZRQc2M93A" base_Pseudostate="_s8VwkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8W-sErDEem2BZRQc2M93A" base_Pseudostate="_s8WXoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s8ndYErDEem2BZRQc2M93A" base_Region="_s8T7YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8x1cErDEem2BZRQc2M93A" base_State="_s8ndYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s804wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s84jIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s89boErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9K3AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9LeEErDEem2BZRQc2M93A" base_State="_s9K3AUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9MsMErDEem2BZRQc2M93A" base_Pseudostate="_s9MFIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9NTQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s9dK4ErDEem2BZRQc2M93A" base_Region="_s9K3AkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9ltwErDEem2BZRQc2M93A" base_State="_s9dx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9oxEErDEem2BZRQc2M93A" base_State="_s9fAEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9rNUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9wF0ErDEem2BZRQc2M93A" base_State="_s9g1QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s97sAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s986IErDEem2BZRQc2M93A" base_State="_s97sAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s99hMErDEem2BZRQc2M93A" base_Pseudostate="_s986IUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9-IQErDEem2BZRQc2M93A" base_Pseudostate="_s99hMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-NY0ErDEem2BZRQc2M93A" base_Region="_s98TEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-TfcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-WiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-a0MErDEem2BZRQc2M93A" base_State="_s-QcIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-pdsErDEem2BZRQc2M93A" base_Pseudostate="_s-oPkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-qr0ErDEem2BZRQc2M93A" base_State="_s-pdsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-rS4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-r58ErDEem2BZRQc2M93A" base_Pseudostate="_s-rS4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-4uQErDEem2BZRQc2M93A" base_Region="_s-pdskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_B4MErDEem2BZRQc2M93A" base_State="_s-5VUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_E7gErDEem2BZRQc2M93A" base_State="_s-58YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_HXwErDEem2BZRQc2M93A" base_State="_s-7xkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_LpMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_WoUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_X2cErDEem2BZRQc2M93A" base_State="_s_WoUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_YdgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_ZEkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s_pjQErDEem2BZRQc2M93A" base_Region="_s_XPYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_vp4ErDEem2BZRQc2M93A" base_State="_s_pjQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_ytMErDEem2BZRQc2M93A" base_State="_s_qxYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_1JcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s__hgErDEem2BZRQc2M93A" base_Pseudostate="_s_-6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAAvoErDEem2BZRQc2M93A" base_State="_tAAIkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tABWsErDEem2BZRQc2M93A" base_Pseudostate="_tAAvoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tACk0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tASccErDEem2BZRQc2M93A" base_Region="_tAAIkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWG0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWt4ErDEem2BZRQc2M93A" base_State="_tATqkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAa_UErDEem2BZRQc2M93A" base_Pseudostate="_tAaYQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAbmYErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAc0gErDEem2BZRQc2M93A" base_Pseudostate="_tAbmYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAdbkErDEem2BZRQc2M93A" base_Pseudostate="_tAc0gUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tAssIErDEem2BZRQc2M93A" base_Region="_tAa_UkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAtTMErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAyywErDEem2BZRQc2M93A" base_State="_tAt6QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA1PAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA45YErDEem2BZRQc2M93A" base_State="_tAvvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBFGoErDEem2BZRQc2M93A" base_Pseudostate="_tBD4gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBGUwErDEem2BZRQc2M93A" base_State="_tBFGoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIJ8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIxAErDEem2BZRQc2M93A" base_Pseudostate="_tBIJ8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tBVlUErDEem2BZRQc2M93A" base_Region="_tBFGokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBbr8ErDEem2BZRQc2M93A" base_State="_tBVlUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBevQErDEem2BZRQc2M93A" base_State="_tBWzcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBhLgErDEem2BZRQc2M93A" base_State="_tBYBkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBrjkErDEem2BZRQc2M93A" base_Pseudostate="_tBq8gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBsxsErDEem2BZRQc2M93A" base_State="_tBrjkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwErDEem2BZRQc2M93A" base_Pseudostate="_tBsxsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwkrDEem2BZRQc2M93A" base_Pseudostate="_tBtYwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tB8CQErDEem2BZRQc2M93A" base_Region="_tBrjkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCFzQErDEem2BZRQc2M93A" base_State="_tB8pUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCI2kErDEem2BZRQc2M93A" base_State="_tB9QYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCL54ErDEem2BZRQc2M93A" base_State="_tB-egErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCRZcErDEem2BZRQc2M93A" base_State="_tCATsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCdmsErDEem2BZRQc2M93A" base_Pseudostate="_tCc_oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCe00ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgC8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgqAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tCwhoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCzk8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC0zEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC6SoErDEem2BZRQc2M93A" base_Pseudostate="_tC5EgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC65sErDEem2BZRQc2M93A" base_State="_tC6SoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC8u4ErDEem2BZRQc2M93A" base_Pseudostate="_tC7gwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC9V8ErDEem2BZRQc2M93A" base_Pseudostate="_tC8u4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tDN0oErDEem2BZRQc2M93A" base_Region="_tC6SokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDTUMErDEem2BZRQc2M93A" base_State="_tDN0oUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDVJYErDEem2BZRQc2M93A" base_State="_tDPCwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDW-kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDjy4ErDEem2BZRQc2M93A" base_Pseudostate="_tDikwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDkZ8ErDEem2BZRQc2M93A" base_State="_tDjy4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDloEErDEem2BZRQc2M93A" base_Pseudostate="_tDlBAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDmPIErDEem2BZRQc2M93A" base_Pseudostate="_tDloEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tD378ErDEem2BZRQc2M93A" base_Region="_tDjy4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD7mUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD8NYErDEem2BZRQc2M93A" base_State="_tD5KEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEBF4ErDEem2BZRQc2M93A" base_Pseudostate="_tEAe0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tECUAErDEem2BZRQc2M93A" base_State="_tEBF4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEC7EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEDiIErDEem2BZRQc2M93A" base_Pseudostate="_tEC7EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tEQWcErDEem2BZRQc2M93A" base_Region="_tEBs8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEXEIErDEem2BZRQc2M93A" base_State="_tEQWcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEaHcErDEem2BZRQc2M93A" base_State="_tERkkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEb8oErDEem2BZRQc2M93A" base_State="_tESysErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEgOEErDEem2BZRQc2M93A" base_State="_tEUA0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEqmIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEr0QErDEem2BZRQc2M93A" base_State="_tEqmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEsbUErDEem2BZRQc2M93A" base_Pseudostate="_tEr0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEtCYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tE8S8ErDEem2BZRQc2M93A" base_Region="_tErNMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tE_WQErDEem2BZRQc2M93A" base_State="_tE86AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFAkYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFE10ErDEem2BZRQc2M93A" base_Pseudostate="_tFEOwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFGD8ErDEem2BZRQc2M93A" base_State="_tFE10UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFIgMErDEem2BZRQc2M93A" base_Pseudostate="_tFGrAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFJHQErDEem2BZRQc2M93A" base_Pseudostate="_tFIgMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFVUgErDEem2BZRQc2M93A" base_Region="_tFE10krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFXwwErDEem2BZRQc2M93A" base_State="_tFVUgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFYX0ErDEem2BZRQc2M93A" base_State="_tFWioErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFd3YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFeecErDEem2BZRQc2M93A" base_State="_tFd3YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfFgErDEem2BZRQc2M93A" base_Pseudostate="_tFeecUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfskErDEem2BZRQc2M93A" base_Pseudostate="_tFfFgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFu9IErDEem2BZRQc2M93A" base_Region="_tFd3YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFyngErDEem2BZRQc2M93A" base_State="_tFvkMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFz1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF4uIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tF7KYErDEem2BZRQc2M93A" base_State="_tF58QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF7xcErDEem2BZRQc2M93A" base_Pseudostate="_tF7KYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF8_kErDEem2BZRQc2M93A" base_Pseudostate="_tF7xcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tGLCAErDEem2BZRQc2M93A" base_Region="_tF58QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGa5oErDEem2BZRQc2M93A" base_State="_tGLCAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGdV4ErDEem2BZRQc2M93A" base_State="_tGMQIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGgZMErDEem2BZRQc2M93A" base_State="_tGPTcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGl4wErDEem2BZRQc2M93A" base_State="_tGQhkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGw34ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGxe8ErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGyGAUrDEem2BZRQc2M93A" base_Pseudostate="_tGyGAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGzUIErDEem2BZRQc2M93A" base_Pseudostate="_tGyGAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHCksErDEem2BZRQc2M93A" base_Region="_tGw34krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHDLwErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHHdMErDEem2BZRQc2M93A" base_State="_tHDLwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHMVsErDEem2BZRQc2M93A" base_State="_tHDy0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHOx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHWtwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHX74ErDEem2BZRQc2M93A" base_State="_tHWtwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHYi8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHZxEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHposErDEem2BZRQc2M93A" base_Region="_tHWtwkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHyLkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH1O4ErDEem2BZRQc2M93A" base_State="_tHq20ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH3rIErDEem2BZRQc2M93A" base_State="_tHsE8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH78kErDEem2BZRQc2M93A" base_State="_tHt6IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIIw4ErDEem2BZRQc2M93A" base_Pseudostate="_tIHiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIJX8ErDEem2BZRQc2M93A" base_State="_tIIw4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIKmEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tILNIErDEem2BZRQc2M93A" base_Pseudostate="_tIKmEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tIbEwErDEem2BZRQc2M93A" base_Region="_tIIw4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIhLYErDEem2BZRQc2M93A" base_State="_tIbEwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIjAkErDEem2BZRQc2M93A" base_State="_tIbr0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tImD4ErDEem2BZRQc2M93A" base_State="_tIc58ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJHoUErDEem2BZRQc2M93A" base_State="_tJHBQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJv6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJxIkErDEem2BZRQc2M93A" base_State="_tJwhgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJxvoErDEem2BZRQc2M93A" base_Pseudostate="_tJxIkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJyWsErDEem2BZRQc2M93A" base_Pseudostate="_tJxvoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tJ_yEErDEem2BZRQc2M93A" base_Region="_tJwhgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKIU8ErDEem2BZRQc2M93A" base_State="_tKAZIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKKxMErDEem2BZRQc2M93A" base_State="_tKBnQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKNNcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKRe4ErDEem2BZRQc2M93A" base_State="_tKEDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKh9kErDEem2BZRQc2M93A" base_Pseudostate="_tKgvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKjLsErDEem2BZRQc2M93A" base_State="_tKh9kUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKkZ0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKlA4ErDEem2BZRQc2M93A" base_Pseudostate="_tKkZ0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tKzDUErDEem2BZRQc2M93A" base_Region="_tKh9kkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK6YEErDEem2BZRQc2M93A" base_State="_tKzDUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK9bYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLAesErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLMr8ErDEem2BZRQc2M93A" base_State="_tLME4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tLzv8ErDEem2BZRQc2M93A" base_Pseudostate="_tLzI4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tL0-EErDEem2BZRQc2M93A" base_State="_tLzv8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL1lIErDEem2BZRQc2M93A" base_Pseudostate="_tL0-EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL2zQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMFcwErDEem2BZRQc2M93A" base_Region="_tLzv8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMLjYErDEem2BZRQc2M93A" base_State="_tMFcwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMN_oErDEem2BZRQc2M93A" base_State="_tMGq4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMRC8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMZl0ErDEem2BZRQc2M93A" base_Pseudostate="_tMY-wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMaz8ErDEem2BZRQc2M93A" base_State="_tMaM4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMbbAErDEem2BZRQc2M93A" base_Pseudostate="_tMaz8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMcCEErDEem2BZRQc2M93A" base_Pseudostate="_tMbbAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMsgwErDEem2BZRQc2M93A" base_Region="_tMaM4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM0ckErDEem2BZRQc2M93A" base_State="_tMtH0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM3f4ErDEem2BZRQc2M93A" base_State="_tMuV8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM58IErDEem2BZRQc2M93A" base_State="_tMwLIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM-NkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNMQAErDEem2BZRQc2M93A" base_Pseudostate="_tNLo8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNNeIErDEem2BZRQc2M93A" base_State="_tNMQAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNOsQErDEem2BZRQc2M93A" base_Pseudostate="_tNOFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNP6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tNiOQErDEem2BZRQc2M93A" base_Region="_tNMQAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNtNYErDEem2BZRQc2M93A" base_State="_tNiOQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNw3wErDEem2BZRQc2M93A" base_State="_tNjcYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN0iIErDEem2BZRQc2M93A" base_State="_tNkqgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN5aoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOWtoErDEem2BZRQc2M93A" base_Pseudostate="_tOHdEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tObmIErDEem2BZRQc2M93A" base_State="_tOXUsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOc0QErDEem2BZRQc2M93A" base_Pseudostate="_tObmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOeCYErDEem2BZRQc2M93A" base_Pseudostate="_tOc0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tO110ErDEem2BZRQc2M93A" base_Region="_tOXUsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO6uUErDEem2BZRQc2M93A" base_State="_tO2c4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO9xoErDEem2BZRQc2M93A" base_State="_tO3D8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPAN4ErDEem2BZRQc2M93A" base_State="_tO4SEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPKl8ErDEem2BZRQc2M93A" base_Pseudostate="_tPJ-4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPLNAErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPL0EErDEem2BZRQc2M93A" base_Pseudostate="_tPLNAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPMbIUrDEem2BZRQc2M93A" base_Pseudostate="_tPMbIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tPbrsErDEem2BZRQc2M93A" base_Region="_tPKl8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPc50ErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPiZYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPk1oErDEem2BZRQc2M93A" base_State="_tPeH8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPmq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPyRAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPzfIErDEem2BZRQc2M93A" base_State="_tPy4EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP1UUErDEem2BZRQc2M93A" base_Pseudostate="_tPzfIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP17YErDEem2BZRQc2M93A" base_Pseudostate="_tP1UUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQDWwErDEem2BZRQc2M93A" base_Region="_tPy4EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQI2UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQLSkErDEem2BZRQc2M93A" base_State="_tQD90ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQNu0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQW4wErDEem2BZRQc2M93A" base_Pseudostate="_tQWRsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQXf0ErDEem2BZRQc2M93A" base_State="_tQW4wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQYG4UrDEem2BZRQc2M93A" base_Pseudostate="_tQYG4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQZVAErDEem2BZRQc2M93A" base_Pseudostate="_tQYt8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQvTQErDEem2BZRQc2M93A" base_Region="_tQW4wkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ32IErDEem2BZRQc2M93A" base_State="_tQvTQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ-j0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRBAEErDEem2BZRQc2M93A" base_State="_tQxvgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tREDYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRUiEErDEem2BZRQc2M93A" base_Pseudostate="_tRT7AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRVwMErDEem2BZRQc2M93A" base_State="_tRUiEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRW-UErDEem2BZRQc2M93A" base_Pseudostate="_tRVwMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRYMcUrDEem2BZRQc2M93A" base_Pseudostate="_tRYMcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tRxOAErDEem2BZRQc2M93A" base_Region="_tRUiEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR6_AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR-CUErDEem2BZRQc2M93A" base_State="_tRycIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSBssErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSF-IErDEem2BZRQc2M93A" base_State="_tR2GgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSRkUErDEem2BZRQc2M93A" base_Pseudostate="_tSQ9QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSSycErDEem2BZRQc2M93A" base_State="_tSRkUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSTZgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSUnoErDEem2BZRQc2M93A" base_Pseudostate="_tSUAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tSpXwErDEem2BZRQc2M93A" base_Region="_tSRkUkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSxTkErDEem2BZRQc2M93A" base_State="_tSpXwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSzIwErDEem2BZRQc2M93A" base_State="_tSql4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS098ErDEem2BZRQc2M93A" base_State="_tSr0AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS4oUErDEem2BZRQc2M93A" base_State="_tStCIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTEOgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTFcoErDEem2BZRQc2M93A" base_State="_tTEOgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTGDsErDEem2BZRQc2M93A" base_Pseudostate="_tTFcoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTHR0ErDEem2BZRQc2M93A" base_Pseudostate="_tTGqwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tTS4AErDEem2BZRQc2M93A" base_Region="_tTEOgkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTY-oErDEem2BZRQc2M93A" base_State="_tTTfEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTaz0ErDEem2BZRQc2M93A" base_State="_tTUGIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTcpAErDEem2BZRQc2M93A" base_State="_tTUtMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTfsUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tUACoErDEem2BZRQc2M93A" base_State="_tT_bkErDEem2BZRQc2M93A"/>
  <UMLRealTime:Capsule xmi:id="_pjub4Er4Eemntv5tDuspng" base_Class="_pjLpUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_pj0igEr4Eemntv5tDuspng" base_StateMachine="_pjvC8Er4Eemntv5tDuspng"/>
  <UMLRealTime:ProtocolContainer xmi:id="_pj6CEEr4Eemntv5tDuspng" base_Package="_pj3l0Er4Eemntv5tDuspng"/>
  <UMLRealTime:Protocol xmi:id="_pj73QEr4Eemntv5tDuspng" base_Collaboration="_pj6CEUr4Eemntv5tDuspng"/>
  <UMLRealTime:RTMessageSet xmi:id="_pkHdcEr4Eemntv5tDuspng" base_Interface="_pj73QUr4Eemntv5tDuspng"/>
  <UMLRealTime:RTMessageSet xmi:id="_pkOLIEr4Eemntv5tDuspng" base_Interface="_pj9scEr4Eemntv5tDuspng" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_pkPZQEr4Eemntv5tDuspng" base_Interface="_pj-6kEr4Eemntv5tDuspng" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_pkpo8Er4Eemntv5tDuspng" base_Port="_pkaYYEr4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_pnlBIEr4Eemntv5tDuspng" isWired="false" base_Port="_pnjzAEr4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_pnuLEEr4Eemntv5tDuspng" isPublish="true" isWired="false" base_Port="_pnsV4Er4Eemntv5tDuspng"/>
  <RTCppProperties:CapsuleProperties xmi:id="_pqGJoEr4Eemntv5tDuspng" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_pqTlAEr4Eemntv5tDuspng" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_psv1AEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_pspuYEr4Eemntv5tDuspng"/>
  <RTCppProperties:ParameterProperties xmi:id="_ptDXAEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_ps_FkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_pu6_QEr4Eemntv5tDuspng" base_Pseudostate="_pu6YMEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_p5jh8Er4Eemntv5tDuspng" base_Pseudostate="_p5iT0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_p5nzYEr4Eemntv5tDuspng" base_Pseudostate="_p5l-MEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_p5sr4Er4Eemntv5tDuspng" base_Pseudostate="_p5rdwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_p5wWQEr4Eemntv5tDuspng" base_Pseudostate="_p5t6AEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qANjkEr4Eemntv5tDuspng" base_Pseudostate="_qAMVcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qAPYwEr4Eemntv5tDuspng" base_Pseudostate="_qAOKoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qAWtgEr4Eemntv5tDuspng" base_Pseudostate="_qATDIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qAbmAEr4Eemntv5tDuspng" base_Pseudostate="_qAZJwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qHEZgEr4Eemntv5tDuspng" base_Pseudostate="_qHDLYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qHLHMEr4Eemntv5tDuspng" base_Pseudostate="_qHFnoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qHOxkEr4Eemntv5tDuspng" base_Pseudostate="_qHNjcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qHXUcEr4Eemntv5tDuspng" base_Pseudostate="_qHVfQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qKUh0Er4Eemntv5tDuspng" base_Pseudostate="_qKRegEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qKZaUEr4Eemntv5tDuspng" base_Pseudostate="_qKYMMEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qKbPgEr4Eemntv5tDuspng" base_Pseudostate="_qKaBYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qKh9MEr4Eemntv5tDuspng" base_Pseudostate="_qKdrwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qSniMEr4Eemntv5tDuspng" base_Pseudostate="_qSj30Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qSzvcEr4Eemntv5tDuspng" base_Pseudostate="_qSxTMEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qS7rQEr4Eemntv5tDuspng" base_Pseudostate="_qS4A4Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qTJtsEr4Eemntv5tDuspng" base_Pseudostate="_qTFcQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qW9PoEr4Eemntv5tDuspng" base_Pseudostate="_qW8okEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qW-dwEr4Eemntv5tDuspng" base_Pseudostate="_qW92sEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qXD9UEr4Eemntv5tDuspng" base_Pseudostate="_qXCIIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qXHnsEr4Eemntv5tDuspng" base_Pseudostate="_qXGZkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qcpn8Er4Eemntv5tDuspng" base_Pseudostate="_qcoZ0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qcqPAEr4Eemntv5tDuspng" base_Pseudostate="_qcpn8kr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qcrdIEr4Eemntv5tDuspng" base_Pseudostate="_qcq2EEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qcsrQEr4Eemntv5tDuspng" base_Pseudostate="_qcsEMEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qgowEEr4Eemntv5tDuspng" base_Pseudostate="_qgoJAUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qgpXIEr4Eemntv5tDuspng" base_Pseudostate="_qgowEkr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qgp-MUr4Eemntv5tDuspng" base_Pseudostate="_qgp-MEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qgrMUEr4Eemntv5tDuspng" base_Pseudostate="_qgqlQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qjzY0Er4Eemntv5tDuspng" base_Pseudostate="_qjyKsEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qjz_4Ur4Eemntv5tDuspng" base_Pseudostate="_qjz_4Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qj1OAEr4Eemntv5tDuspng" base_Pseudostate="_qj0m8Ur4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qj2cIEr4Eemntv5tDuspng" base_Pseudostate="_qj11EEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qmTTMEr4Eemntv5tDuspng" base_Pseudostate="_qmQP4Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qmW9kEr4Eemntv5tDuspng" base_Pseudostate="_qmVvcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qmYLsEr4Eemntv5tDuspng" base_Pseudostate="_qmXkoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_qmYywUr4Eemntv5tDuspng" base_Pseudostate="_qmYywEr4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_qvqDgEr4Eemntv5tDuspng" isWired="false" base_Port="_qvj84Er4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_qvwxMEr4Eemntv5tDuspng" isPublish="true" isWired="false" base_Port="_qvtG0Er4Eemntv5tDuspng"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qzCHoEr4Eemntv5tDuspng" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qzHAIEr4Eemntv5tDuspng" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_qzuEIEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_qzsO8Er4Eemntv5tDuspng"/>
  <RTCppProperties:ParameterProperties xmi:id="_qzwgYEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_qzv5UEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q0rtcEr4Eemntv5tDuspng" base_Pseudostate="_q0rGYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q0uwwEr4Eemntv5tDuspng" base_Pseudostate="_q0uJsEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q5RSgEr4Eemntv5tDuspng" base_Pseudostate="_q5QrcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q5WyEEr4Eemntv5tDuspng" base_Pseudostate="_q5TuwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q5ZOUEr4Eemntv5tDuspng" base_Pseudostate="_q5YnQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q5bqkEr4Eemntv5tDuspng" base_Pseudostate="_q5accEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q9edEEr4Eemntv5tDuspng" base_Pseudostate="_q9dO8Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q9g5UEr4Eemntv5tDuspng" base_Pseudostate="_q9gSQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q9hgYUr4Eemntv5tDuspng" base_Pseudostate="_q9hgYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q9iHcUr4Eemntv5tDuspng" base_Pseudostate="_q9iHcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q-tzMEr4Eemntv5tDuspng" base_Pseudostate="_q-tMIUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q-vBUEr4Eemntv5tDuspng" base_Pseudostate="_q-uaQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q-yrsEr4Eemntv5tDuspng" base_Pseudostate="_q-voYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_q-3kMEr4Eemntv5tDuspng" base_Pseudostate="_q-29IEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rBpycEr4Eemntv5tDuspng" base_Pseudostate="_rBokUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rBs1wEr4Eemntv5tDuspng" base_Pseudostate="_rBrAkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rBxHMEr4Eemntv5tDuspng" base_Pseudostate="_rBwgIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rBzjcEr4Eemntv5tDuspng" base_Pseudostate="_rBy8YEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rDbUEEr4Eemntv5tDuspng" base_Pseudostate="_rDaF8Ur4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rDgMkEr4Eemntv5tDuspng" base_Pseudostate="_rDe-cEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rDhasEr4Eemntv5tDuspng" base_Pseudostate="_rDgzoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rDj28Er4Eemntv5tDuspng" base_Pseudostate="_rDjP4Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rGf2MEr4Eemntv5tDuspng" base_Pseudostate="_rGfPIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rGhrYEr4Eemntv5tDuspng" base_Pseudostate="_rGhEUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rGkusEr4Eemntv5tDuspng" base_Pseudostate="_rGkHoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rGl80Er4Eemntv5tDuspng" base_Pseudostate="_rGlVwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rJdqoEr4Eemntv5tDuspng" base_Pseudostate="_rJdDkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rJe4wEr4Eemntv5tDuspng" base_Pseudostate="_rJeRsEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rJoCsEr4Eemntv5tDuspng" base_Pseudostate="_rJijIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rJrGAEr4Eemntv5tDuspng" base_Pseudostate="_rJqe8Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rNaWgEr4Eemntv5tDuspng" base_Pseudostate="_rNZvcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rNa9kUr4Eemntv5tDuspng" base_Pseudostate="_rNa9kEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rNcLsEr4Eemntv5tDuspng" base_Pseudostate="_rNbkoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rNcywUr4Eemntv5tDuspng" base_Pseudostate="_rNcywEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rPrAUEr4Eemntv5tDuspng" base_Pseudostate="_rPqZQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rPuqsEr4Eemntv5tDuspng" base_Pseudostate="_rPs1gEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rPwf4Er4Eemntv5tDuspng" base_Pseudostate="_rPv40Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rPy8IEr4Eemntv5tDuspng" base_Pseudostate="_rPyVEEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rWgBEEr4Eemntv5tDuspng" base_Pseudostate="_rWdk0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rWlgoEr4Eemntv5tDuspng" base_Pseudostate="_rWjrcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rWrnQEr4Eemntv5tDuspng" base_Pseudostate="_rWqZIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rWxt4Er4Eemntv5tDuspng" base_Pseudostate="_rWuqkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rf-tMEr4Eemntv5tDuspng" base_Pseudostate="_rf7C0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rgBJcEr4Eemntv5tDuspng" base_Pseudostate="_rgAiYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rgJFQEr4Eemntv5tDuspng" base_Pseudostate="_rgIeMEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rgSPMEr4Eemntv5tDuspng" base_Pseudostate="_rgPy8Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rkeysEr4Eemntv5tDuspng" base_Pseudostate="_rkeLoUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rkjrMEr4Eemntv5tDuspng" base_Pseudostate="_rkh2AEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rkmugEr4Eemntv5tDuspng" base_Pseudostate="_rklgYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rkpKwEr4Eemntv5tDuspng" base_Pseudostate="_rkojsEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_roX0MEr4Eemntv5tDuspng" base_Pseudostate="_roUw4Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rokBcEr4Eemntv5tDuspng" base_Pseudostate="_roeh4Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rovAkEr4Eemntv5tDuspng" base_Pseudostate="_ronEwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ruBwQEr4Eemntv5tDuspng" base_Pseudostate="_ruAiIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ruGBsEr4Eemntv5tDuspng" base_Pseudostate="_ruC-YEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ruGowUr4Eemntv5tDuspng" base_Pseudostate="_ruGowEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ruH24Er4Eemntv5tDuspng" base_Pseudostate="_ruHP0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rwAtQkr4Eemntv5tDuspng" base_Pseudostate="_rwAtQUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rwBUUUr4Eemntv5tDuspng" base_Pseudostate="_rwBUUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rwB7YUr4Eemntv5tDuspng" base_Pseudostate="_rwB7YEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rwE-sEr4Eemntv5tDuspng" base_Pseudostate="_rwDwkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rxod4Er4Eemntv5tDuspng" base_Pseudostate="_rxn20Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rxq6IEr4Eemntv5tDuspng" base_Pseudostate="_rxpE8Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rxvyoEr4Eemntv5tDuspng" base_Pseudostate="_rxtWYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rxxAwEr4Eemntv5tDuspng" base_Pseudostate="_rxwZsEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rzgtMEr4Eemntv5tDuspng" base_Pseudostate="_rzb0sEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rzjJcEr4Eemntv5tDuspng" base_Pseudostate="_rzh7UEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rzopAEr4Eemntv5tDuspng" base_Pseudostate="_rzk-oEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_rzsTYEr4Eemntv5tDuspng" base_Pseudostate="_rzrsUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r1K6EEr4Eemntv5tDuspng" base_Pseudostate="_r1KTAEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r1MvQEr4Eemntv5tDuspng" base_Pseudostate="_r1MIMEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r1RnwEr4Eemntv5tDuspng" base_Pseudostate="_r1PLgEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r1UEAEr4Eemntv5tDuspng" base_Pseudostate="_r1SO0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r5GX0Ur4Eemntv5tDuspng" base_Pseudostate="_r5GX0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r5I0EEr4Eemntv5tDuspng" base_Pseudostate="_r5G-4Ur4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r5KCMEr4Eemntv5tDuspng" base_Pseudostate="_r5JbIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r5OToEr4Eemntv5tDuspng" base_Pseudostate="_r5L3YEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r9fIkEr4Eemntv5tDuspng" base_Pseudostate="_r9cFQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r9hk0Er4Eemntv5tDuspng" base_Pseudostate="_r9g9wEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r9iy8Er4Eemntv5tDuspng" base_Pseudostate="_r9iL4Ur4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_r9koIEr4Eemntv5tDuspng" base_Pseudostate="_r9jaAEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sAIM4Er4Eemntv5tDuspng" base_Pseudostate="_sAHl0Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sALQMEr4Eemntv5tDuspng" base_Pseudostate="_sAIz8Ur4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sANscEr4Eemntv5tDuspng" base_Pseudostate="_sANFYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sAO6kEr4Eemntv5tDuspng" base_Pseudostate="_sAOTgEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sKzL0Er4Eemntv5tDuspng" base_Pseudostate="_sKykwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sK22MEr4Eemntv5tDuspng" base_Pseudostate="_sK1BAEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sK4rYEr4Eemntv5tDuspng" base_Pseudostate="_sK4EUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sK5ScUr4Eemntv5tDuspng" base_Pseudostate="_sK5ScEr4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_sSl14Er4Eemntv5tDuspng" isWired="false" base_Port="_sSkAsEr4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_sSquYEr4Eemntv5tDuspng" isPublish="true" isWired="false" base_Port="_sSnrEEr4Eemntv5tDuspng"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sS0fYEr4Eemntv5tDuspng" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sS2UkEr4Eemntv5tDuspng" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sTAsoEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_sTAFkUr4Eemntv5tDuspng"/>
  <RTCppProperties:ParameterProperties xmi:id="_sTB6wEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_sTBTsUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sTOIAEr4Eemntv5tDuspng" base_Pseudostate="_sTNg8Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sT_kEEr4Eemntv5tDuspng" base_Pseudostate="_sT-9AUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sUAyMEr4Eemntv5tDuspng" base_Pseudostate="_sUALIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sUDOcEr4Eemntv5tDuspng" base_Pseudostate="_sUCAUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sUFqsEr4Eemntv5tDuspng" base_Pseudostate="_sUFDoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sVSkkUr4Eemntv5tDuspng" base_Pseudostate="_sVSkkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sVTLoUr4Eemntv5tDuspng" base_Pseudostate="_sVTLoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sVVA0Er4Eemntv5tDuspng" base_Pseudostate="_sVTysEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sVYrMEr4Eemntv5tDuspng" base_Pseudostate="_sVXdEEr4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_sWv9IEr4Eemntv5tDuspng" isWired="false" base_Port="_sWuH8Er4Eemntv5tDuspng"/>
  <UMLRealTime:RTPort xmi:id="_sW1csEr4Eemntv5tDuspng" isPublish="true" isWired="false" base_Port="_sWyZYEr4Eemntv5tDuspng"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sX6awEr4Eemntv5tDuspng" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sX8P8Er4Eemntv5tDuspng" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sYb_MEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_sYbYIEr4Eemntv5tDuspng"/>
  <RTCppProperties:ParameterProperties xmi:id="_sYiF0Er4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_sYfpkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sZDDMEr4Eemntv5tDuspng" base_Pseudostate="_sZCcIEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sa0k0Er4Eemntv5tDuspng" base_Pseudostate="_sayvoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sa75kEr4Eemntv5tDuspng" base_Pseudostate="_sa42QEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sbBZIEr4Eemntv5tDuspng" base_Pseudostate="_sa9uwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sbHfwEr4Eemntv5tDuspng" base_Pseudostate="_sbGRoEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_siXXQEr4Eemntv5tDuspng" base_Pseudostate="_siViEEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sibBoEr4Eemntv5tDuspng" base_Pseudostate="_siZMcEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sihvUEr4Eemntv5tDuspng" base_Pseudostate="_siesAEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_siodAEr4Eemntv5tDuspng" base_Pseudostate="_simAwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_slm4gUr4Eemntv5tDuspng" base_Pseudostate="_slm4gEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sloGoEr4Eemntv5tDuspng" base_Pseudostate="_slnfkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_slotsEr4Eemntv5tDuspng" base_Pseudostate="_sloGokr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_slvbYEr4Eemntv5tDuspng" base_Pseudostate="_slrJ8Er4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_snUvwUr4Eemntv5tDuspng" base_Pseudostate="_snUvwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_snV94Er4Eemntv5tDuspng" base_Pseudostate="_snVW0Ur4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_snWk8Er4Eemntv5tDuspng" base_Pseudostate="_snV94kr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_snXzEEr4Eemntv5tDuspng" base_Pseudostate="_snXMAEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_splZkEr4Eemntv5tDuspng" base_Pseudostate="_spkygUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_spmAoEr4Eemntv5tDuspng" base_Pseudostate="_splZkkr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_spmnsUr4Eemntv5tDuspng" base_Pseudostate="_spmnsEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_spoc4Er4Eemntv5tDuspng" base_Pseudostate="_spnOwEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ssSIQEr4Eemntv5tDuspng" base_Pseudostate="_ssRhMUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ssSvUUr4Eemntv5tDuspng" base_Pseudostate="_ssSvUEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ssTWYUr4Eemntv5tDuspng" base_Pseudostate="_ssTWYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ssVLkEr4Eemntv5tDuspng" base_Pseudostate="_ssUkgEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_su1tAEr4Eemntv5tDuspng" base_Pseudostate="_su1F8Ur4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_su2UEUr4Eemntv5tDuspng" base_Pseudostate="_su2UEEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_su5XYEr4Eemntv5tDuspng" base_Pseudostate="_su4JQEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_su8asEr4Eemntv5tDuspng" base_Pseudostate="_su7MkEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_swR3cEr4Eemntv5tDuspng" base_Pseudostate="_swRQYUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_swSegUr4Eemntv5tDuspng" base_Pseudostate="_swSegEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_swWI4Er4Eemntv5tDuspng" base_Pseudostate="_swUTsEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_swZMMEr4Eemntv5tDuspng" base_Pseudostate="_swYlIEr4Eemntv5tDuspng"/>
  <RTCppProperties:CapsuleProperties xmi:id="_s0ELQEr4Eemntv5tDuspng" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_pjLpUEr4Eemntv5tDuspng" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_s0FZYEr4Eemntv5tDuspng" base_Class="_pjLpUEr4Eemntv5tDuspng"/>
  <RTCppProperties:ParameterProperties xmi:id="_s0Q_kEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_s0QYgEr4Eemntv5tDuspng"/>
  <RTCppProperties:ParameterProperties xmi:id="_s0XtQEr4Eemntv5tDuspng" type="pmd::Message" base_Parameter="_s0XGMUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s0jTcEr4Eemntv5tDuspng" base_Region="_s0isYEr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0j6gEr4Eemntv5tDuspng" base_Pseudostate="_s0jTcUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTState xmi:id="_s0khkEr4Eemntv5tDuspng" base_State="_s0j6gUr4Eemntv5tDuspng"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0lIoEr4Eemntv5tDuspng" base_Pseudostate="_s0khkUr4Eemntv5tDuspng"/>
  <UMLRealTime:CapsulePart xmi:id="_s02OYEr4Eemntv5tDuspng" base_Property="_s00ZMEr4Eemntv5tDuspng"/>
</xmi:XMI>

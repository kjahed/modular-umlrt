<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_lYTBoAggEea_md0mpENoqg" name="Replication">
    <eAnnotations xmi:id="_4HZrcAgoEea_md0mpENoqg" source="UMLRT_Default_top">
      <details xmi:id="_4Ha5kAgoEea_md0mpENoqg" key="top_name" value="Debug__Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_Lcp5MKpbEeiNHY6qjNhZ4w" source="http://www.eclipse.org/papyrus-rt/language/1.0.0">
      <details xmi:id="_LcruYKpbEeiNHY6qjNhZ4w" key="language" value="umlrt-cpp"/>
    </eAnnotations>
    <eAnnotations xmi:id="_I_3aMEsbEemo2cvxL9mKnQ" source="dummy"/>
    <eAnnotations xmi:id="_hHltcEvyEemprpgptu5b6A" source="dummy"/>
    <eAnnotations xmi:id="_lo2ZsEwUEemsRa1kn26j_w" source="dummy"/>
    <eAnnotations xmi:id="_mJiJcExXEem6AaOTTOwDjw" source="dummy"/>
    <eAnnotations xmi:id="_CivMIEyDEem0-qHve_hwQA" source="dummy"/>
    <packageImport xmi:id="_st0MYErDEem2BZRQc2M93A">
      <importedPackage xmi:type="uml:Model" href="../CommGateWay/model.uml#_MZw7AAdxEeadtKuU2t6fMg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rPgFkAggEea_md0mpENoqg" name="ENV">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_vj5dgAghEea_md0mpENoqg" client="_rPgFkAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sMZ5EAgoEea_md0mpENoqg" name="ENV" visibility="public" classifierBehavior="_gU8CMAgwEea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_GXsSgAgvEea_md0mpENoqg" name="ConfigComm" visibility="public" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NBhGMAgvEea_md0mpENoqg" value="7"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NBssYAgvEea_md0mpENoqg" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_b1NrIAjLEea_md0mpENoqg" name="FailureTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wQHCAAjLEea_md0mpENoqg" name="BITTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_X4ceIAjMEea_md0mpENoqg" name="GeneralTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lxs5kApkEeaGqPUk-4V4qQ" name="AnnouncmentServer1" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rXZWwApkEeaGqPUk-4V4qQ" name="AnnouncmentServer2" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Iq9iAApmEeaGqPUk-4V4qQ" name="AnnouncementServer1Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_UZHLMApmEeaGqPUk-4V4qQ" name="AnnouncmentServerTimeout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_UZHLMQpmEeaGqPUk-4V4qQ" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_bmibMApmEeaGqPUk-4V4qQ" name="AnnouncementServer2Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fXb_wAxwEeaB2MeL96fedA" name="systemConfig" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_fXXuUAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mKfGEOM2EeaTpaLNj-zYpw" name="configTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_svBtUErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoErDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoUrDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svgOcErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svg1gErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svhckErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svkf4ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_7GKX4Er4EemegPQxlEOT_A" name="dbgPortForENV" visibility="protected" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7GMNEEr4EemegPQxlEOT_A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_7GMNEUr4EemegPQxlEOT_A" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_gU8CMAgwEea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_jSIzIAgwEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_szyRgErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szy4kUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange__29">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_szy4kErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_szzfoErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz0GsUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint__30">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0GsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz0twErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz1U0ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint__31">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0twUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz2i8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz3KAErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints__32">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz2i8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz3xEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz4YIUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode__33">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sz4YIErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz4_MErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz5mQUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg__34">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz5mQErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0p0MErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qbQErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange__54">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s0p0MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rCUErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rCUkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint__55">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rCUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rpYErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rpYkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint__56">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rpYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0sQcErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0s3gUrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints__57">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0s3gErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0tekErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0tekkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode__58">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s0tekUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0uFoErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0v60ErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg__59">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0ussErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1lBQErDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1loUUrDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange__79">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s1loUErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1mPYErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1m2cErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint__80">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1mPYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1ndgErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1oEkErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint__81">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1ndgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1oroErDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1orokrDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints__82">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1oroUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1p5wErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1qg0ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode__83">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s1p5wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1rH4ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1rH4krDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg__84">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1rH4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3S4gErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3S4gkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange__126">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s3S4gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3TfkErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3UGoUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint__127">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3UGoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3UtsErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3VUwUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint__128">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3VUwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3Wi4ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3Wi4krDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints__129">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3Wi4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3XJ8ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3XxAUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode__130">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s3XxAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3YYEErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3YYEkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg__131">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3YYEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3-N8ErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__E" source="_s33gQErDEem2BZRQc2M93A" target="_sdehUAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3-1AErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__E__146">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Init__ReadConfig__1__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4ADIErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4AqMUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange__148">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4AqMErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4BRQErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4BRQkrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint__149">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4BRQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4B4UErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4CfYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint__150">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4B4UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4CfYUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4DGcUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints__151">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4DGcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4DtgErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4E7oErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode__152">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4EUkErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4FisErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4FiskrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg__153">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4FisUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5kJYErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5kwcErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange__195">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s5kJYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5lXgErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5lXgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint__196">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5lXgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5l-kErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5mloErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint__197">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5l-kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5mloUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nMsUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints__198">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5nMsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nMskrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nzwUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode__199">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s5nzwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nzwkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5oa0UrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg__200">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5oa0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_7IbowEr4EemegPQxlEOT_A" name="Trans__Init999" source="_npsCMAgwEea_md0mpENoqg" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7UHUUEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7Ic24Er4EemegPQxlEOT_A" name="Trans__Debug__Path__server2Failure1000" source="_s0e1EErDEem2BZRQc2M93A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7UkAQEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7I2fgEr4EemegPQxlEOT_A" name="1001" source="_s0e1EErDEem2BZRQc2M93A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7UiLEEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7I4UsEr4EemegPQxlEOT_A" name="From__ReadConfig__1002" source="_sdehUAgwEea_md0mpENoqg" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7Ur8EEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_7I7YAEr4EemegPQxlEOT_A" name="PME_Trig1003" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_7I9NMEr4EemegPQxlEOT_A" name="PME_Trig1004" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_7JBeoEr4EemegPQxlEOT_A" name="PME_Trig1005" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_7JCswEr4EemegPQxlEOT_A" name="PME_Trig1006" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_7JFwEEr4EemegPQxlEOT_A" name="PME_Trig1007" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_7JIMUEr4EemegPQxlEOT_A" name="PME_Trig1008" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_7JNE0Er4EemegPQxlEOT_A" name="PME_Trig1009" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_7JO6AEr4EemegPQxlEOT_A" name="PME_Trig1010" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_7JQvMEr4EemegPQxlEOT_A" name="PME_Trig1011" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_7JR9UEr4EemegPQxlEOT_A" name="PME_Trig1012" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_7JXc4Er4EemegPQxlEOT_A" name="PME_Trig1013" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_7JZ5IEr4EemegPQxlEOT_A" name="PME_Trig1014" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_7JbuUEr4EemegPQxlEOT_A" name="PME_Trig1015" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_7Jf_wEr4EemegPQxlEOT_A" name="PME_Trig1016" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_7JkRMEr4EemegPQxlEOT_A" name="PME_Trig1017" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_7JmGYEr4EemegPQxlEOT_A" name="PME_Trig1018" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_7Jq-4Er4EemegPQxlEOT_A" name="PME_Trig1019" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_7JuCMEr4EemegPQxlEOT_A" name="PME_Trig1020" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_7JvQUEr4EemegPQxlEOT_A" name="PME_Trig1021" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
            </transition>
            <transition xmi:id="_7J2lEEr4EemegPQxlEOT_A" name="To__ReadConfig__1022" guard="_7VDIcUr4EemegPQxlEOT_A" source="_7IPbgEr4EemegPQxlEOT_A" target="_sdehUAgwEea_md0mpENoqg">
              <ownedRule xmi:id="_7VDIcUr4EemegPQxlEOT_A" name="PME_checkDecesion1285">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7VDIcEr4EemegPQxlEOT_A" name="PME_checkDecesion1285">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ReadConfig__1022&quot;,&quot;ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_7J9SwEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__MasterAnnouncment__1024" guard="_7VGy0Ur4EemegPQxlEOT_A" source="_7IPbgEr4EemegPQxlEOT_A" target="_7J6PcEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7VGy0Ur4EemegPQxlEOT_A" name="PME_checkDecesion1286">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7VGy0Er4EemegPQxlEOT_A" name="PME_checkDecesion1286">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_7J_vAUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__MasterAnnouncment__1026" source="_7J_H8Er4EemegPQxlEOT_A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7U5XcEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7MV4YEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__configOK__1077" guard="_7VBTQUr4EemegPQxlEOT_A" source="_7IPbgEr4EemegPQxlEOT_A" target="_7MTcIEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7VBTQUr4EemegPQxlEOT_A" name="PME_checkDecesion1281">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7VBTQEr4EemegPQxlEOT_A" name="PME_checkDecesion1281">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configOK__1077&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_7MXGgUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__configOK__1079" source="_7MWfcEr4EemegPQxlEOT_A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7Uw0kEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7OVccEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__ConfigNOK__1130" guard="_7VChYUr4EemegPQxlEOT_A" source="_7IPbgEr4EemegPQxlEOT_A" target="_7OTAMEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7VChYUr4EemegPQxlEOT_A" name="PME_checkDecesion1284">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7VChYEr4EemegPQxlEOT_A" name="PME_checkDecesion1284">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_7OX4sEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__ConfigNOK__1132" source="_7OWDgEr4EemegPQxlEOT_A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7U0e8Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7QYD0Er4EemegPQxlEOT_A" name="Trans__ex1183" source="_s33gQErDEem2BZRQc2M93A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7UOpEEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7QZ5AEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__Init__ReadConfig__1__1185" guard="_7VIoAUr4EemegPQxlEOT_A" source="_7IPbgEr4EemegPQxlEOT_A" target="_7QZR8Er4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7VIoAUr4EemegPQxlEOT_A" name="PME_checkDecesion1287">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7VIoAEr4EemegPQxlEOT_A" name="PME_checkDecesion1287">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_7QagEUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__Init__ReadConfig__1__1187" source="_7QZ5AUr4EemegPQxlEOT_A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7VAFIEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7RXiUUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__server2Failure__1217" guard="_7VB6UUr4EemegPQxlEOT_A" source="_7IPbgEr4EemegPQxlEOT_A" target="_7RW7QEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7VB6UUr4EemegPQxlEOT_A" name="PME_checkDecesion1283">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7VB6UEr4EemegPQxlEOT_A" name="PME_checkDecesion1283">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__server2Failure__1217&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_7RYwcUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__server2Failure__1219" source="_7RYJYEr4EemegPQxlEOT_A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7UXzAEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_7S064Ur4EemegPQxlEOT_A" name="To__Substates__Debug__C__QueryConfig__1249" guard="_7VBTQ0r4EemegPQxlEOT_A" source="_7IPbgEr4EemegPQxlEOT_A" target="_7SzswEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7VBTQ0r4EemegPQxlEOT_A" name="PME_checkDecesion1282">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7VBTQkr4EemegPQxlEOT_A" name="PME_checkDecesion1282">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_7S4lQUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__QueryConfig__1251" source="_7S2wEEr4EemegPQxlEOT_A" target="_7IPbgEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7UegsEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__1077&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__1130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__1022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__1024&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1185&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_npsCMAgwEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:State" xmi:id="_sdehUAgwEea_md0mpENoqg" name="ReadConfig">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_EE4RAAigEea_md0mpENoqg" name="ReadConfig">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ReadConfig&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6ldEErDEem2BZRQc2M93A" name="ReadConfig__215">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_szldMErDEem2BZRQc2M93A" name="Debug__C__MasterAnnouncment">
              <connectionPoint xmi:id="_7J6PcEr4EemegPQxlEOT_A" name="From__Parent__1023" kind="entryPoint"/>
              <connectionPoint xmi:id="_7J_H8Er4EemegPQxlEOT_A" name="To__Parent__1025" kind="exitPoint"/>
              <region xmi:id="_szldMUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0ElYUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_sz-ewErDEem2BZRQc2M93A" target="_sz_s4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0WSMErDEem2BZRQc2M93A" name="Debug__Ex__Running__42">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0ElYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_7KI48Er4EemegPQxlEOT_A" name="Trans__Init__State__10281029" source="_7KCyUEr4EemegPQxlEOT_A" target="_7KAWEEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7MN8kEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1028&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__1069&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1028&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__1070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1028&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__1072&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1028&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7KKHEEr4EemegPQxlEOT_A" name="From__Debug__B__Ex__Running__1030" source="_sz-ewErDEem2BZRQc2M93A" target="_7KAWEEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7MHO4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__1069&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__1070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__1072&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7KL8QEr4EemegPQxlEOT_A" name="PME_Trig1031" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7KNxcEr4EemegPQxlEOT_A" name="PME_Trig1032" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7KT4EEr4EemegPQxlEOT_A" name="PME_Trig1033" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7KYJgEr4EemegPQxlEOT_A" name="PME_Trig1034" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7KdpEEr4EemegPQxlEOT_A" name="PME_Trig1035" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7KgFUEr4EemegPQxlEOT_A" name="PME_Trig1036" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7Kh6gEr4EemegPQxlEOT_A" name="PME_Trig1037" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7KjvsEr4EemegPQxlEOT_A" name="PME_Trig1038" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7KmL8Er4EemegPQxlEOT_A" name="PME_Trig1039" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7KrEcEr4EemegPQxlEOT_A" name="PME_Trig1040" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7KsSkEr4EemegPQxlEOT_A" name="PME_Trig1041" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7KwkAEr4EemegPQxlEOT_A" name="PME_Trig1042" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7K2DkEr4EemegPQxlEOT_A" name="PME_Trig1043" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7K4f0Er4EemegPQxlEOT_A" name="PME_Trig1044" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7K9YUEr4EemegPQxlEOT_A" name="PME_Trig1045" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7K_0kEr4EemegPQxlEOT_A" name="PME_Trig1046" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7LBCsEr4EemegPQxlEOT_A" name="PME_Trig1047" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7LCQ0Er4EemegPQxlEOT_A" name="PME_Trig1048" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7LHwYEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__MasterAnnouncment__1049" source="_sz_s4ErDEem2BZRQc2M93A" target="_7KAWEEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7MGAwEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__1069&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__1070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__1072&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7LJlkEr4EemegPQxlEOT_A" name="PME_Trig1050" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7LLawEr4EemegPQxlEOT_A" name="PME_Trig1051" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7LRhYEr4EemegPQxlEOT_A" name="PME_Trig1052" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7LT9oEr4EemegPQxlEOT_A" name="PME_Trig1053" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7LVy0Er4EemegPQxlEOT_A" name="PME_Trig1054" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7LYPEEr4EemegPQxlEOT_A" name="PME_Trig1055" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7LduoEr4EemegPQxlEOT_A" name="PME_Trig1056" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Lfj0Er4EemegPQxlEOT_A" name="PME_Trig1057" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7LlqcEr4EemegPQxlEOT_A" name="PME_Trig1058" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7LotwEr4EemegPQxlEOT_A" name="PME_Trig1059" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7Ls_MEr4EemegPQxlEOT_A" name="PME_Trig1060" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7LwCgEr4EemegPQxlEOT_A" name="PME_Trig1061" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7LzF0Er4EemegPQxlEOT_A" name="PME_Trig1062" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7L2wMEr4EemegPQxlEOT_A" name="PME_Trig1063" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7L5McEr4EemegPQxlEOT_A" name="PME_Trig1064" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_7L6akEr4EemegPQxlEOT_A" name="PME_Trig1065" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7L8PwEr4EemegPQxlEOT_A" name="PME_Trig1066" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7L820Er4EemegPQxlEOT_A" name="PME_Trig1067" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7L-E8Er4EemegPQxlEOT_A" name="PME_Trig1068" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7MCWYEr4EemegPQxlEOT_A" name="To__Debug__B__Ex__Running__1069" guard="_7MPKsEr4EemegPQxlEOT_A" source="_7KAWEEr4EemegPQxlEOT_A" target="_sz-ewErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7MPKsEr4EemegPQxlEOT_A" name="PME_checkDecesion1073">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7MOjoEr4EemegPQxlEOT_A" name="PME_checkDecesion1073">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__1069&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7MC9cEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__MasterAnnouncment__1070" guard="_7MQY0Ur4EemegPQxlEOT_A" source="_7KAWEEr4EemegPQxlEOT_A" target="_sz_s4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7MQY0Ur4EemegPQxlEOT_A" name="PME_checkDecesion1074">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7MQY0Er4EemegPQxlEOT_A" name="PME_checkDecesion1074">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnouncment__1070&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7MDkgEr4EemegPQxlEOT_A" name="From__Parnet__StateMachine1__1071" source="_7J6PcEr4EemegPQxlEOT_A" target="_7KAWEEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7MIdAEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__1069&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__1070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__1072&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7MELkEr4EemegPQxlEOT_A" name="To__Parent__StateMachine1__1072" guard="_7MSOAUr4EemegPQxlEOT_A" source="_7KAWEEr4EemegPQxlEOT_A" target="_7J_H8Er4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_7MSOAUr4EemegPQxlEOT_A" name="PME_checkDecesion1075">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7MSOAEr4EemegPQxlEOT_A" name="PME_checkDecesion1075">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1072&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_sz-ewErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz-ewUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0KE8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Running__35">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_sz_s4ErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz_s4UrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0NIQUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment__36">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7KAWEEr4EemegPQxlEOT_A" name="DecesionPoint__1027" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7KCyUEr4EemegPQxlEOT_A" name="Init__State__1028"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s0e1EErDEem2BZRQc2M93A" name="Debug__Path__server2Failure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s0fcIUrDEem2BZRQc2M93A" name="Debug__C__server2Failure">
              <connectionPoint xmi:id="_7RW7QEr4EemegPQxlEOT_A" name="From__Parent__1216" kind="entryPoint"/>
              <connectionPoint xmi:id="_7RYJYEr4EemegPQxlEOT_A" name="To__Parent__1218" kind="exitPoint"/>
              <region xmi:id="_s0fcIkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_7RgsQEr4EemegPQxlEOT_A" name="Trans__Init__State__12211222" source="_7ReQAEr4EemegPQxlEOT_A" target="_7RZXgEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7SuNMEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1221&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1221&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__1245&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1221&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7RhTUEr4EemegPQxlEOT_A" name="From__Debug__A__Ac__server2Failure__1223" source="_s032oErDEem2BZRQc2M93A" target="_7RZXgEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7SrJ4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__1245&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7RihcEr4EemegPQxlEOT_A" name="PME_Trig1224" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7RnZ8Er4EemegPQxlEOT_A" name="PME_Trig1225" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7RooEEr4EemegPQxlEOT_A" name="PME_Trig1226" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7RrrYEr4EemegPQxlEOT_A" name="PME_Trig1227" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7RtgkEr4EemegPQxlEOT_A" name="PME_Trig1228" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7Rv80Er4EemegPQxlEOT_A" name="PME_Trig1229" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7R7jAEr4EemegPQxlEOT_A" name="PME_Trig1230" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7R-mUEr4EemegPQxlEOT_A" name="PME_Trig1231" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7SEF4Er4EemegPQxlEOT_A" name="PME_Trig1232" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7SFUAEr4EemegPQxlEOT_A" name="PME_Trig1233" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7SHJMEr4EemegPQxlEOT_A" name="PME_Trig1234" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7SKzkEr4EemegPQxlEOT_A" name="PME_Trig1235" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7SQ6MEr4EemegPQxlEOT_A" name="PME_Trig1236" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7STWcEr4EemegPQxlEOT_A" name="PME_Trig1237" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7SVysEr4EemegPQxlEOT_A" name="PME_Trig1238" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_7SbSQEr4EemegPQxlEOT_A" name="PME_Trig1239" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7SdugEr4EemegPQxlEOT_A" name="PME_Trig1240" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7Se8oEr4EemegPQxlEOT_A" name="PME_Trig1241" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7SkcMEr4EemegPQxlEOT_A" name="PME_Trig1242" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7SlqUEr4EemegPQxlEOT_A" name="To__Debug__A__Ac__server2Failure__1243" guard="_7Sx3kUr4EemegPQxlEOT_A" source="_7RZXgEr4EemegPQxlEOT_A" target="_s032oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7Sx3kUr4EemegPQxlEOT_A" name="PME_checkDecesion1246">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7Sx3kEr4EemegPQxlEOT_A" name="PME_checkDecesion1246">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__server2Failure__1243&quot;,&quot;Debug__A__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7SoGkEr4EemegPQxlEOT_A" name="From__Parnet__StateMachine1__1244" source="_7RW7QEr4EemegPQxlEOT_A" target="_7RZXgEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7SwCYEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__1245&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7SoGkUr4EemegPQxlEOT_A" name="To__Parent__StateMachine1__1245" guard="_7SyeoUr4EemegPQxlEOT_A" source="_7RZXgEr4EemegPQxlEOT_A" target="_7RYJYEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_7SyeoUr4EemegPQxlEOT_A" name="PME_checkDecesion1247">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7SyeoEr4EemegPQxlEOT_A" name="PME_checkDecesion1247">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1245&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s032oErDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s032oUrDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1HHMErDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure__62">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7RZXgEr4EemegPQxlEOT_A" name="DecesionPoint__1220" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7ReQAEr4EemegPQxlEOT_A" name="Init__State__1221"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s1ZbEUrDEem2BZRQc2M93A" name="Debug__C__configOK">
              <connectionPoint xmi:id="_7MTcIEr4EemegPQxlEOT_A" name="From__Parent__1076" kind="entryPoint"/>
              <connectionPoint xmi:id="_7MWfcEr4EemegPQxlEOT_A" name="To__Parent__1078" kind="exitPoint"/>
              <region xmi:id="_s1ZbEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s1x1kErDEem2BZRQc2M93A" name="Debug__Ac__configOK" source="_s1uLMUrDEem2BZRQc2M93A" target="_s1uyQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1ycoErDEem2BZRQc2M93A" name="configCheckL" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The configuration is OK, the transition config-> Running was taken, sending signal to servers and clients \n&quot;;
    ConfigComm.StartUp(this->systemConfig).send();
    std::cout&lt;&lt;&quot;ENV: ENV is in  Running State\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__Ac__configOK&quot;,(char *)&quot;Debug__B__Ac__configOK&quot;,(char *)&quot;Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s1x1kUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_7Maw4Er4EemegPQxlEOT_A" name="Trans__Init__State__10811082" source="_7MY7sEr4EemegPQxlEOT_A" target="_7MXtkEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7OPV0Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1081&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__1125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1081&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1081&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__1122&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1081&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7McmEEr4EemegPQxlEOT_A" name="From__Debug__A__Ac__configOK__1083" source="_s1uyQErDEem2BZRQc2M93A" target="_7MXtkEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7OLrcEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__1125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__1122&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7Md0MEr4EemegPQxlEOT_A" name="PME_Trig1084" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7MhekEr4EemegPQxlEOT_A" name="PME_Trig1085" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7MiFoEr4EemegPQxlEOT_A" name="PME_Trig1086" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Mj60Er4EemegPQxlEOT_A" name="PME_Trig1087" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7MlI8Er4EemegPQxlEOT_A" name="PME_Trig1088" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7MmXEEr4EemegPQxlEOT_A" name="PME_Trig1089" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7MozUEr4EemegPQxlEOT_A" name="PME_Trig1090" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7MuS4Er4EemegPQxlEOT_A" name="PME_Trig1091" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7MxWMEr4EemegPQxlEOT_A" name="PME_Trig1092" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7M1noEr4EemegPQxlEOT_A" name="PME_Trig1093" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7M3c0Er4EemegPQxlEOT_A" name="PME_Trig1094" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7M55EEr4EemegPQxlEOT_A" name="PME_Trig1095" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7M7HMEr4EemegPQxlEOT_A" name="PME_Trig1096" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7M8VUEr4EemegPQxlEOT_A" name="PME_Trig1097" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7M_YoEr4EemegPQxlEOT_A" name="PME_Trig1098" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_7NBN0Er4EemegPQxlEOT_A" name="PME_Trig1099" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7NDqEEr4EemegPQxlEOT_A" name="PME_Trig1100" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7NE4MEr4EemegPQxlEOT_A" name="PME_Trig1101" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7NJwsEr4EemegPQxlEOT_A" name="PME_Trig1102" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7NNbEEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__configOK__1103" source="_s1uLMUrDEem2BZRQc2M93A" target="_7MXtkEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7OB6cEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__1125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__1122&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7NPQQEr4EemegPQxlEOT_A" name="PME_Trig1104" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7NThsEr4EemegPQxlEOT_A" name="PME_Trig1105" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7NUv0Er4EemegPQxlEOT_A" name="PME_Trig1106" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7NWlAEr4EemegPQxlEOT_A" name="PME_Trig1107" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7NYaMEr4EemegPQxlEOT_A" name="PME_Trig1108" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7NZBQEr4EemegPQxlEOT_A" name="PME_Trig1109" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7NaPYEr4EemegPQxlEOT_A" name="PME_Trig1110" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7NcroEr4EemegPQxlEOT_A" name="PME_Trig1111" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Nfu8Er4EemegPQxlEOT_A" name="PME_Trig1112" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7NgWAEr4EemegPQxlEOT_A" name="PME_Trig1113" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7NiyQEr4EemegPQxlEOT_A" name="PME_Trig1114" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7NkAYEr4EemegPQxlEOT_A" name="PME_Trig1115" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7NquEEr4EemegPQxlEOT_A" name="PME_Trig1116" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7NtxYEr4EemegPQxlEOT_A" name="PME_Trig1117" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7Nyp4Er4EemegPQxlEOT_A" name="PME_Trig1118" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Nz4AEr4EemegPQxlEOT_A" name="PME_Trig1119" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7N2UQEr4EemegPQxlEOT_A" name="PME_Trig1120" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7N3iYEr4EemegPQxlEOT_A" name="PME_Trig1121" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7N4wgEr4EemegPQxlEOT_A" name="To__Debug__A__Ac__configOK__1122" guard="_7OSZIkr4EemegPQxlEOT_A" source="_7MXtkEr4EemegPQxlEOT_A" target="_s1uyQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7OSZIkr4EemegPQxlEOT_A" name="PME_checkDecesion1128">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7OSZIUr4EemegPQxlEOT_A" name="PME_checkDecesion1128">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configOK__1122&quot;,&quot;Debug__A__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7N4wgUr4EemegPQxlEOT_A" name="To__Debug__B__Ac__configOK__1123" guard="_7OSZIEr4EemegPQxlEOT_A" source="_7MXtkEr4EemegPQxlEOT_A" target="_s1uLMUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7OSZIEr4EemegPQxlEOT_A" name="PME_checkDecesion1127">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7ORyEkr4EemegPQxlEOT_A" name="PME_checkDecesion1127">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__configOK__1123&quot;,&quot;Debug__B__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7N5-oEr4EemegPQxlEOT_A" name="From__Parnet__StateMachine1__1124" source="_7MTcIEr4EemegPQxlEOT_A" target="_7MXtkEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7OIBEEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__1125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__1122&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7N6lsEr4EemegPQxlEOT_A" name="To__Parent__StateMachine1__1125" guard="_7ORyEUr4EemegPQxlEOT_A" source="_7MXtkEr4EemegPQxlEOT_A" target="_7MWfcEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_7ORyEUr4EemegPQxlEOT_A" name="PME_checkDecesion1126">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7ORyEEr4EemegPQxlEOT_A" name="PME_checkDecesion1126">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1125&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s1uLMUrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uLMkrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s11f8UrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK__85">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s1uyQErDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uyQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s14jQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK__86">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7MXtkEr4EemegPQxlEOT_A" name="DecesionPoint__1080" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7MY7sEr4EemegPQxlEOT_A" name="Init__State__1081"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s3JHgErDEem2BZRQc2M93A" name="Debug__C__ConfigNOK">
              <connectionPoint xmi:id="_s3KVoErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_7OTAMEr4EemegPQxlEOT_A" name="From__Parent__1129" kind="entryPoint"/>
              <connectionPoint xmi:id="_7OWDgEr4EemegPQxlEOT_A" name="To__Parent__1131" kind="exitPoint"/>
              <region xmi:id="_s3JHgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s3eesErDEem2BZRQc2M93A" name="Debug__init__trans__ConfigNOK" source="_s3KVoErDEem2BZRQc2M93A" target="_s3bbYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3pd0ErDEem2BZRQc2M93A" name="Debug__init__trans__ConfigNOK__136">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__init__trans__ConfigNOK&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7OfNcEr4EemegPQxlEOT_A" name="Trans__Init__State__11341135" source="_7OcKIEr4EemegPQxlEOT_A" target="_7OaU8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7QQIAEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1134&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1134&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__1177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1134&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__1179&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1134&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7OgbkEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__ConfigNOK__1136" source="_s3bbYUrDEem2BZRQc2M93A" target="_7OaU8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7QTyYEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__1177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__1179&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7OhpsEr4EemegPQxlEOT_A" name="PME_Trig1137" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7OmiMEr4EemegPQxlEOT_A" name="PME_Trig1138" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7OoXYEr4EemegPQxlEOT_A" name="PME_Trig1139" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7OplgEr4EemegPQxlEOT_A" name="PME_Trig1140" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7OrasEr4EemegPQxlEOT_A" name="PME_Trig1141" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7Ow6QEr4EemegPQxlEOT_A" name="PME_Trig1142" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7OzWgEr4EemegPQxlEOT_A" name="PME_Trig1143" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7O0koEr4EemegPQxlEOT_A" name="PME_Trig1144" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7O3A4Er4EemegPQxlEOT_A" name="PME_Trig1145" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7O6EMEr4EemegPQxlEOT_A" name="PME_Trig1146" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7O7SUEr4EemegPQxlEOT_A" name="PME_Trig1147" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7O-VoEr4EemegPQxlEOT_A" name="PME_Trig1148" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7PCAAEr4EemegPQxlEOT_A" name="PME_Trig1149" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7PGRcEr4EemegPQxlEOT_A" name="PME_Trig1150" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7PItsEr4EemegPQxlEOT_A" name="PME_Trig1151" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_7PJ70Er4EemegPQxlEOT_A" name="PME_Trig1152" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7PM_IEr4EemegPQxlEOT_A" name="PME_Trig1153" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7PSesEr4EemegPQxlEOT_A" name="PME_Trig1154" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7PWJEEr4EemegPQxlEOT_A" name="PME_Trig1155" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7PXXMEr4EemegPQxlEOT_A" name="From__Debug__A__En__ConfigNOK__1156" source="_s3d3oErDEem2BZRQc2M93A" target="_7OaU8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7QPg8Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__1177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__1179&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7PX-QEr4EemegPQxlEOT_A" name="PME_Trig1157" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7PZMYEr4EemegPQxlEOT_A" name="PME_Trig1158" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7PaagEr4EemegPQxlEOT_A" name="PME_Trig1159" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Pc2wEr4EemegPQxlEOT_A" name="PME_Trig1160" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7Per8Er4EemegPQxlEOT_A" name="PME_Trig1161" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7PkLgEr4EemegPQxlEOT_A" name="PME_Trig1162" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7PnO0Er4EemegPQxlEOT_A" name="PME_Trig1163" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7PpEAEr4EemegPQxlEOT_A" name="PME_Trig1164" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7PtVcEr4EemegPQxlEOT_A" name="PME_Trig1165" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7PujkEr4EemegPQxlEOT_A" name="PME_Trig1166" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7Pw_0Er4EemegPQxlEOT_A" name="PME_Trig1167" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7PyN8Er4EemegPQxlEOT_A" name="PME_Trig1168" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7P0qMEr4EemegPQxlEOT_A" name="PME_Trig1169" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7P3tgEr4EemegPQxlEOT_A" name="PME_Trig1170" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7P5isEr4EemegPQxlEOT_A" name="PME_Trig1171" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_7P7-8Er4EemegPQxlEOT_A" name="PME_Trig1172" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7QA3cEr4EemegPQxlEOT_A" name="PME_Trig1173" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7QCsoEr4EemegPQxlEOT_A" name="PME_Trig1174" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7QFI4Er4EemegPQxlEOT_A" name="PME_Trig1175" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7QG-EEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__ConfigNOK__1176" guard="_7QVnkUr4EemegPQxlEOT_A" source="_7OaU8Er4EemegPQxlEOT_A" target="_s3bbYUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7QVnkUr4EemegPQxlEOT_A" name="PME_checkDecesion1180">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7QVnkEr4EemegPQxlEOT_A" name="PME_checkDecesion1180">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ConfigNOK__1176&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7QHlIEr4EemegPQxlEOT_A" name="To__Debug__A__En__ConfigNOK__1177" guard="_7QWOoUr4EemegPQxlEOT_A" source="_7OaU8Er4EemegPQxlEOT_A" target="_s3d3oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7QWOoUr4EemegPQxlEOT_A" name="PME_checkDecesion1181">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7QWOoEr4EemegPQxlEOT_A" name="PME_checkDecesion1181">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ConfigNOK__1177&quot;,&quot;Debug__A__En__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7QLPgEr4EemegPQxlEOT_A" name="From__Parnet__StateMachine1__1178" source="_7OTAMEr4EemegPQxlEOT_A" target="_7OaU8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7QNEsEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__1177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__1179&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7QLPgUr4EemegPQxlEOT_A" name="To__Parent__StateMachine1__1179" guard="_7QW1sUr4EemegPQxlEOT_A" source="_7OaU8Er4EemegPQxlEOT_A" target="_7OWDgEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_7QW1sUr4EemegPQxlEOT_A" name="PME_checkDecesion1182">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7QW1sEr4EemegPQxlEOT_A" name="PME_checkDecesion1182">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1179&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s3bbYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3bbYkrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigNOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3hiAUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK__132">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s3d3oErDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3d3oUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3nooUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK__134">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7OaU8Er4EemegPQxlEOT_A" name="DecesionPoint__1133" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7OcKIEr4EemegPQxlEOT_A" name="Init__State__1134"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s31rEUrDEem2BZRQc2M93A" name="Debug__C__Init__ReadConfig__1">
              <connectionPoint xmi:id="_s33gQErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_7QZR8Er4EemegPQxlEOT_A" name="From__Parent__1184" kind="entryPoint"/>
              <connectionPoint xmi:id="_7QZ5AUr4EemegPQxlEOT_A" name="To__Parent__1186" kind="exitPoint"/>
              <region xmi:id="_s31rEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4OFkErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1" source="_s4LCQErDEem2BZRQc2M93A" target="_s33gQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4d9MErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1__162">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__end__trans__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4OFkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_7Qf_oEr4EemegPQxlEOT_A" name="Trans__Init__State__11891190" source="_7QcVQEr4EemegPQxlEOT_A" target="_7QagEkr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7RTQ4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1189&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1213&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1189&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1211&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1189&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7QgmsEr4EemegPQxlEOT_A" name="Trans__ex1191" source="_s33gQErDEem2BZRQc2M93A" target="_7QagEkr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7RQ0oEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1213&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1211&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7Qib4Er4EemegPQxlEOT_A" name="From__Debug__A__En__Init__ReadConfig__1__1192" source="_s4LCQErDEem2BZRQc2M93A" target="_7QagEkr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7RUfAEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1213&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1211&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7QjqAEr4EemegPQxlEOT_A" name="PME_Trig1193" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7Qk4IEr4EemegPQxlEOT_A" name="PME_Trig1194" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Qn7cEr4EemegPQxlEOT_A" name="PME_Trig1195" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7QqXsEr4EemegPQxlEOT_A" name="PME_Trig1196" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7Qsz8Er4EemegPQxlEOT_A" name="PME_Trig1197" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7QuCEEr4EemegPQxlEOT_A" name="PME_Trig1198" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7QvQMEr4EemegPQxlEOT_A" name="PME_Trig1199" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Q0IsEr4EemegPQxlEOT_A" name="PME_Trig1200" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Q1W0Er4EemegPQxlEOT_A" name="PME_Trig1201" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7Q3MAEr4EemegPQxlEOT_A" name="PME_Trig1202" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7Q4aIEr4EemegPQxlEOT_A" name="PME_Trig1203" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7Q5oQEr4EemegPQxlEOT_A" name="PME_Trig1204" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7Q-gwEr4EemegPQxlEOT_A" name="PME_Trig1205" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Q_H0Er4EemegPQxlEOT_A" name="PME_Trig1206" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7RA9AEr4EemegPQxlEOT_A" name="PME_Trig1207" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7RCyMEr4EemegPQxlEOT_A" name="PME_Trig1208" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7REAUEr4EemegPQxlEOT_A" name="PME_Trig1209" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7RIRwEr4EemegPQxlEOT_A" name="PME_Trig1210" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7RKG8Er4EemegPQxlEOT_A" name="To__Debug__A__En__Init__ReadConfig__1__1211" guard="_7RWUMUr4EemegPQxlEOT_A" source="_7QagEkr4EemegPQxlEOT_A" target="_s4LCQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7RWUMUr4EemegPQxlEOT_A" name="PME_checkDecesion1215">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7RWUMEr4EemegPQxlEOT_A" name="PME_checkDecesion1215">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Init__ReadConfig__1__1211&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7RL8IEr4EemegPQxlEOT_A" name="From__Parnet__StateMachine1__1212" source="_7QZR8Er4EemegPQxlEOT_A" target="_7QagEkr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7RNxUEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1213&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1211&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7RMjMEr4EemegPQxlEOT_A" name="To__Parent__StateMachine1__1213" guard="_7RVtIUr4EemegPQxlEOT_A" source="_7QagEkr4EemegPQxlEOT_A" target="_7QZ5AUr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_7RVtIUr4EemegPQxlEOT_A" name="PME_checkDecesion1214">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7RVtIEr4EemegPQxlEOT_A" name="PME_checkDecesion1214">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1213&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s4LCQErDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4LCQUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4WocUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1__156">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7QagEkr4EemegPQxlEOT_A" name="DecesionPoint__1188" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7QcVQEr4EemegPQxlEOT_A" name="Init__State__1189"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s5ZKQUrDEem2BZRQc2M93A" name="Debug__C__QueryConfig">
              <connectionPoint xmi:id="_s5aYYErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_7SzswEr4EemegPQxlEOT_A" name="From__Parent__1248" kind="entryPoint"/>
              <connectionPoint xmi:id="_7S2wEEr4EemegPQxlEOT_A" name="To__Parent__1250" kind="exitPoint"/>
              <region xmi:id="_s5ZKQkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_7S9dwEr4EemegPQxlEOT_A" name="Trans__Init__State__12531254" source="_7S7okEr4EemegPQxlEOT_A" target="_7S5MUEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7TxWEEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1253&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1253&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1276&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1253&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7S9dwUr4EemegPQxlEOT_A" name="Trans__en1255" source="_s5aYYErDEem2BZRQc2M93A" target="_7S5MUEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7T1ngEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1276&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7S-E0Er4EemegPQxlEOT_A" name="From__Debug__A__En__Running__1256" source="_s5t6YErDEem2BZRQc2M93A" target="_7S5MUEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7Tvg4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1276&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_7TBIIEr4EemegPQxlEOT_A" name="PME_Trig1257" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7TGAoEr4EemegPQxlEOT_A" name="PME_Trig1258" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7THOwEr4EemegPQxlEOT_A" name="PME_Trig1259" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7TJD8Er4EemegPQxlEOT_A" name="PME_Trig1260" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7TNVYEr4EemegPQxlEOT_A" name="PME_Trig1261" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7TOjgEr4EemegPQxlEOT_A" name="PME_Trig1262" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7TQYsEr4EemegPQxlEOT_A" name="PME_Trig1263" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7TRm0Er4EemegPQxlEOT_A" name="PME_Trig1264" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7TTcAEr4EemegPQxlEOT_A" name="PME_Trig1265" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7TXGYEr4EemegPQxlEOT_A" name="PME_Trig1266" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7TYUgEr4EemegPQxlEOT_A" name="PME_Trig1267" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7TawwEr4EemegPQxlEOT_A" name="PME_Trig1268" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7TdNAEr4EemegPQxlEOT_A" name="PME_Trig1269" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Tg3YEr4EemegPQxlEOT_A" name="PME_Trig1270" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7TiskEr4EemegPQxlEOT_A" name="PME_Trig1271" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_7TkhwEr4EemegPQxlEOT_A" name="PME_Trig1272" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7Tlv4Er4EemegPQxlEOT_A" name="PME_Trig1273" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7TnlEEr4EemegPQxlEOT_A" name="PME_Trig1274" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7TrPcEr4EemegPQxlEOT_A" name="PME_Trig1275" event="_5dslQEr4EemegPQxlEOT_A" port="_7GKX4Er4EemegPQxlEOT_A"/>
                </transition>
                <transition xmi:id="_7TsdkEr4EemegPQxlEOT_A" name="To__Debug__A__En__Running__1276" guard="_7T5R4Ur4EemegPQxlEOT_A" source="_7S5MUEr4EemegPQxlEOT_A" target="_s5t6YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7T5R4Ur4EemegPQxlEOT_A" name="PME_checkDecesion1280">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7T5R4Er4EemegPQxlEOT_A" name="PME_checkDecesion1280">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__1276&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7TtrsEr4EemegPQxlEOT_A" name="From__Parnet__StateMachine1__1277" source="_7SzswEr4EemegPQxlEOT_A" target="_7S5MUEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7T21oEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1276&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7TuSwEr4EemegPQxlEOT_A" name="To__Parent__StateMachine1__1278" guard="_7T4DwUr4EemegPQxlEOT_A" source="_7S5MUEr4EemegPQxlEOT_A" target="_7S2wEEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_7T4DwUr4EemegPQxlEOT_A" name="PME_checkDecesion1279">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7T4DwEr4EemegPQxlEOT_A" name="PME_checkDecesion1279">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1278&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s5t6YErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5t6YUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s57VwErDEem2BZRQc2M93A" name="Debug__A__En__Running__204">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7S5MUEr4EemegPQxlEOT_A" name="DecesionPoint__1252" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_7S7okEr4EemegPQxlEOT_A" name="Init__State__1253"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_7IPbgEr4EemegPQxlEOT_A" name="DecesionPoint__998" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_su-C8ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_su9b4ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>ConfigComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svWdcUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_svWdcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;AnnouncmentServerTimeout,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncmentServerTimeout!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncmentServerTimeout);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svdyMErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_svaH0ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;AnnouncmentServerTimeout&quot;==tempVarName){
    AnnouncmentServerTimeout=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sv86YErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_svrNkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7G7z8Ur4EemegPQxlEOT_A" name="loadHeap" specification="_7G7z8Er4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.AnnouncmentServerTimeout&quot;,this->AnnouncmentServerTimeout);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7G9pIUr4EemegPQxlEOT_A" name="unLoadHeap" specification="_7G9pIEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.AnnouncmentServerTimeout&quot;,&amp;this->AnnouncmentServerTimeout);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7HVckUr4EemegPQxlEOT_A" name="sendMessage" specification="_7HVckEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;ReplyReplicationMode&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyReplicationMode( boost::any_cast&lt;int>(message.payload[&quot;RunningMode&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyServerRole( boost::any_cast&lt;int>(message.payload[&quot;ServerRole&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;Shutdown&quot;) {
   if(message.payload.size()==0){
    ConfigComm.Shutdown().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;StartUp&quot;) {
   if(message.payload.size()==1){
    ConfigComm.StartUp( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyConfig&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyConfig( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyMasterId&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyMasterId( boost::any_cast&lt;int>(message.payload[&quot;MasterId&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;BIT&quot;) {
   if(message.payload.size()==0){
    ConfigComm.BIT().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7HZuAUr4EemegPQxlEOT_A" name="sendInternalMessage" specification="_7HZuAEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7H-80Ur4EemegPQxlEOT_A" name="initForPMD" specification="_7H-80Er4EemegPQxlEOT_A">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ENV::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ENV::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;FailureTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;BITTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;GeneralTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer1&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer2&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;configTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_su9b4ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_su-C8ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svWdcErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_svWdcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svaH0ErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_svdyMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svb9AErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svckEErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svdLIErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_svrNkErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sv86YErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svrNkUrDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svwtIErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svzJYErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv1loErDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv2MsErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv4B4ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv5QAUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv53EErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv7sQErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv8TUErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_7G7z8Er4EemegPQxlEOT_A" name="loadHeap" visibility="private" method="_7G7z8Ur4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_7G9pIEr4EemegPQxlEOT_A" name="unLoadHeap" visibility="private" method="_7G9pIUr4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_7HVckEr4EemegPQxlEOT_A" name="sendMessage" visibility="private" method="_7HVckUr4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_7HWDoEr4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_7HWqsEr4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_7HZuAEr4EemegPQxlEOT_A" name="sendInternalMessage" visibility="private" method="_7HZuAUr4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_7HdYYEr4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_7Hd_cEr4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_7H-80Er4EemegPQxlEOT_A" name="initForPMD" visibility="private" method="_7H-80Ur4EemegPQxlEOT_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Y0NjUAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_nk_BAAgzEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_aaXBwAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_v000cAgsEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_fXXuUAxwEeaB2MeL96fedA" memberEnd="_fXb_wAxwEeaB2MeL96fedA _fXcm0AxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_fXaKkAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_fXaxoAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_fXcm0AxwEeaB2MeL96fedA" name="env" type="_sMZ5EAgoEea_md0mpENoqg" association="_fXXuUAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_z1vioAggEea_md0mpENoqg" name="Hosts">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_wVFC0AghEea_md0mpENoqg" client="_z1vioAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4_oYIAghEea_md0mpENoqg" name="Host" isActive="true">
        <ownedAttribute xmi:id="_qKL_IAgnEea_md0mpENoqg" name="hostInfo" type="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_wp2QEAltEea_md0mpENoqg" name="hostConfig" type="_Y1UDYAg6Eea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_MFku4Ao-EeaGqPUk-4V4qQ" name="TimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_yqPtMgxwEeaB2MeL96fedA" name="hostinfo" type="_JesyoAgiEea_md0mpENoqg" aggregation="composite" association="_yqOfEAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_z8hNYQxwEeaB2MeL96fedA" name="configuration" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_z8f_QAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_dCa_wPMYEeauO5SNGpOV7w" name="logfile"/>
        <ownedAttribute xmi:id="_nU84IPMbEeauO5SNGpOV7w" name="ts">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IWYV4G6NEeSyDdTKostG4Q"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_G0bAoPMlEeauO5SNGpOV7w" name="messageID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
          <defaultValue xmi:type="uml:LiteralReal" xmi:id="_G0bAofMlEeauO5SNGpOV7w"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_xCGHkAgmEea_md0mpENoqg" name="Server" classifierBehavior="_lT4V0AlLEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_6zESYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-3KD0AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xByucAlLEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xB_iwAlLEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pQ6HcAnMEeaGqPUk-4V4qQ" name="ServerComm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etWXMAnOEeaGqPUk-4V4qQ" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_euWcwAnOEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_HIvrsApCEeaGqPUk-4V4qQ" name="Master" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_ZDrx0ApDEeaGqPUk-4V4qQ" name="KeepAliveTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Vj1U4ApFEeaGqPUk-4V4qQ" name="MasterAnnounceTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6YR3oApGEeaGqPUk-4V4qQ" name="KeepAliveTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ceg-8ApHEeaGqPUk-4V4qQ" name="KeepAliveTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Ceg-8QpHEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_N795sApHEeaGqPUk-4V4qQ" name="AnnouncementTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_YVMXUApHEeaGqPUk-4V4qQ" name="AnnouncementTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_YVMXUQpHEeaGqPUk-4V4qQ" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_855RMAs1EeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rmnI0OM8EeaTpaLNj-zYpw" name="Slave" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sxfygErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxhAoUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sxhnsErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxz7kErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx0ioErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx1JsErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx2X0ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_6gSqsEr4EemegPQxlEOT_A" name="dbgPortForServer" visibility="protected" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6gTRwEr4EemegPQxlEOT_A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_6gTRwUr4EemegPQxlEOT_A" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_lT4V0AlLEea_md0mpENoqg" name="ServerStateMachine">
          <region xmi:id="_lvCAwAlLEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_s7h4QErDEem2BZRQc2M93A" name="Debug__ServerFaliure__S" guard="_s7ifUUrDEem2BZRQc2M93A" source="_s7c_wErDEem2BZRQc2M93A" target="_s7eN4UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s7ifUUrDEem2BZRQc2M93A" name="Debug__GuardServerFaliure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s7ifUErDEem2BZRQc2M93A" name="Debug__GuardServerFaliure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7jGYErDEem2BZRQc2M93A" name="Debug__ServerFaliure__S__243">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServerFaliure__S&quot;,(char *)&quot;Debug__Path__ServerFaliure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7mwwErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7nX0ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange__246">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s7mwwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7ol8ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7p0EErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint__247">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7pNAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7rCMErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7rCMkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint__248">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7rCMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7sQUErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7sQUkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints__249">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7sQUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7s3YErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7s3YkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode__250">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s7s3YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7tecErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7vToErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg__251">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7tecUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uskErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9UA8ErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9UoAErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange__295">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s9UA8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9VPEErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9VPEkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint__296">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9VPEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9V2IErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9WdMErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint__297">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9V2IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9YSYErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9YSYkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints__298">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9YSYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9Y5cErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ZggErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode__299">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s9Y5cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9ZggUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9auoUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg__300">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9aHkErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9auoErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAlXYErDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAlXYkrDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange__407">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAlXYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAl-cErDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAl-ckrDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint__408">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAl-cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAmlgErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnMkErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint__409">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAmlgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAnzoErDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnzokrDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints__410">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAnzoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAoasErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAoaskrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode__411">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAoasUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tApBwErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAqP4UrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg__412">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tApBwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAqP4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEzJAErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEzwEUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange__550">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEzwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE0XIErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE0-MUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint__551">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE0-MErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE1lQErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2MUErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint__552">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE1lQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE2zYErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2zYkrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints__553">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE2zYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE3acErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE4BgUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode__554">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tE4BgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE4okErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE52sUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg__555">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE4okUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE52sErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFJHQUrDEem2BZRQc2M93A" name="Debug__BeSlave" source="_Rrrc0AlvEea_md0mpENoqg" target="_tFEOwErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFJHQkrDEem2BZRQc2M93A" name="Debug__BeSlave__559">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave&quot;,(char *)&quot;CheckConfig&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tF_b0ErDEem2BZRQc2M93A" name="Debug__ServiceRequest__S" guard="_tF_b0krDEem2BZRQc2M93A" source="_tF4HEErDEem2BZRQc2M93A" target="_tF7KYUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tF_b0krDEem2BZRQc2M93A" name="Debug__GuardServiceRequest">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tF_b0UrDEem2BZRQc2M93A" name="Debug__GuardServiceRequest">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGAp8ErDEem2BZRQc2M93A" name="Debug__ServiceRequest__S__589">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest__S&quot;,(char *)&quot;Debug__Path__ServiceRequest&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tGDtQErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGDtQkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange__592">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tGDtQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGE7YErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGE7YkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint__593">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGE7YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGFicErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGFickrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint__594">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGFicUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJgErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGJgkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints__595">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGGJgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJg0rDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGwkUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode__596">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tGGwkErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGHXoErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGIlwErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg__597">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGHXoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGHXokrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG6B0ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG6B0krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange__616">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tG6B0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG7P8ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG7P8krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint__617">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG7P8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG8eEErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG8eEkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint__618">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG8eEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9FIErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG9sMErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints__619">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG9FIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9sMUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG-TQErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode__620">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tG9sMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG-TQUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG_hYUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg__621">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG-6UErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG_hYErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_6jd6gEr4EemegPQxlEOT_A" name="Trans__Debug__Path__BeSlave485" source="_tFEOwErDEem2BZRQc2M93A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7E6asEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6jehkEr4EemegPQxlEOT_A" name="Trans__Init__State__484486" source="_6jUwkUr4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7FPx4Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__484&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__484&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6jfIoEr4EemegPQxlEOT_A" name="Trans__Debug__Path__MasterAnnounce487" source="_tEAe0ErDEem2BZRQc2M93A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7E07IEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6jzRsEr4EemegPQxlEOT_A" name="488" source="_tFEOwErDEem2BZRQc2M93A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7EduwEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6jzRsUr4EemegPQxlEOT_A" name="489" source="_Rrrc0AlvEea_md0mpENoqg" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7DsSsEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;CheckConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6jz4wEr4EemegPQxlEOT_A" name="490" source="_tF4HEErDEem2BZRQc2M93A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7Ej1YEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6jz4wUr4EemegPQxlEOT_A" name="491" source="_s7c_wErDEem2BZRQc2M93A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7FGn8Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6j0f0Er4EemegPQxlEOT_A" name="492" source="_tEAe0ErDEem2BZRQc2M93A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7Eot4Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6j1t8Er4EemegPQxlEOT_A" name="From__New__State__483__493" source="_6jUJgEr4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7ESvoEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__483&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__483&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_6j4KMEr4EemegPQxlEOT_A" name="PME_Trig494" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_6j5YUEr4EemegPQxlEOT_A" name="PME_Trig495" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_6j6mcEr4EemegPQxlEOT_A" name="PME_Trig496" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_6j7NgEr4EemegPQxlEOT_A" name="PME_Trig497" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_6j9CsEr4EemegPQxlEOT_A" name="PME_Trig498" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_6kEXcEr4EemegPQxlEOT_A" name="PME_Trig499" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_6kGzsEr4EemegPQxlEOT_A" name="PME_Trig500" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_6kIB0Er4EemegPQxlEOT_A" name="PME_Trig501" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_6kIo4Er4EemegPQxlEOT_A" name="PME_Trig502" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_6kKeEEr4EemegPQxlEOT_A" name="PME_Trig503" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_6kP9oEr4EemegPQxlEOT_A" name="PME_Trig504" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_6kQksEr4EemegPQxlEOT_A" name="PME_Trig505" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
              <trigger xmi:id="_6kRy0Er4EemegPQxlEOT_A" name="PME_Trig506" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_6kTA8Er4EemegPQxlEOT_A" name="PME_Trig507" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_6kWEQEr4EemegPQxlEOT_A" name="PME_Trig508" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_6ka8wEr4EemegPQxlEOT_A" name="PME_Trig509" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_6kbj0Er4EemegPQxlEOT_A" name="PME_Trig510" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_6kcx8Er4EemegPQxlEOT_A" name="PME_Trig511" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_6ki4kEr4EemegPQxlEOT_A" name="PME_Trig512" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_6kl74Er4EemegPQxlEOT_A" name="PME_Trig513" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_6knxEEr4EemegPQxlEOT_A" name="PME_Trig514" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_6kspkEr4EemegPQxlEOT_A" name="To__New__State__483__515" guard="_7Fb_I0r4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_6jUJgEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7Fb_I0r4EemegPQxlEOT_A" name="PME_checkDecesion997">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7Fb_Ikr4EemegPQxlEOT_A" name="PME_checkDecesion997">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__New__State__483__515&quot;,&quot;New__State__483&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6k1zgUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__ServiceRequest__517" guard="_7FVRcUr4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_6kzXQEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7FVRcUr4EemegPQxlEOT_A" name="PME_checkDecesion991">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7FVRcEr4EemegPQxlEOT_A" name="PME_checkDecesion991">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6k3osEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__ServiceRequest__519" source="_6k2akEr4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7E_6QEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6n2EMEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__purgeotherMessage__574" guard="_7FbYEUr4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_6n0PAEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7FbYEUr4EemegPQxlEOT_A" name="PME_checkDecesion995">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7FbYEEr4EemegPQxlEOT_A" name="PME_checkDecesion995">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6n2rQkr4EemegPQxlEOT_A" name="From__Substates__Debug__C__purgeotherMessage__576" source="_6n2rQEr4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7Eye4Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6o8QYEr4EemegPQxlEOT_A" name="Trans__ex607" source="_s7e08UrDEem2BZRQc2M93A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7EHwgEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6o9egUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__ServerFaliure__609" guard="_7FY70Ur4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_6o83cEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7FY70Ur4EemegPQxlEOT_A" name="PME_checkDecesion993">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7FY70Er4EemegPQxlEOT_A" name="PME_checkDecesion993">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6o-Fkkr4EemegPQxlEOT_A" name="From__Substates__Debug__C__ServerFaliure__611" source="_6o-FkEr4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7D8KUEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6qBOcUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__ExitPoint1__BeMaster__4__645" guard="_7FYUwUr4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_6qAnYEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7FYUwUr4EemegPQxlEOT_A" name="PME_checkDecesion992">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7FYUwEr4EemegPQxlEOT_A" name="PME_checkDecesion992">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6qB1gkr4EemegPQxlEOT_A" name="From__Substates__Debug__C__ExitPoint1__BeMaster__4__647" source="_6qB1gEr4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7Eu0gEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6rJP0Ur4EemegPQxlEOT_A" name="To__Substates__Debug__C__Recover__679" guard="_7FUDUUr4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_6rIowEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7FUDUUr4EemegPQxlEOT_A" name="PME_checkDecesion990">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7FUDUEr4EemegPQxlEOT_A" name="PME_checkDecesion990">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Recover__679&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6rLsEUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__Recover__681" source="_6rKd8Er4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7FLgcEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6sWwwUr4EemegPQxlEOT_A" name="To__Substates__Backup__713" guard="_7FaxAUr4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_6sU7kEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7FaxAUr4EemegPQxlEOT_A" name="PME_checkDecesion994">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7FaxAEr4EemegPQxlEOT_A" name="PME_checkDecesion994">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Backup__713&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6sX-4Er4EemegPQxlEOT_A" name="From__Substates__Backup__715" source="_6sXX0Er4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7FTcQEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_68Pm4Ur4EemegPQxlEOT_A" name="To__Substates__Debug__C__StandBy__CheckConfig__6__934" guard="_7Fb_IUr4EemegPQxlEOT_A" source="_6jSUUEr4EemegPQxlEOT_A" target="_68OYwEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_7Fb_IUr4EemegPQxlEOT_A" name="PME_checkDecesion996">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_7Fb_IEr4EemegPQxlEOT_A" name="PME_checkDecesion996">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_68SqMEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__StandBy__CheckConfig__6__936" source="_68QN8Er4EemegPQxlEOT_A" target="_6jSUUEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7EVy8Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__517&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__609&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__934&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;New__State__483&quot;,&quot;To__New__State__483__515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Rrrc0AlvEea_md0mpENoqg" name="CheckConfig" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_2g5S0ONBEeaTpaLNj-zYpw" name="Backup">
              <connectionPoint xmi:id="_887yAKozEeiNHY6qjNhZ4w" name="Pseudo2" kind="entryPoint"/>
              <connectionPoint xmi:id="_6sU7kEr4EemegPQxlEOT_A" name="From__Parent__712" kind="entryPoint"/>
              <connectionPoint xmi:id="_6sXX0Er4EemegPQxlEOT_A" name="To__Parent__714" kind="exitPoint"/>
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJjtMErDEem2BZRQc2M93A" name="Backup__681">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJkUQErDEem2BZRQc2M93A" name="Backup__682">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
              <region xmi:id="_ThAzEONCEeaTpaLNj-zYpw" name="Region1">
                <transition xmi:id="_s-xZgErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-yAkErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange__344">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s-xZgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-ynoErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-ynokrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint__345">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-ynoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-zOsErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-zOskrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint__346">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-zOsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-z1wErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-0c0ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints__347">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-z1wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-0c0UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-1D4ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode__348">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s-0c0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-1D4UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-2SAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg__349">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-1D4krDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8krDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_gZUErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hAYErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange__369">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s_gZUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_hncErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hnckrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint__370">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_hncUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_i1kErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_kDsErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint__371">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_i1kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_kqwErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_lR0ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints__372">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_kqwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_l44ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_mf8ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode__373">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s_l44UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_mf8UrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_nuEkrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg__374">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_nHAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nHAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB0GcErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB0GckrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange__450">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tB0GcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB0tgErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB1UkErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint__451">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB0tgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB17oErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB17okrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint__452">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB17oUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB2isErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB2iskrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints__453">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB2isUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB3JwErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB3w0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode__454">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tB3JwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB4X4ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB5mAErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg__455">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB4X4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4X4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDuyAErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDuyAkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange__512">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tDuyAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDvZEErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDwAIUrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint__513">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwAIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDwnMErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDxOQErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint__514">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwnMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDx1UErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDx1UkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints__515">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDx1UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDycYErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDycYkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode__516">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tDycYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDzDcErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD04oErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg__517">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDzqgErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tDzqgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tINCUErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__S" guard="_tINpYUrDEem2BZRQc2M93A" source="_tIHiwErDEem2BZRQc2M93A" target="_tIJ_AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tINpYUrDEem2BZRQc2M93A" name="Debug__GuardInitial1__RunAsSlave__7">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tINpYErDEem2BZRQc2M93A" name="Debug__GuardInitial1__RunAsSlave__7">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Initial1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIOQcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__S__658">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7__S&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIQFoErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIQssUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange__661">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tIQssErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIRTwErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIR60UrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint__662">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIR60ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tITI8ErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tITwAUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint__663">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tITwAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIUXEErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIU-IUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints__664">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIU-IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIU-IkrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIVlMUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode__665">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tIVlMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIWMQErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIYBcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg__666">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIWzUErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIWzUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6seFgEr4EemegPQxlEOT_A" name="Trans__Pseudo2719" source="_887yAKozEeiNHY6qjNhZ4w" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_65Lr0Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6seskEr4EemegPQxlEOT_A" name="Trans__Init__State__718720" source="_6sZ0EEr4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_65ZuQEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__718&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__718&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__718&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__718&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__718&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__718&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__718&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__718&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6seskUr4EemegPQxlEOT_A" name="Trans__Debug__Path__backtoslave721" source="_s_WBQErDEem2BZRQc2M93A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_639j0Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6sukMEr4EemegPQxlEOT_A" name="722" source="_tIHiwErDEem2BZRQc2M93A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_67YEMEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6sukMUr4EemegPQxlEOT_A" name="723" source="_s_WBQErDEem2BZRQc2M93A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_644w4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6svyUEr4EemegPQxlEOT_A" name="From__New__State__717__724" source="_6sZNAEr4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_64HU0Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__717&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__717&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__717&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__717&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__717&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__717&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__717&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__717&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6szcsEr4EemegPQxlEOT_A" name="PME_Trig725" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6s2gAEr4EemegPQxlEOT_A" name="PME_Trig726" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6s3uIEr4EemegPQxlEOT_A" name="PME_Trig727" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6s48QEr4EemegPQxlEOT_A" name="PME_Trig728" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6s7_kEr4EemegPQxlEOT_A" name="PME_Trig729" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6tA4EEr4EemegPQxlEOT_A" name="PME_Trig730" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6tCGMEr4EemegPQxlEOT_A" name="PME_Trig731" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6tDUUEr4EemegPQxlEOT_A" name="PME_Trig732" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6tGXoEr4EemegPQxlEOT_A" name="PME_Trig733" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_6tHlwEr4EemegPQxlEOT_A" name="PME_Trig734" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6tIz4Er4EemegPQxlEOT_A" name="PME_Trig735" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6tL3MEr4EemegPQxlEOT_A" name="PME_Trig736" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6tQvsEr4EemegPQxlEOT_A" name="PME_Trig737" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6tR90Er4EemegPQxlEOT_A" name="PME_Trig738" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6tTzAEr4EemegPQxlEOT_A" name="PME_Trig739" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6tYEcEr4EemegPQxlEOT_A" name="PME_Trig740" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6tZSkEr4EemegPQxlEOT_A" name="PME_Trig741" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6tbHwEr4EemegPQxlEOT_A" name="PME_Trig742" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6tc88Er4EemegPQxlEOT_A" name="PME_Trig743" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6thOYEr4EemegPQxlEOT_A" name="PME_Trig744" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6tkRsEr4EemegPQxlEOT_A" name="PME_Trig745" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6tpxQEr4EemegPQxlEOT_A" name="To__New__State__717__746" guard="_67y68Ur4EemegPQxlEOT_A" source="_6sX-4Ur4EemegPQxlEOT_A" target="_6sZNAEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_67y68Ur4EemegPQxlEOT_A" name="PME_checkDecesion927">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_67y68Er4EemegPQxlEOT_A" name="PME_checkDecesion927">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__New__State__717__746&quot;,&quot;New__State__717&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6trmcEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__backtoslave1__748" guard="_675ooEr4EemegPQxlEOT_A" source="_6sX-4Ur4EemegPQxlEOT_A" target="_6tqYUEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_675ooEr4EemegPQxlEOT_A" name="PME_checkDecesion928">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_675BkEr4EemegPQxlEOT_A" name="PME_checkDecesion928">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave1__748&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6tsNgUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__backtoslave1__750" source="_6trmcUr4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_67vQkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6vfkUUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__Initial1__RunAsSlave__7__783" guard="_68Gc8Ur4EemegPQxlEOT_A" source="_6sX-4Ur4EemegPQxlEOT_A" target="_6ve9QEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_68Gc8Ur4EemegPQxlEOT_A" name="PME_checkDecesion931">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_68Gc8Er4EemegPQxlEOT_A" name="PME_checkDecesion931">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6vgycUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__Initial1__RunAsSlave__7__785" source="_6vgLYEr4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_63tFIEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6xcFEEr4EemegPQxlEOT_A" name="Trans__ex817" source="_s-rS4UrDEem2BZRQc2M93A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_66deMEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6xfvcEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__NokeepAlive__819" guard="_67_IMEr4EemegPQxlEOT_A" source="_6sX-4Ur4EemegPQxlEOT_A" target="_6xcsIEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_67_IMEr4EemegPQxlEOT_A" name="PME_checkDecesion929">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_67-hIEr4EemegPQxlEOT_A" name="PME_checkDecesion929">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6xkA4Er4EemegPQxlEOT_A" name="From__Substates__Debug__C__NokeepAlive__821" source="_6xhkoEr4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_65w6oEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6zghoEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__KeepAliveMsg__854" guard="_68EAsUr4EemegPQxlEOT_A" source="_6sX-4Ur4EemegPQxlEOT_A" target="_6zescEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_68EAsUr4EemegPQxlEOT_A" name="PME_checkDecesion930">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_68EAsEr4EemegPQxlEOT_A" name="PME_checkDecesion930">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6zkMAUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__KeepAliveMsg__856" source="_6ziW0Er4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_67JasEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_61CysEr4EemegPQxlEOT_A" name="Trans__ex888" source="_s_YdgUrDEem2BZRQc2M93A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_64ehMEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_61DZwUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__backtoslave__890" guard="_67xFwUr4EemegPQxlEOT_A" source="_6sX-4Ur4EemegPQxlEOT_A" target="_61CysUr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_67xFwUr4EemegPQxlEOT_A" name="PME_checkDecesion926">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_67xFwEr4EemegPQxlEOT_A" name="PME_checkDecesion926">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave__890&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_61EA0kr4EemegPQxlEOT_A" name="From__Substates__Debug__C__backtoslave__892" source="_61EA0Er4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_66BZUEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_63K5oEr4EemegPQxlEOT_A" name="From__Parnet__ServerStateMachine__924" source="_6sU7kEr4EemegPQxlEOT_A" target="_6sX-4Ur4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_66zccEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;New__State__717&quot;,&quot;To__New__State__717__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__748&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__854&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__783&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__925&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_63Mu0Er4EemegPQxlEOT_A" name="To__Parent__ServerStateMachine__925" guard="_68I5MUr4EemegPQxlEOT_A" source="_6sX-4Ur4EemegPQxlEOT_A" target="_6sXX0Er4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_68I5MUr4EemegPQxlEOT_A" name="PME_checkDecesion932">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_68I5MEr4EemegPQxlEOT_A" name="PME_checkDecesion932">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__925&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s-pdsUrDEem2BZRQc2M93A" name="Debug__C__NokeepAlive">
                  <connectionPoint xmi:id="_s-rS4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_6xcsIEr4EemegPQxlEOT_A" name="From__Parent__818" kind="entryPoint"/>
                  <connectionPoint xmi:id="_6xhkoEr4EemegPQxlEOT_A" name="To__Parent__820" kind="exitPoint"/>
                  <region xmi:id="_s-pdskrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_6xtK0Er4EemegPQxlEOT_A" name="Trans__ex824" source="_s-rS4UrDEem2BZRQc2M93A" target="_6xkA4Ur4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6zEcwEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__848&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__850&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6xtx4Er4EemegPQxlEOT_A" name="Trans__Init__State__823825" source="_6xl2EEr4EemegPQxlEOT_A" target="_6xkA4Ur4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6zHgEEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__823&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__848&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__823&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__850&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__823&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6xvAAEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__NokeepAlive__826" source="_s-58YErDEem2BZRQc2M93A" target="_6xkA4Ur4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6zSfMEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__848&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__850&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_6xz4gEr4EemegPQxlEOT_A" name="PME_Trig827" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6x3i4Er4EemegPQxlEOT_A" name="PME_Trig828" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6x4xAEr4EemegPQxlEOT_A" name="PME_Trig829" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6x8bYEr4EemegPQxlEOT_A" name="PME_Trig830" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6yB68Er4EemegPQxlEOT_A" name="PME_Trig831" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6yDJEEr4EemegPQxlEOT_A" name="PME_Trig832" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_6yE-QEr4EemegPQxlEOT_A" name="PME_Trig833" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6yLE4Er4EemegPQxlEOT_A" name="PME_Trig834" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6yRykEr4EemegPQxlEOT_A" name="PME_Trig835" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_6yVc8Er4EemegPQxlEOT_A" name="PME_Trig836" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6yWrEEr4EemegPQxlEOT_A" name="PME_Trig837" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_6yX5MEr4EemegPQxlEOT_A" name="PME_Trig838" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                      <trigger xmi:id="_6ycKoEr4EemegPQxlEOT_A" name="PME_Trig839" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6yi4UEr4EemegPQxlEOT_A" name="PME_Trig840" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6yktgEr4EemegPQxlEOT_A" name="PME_Trig841" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6ymisEr4EemegPQxlEOT_A" name="PME_Trig842" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6yo-8Er4EemegPQxlEOT_A" name="PME_Trig843" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_6yrbMEr4EemegPQxlEOT_A" name="PME_Trig844" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_6yw6wEr4EemegPQxlEOT_A" name="PME_Trig845" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6yz-EEr4EemegPQxlEOT_A" name="PME_Trig846" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_6y1zQEr4EemegPQxlEOT_A" name="PME_Trig847" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_6y3ocEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__NokeepAlive__848" guard="_6zbCEUr4EemegPQxlEOT_A" source="_6xkA4Ur4EemegPQxlEOT_A" target="_s-58YErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_6zbCEUr4EemegPQxlEOT_A" name="PME_checkDecesion851">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6zbCEEr4EemegPQxlEOT_A" name="PME_checkDecesion851">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NokeepAlive__848&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_6y_kQEr4EemegPQxlEOT_A" name="From__Parnet__Backup__849" source="_6xcsIEr4EemegPQxlEOT_A" target="_6xkA4Ur4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6zabAEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__848&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__850&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6zBZcEr4EemegPQxlEOT_A" name="To__Parent__Backup__850" guard="_6zdeUUr4EemegPQxlEOT_A" source="_6xkA4Ur4EemegPQxlEOT_A" target="_6xhkoEr4EemegPQxlEOT_A">
                      <ownedRule xmi:id="_6zdeUUr4EemegPQxlEOT_A" name="PME_checkDecesion852">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6zdeUEr4EemegPQxlEOT_A" name="PME_checkDecesion852">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__850&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s-58YErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-6jcErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_E7gUrDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive__351">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6xkA4Ur4EemegPQxlEOT_A" name="DecesionPoint__822" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6xl2EEr4EemegPQxlEOT_A" name="Init__State__823"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_WBQErDEem2BZRQc2M93A" name="Debug__Path__backtoslave" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s_WoUUrDEem2BZRQc2M93A" name="Debug__C__backtoslave">
                  <connectionPoint xmi:id="_s_YdgUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_61CysUr4EemegPQxlEOT_A" name="From__Parent__889" kind="entryPoint"/>
                  <connectionPoint xmi:id="_61EA0Er4EemegPQxlEOT_A" name="To__Parent__891" kind="exitPoint"/>
                  <region xmi:id="_s_XPYErDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_61JgYEr4EemegPQxlEOT_A" name="Trans__Init__State__894895" source="_61FO8Ur4EemegPQxlEOT_A" target="_61En4Er4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_62_6gEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__894&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__921&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__894&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__919&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__894&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_61LVkEr4EemegPQxlEOT_A" name="Trans__ex896" source="_s_YdgUrDEem2BZRQc2M93A" target="_61En4Er4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_62aEoEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__921&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__919&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_61PnAEr4EemegPQxlEOT_A" name="From__Debug__A__Ac__backtoslave__897" source="_s_qxYErDEem2BZRQc2M93A" target="_61En4Er4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_62u0wEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__921&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__919&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_61T4cEr4EemegPQxlEOT_A" name="PME_Trig898" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_61b0QEr4EemegPQxlEOT_A" name="PME_Trig899" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_61dpcEr4EemegPQxlEOT_A" name="PME_Trig900" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_61hT0Er4EemegPQxlEOT_A" name="PME_Trig901" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_61ih8Er4EemegPQxlEOT_A" name="PME_Trig902" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_61jwEEr4EemegPQxlEOT_A" name="PME_Trig903" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_61llQEr4EemegPQxlEOT_A" name="PME_Trig904" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_61qdwEr4EemegPQxlEOT_A" name="PME_Trig905" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_61s6AEr4EemegPQxlEOT_A" name="PME_Trig906" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_61uIIEr4EemegPQxlEOT_A" name="PME_Trig907" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_61xLcEr4EemegPQxlEOT_A" name="PME_Trig908" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_613SEEr4EemegPQxlEOT_A" name="PME_Trig909" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                      <trigger xmi:id="_615uUEr4EemegPQxlEOT_A" name="PME_Trig910" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_619YsEr4EemegPQxlEOT_A" name="PME_Trig911" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_62AcAEr4EemegPQxlEOT_A" name="PME_Trig912" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_62DfUEr4EemegPQxlEOT_A" name="PME_Trig913" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_62EGYEr4EemegPQxlEOT_A" name="PME_Trig914" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_62FUgEr4EemegPQxlEOT_A" name="PME_Trig915" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_62GioEr4EemegPQxlEOT_A" name="PME_Trig916" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_62HwwEr4EemegPQxlEOT_A" name="PME_Trig917" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_62KNAEr4EemegPQxlEOT_A" name="PME_Trig918" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_62LbIEr4EemegPQxlEOT_A" name="To__Debug__A__Ac__backtoslave__919" guard="_63GBIUr4EemegPQxlEOT_A" source="_61En4Er4EemegPQxlEOT_A" target="_s_qxYErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_63GBIUr4EemegPQxlEOT_A" name="PME_checkDecesion923">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_63GBIEr4EemegPQxlEOT_A" name="PME_checkDecesion923">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave__919&quot;,&quot;Debug__A__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_62MCMEr4EemegPQxlEOT_A" name="From__Parnet__Backup__920" source="_61CysUr4EemegPQxlEOT_A" target="_61En4Er4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_62kcsEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__921&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__919&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_62NQUEr4EemegPQxlEOT_A" name="To__Parent__Backup__921" guard="_63C90Ur4EemegPQxlEOT_A" source="_61En4Er4EemegPQxlEOT_A" target="_61EA0Er4EemegPQxlEOT_A">
                      <ownedRule xmi:id="_63C90Ur4EemegPQxlEOT_A" name="PME_checkDecesion922">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_63C90Er4EemegPQxlEOT_A" name="PME_checkDecesion922">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__921&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s_qxYErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qxYUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_ytMUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave__376">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_61En4Er4EemegPQxlEOT_A" name="DecesionPoint__893" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_61FO8Ur4EemegPQxlEOT_A" name="Init__State__894"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBrjkUrDEem2BZRQc2M93A" name="Debug__C__KeepAliveMsg">
                  <connectionPoint xmi:id="_tBsxsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_6zescEr4EemegPQxlEOT_A" name="From__Parent__853" kind="entryPoint"/>
                  <connectionPoint xmi:id="_6ziW0Er4EemegPQxlEOT_A" name="To__Parent__855" kind="exitPoint"/>
                  <region xmi:id="_tBrjkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_6zn2YEr4EemegPQxlEOT_A" name="Trans__Init__State__858859" source="_6zmoQEr4EemegPQxlEOT_A" target="_6zkzEEr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_60xF4Er4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__858&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__858&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__858&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6zodcEr4EemegPQxlEOT_A" name="Trans__en860" source="_tBsxsUrDEem2BZRQc2M93A" target="_6zkzEEr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6096MEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6zrgwEr4EemegPQxlEOT_A" name="From__Debug__A__Ac__KeepAliveMsg__861" source="_tB-egErDEem2BZRQc2M93A" target="_6zkzEEr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_606P0Er4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_6zt9AEr4EemegPQxlEOT_A" name="PME_Trig862" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6z0qsEr4EemegPQxlEOT_A" name="PME_Trig863" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6z48IEr4EemegPQxlEOT_A" name="PME_Trig864" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6z9NkEr4EemegPQxlEOT_A" name="PME_Trig865" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_60BfAEr4EemegPQxlEOT_A" name="PME_Trig866" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_60CtIEr4EemegPQxlEOT_A" name="PME_Trig867" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_60FwcEr4EemegPQxlEOT_A" name="PME_Trig868" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_60GXgEr4EemegPQxlEOT_A" name="PME_Trig869" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_60HloEr4EemegPQxlEOT_A" name="PME_Trig870" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_60L3EEr4EemegPQxlEOT_A" name="PME_Trig871" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_60NFMEr4EemegPQxlEOT_A" name="PME_Trig872" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_60PhcEr4EemegPQxlEOT_A" name="PME_Trig873" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                      <trigger xmi:id="_60QvkEr4EemegPQxlEOT_A" name="PME_Trig874" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_60R9sEr4EemegPQxlEOT_A" name="PME_Trig875" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_60YrYEr4EemegPQxlEOT_A" name="PME_Trig876" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_60busEr4EemegPQxlEOT_A" name="PME_Trig877" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_60fZEEr4EemegPQxlEOT_A" name="PME_Trig878" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_60icYEr4EemegPQxlEOT_A" name="PME_Trig879" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_60kRkEr4EemegPQxlEOT_A" name="PME_Trig880" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_60lfsEr4EemegPQxlEOT_A" name="PME_Trig881" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_60mt0Er4EemegPQxlEOT_A" name="PME_Trig882" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_60sNYEr4EemegPQxlEOT_A" name="To__Debug__A__Ac__KeepAliveMsg__883" guard="_61A9gUr4EemegPQxlEOT_A" source="_6zkzEEr4EemegPQxlEOT_A" target="_tB-egErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_61A9gUr4EemegPQxlEOT_A" name="PME_checkDecesion887">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_61A9gEr4EemegPQxlEOT_A" name="PME_checkDecesion887">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAliveMsg__883&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_60upoEr4EemegPQxlEOT_A" name="From__Parnet__Backup__884" source="_6zescEr4EemegPQxlEOT_A" target="_6zkzEEr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_603zkEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_60upoUr4EemegPQxlEOT_A" name="To__Parent__Backup__885" guard="_61AWcUr4EemegPQxlEOT_A" source="_6zkzEEr4EemegPQxlEOT_A" target="_6ziW0Er4EemegPQxlEOT_A">
                      <ownedRule xmi:id="_61AWcUr4EemegPQxlEOT_A" name="PME_checkDecesion886">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_61AWcEr4EemegPQxlEOT_A" name="PME_checkDecesion886">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__885&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tB-egErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB_FkErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCL54UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg__458">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6zkzEEr4EemegPQxlEOT_A" name="DecesionPoint__857" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6zmoQEr4EemegPQxlEOT_A" name="Init__State__858"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tDjy4UrDEem2BZRQc2M93A" name="Debug__C__backtoslave1">
                  <connectionPoint xmi:id="_tDlBAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_6tqYUEr4EemegPQxlEOT_A" name="From__Parent__747" kind="entryPoint"/>
                  <connectionPoint xmi:id="_6trmcUr4EemegPQxlEOT_A" name="To__Parent__749" kind="exitPoint"/>
                  <region xmi:id="_tDjy4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_6t0JUEr4EemegPQxlEOT_A" name="Trans__Init__State__752753" source="_6ttboEr4EemegPQxlEOT_A" target="_6tsNgkr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6vbS4Er4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__752&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__752&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__752&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6t0JUUr4EemegPQxlEOT_A" name="Trans__en754" source="_tDlBAErDEem2BZRQc2M93A" target="_6tsNgkr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6vSwAEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6t1XcEr4EemegPQxlEOT_A" name="From__Debug__A__Ac__backtoslave1__755" source="_tD5KEErDEem2BZRQc2M93A" target="_6tsNgkr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6vNQcEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_6t1-gEr4EemegPQxlEOT_A" name="PME_Trig756" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6t8sMEr4EemegPQxlEOT_A" name="PME_Trig757" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6t_IcEr4EemegPQxlEOT_A" name="PME_Trig758" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6uA9oEr4EemegPQxlEOT_A" name="PME_Trig759" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6uDZ4Er4EemegPQxlEOT_A" name="PME_Trig760" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6uF2IEr4EemegPQxlEOT_A" name="PME_Trig761" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_6uQOMEr4EemegPQxlEOT_A" name="PME_Trig762" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6uTRgEr4EemegPQxlEOT_A" name="PME_Trig763" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6uVGsEr4EemegPQxlEOT_A" name="PME_Trig764" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_6uZ_MEr4EemegPQxlEOT_A" name="PME_Trig765" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6udpkEr4EemegPQxlEOT_A" name="PME_Trig766" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_6ufewEr4EemegPQxlEOT_A" name="PME_Trig767" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                      <trigger xmi:id="_6uiiEEr4EemegPQxlEOT_A" name="PME_Trig768" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6ukXQEr4EemegPQxlEOT_A" name="PME_Trig769" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6uthMEr4EemegPQxlEOT_A" name="PME_Trig770" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6uxyoEr4EemegPQxlEOT_A" name="PME_Trig771" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6u018Er4EemegPQxlEOT_A" name="PME_Trig772" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_6u68kEr4EemegPQxlEOT_A" name="PME_Trig773" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_6u8xwEr4EemegPQxlEOT_A" name="PME_Trig774" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6u_1EEr4EemegPQxlEOT_A" name="PME_Trig775" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_6vBqQEr4EemegPQxlEOT_A" name="PME_Trig776" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_6vIX8Er4EemegPQxlEOT_A" name="To__Debug__A__Ac__backtoslave1__777" guard="_6vb58Ur4EemegPQxlEOT_A" source="_6tsNgkr4EemegPQxlEOT_A" target="_tD5KEErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_6vb58Ur4EemegPQxlEOT_A" name="PME_checkDecesion780">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6vb58Er4EemegPQxlEOT_A" name="PME_checkDecesion780">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave1__777&quot;,&quot;Debug__A__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_6vK0MEr4EemegPQxlEOT_A" name="From__Parnet__Backup__778" source="_6tqYUEr4EemegPQxlEOT_A" target="_6tsNgkr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6vVzUEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6vLbQEr4EemegPQxlEOT_A" name="To__Parent__Backup__779" guard="_6vdvIUr4EemegPQxlEOT_A" source="_6tsNgkr4EemegPQxlEOT_A" target="_6trmcUr4EemegPQxlEOT_A">
                      <ownedRule xmi:id="_6vdvIUr4EemegPQxlEOT_A" name="PME_checkDecesion781">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6vdvIEr4EemegPQxlEOT_A" name="PME_checkDecesion781">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__779&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tD5KEErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD5KEUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6tsNgkr4EemegPQxlEOT_A" name="DecesionPoint__751" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6ttboEr4EemegPQxlEOT_A" name="Init__State__752"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tIHiwErDEem2BZRQc2M93A" name="Debug__Path__Initial1__RunAsSlave__7" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tIIw4UrDEem2BZRQc2M93A" name="Debug__C__Initial1__RunAsSlave__7">
                  <connectionPoint xmi:id="_tIJ_AErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_6ve9QEr4EemegPQxlEOT_A" name="From__Parent__782" kind="entryPoint"/>
                  <connectionPoint xmi:id="_6vgLYEr4EemegPQxlEOT_A" name="To__Parent__784" kind="exitPoint"/>
                  <region xmi:id="_tIIw4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_6vpVUEr4EemegPQxlEOT_A" name="Trans__en788" source="_tIJ_AErDEem2BZRQc2M93A" target="_6vgyckr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6xZo0Er4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__812&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6vpVUUr4EemegPQxlEOT_A" name="Trans__Init__State__787789" source="_6vlq8Er4EemegPQxlEOT_A" target="_6vgyckr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6xWlgEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__787&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__787&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__812&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__787&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6vqjcEr4EemegPQxlEOT_A" name="From__Debug__A__En__Initial1__RunAsSlave__7__790" source="_tIc58ErDEem2BZRQc2M93A" target="_6vgyckr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6xUJQEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__812&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_6vrxkEr4EemegPQxlEOT_A" name="PME_Trig791" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6vxRIEr4EemegPQxlEOT_A" name="PME_Trig792" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6vztYEr4EemegPQxlEOT_A" name="PME_Trig793" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6v07gEr4EemegPQxlEOT_A" name="PME_Trig794" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6v2JoEr4EemegPQxlEOT_A" name="PME_Trig795" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6v50AEr4EemegPQxlEOT_A" name="PME_Trig796" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_6v-sgEr4EemegPQxlEOT_A" name="PME_Trig797" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6wC98Er4EemegPQxlEOT_A" name="PME_Trig798" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6wK5wEr4EemegPQxlEOT_A" name="PME_Trig799" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_6wS1kEr4EemegPQxlEOT_A" name="PME_Trig800" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6wVR0Er4EemegPQxlEOT_A" name="PME_Trig801" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_6witMEr4EemegPQxlEOT_A" name="PME_Trig802" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                      <trigger xmi:id="_6wlwgEr4EemegPQxlEOT_A" name="PME_Trig803" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6wnlsEr4EemegPQxlEOT_A" name="PME_Trig804" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_6wqB8Er4EemegPQxlEOT_A" name="PME_Trig805" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6w1BEEr4EemegPQxlEOT_A" name="PME_Trig806" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_6w22QEr4EemegPQxlEOT_A" name="PME_Trig807" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_6w884Er4EemegPQxlEOT_A" name="PME_Trig808" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_6w_ZIEr4EemegPQxlEOT_A" name="PME_Trig809" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_6xBOUEr4EemegPQxlEOT_A" name="PME_Trig810" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_6xE4sEr4EemegPQxlEOT_A" name="PME_Trig811" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_6xJxMEr4EemegPQxlEOT_A" name="To__Debug__A__En__Initial1__RunAsSlave__7__812" guard="_6xa28Ur4EemegPQxlEOT_A" source="_6vgyckr4EemegPQxlEOT_A" target="_tIc58ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_6xa28Ur4EemegPQxlEOT_A" name="PME_checkDecesion816">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6xa28Er4EemegPQxlEOT_A" name="PME_checkDecesion816">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Initial1__RunAsSlave__7__812&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_6xK_UEr4EemegPQxlEOT_A" name="From__Parnet__Backup__813" source="_6ve9QEr4EemegPQxlEOT_A" target="_6vgyckr4EemegPQxlEOT_A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6xM0gEr4EemegPQxlEOT_A">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__812&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_6xK_UUr4EemegPQxlEOT_A" name="To__Parent__Backup__814" guard="_6xaP4Ur4EemegPQxlEOT_A" source="_6vgyckr4EemegPQxlEOT_A" target="_6vgLYEr4EemegPQxlEOT_A">
                      <ownedRule xmi:id="_6xaP4Ur4EemegPQxlEOT_A" name="PME_checkDecesion815">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_6xaP4Er4EemegPQxlEOT_A" name="PME_checkDecesion815">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__814&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tIc58ErDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIc58UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tImD4UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7__669">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6vgyckr4EemegPQxlEOT_A" name="DecesionPoint__786" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_6vlq8Er4EemegPQxlEOT_A" name="Init__State__787"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6sX-4Ur4EemegPQxlEOT_A" name="DecesionPoint__716" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_6sZNAEr4EemegPQxlEOT_A" name="New__State__717"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6sZ0EEr4EemegPQxlEOT_A" name="Init__State__718"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s7c_wErDEem2BZRQc2M93A" name="Debug__Path__ServerFaliure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s7dm0UrDEem2BZRQc2M93A" name="Debug__C__ServerFaliure">
              <connectionPoint xmi:id="_s7eN4UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s7e08UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_6o83cEr4EemegPQxlEOT_A" name="From__Parent__608" kind="entryPoint"/>
              <connectionPoint xmi:id="_6o-FkEr4EemegPQxlEOT_A" name="To__Parent__610" kind="exitPoint"/>
              <region xmi:id="_s7dm0krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6pCXAEr4EemegPQxlEOT_A" name="Trans__Init__State__613614" source="_6o_TsEr4EemegPQxlEOT_A" target="_6o-soEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6pyk8Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__613&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__613&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__639&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__613&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6pDlIEr4EemegPQxlEOT_A" name="Trans__en615" source="_s7eN4UrDEem2BZRQc2M93A" target="_6o-soEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6p_ZQEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__639&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6pEMMEr4EemegPQxlEOT_A" name="Trans__ex616" source="_s7e08UrDEem2BZRQc2M93A" target="_6o-soEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6p22YEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__639&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6pFaUEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__ServerFaliure__617" source="_s70MIErDEem2BZRQc2M93A" target="_6o-soEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6p4rkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__639&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6pGBYEr4EemegPQxlEOT_A" name="PME_Trig618" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6pH2kEr4EemegPQxlEOT_A" name="PME_Trig619" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6pJEsEr4EemegPQxlEOT_A" name="PME_Trig620" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6pKS0Er4EemegPQxlEOT_A" name="PME_Trig621" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6pMvEEr4EemegPQxlEOT_A" name="PME_Trig622" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6pPLUEr4EemegPQxlEOT_A" name="PME_Trig623" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6pRAgEr4EemegPQxlEOT_A" name="PME_Trig624" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6pSOoEr4EemegPQxlEOT_A" name="PME_Trig625" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6pTcwEr4EemegPQxlEOT_A" name="PME_Trig626" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_6pUq4Er4EemegPQxlEOT_A" name="PME_Trig627" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6pYVQEr4EemegPQxlEOT_A" name="PME_Trig628" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6paKcEr4EemegPQxlEOT_A" name="PME_Trig629" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6pgREEr4EemegPQxlEOT_A" name="PME_Trig630" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6phfMEr4EemegPQxlEOT_A" name="PME_Trig631" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6piGQEr4EemegPQxlEOT_A" name="PME_Trig632" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6pjUYEr4EemegPQxlEOT_A" name="PME_Trig633" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6plJkEr4EemegPQxlEOT_A" name="PME_Trig634" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6pmXsEr4EemegPQxlEOT_A" name="PME_Trig635" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6pnl0Er4EemegPQxlEOT_A" name="PME_Trig636" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6poz8Er4EemegPQxlEOT_A" name="PME_Trig637" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6ppbAEr4EemegPQxlEOT_A" name="PME_Trig638" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6prQMEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__ServerFaliure__639" guard="_6qAAU0r4EemegPQxlEOT_A" source="_6o-soEr4EemegPQxlEOT_A" target="_s70MIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6qAAU0r4EemegPQxlEOT_A" name="PME_checkDecesion643">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6qAAUkr4EemegPQxlEOT_A" name="PME_checkDecesion643">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServerFaliure__639&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6pwIsEr4EemegPQxlEOT_A" name="From__Parnet__ServerStateMachine__640" source="_6o83cEr4EemegPQxlEOT_A" target="_6o-soEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6p9kEEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__639&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6pxW0Er4EemegPQxlEOT_A" name="To__Parent__ServerStateMachine__641" guard="_6qAAUUr4EemegPQxlEOT_A" source="_6o-soEr4EemegPQxlEOT_A" target="_6o-FkEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6qAAUUr4EemegPQxlEOT_A" name="PME_checkDecesion642">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6qAAUEr4EemegPQxlEOT_A" name="PME_checkDecesion642">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__641&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s70MIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s70MIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8AZYErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure__253">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6o-soEr4EemegPQxlEOT_A" name="DecesionPoint__612" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6o_TsEr4EemegPQxlEOT_A" name="Init__State__613"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s9K3AUrDEem2BZRQc2M93A" name="Debug__C__purgeotherMessage">
              <connectionPoint xmi:id="_6n0PAEr4EemegPQxlEOT_A" name="From__Parent__573" kind="entryPoint"/>
              <connectionPoint xmi:id="_6n2rQEr4EemegPQxlEOT_A" name="To__Parent__575" kind="exitPoint"/>
              <region xmi:id="_s9K3AkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6n5ukEr4EemegPQxlEOT_A" name="Trans__Init__State__578579" source="_6n4gcEr4EemegPQxlEOT_A" target="_6n3SUEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6o1isEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__578&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__578&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__604&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__578&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6n68sEr4EemegPQxlEOT_A" name="From__Debug__B__Ex__Failure__580" source="_s9dx8ErDEem2BZRQc2M93A" target="_6n3SUEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6o0UkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__604&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6oEGoEr4EemegPQxlEOT_A" name="PME_Trig581" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6oGi4Er4EemegPQxlEOT_A" name="PME_Trig582" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6oHxAEr4EemegPQxlEOT_A" name="PME_Trig583" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6oKNQEr4EemegPQxlEOT_A" name="PME_Trig584" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6oLbYEr4EemegPQxlEOT_A" name="PME_Trig585" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6oMpgEr4EemegPQxlEOT_A" name="PME_Trig586" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6oRiAEr4EemegPQxlEOT_A" name="PME_Trig587" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6oSwIEr4EemegPQxlEOT_A" name="PME_Trig588" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6oVMYEr4EemegPQxlEOT_A" name="PME_Trig589" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_6oVzcEr4EemegPQxlEOT_A" name="PME_Trig590" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6oXBkEr4EemegPQxlEOT_A" name="PME_Trig591" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6oZd0Er4EemegPQxlEOT_A" name="PME_Trig592" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6ob6EEr4EemegPQxlEOT_A" name="PME_Trig593" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6oeWUEr4EemegPQxlEOT_A" name="PME_Trig594" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6ofkcEr4EemegPQxlEOT_A" name="PME_Trig595" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6ogykEr4EemegPQxlEOT_A" name="PME_Trig596" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6oiAsEr4EemegPQxlEOT_A" name="PME_Trig597" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6ongQEr4EemegPQxlEOT_A" name="PME_Trig598" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6opVcEr4EemegPQxlEOT_A" name="PME_Trig599" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6op8gEr4EemegPQxlEOT_A" name="PME_Trig600" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6orKoEr4EemegPQxlEOT_A" name="PME_Trig601" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6osYwEr4EemegPQxlEOT_A" name="To__Debug__B__Ex__Failure__602" guard="_6o4mAUr4EemegPQxlEOT_A" source="_6n3SUEr4EemegPQxlEOT_A" target="_s9dx8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6o4mAUr4EemegPQxlEOT_A" name="PME_checkDecesion605">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6o4mAEr4EemegPQxlEOT_A" name="PME_checkDecesion605">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__602&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6ouN8Er4EemegPQxlEOT_A" name="From__Parnet__ServerStateMachine__603" source="_6n0PAEr4EemegPQxlEOT_A" target="_6n3SUEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6o3X4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__604&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6ovcEEr4EemegPQxlEOT_A" name="To__Parent__ServerStateMachine__604" guard="_6o7CQUr4EemegPQxlEOT_A" source="_6n3SUEr4EemegPQxlEOT_A" target="_6n2rQEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6o7CQUr4EemegPQxlEOT_A" name="PME_checkDecesion606">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6o7CQEr4EemegPQxlEOT_A" name="PME_checkDecesion606">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__604&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s9dx8ErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9dx8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9ltwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__301">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6n3SUEr4EemegPQxlEOT_A" name="DecesionPoint__577" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6n4gcEr4EemegPQxlEOT_A" name="Init__State__578"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tAa_UUrDEem2BZRQc2M93A" name="Debug__C__Recover">
              <connectionPoint xmi:id="_6rIowEr4EemegPQxlEOT_A" name="From__Parent__678" kind="entryPoint"/>
              <connectionPoint xmi:id="_6rKd8Er4EemegPQxlEOT_A" name="To__Parent__680" kind="exitPoint"/>
              <region xmi:id="_tAa_UkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6rRLoEr4EemegPQxlEOT_A" name="Trans__Init__State__683684" source="_6rNhQEr4EemegPQxlEOT_A" target="_6rMTIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6sLxoEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__683&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__683&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__709&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__683&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6rTA0Er4EemegPQxlEOT_A" name="From__Debug__B__Ex__Failure__685" source="_tAt6QErDEem2BZRQc2M93A" target="_6rMTIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6sKjgEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__709&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6rXSQEr4EemegPQxlEOT_A" name="PME_Trig686" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6ra8oEr4EemegPQxlEOT_A" name="PME_Trig687" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6rcKwEr4EemegPQxlEOT_A" name="PME_Trig688" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6rdY4Er4EemegPQxlEOT_A" name="PME_Trig689" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6rhDQEr4EemegPQxlEOT_A" name="PME_Trig690" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6rkGkEr4EemegPQxlEOT_A" name="PME_Trig691" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6rlUsEr4EemegPQxlEOT_A" name="PME_Trig692" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6rl7wEr4EemegPQxlEOT_A" name="PME_Trig693" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6rnJ4Er4EemegPQxlEOT_A" name="PME_Trig694" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_6roYAEr4EemegPQxlEOT_A" name="PME_Trig695" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6rq0QEr4EemegPQxlEOT_A" name="PME_Trig696" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6rsCYEr4EemegPQxlEOT_A" name="PME_Trig697" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6rtQgEr4EemegPQxlEOT_A" name="PME_Trig698" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6ryJAEr4EemegPQxlEOT_A" name="PME_Trig699" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6r3BgEr4EemegPQxlEOT_A" name="PME_Trig700" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6r42sEr4EemegPQxlEOT_A" name="PME_Trig701" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6r5dwEr4EemegPQxlEOT_A" name="PME_Trig702" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6r6r4Er4EemegPQxlEOT_A" name="PME_Trig703" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6r8hEEr4EemegPQxlEOT_A" name="PME_Trig704" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6r-9UEr4EemegPQxlEOT_A" name="PME_Trig705" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6r_kYEr4EemegPQxlEOT_A" name="PME_Trig706" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6sEc4Er4EemegPQxlEOT_A" name="To__Debug__B__Ex__Failure__707" guard="_6sM_wUr4EemegPQxlEOT_A" source="_6rMTIEr4EemegPQxlEOT_A" target="_tAt6QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6sM_wUr4EemegPQxlEOT_A" name="PME_checkDecesion710">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6sM_wEr4EemegPQxlEOT_A" name="PME_checkDecesion710">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__707&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6sGSEEr4EemegPQxlEOT_A" name="From__Parnet__ServerStateMachine__708" source="_6rIowEr4EemegPQxlEOT_A" target="_6rMTIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6sJVYEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__709&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6sG5IEr4EemegPQxlEOT_A" name="To__Parent__ServerStateMachine__709" guard="_6sO08Ur4EemegPQxlEOT_A" source="_6rMTIEr4EemegPQxlEOT_A" target="_6rKd8Er4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6sO08Ur4EemegPQxlEOT_A" name="PME_checkDecesion711">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6sO08Er4EemegPQxlEOT_A" name="PME_checkDecesion711">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__709&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tAt6QErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAt6QUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tAyywUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__413">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6rMTIEr4EemegPQxlEOT_A" name="DecesionPoint__682" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6rNhQEr4EemegPQxlEOT_A" name="Init__State__683"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tEAe0ErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnounce" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tEqmIUrDEem2BZRQc2M93A" name="Debug__C__ExitPoint1__BeMaster__4">
              <connectionPoint xmi:id="_6qAnYEr4EemegPQxlEOT_A" name="From__Parent__644" kind="entryPoint"/>
              <connectionPoint xmi:id="_6qB1gEr4EemegPQxlEOT_A" name="To__Parent__646" kind="exitPoint"/>
              <region xmi:id="_tErNMErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6qFf4Er4EemegPQxlEOT_A" name="Trans__Init__State__649650" source="_6qERwEr4EemegPQxlEOT_A" target="_6qCckEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6rGzkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__649&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__675&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__649&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__649&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6qGG8Er4EemegPQxlEOT_A" name="From__Debug__A__Ac__ExitPoint1__BeMaster__4__651" source="_tE9hEErDEem2BZRQc2M93A" target="_6qCckEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6q5_QEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__675&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6qGuAEr4EemegPQxlEOT_A" name="PME_Trig652" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6qHVEEr4EemegPQxlEOT_A" name="PME_Trig653" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6qLmgEr4EemegPQxlEOT_A" name="PME_Trig654" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6qRGEEr4EemegPQxlEOT_A" name="PME_Trig655" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6qS7QEr4EemegPQxlEOT_A" name="PME_Trig656" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6qUJYEr4EemegPQxlEOT_A" name="PME_Trig657" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6qUwcEr4EemegPQxlEOT_A" name="PME_Trig658" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6qV-kEr4EemegPQxlEOT_A" name="PME_Trig659" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6qXMsEr4EemegPQxlEOT_A" name="PME_Trig660" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_6qZB4Er4EemegPQxlEOT_A" name="PME_Trig661" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6qaQAEr4EemegPQxlEOT_A" name="PME_Trig662" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6qbeIEr4EemegPQxlEOT_A" name="PME_Trig663" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6qehcEr4EemegPQxlEOT_A" name="PME_Trig664" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6qiL0Er4EemegPQxlEOT_A" name="PME_Trig665" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6qjZ8Er4EemegPQxlEOT_A" name="PME_Trig666" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6qkoEEr4EemegPQxlEOT_A" name="PME_Trig667" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6ql2MEr4EemegPQxlEOT_A" name="PME_Trig668" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6qo5gEr4EemegPQxlEOT_A" name="PME_Trig669" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6qtK8Er4EemegPQxlEOT_A" name="PME_Trig670" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6qvAIEr4EemegPQxlEOT_A" name="PME_Trig671" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6qxcYEr4EemegPQxlEOT_A" name="PME_Trig672" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6q3jAEr4EemegPQxlEOT_A" name="To__Debug__A__Ac__ExitPoint1__BeMaster__4__673" guard="_6rIBsUr4EemegPQxlEOT_A" source="_6qCckEr4EemegPQxlEOT_A" target="_tE9hEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6rIBsUr4EemegPQxlEOT_A" name="PME_checkDecesion677">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6rIBsEr4EemegPQxlEOT_A" name="PME_checkDecesion677">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__673&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6q4KEEr4EemegPQxlEOT_A" name="From__Parnet__ServerStateMachine__674" source="_6qAnYEr4EemegPQxlEOT_A" target="_6qCckEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6rCiIEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__675&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6q4xIEr4EemegPQxlEOT_A" name="To__Parent__ServerStateMachine__675" guard="_6rHaoUr4EemegPQxlEOT_A" source="_6qCckEr4EemegPQxlEOT_A" target="_6qB1gEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6rHaoUr4EemegPQxlEOT_A" name="PME_checkDecesion676">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6rHaoEr4EemegPQxlEOT_A" name="PME_checkDecesion676">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__675&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tE9hEErDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE9hEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6qCckEr4EemegPQxlEOT_A" name="DecesionPoint__648" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6qERwEr4EemegPQxlEOT_A" name="Init__State__649"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFEOwErDEem2BZRQc2M93A" name="Debug__Path__BeSlave" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tF4HEErDEem2BZRQc2M93A" name="Debug__Path__ServiceRequest" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tF58QErDEem2BZRQc2M93A" name="Debug__C__ServiceRequest">
              <connectionPoint xmi:id="_tF7KYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_6kzXQEr4EemegPQxlEOT_A" name="From__Parent__516" kind="entryPoint"/>
              <connectionPoint xmi:id="_6k2akEr4EemegPQxlEOT_A" name="To__Parent__518" kind="exitPoint"/>
              <region xmi:id="_tF58QUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tGVaEErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest" source="_tF7KYUrDEem2BZRQc2M93A" target="_tGLCAUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGmf0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest__603">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__init__trans__ServiceRequest&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tGVaEUrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tGLCAUrDEem2BZRQc2M93A" target="_tGMQIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGWoMErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGWBIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6lAyoEr4EemegPQxlEOT_A" name="Trans__Init__State__521522" source="_6k-WYEr4EemegPQxlEOT_A" target="_6k6E8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6nuIYEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__521&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__569&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__521&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__521&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__566&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__521&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6lG5QEr4EemegPQxlEOT_A" name="From__Debug__B__Ex__RunAsMaster__523" source="_tGLCAUrDEem2BZRQc2M93A" target="_6k6E8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6nwkoEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__569&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__566&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6lJVgEr4EemegPQxlEOT_A" name="PME_Trig524" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6lLKsEr4EemegPQxlEOT_A" name="PME_Trig525" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6lOOAEr4EemegPQxlEOT_A" name="PME_Trig526" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6lTtkEr4EemegPQxlEOT_A" name="PME_Trig527" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6lZNIEr4EemegPQxlEOT_A" name="PME_Trig528" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6lbCUEr4EemegPQxlEOT_A" name="PME_Trig529" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6ljlMEr4EemegPQxlEOT_A" name="PME_Trig530" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6lqS4Er4EemegPQxlEOT_A" name="PME_Trig531" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6lt9QEr4EemegPQxlEOT_A" name="PME_Trig532" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_6lwZgEr4EemegPQxlEOT_A" name="PME_Trig533" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6l5jcEr4EemegPQxlEOT_A" name="PME_Trig534" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6l904Er4EemegPQxlEOT_A" name="PME_Trig535" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6mCGUEr4EemegPQxlEOT_A" name="PME_Trig536" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6mKpMEr4EemegPQxlEOT_A" name="PME_Trig537" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6mNFcEr4EemegPQxlEOT_A" name="PME_Trig538" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6mQv0Er4EemegPQxlEOT_A" name="PME_Trig539" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6mVoUEr4EemegPQxlEOT_A" name="PME_Trig540" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6mXdgEr4EemegPQxlEOT_A" name="PME_Trig541" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6mYroEr4EemegPQxlEOT_A" name="PME_Trig542" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6mfZUEr4EemegPQxlEOT_A" name="PME_Trig543" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6mhOgEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__ServiceRequest__544" source="_tGMQIErDEem2BZRQc2M93A" target="_6k6E8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6npP4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__569&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__566&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6micoEr4EemegPQxlEOT_A" name="PME_Trig545" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6mmuEEr4EemegPQxlEOT_A" name="PME_Trig546" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6mpxYEr4EemegPQxlEOT_A" name="PME_Trig547" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6mq_gEr4EemegPQxlEOT_A" name="PME_Trig548" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6ms0sEr4EemegPQxlEOT_A" name="PME_Trig549" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6mziYEr4EemegPQxlEOT_A" name="PME_Trig550" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6m0JcEr4EemegPQxlEOT_A" name="PME_Trig551" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6m1XkEr4EemegPQxlEOT_A" name="PME_Trig552" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6m2lsEr4EemegPQxlEOT_A" name="PME_Trig553" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_6m5B8Er4EemegPQxlEOT_A" name="PME_Trig554" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6m6QEEr4EemegPQxlEOT_A" name="PME_Trig555" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6m8FQEr4EemegPQxlEOT_A" name="PME_Trig556" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6nCy8Er4EemegPQxlEOT_A" name="PME_Trig557" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6nISgEr4EemegPQxlEOT_A" name="PME_Trig558" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6nJgoEr4EemegPQxlEOT_A" name="PME_Trig559" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6nKuwEr4EemegPQxlEOT_A" name="PME_Trig560" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6nNyEEr4EemegPQxlEOT_A" name="PME_Trig561" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6nPnQEr4EemegPQxlEOT_A" name="PME_Trig562" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6nQ1YEr4EemegPQxlEOT_A" name="PME_Trig563" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6nW8AEr4EemegPQxlEOT_A" name="PME_Trig564" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6nZYQEr4EemegPQxlEOT_A" name="PME_Trig565" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6nfe4Er4EemegPQxlEOT_A" name="To__Debug__B__Ex__RunAsMaster__566" guard="_6nzA4Ur4EemegPQxlEOT_A" source="_6k6E8Er4EemegPQxlEOT_A" target="_tGLCAUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6nzA4Ur4EemegPQxlEOT_A" name="PME_checkDecesion572">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6nzA4Er4EemegPQxlEOT_A" name="PME_checkDecesion572">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__566&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6ngtAEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__ServiceRequest__567" guard="_6nyZ0Ur4EemegPQxlEOT_A" source="_6k6E8Er4EemegPQxlEOT_A" target="_tGMQIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6nyZ0Ur4EemegPQxlEOT_A" name="PME_checkDecesion571">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6nyZ0Er4EemegPQxlEOT_A" name="PME_checkDecesion571">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceRequest__567&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6nmMkEr4EemegPQxlEOT_A" name="From__Parnet__ServerStateMachine__568" source="_6kzXQEr4EemegPQxlEOT_A" target="_6k6E8Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6noBwEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__569&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__567&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__566&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6nmzoEr4EemegPQxlEOT_A" name="To__Parent__ServerStateMachine__569" guard="_6nxLsUr4EemegPQxlEOT_A" source="_6k6E8Er4EemegPQxlEOT_A" target="_6k2akEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6nxLsUr4EemegPQxlEOT_A" name="PME_checkDecesion570">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6nxLsEr4EemegPQxlEOT_A" name="PME_checkDecesion570">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__569&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tGLCAUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGLpEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGa5oUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__598">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGMQIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGMQIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGd88ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest__599">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6k6E8Er4EemegPQxlEOT_A" name="DecesionPoint__520" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6k-WYEr4EemegPQxlEOT_A" name="Init__State__521"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tGw34UrDEem2BZRQc2M93A" name="Debug__C__StandBy__CheckConfig__6">
              <connectionPoint xmi:id="_68OYwEr4EemegPQxlEOT_A" name="From__Parent__933" kind="entryPoint"/>
              <connectionPoint xmi:id="_68QN8Er4EemegPQxlEOT_A" name="To__Parent__935" kind="exitPoint"/>
              <region xmi:id="_tGw34krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHGPEErDEem2BZRQc2M93A" name="Debug__Ex__StandBy" source="_tHDLwUrDEem2BZRQc2M93A" target="_tHDy0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHROMErDEem2BZRQc2M93A" name="Debug__Ex__StandBy__626">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHGPEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_68kXAEr4EemegPQxlEOT_A" name="Trans__Init__State__938939" source="_68Z-8Er4EemegPQxlEOT_A" target="_68VGcEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7CupYEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__938&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__986&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__938&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__938&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__938&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_68uIAEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__StandBy__CheckConfig__6__940" source="_tHDy0ErDEem2BZRQc2M93A" target="_68VGcEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7DTRIEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__986&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_68xyYEr4EemegPQxlEOT_A" name="PME_Trig941" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_684gEEr4EemegPQxlEOT_A" name="PME_Trig942" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_69DfMEr4EemegPQxlEOT_A" name="PME_Trig943" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_69NQMEr4EemegPQxlEOT_A" name="PME_Trig944" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_69T94Er4EemegPQxlEOT_A" name="PME_Trig945" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_69fkEEr4EemegPQxlEOT_A" name="PME_Trig946" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_69j1gEr4EemegPQxlEOT_A" name="PME_Trig947" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_69qjMEr4EemegPQxlEOT_A" name="PME_Trig948" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_69uNkEr4EemegPQxlEOT_A" name="PME_Trig949" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_695zwEr4EemegPQxlEOT_A" name="PME_Trig950" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6-AhcEr4EemegPQxlEOT_A" name="PME_Trig951" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6-JEUEr4EemegPQxlEOT_A" name="PME_Trig952" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6-MHoEr4EemegPQxlEOT_A" name="PME_Trig953" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6-TcYEr4EemegPQxlEOT_A" name="PME_Trig954" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6-axIEr4EemegPQxlEOT_A" name="PME_Trig955" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6-he0Er4EemegPQxlEOT_A" name="PME_Trig956" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6-nlcEr4EemegPQxlEOT_A" name="PME_Trig957" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6-qowEr4EemegPQxlEOT_A" name="PME_Trig958" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6-uTIEr4EemegPQxlEOT_A" name="PME_Trig959" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6-0ZwEr4EemegPQxlEOT_A" name="PME_Trig960" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6-_Y4Er4EemegPQxlEOT_A" name="PME_Trig961" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_6_GGkEr4EemegPQxlEOT_A" name="From__Debug__B__Ex__StandBy__962" source="_tHDLwUrDEem2BZRQc2M93A" target="_68VGcEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7DISAEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__986&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6_H7wEr4EemegPQxlEOT_A" name="PME_Trig963" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6_PQgEr4EemegPQxlEOT_A" name="PME_Trig964" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6_RswEr4EemegPQxlEOT_A" name="PME_Trig965" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6_a2sEr4EemegPQxlEOT_A" name="PME_Trig966" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6_gWQEr4EemegPQxlEOT_A" name="PME_Trig967" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6_lOwEr4EemegPQxlEOT_A" name="PME_Trig968" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6_nrAEr4EemegPQxlEOT_A" name="PME_Trig969" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6_wN4Er4EemegPQxlEOT_A" name="PME_Trig970" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7A4PQEr4EemegPQxlEOT_A" name="PME_Trig971" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_7A6EcEr4EemegPQxlEOT_A" name="PME_Trig972" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7A7SkEr4EemegPQxlEOT_A" name="PME_Trig973" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_7BEcgEr4EemegPQxlEOT_A" name="PME_Trig974" event="_5dslQEr4EemegPQxlEOT_A" port="_6gSqsEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_7BFqoEr4EemegPQxlEOT_A" name="PME_Trig975" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7BUUIEr4EemegPQxlEOT_A" name="PME_Trig976" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_7BdeEEr4EemegPQxlEOT_A" name="PME_Trig977" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7BkLwEr4EemegPQxlEOT_A" name="PME_Trig978" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_7BnPEEr4EemegPQxlEOT_A" name="PME_Trig979" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_7BprUEr4EemegPQxlEOT_A" name="PME_Trig980" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_7B2foEr4EemegPQxlEOT_A" name="PME_Trig981" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_7B6KAEr4EemegPQxlEOT_A" name="PME_Trig982" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_7CA3sEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__StandBy__CheckConfig__6__983" guard="_7DdCIUr4EemegPQxlEOT_A" source="_68VGcEr4EemegPQxlEOT_A" target="_tHDy0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7DdCIUr4EemegPQxlEOT_A" name="PME_checkDecesion989">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7DdCIEr4EemegPQxlEOT_A" name="PME_checkDecesion989">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__983&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7CKBoEr4EemegPQxlEOT_A" name="To__Debug__B__Ex__StandBy__984" guard="_7Db0AUr4EemegPQxlEOT_A" source="_68VGcEr4EemegPQxlEOT_A" target="_tHDLwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_7Db0AUr4EemegPQxlEOT_A" name="PME_checkDecesion988">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7Db0AEr4EemegPQxlEOT_A" name="PME_checkDecesion988">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBy__984&quot;,&quot;Debug__B__Ex__StandBy&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_7CR9cEr4EemegPQxlEOT_A" name="From__Parnet__ServerStateMachine__985" source="_68OYwEr4EemegPQxlEOT_A" target="_68VGcEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_7DKuQEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__986&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__983&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_7CSkgEr4EemegPQxlEOT_A" name="To__Parent__ServerStateMachine__986" guard="_7Dal4Er4EemegPQxlEOT_A" source="_68VGcEr4EemegPQxlEOT_A" target="_68QN8Er4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_7Dal4Er4EemegPQxlEOT_A" name="PME_checkDecesion987">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_7DUfQEr4EemegPQxlEOT_A" name="PME_checkDecesion987">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__986&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHDLwUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDLwkrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHIEQErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy__622">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHDy0ErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDy0UrDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy__CheckConfig__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHM8wErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6__623">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_68VGcEr4EemegPQxlEOT_A" name="DecesionPoint__937" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_68Z-8Er4EemegPQxlEOT_A" name="Init__State__938"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_6jSUUEr4EemegPQxlEOT_A" name="DecesionPoint__482" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_6jUJgEr4EemegPQxlEOT_A" name="New__State__483"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_6jUwkUr4EemegPQxlEOT_A" name="Init__State__484"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxfLcUrDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_sxfLcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Slave.recallAll();
ConfigComm.recallAll();
Master.recallAll();
ServerComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxvDEErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sxucAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;KeepAliveTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(KeepAliveTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,KeepAliveTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
tempS.append(&quot;AnnouncementTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncementTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncementTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxzUgUrDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxyGYErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;KeepAliveTimeOut&quot;==tempVarName){
    KeepAliveTimeOut=atoi(varValue);
    return true;
}else if (&quot;AnnouncementTimeOut&quot;==tempVarName){
    AnnouncementTimeOut=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_syDzMErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sx6CMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6hin4Ur4EemegPQxlEOT_A" name="loadHeap" specification="_6hin4Er4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.KeepAliveTimeOut&quot;,this->KeepAliveTimeOut);
heap.setVarValue(&quot;this.AnnouncementTimeOut&quot;,this->AnnouncementTimeOut);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6hqjsUr4EemegPQxlEOT_A" name="unLoadHeap" specification="_6hqjsEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.KeepAliveTimeOut&quot;,&amp;this->KeepAliveTimeOut);
heap.loadVarFromHeap(&quot;this.AnnouncementTimeOut&quot;,&amp;this->AnnouncementTimeOut);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6iEzYUr4EemegPQxlEOT_A" name="sendMessage" specification="_6iEzYEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;ServerComm&quot;) {
  if(message.signal==&quot;Reply&quot;) {
   if(message.payload.size()==1){
    ServerComm.Reply( boost::any_cast&lt;int>(message.payload[&quot;Result&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Master&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Master.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Slave&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Slave.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6iMIIUr4EemegPQxlEOT_A" name="sendInternalMessage" specification="_6iMIIEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6i_ZYUr4EemegPQxlEOT_A" name="initForPMD" specification="_6i_ZYEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Server::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Server::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ServerComm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;ServerComm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;KeepAliveTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;MasterAnnounceTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sxfLcErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_sxfLcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxucAErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sxvDEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxyGYErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxzUgUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxytcErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxytcUrDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxzUgErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sx6CMErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_syDzMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sx7QUErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx8ecUrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx9skErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-ToUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-6sErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syAI0ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8ErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8UrDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syClEErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syDMIErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6hin4Er4EemegPQxlEOT_A" name="loadHeap" visibility="private" method="_6hin4Ur4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_6hqjsEr4EemegPQxlEOT_A" name="unLoadHeap" visibility="private" method="_6hqjsUr4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_6iEzYEr4EemegPQxlEOT_A" name="sendMessage" visibility="private" method="_6iEzYUr4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_6iFacEr4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6iHPoEr4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6iMIIEr4EemegPQxlEOT_A" name="sendInternalMessage" visibility="private" method="_6iMIIUr4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_6iNWQEr4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6iNWQUr4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6i_ZYEr4EemegPQxlEOT_A" name="initForPMD" visibility="private" method="_6i_ZYUr4EemegPQxlEOT_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_zpdLYAgmEea_md0mpENoqg" name="Client" classifierBehavior="_BKT8EAlKEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_5utSYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_g3nG4AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kSO0IAliEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kSfS0AliEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_iLeRcAmuEea_md0mpENoqg" name="RequestTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_oWg3YAmuEea_md0mpENoqg" name="ConfigTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tP9SkAmuEea_md0mpENoqg" name="ResponseTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_fL3OQAnFEeaGqPUk-4V4qQ" name="Server1Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jNC1oAnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNNNsAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lRZpIAnFEeaGqPUk-4V4qQ" name="Server2Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pIHs8AnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pIOaoAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_8sGy4AovEeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swu9gErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swxZwUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swyA0ErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8ErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8UrDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxH_EErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxJNMUrDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_5hzCIEr4EemegPQxlEOT_A" name="dbgPortForClient" visibility="protected" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5hzpMEr4EemegPQxlEOT_A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_5hzpMUr4EemegPQxlEOT_A" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_BKT8EAlKEea_md0mpENoqg" name="ClientStateMachine">
          <region xmi:id="_Bk0GwAlKEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_tL854ErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL9g8UrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange__743">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tL9g8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL-IAErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL-vEErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint__744">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL-IAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_WIErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL_WIkrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint__745">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_WIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_9MErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMAkQErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints__746">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_9MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMAkQUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMBLUErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode__747">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMAkQkrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMBLUUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMCZcUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg__748">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMByYErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMByYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMCZcErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMiIsErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMivwErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange__767">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tMiIsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMj94ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMkk8ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint__768">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMj94UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMlzEErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMmaIErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint__769">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMlzEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnBMErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMnoQErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints__770">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMnBMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnoQUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMoPUUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode__771">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMoPUErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMo2YErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMqEgErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg__772">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMo2YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNWBAErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNWoEErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange__794">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tNWBAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNXPIErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNYdQErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint__795">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNXPIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNZrYErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNZrYkrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint__796">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNZrYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNaScErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNa5gErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints__797">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNaScUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNa5gUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNbgkUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode__798">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tNbgkErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNdVwErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNd80krDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg__799">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNdVwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOsE0ErDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOsr4UrDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange__818">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tOsr4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOvvMErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOwWQErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint__819">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOvvMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOw9UErDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOw9UkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint__820">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOw9UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOxkYErDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOxkYkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints__821">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOxkYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyLcErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOyLckrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode__822">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tOyLcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyygErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOzZkkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg__823">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOyygUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP7a8ErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP7a8krDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange__863">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tP7a8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP8pEErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP8pEkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint__864">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP8pEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP9QIErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP93MUrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint__865">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP93MErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP-eQErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP-eQkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints__866">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP-eQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_FUErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP_FUkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode__867">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tP_FUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_sYErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQA6gErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg__868">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQATcErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATckrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQmJUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQmwYUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange__886">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tQmwYErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQnXcErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQn-gErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint__887">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQnXcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQolkErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQolkkrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint__888">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQolkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQpzsErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQqawErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints__889">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQpzsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQqawUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQrB0UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode__890">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tQrB0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQro4ErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQsP8UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg__891">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQro4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQro4krDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQsP8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRmO4ErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRm18UrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange__911">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tRm18ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRndAErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRoEEUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint__912">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRoEEErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRorIErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRpSMUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint__913">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRpSMErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRrHYErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRrucErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints__914">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRrHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRsVgErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRs8kErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode__915">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tRsVgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRs8kUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRuKsUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg__916">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRtjoErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRtjoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRuKsErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTNYcErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTNYckrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange__963">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tTNYcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTN_gErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTN_gkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint__964">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTN_gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTOmkErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTOmkkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint__965">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTOmkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTPNoErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTPNokrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints__966">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTPNoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTP0sErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTP0skrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode__967">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tTP0sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTQbwErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTRC0krDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg__968">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTQbwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_5qGpkEr4EemegPQxlEOT_A" name="Trans__Debug__Path__NoResponseFromServer3" source="_tTDncErDEem2BZRQc2M93A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6Yrm0Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_5qH3sEr4EemegPQxlEOT_A" name="Trans__Debug__Path__ReqFlowDone4" source="_tQWRsErDEem2BZRQc2M93A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6YVokEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_5qJs4Er4EemegPQxlEOT_A" name="Trans__init5" source="_Oll1cAlKEea_md0mpENoqg" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6W6FMEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;init&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;init&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_5sBVIEr4EemegPQxlEOT_A" name="6" source="_tTDncErDEem2BZRQc2M93A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6XpsEEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_5sDxYEr4EemegPQxlEOT_A" name="7" source="_tQWRsErDEem2BZRQc2M93A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6XNnMEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_5sJ4AEr4EemegPQxlEOT_A" name="From__New__State__2__8" source="_5pxSYEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6Xf7EEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_5sTpAEr4EemegPQxlEOT_A" name="PME_Trig9" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_5sXTYEr4EemegPQxlEOT_A" name="PME_Trig10" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_5sfPMEr4EemegPQxlEOT_A" name="PME_Trig11" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_5slV0Er4EemegPQxlEOT_A" name="PME_Trig12" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_5spnQEr4EemegPQxlEOT_A" name="PME_Trig13" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_5sw8AEr4EemegPQxlEOT_A" name="PME_Trig14" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_5szYQEr4EemegPQxlEOT_A" name="PME_Trig15" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_5s6F8Er4EemegPQxlEOT_A" name="PME_Trig16" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_5s9JQEr4EemegPQxlEOT_A" name="PME_Trig17" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_5tCBwEr4EemegPQxlEOT_A" name="PME_Trig18" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_5tHhUEr4EemegPQxlEOT_A" name="PME_Trig19" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
              <trigger xmi:id="_5tPdIEr4EemegPQxlEOT_A" name="PME_Trig20" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_5tSgcEr4EemegPQxlEOT_A" name="PME_Trig21" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_5tZ1MEr4EemegPQxlEOT_A" name="PME_Trig22" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_5tcRcEr4EemegPQxlEOT_A" name="PME_Trig23" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_5tk0UEr4EemegPQxlEOT_A" name="PME_Trig24" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_5tq68Er4EemegPQxlEOT_A" name="PME_Trig25" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_5txBkEr4EemegPQxlEOT_A" name="PME_Trig26" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_5t5kcEr4EemegPQxlEOT_A" name="PME_Trig27" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_5uA5MEr4EemegPQxlEOT_A" name="PME_Trig28" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_5uHm4Er4EemegPQxlEOT_A" name="PME_Trig29" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_5uSmAEr4EemegPQxlEOT_A" name="To__New__State__2__30" guard="_6ZOZYEr4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_5pxSYEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZOZYEr4EemegPQxlEOT_A" name="PME_checkDecesion403">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZNyUEr4EemegPQxlEOT_A" name="PME_checkDecesion403">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__New__State__2__30&quot;,&quot;New__State__2&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_5ubv8Er4EemegPQxlEOT_A" name="To__Substates__Debug__C__ServiceResult__32" guard="_6ZVHEUr4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_5uZTsEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZVHEUr4EemegPQxlEOT_A" name="PME_checkDecesion408">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZVHEEr4EemegPQxlEOT_A" name="PME_checkDecesion408">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceResult__32&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_5uh2kEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__ServiceResult__34" source="_5ueMMEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6YARYEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_52AXkEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__StarupTransition__66" guard="_6ZL9IUr4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_518GIEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZL9IUr4EemegPQxlEOT_A" name="PME_checkDecesion402">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZL9IEr4EemegPQxlEOT_A" name="PME_checkDecesion402">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StarupTransition__66&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_52KIkEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__StarupTransition__68" source="_52EpAEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6Y2l8Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6AH84Er4EemegPQxlEOT_A" name="To__Substates__Debug__C__ReqFlowDone__124" guard="_6ZbNsUr4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_6ADEYEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZbNsUr4EemegPQxlEOT_A" name="PME_checkDecesion410">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZbNsEr4EemegPQxlEOT_A" name="PME_checkDecesion410">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6ANccEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__ReqFlowDone__126" source="_6ALnQEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6XXYMEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6Fb6sEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__inittrans__182" guard="_6ZSDwEr4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_6FaskEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZSDwEr4EemegPQxlEOT_A" name="PME_checkDecesion404">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZRcsEr4EemegPQxlEOT_A" name="PME_checkDecesion404">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__inittrans__182&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6Fdv4Ur4EemegPQxlEOT_A" name="From__Substates__Debug__C__inittrans__184" source="_6FchwEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6ZAW8Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6IenoUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__NoMaster__216" guard="_6ZT48Ur4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_6IeAkEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZT48Ur4EemegPQxlEOT_A" name="PME_checkDecesion406">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZT48Er4EemegPQxlEOT_A" name="PME_checkDecesion406">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoMaster__216&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6IjgIEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__NoMaster__218" source="_6IfOsEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6YgnsEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6NYVwEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__Retry__274" guard="_6ZUgAUr4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_6NXHoEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZUgAUr4EemegPQxlEOT_A" name="PME_checkDecesion407">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZUgAEr4EemegPQxlEOT_A" name="PME_checkDecesion407">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Retry__274&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6NZj4Ur4EemegPQxlEOT_A" name="From__Substates__Debug__C__Retry__276" source="_6NY80Er4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6XEdQEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6R-h4Er4EemegPQxlEOT_A" name="Trans__ex330" source="_tTGqwErDEem2BZRQc2M93A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6YLQgEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6SAXEEr4EemegPQxlEOT_A" name="To__Substates__Debug__C__NoResponseFromServer__332" guard="_6ZXjUUr4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_6R_I8Er4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZXjUUr4EemegPQxlEOT_A" name="PME_checkDecesion409">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZXjUEr4EemegPQxlEOT_A" name="PME_checkDecesion409">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6SBlMUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__NoResponseFromServer__334" source="_6SA-IEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6WwUMEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6UIeAEr4EemegPQxlEOT_A" name="Trans__ex366" source="_tOc0QUrDEem2BZRQc2M93A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6ZJg4Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6UNWgUr4EemegPQxlEOT_A" name="To__Substates__Debug__C__reqService__368" guard="_6ZSq0Ur4EemegPQxlEOT_A" source="_5ppWkEr4EemegPQxlEOT_A" target="_6ULhUEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6ZSq0Ur4EemegPQxlEOT_A" name="PME_checkDecesion405">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6ZSq0Er4EemegPQxlEOT_A" name="PME_checkDecesion405">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqService__368&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6UPLsEr4EemegPQxlEOT_A" name="From__Substates__Debug__C__reqService__370" source="_6UN9kEr4EemegPQxlEOT_A" target="_5ppWkEr4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6X15UEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__66&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__182&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__216&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__274&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__32&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__124&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Oll1cAlKEea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_tLzv8UrDEem2BZRQc2M93A" name="Debug__C__NoMaster">
              <connectionPoint xmi:id="_6IeAkEr4EemegPQxlEOT_A" name="From__Parent__215" kind="entryPoint"/>
              <connectionPoint xmi:id="_6IfOsEr4EemegPQxlEOT_A" name="To__Parent__217" kind="exitPoint"/>
              <region xmi:id="_tLzv8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6Irb8Er4EemegPQxlEOT_A" name="Trans__Init__State__220221" source="_6InxkEr4EemegPQxlEOT_A" target="_6Il8YEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6M6bsEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__220&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__269&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__220&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__220&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__220&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6Iw7gEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__NoMaster__222" source="_tMFcwUrDEem2BZRQc2M93A" target="_6Il8YEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6Myf4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__269&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6IxikEr4EemegPQxlEOT_A" name="PME_Trig223" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6I3pMEr4EemegPQxlEOT_A" name="PME_Trig224" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6I8hsEr4EemegPQxlEOT_A" name="PME_Trig225" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6JEdgEr4EemegPQxlEOT_A" name="PME_Trig226" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6JG5wEr4EemegPQxlEOT_A" name="PME_Trig227" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6JOOgEr4EemegPQxlEOT_A" name="PME_Trig228" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6JRR0Er4EemegPQxlEOT_A" name="PME_Trig229" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6JZNoEr4EemegPQxlEOT_A" name="PME_Trig230" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Jbp4Er4EemegPQxlEOT_A" name="PME_Trig231" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Ji-oEr4EemegPQxlEOT_A" name="PME_Trig232" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6Jla4Er4EemegPQxlEOT_A" name="PME_Trig233" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6JtWsEr4EemegPQxlEOT_A" name="PME_Trig234" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Jvy8Er4EemegPQxlEOT_A" name="PME_Trig235" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6J2goEr4EemegPQxlEOT_A" name="PME_Trig236" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6J484Er4EemegPQxlEOT_A" name="PME_Trig237" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6KARoEr4EemegPQxlEOT_A" name="PME_Trig238" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6KEjEEr4EemegPQxlEOT_A" name="PME_Trig239" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6KL30Er4EemegPQxlEOT_A" name="PME_Trig240" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6KO7IEr4EemegPQxlEOT_A" name="PME_Trig241" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6KYFEEr4EemegPQxlEOT_A" name="PME_Trig242" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6KfZ0Er4EemegPQxlEOT_A" name="PME_Trig243" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6KidIEr4EemegPQxlEOT_A" name="From__Debug__A__En__NoMaster__244" source="_tMH5AErDEem2BZRQc2M93A" target="_6Il8YEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6NNWoEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__269&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6Kk5YEr4EemegPQxlEOT_A" name="PME_Trig245" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6KrnEEr4EemegPQxlEOT_A" name="PME_Trig246" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6Kzi4Er4EemegPQxlEOT_A" name="PME_Trig247" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6K1_IEr4EemegPQxlEOT_A" name="PME_Trig248" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6K8s0Er4EemegPQxlEOT_A" name="PME_Trig249" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6LA-QEr4EemegPQxlEOT_A" name="PME_Trig250" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6LKIMEr4EemegPQxlEOT_A" name="PME_Trig251" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6LMkcEr4EemegPQxlEOT_A" name="PME_Trig252" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6LUgQEr4EemegPQxlEOT_A" name="PME_Trig253" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6LbN8Er4EemegPQxlEOT_A" name="PME_Trig254" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6LffYEr4EemegPQxlEOT_A" name="PME_Trig255" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6LoCQEr4EemegPQxlEOT_A" name="PME_Trig256" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Lv-EEr4EemegPQxlEOT_A" name="PME_Trig257" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6LzocEr4EemegPQxlEOT_A" name="PME_Trig258" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6L7kQEr4EemegPQxlEOT_A" name="PME_Trig259" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6L-AgEr4EemegPQxlEOT_A" name="PME_Trig260" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6MGjYEr4EemegPQxlEOT_A" name="PME_Trig261" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6MI_oEr4EemegPQxlEOT_A" name="PME_Trig262" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6MRigEr4EemegPQxlEOT_A" name="PME_Trig263" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6MVz8Er4EemegPQxlEOT_A" name="PME_Trig264" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6MchoEr4EemegPQxlEOT_A" name="PME_Trig265" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6MmSoEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__NoMaster__266" guard="_6NPy4Ur4EemegPQxlEOT_A" source="_6Il8YEr4EemegPQxlEOT_A" target="_tMFcwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6NPy4Ur4EemegPQxlEOT_A" name="PME_checkDecesion271">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6NPy4Er4EemegPQxlEOT_A" name="PME_checkDecesion271">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoMaster__266&quot;,&quot;Debug__B__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6MngwEr4EemegPQxlEOT_A" name="To__Debug__A__En__NoMaster__267" guard="_6NRBAUr4EemegPQxlEOT_A" source="_6Il8YEr4EemegPQxlEOT_A" target="_tMH5AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6NRBAUr4EemegPQxlEOT_A" name="PME_checkDecesion272">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6NRBAEr4EemegPQxlEOT_A" name="PME_checkDecesion272">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__NoMaster__267&quot;,&quot;Debug__A__En__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6Mu1gEr4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__268" source="_6IeAkEr4EemegPQxlEOT_A" target="_6Il8YEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6NEzwEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__269&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6MvckEr4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__269" guard="_6NPL0Ur4EemegPQxlEOT_A" source="_6Il8YEr4EemegPQxlEOT_A" target="_6IfOsEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6NPL0Ur4EemegPQxlEOT_A" name="PME_checkDecesion270">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6NPL0Er4EemegPQxlEOT_A" name="PME_checkDecesion270">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__269&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMFcwUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMFcwkrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMLjYUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster__749">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMH5AErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMIgEErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMRC8UrDEem2BZRQc2M93A" name="Debug__A__En__NoMaster__751">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6Il8YEr4EemegPQxlEOT_A" name="DecesionPoint__219" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6InxkEr4EemegPQxlEOT_A" name="Init__State__220"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tMaM4ErDEem2BZRQc2M93A" name="Debug__C__Retry">
              <connectionPoint xmi:id="_tMaz8UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_6NXHoEr4EemegPQxlEOT_A" name="From__Parent__273" kind="entryPoint"/>
              <connectionPoint xmi:id="_6NY80Er4EemegPQxlEOT_A" name="To__Parent__275" kind="exitPoint"/>
              <region xmi:id="_tMaM4UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMyAUErDEem2BZRQc2M93A" name="Debug__init__trans__Retry" source="_tMaz8UrDEem2BZRQc2M93A" target="_tMtH0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNACwErDEem2BZRQc2M93A" name="Debug__init__trans__Retry__778">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__init__trans__Retry&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tMyAUUrDEem2BZRQc2M93A" name="Debug__Ex__Retry" source="_tMtH0ErDEem2BZRQc2M93A" target="_tMuV8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNB38ErDEem2BZRQc2M93A" name="Debug__Ex__Retry__780">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__Ex__Retry&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMyAUkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6NqCkEr4EemegPQxlEOT_A" name="Trans__Init__State__278279" source="_6Nit0Er4EemegPQxlEOT_A" target="_6NecYEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6RziwEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__278&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__278&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__278&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__326&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__278&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6NtF4Er4EemegPQxlEOT_A" name="From__Debug__B__Ac__Retry__280" source="_tMuV8ErDEem2BZRQc2M93A" target="_6NecYEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6RsOAEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__326&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6Nu7EEr4EemegPQxlEOT_A" name="PME_Trig281" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6N3d8Er4EemegPQxlEOT_A" name="PME_Trig282" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6OAA0Er4EemegPQxlEOT_A" name="PME_Trig283" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6OCdEEr4EemegPQxlEOT_A" name="PME_Trig284" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6OKY4Er4EemegPQxlEOT_A" name="PME_Trig285" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6OPRYEr4EemegPQxlEOT_A" name="PME_Trig286" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6OVYAEr4EemegPQxlEOT_A" name="PME_Trig287" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6OZpcEr4EemegPQxlEOT_A" name="PME_Trig288" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6OfJAEr4EemegPQxlEOT_A" name="PME_Trig289" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Og-MEr4EemegPQxlEOT_A" name="PME_Trig290" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6Onr4Er4EemegPQxlEOT_A" name="PME_Trig291" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6OqvMEr4EemegPQxlEOT_A" name="PME_Trig292" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Oz5IEr4EemegPQxlEOT_A" name="PME_Trig293" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6O2VYEr4EemegPQxlEOT_A" name="PME_Trig294" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6O9qIEr4EemegPQxlEOT_A" name="PME_Trig295" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6PBUgEr4EemegPQxlEOT_A" name="PME_Trig296" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6PJ3YEr4EemegPQxlEOT_A" name="PME_Trig297" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6PQlEEr4EemegPQxlEOT_A" name="PME_Trig298" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6PToYEr4EemegPQxlEOT_A" name="PME_Trig299" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6PcLQEr4EemegPQxlEOT_A" name="PME_Trig300" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6PiR4Er4EemegPQxlEOT_A" name="PME_Trig301" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6PnxcEr4EemegPQxlEOT_A" name="From__Debug__B__Ex__Retry__302" source="_tMtH0ErDEem2BZRQc2M93A" target="_6NecYEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6RojoEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__326&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6PpmoEr4EemegPQxlEOT_A" name="PME_Trig303" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Pt4EEr4EemegPQxlEOT_A" name="PME_Trig304" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6P7TcEr4EemegPQxlEOT_A" name="PME_Trig305" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6QEdYEr4EemegPQxlEOT_A" name="PME_Trig306" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6QIu0Er4EemegPQxlEOT_A" name="PME_Trig307" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6QO1cEr4EemegPQxlEOT_A" name="PME_Trig308" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6QQqoEr4EemegPQxlEOT_A" name="PME_Trig309" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6QWxQEr4EemegPQxlEOT_A" name="PME_Trig310" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6QZNgEr4EemegPQxlEOT_A" name="PME_Trig311" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6QbCsEr4EemegPQxlEOT_A" name="PME_Trig312" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6Qf7MEr4EemegPQxlEOT_A" name="PME_Trig313" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6QkMoEr4EemegPQxlEOT_A" name="PME_Trig314" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Qn3AEr4EemegPQxlEOT_A" name="PME_Trig315" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6Qt9oEr4EemegPQxlEOT_A" name="PME_Trig316" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Q15cEr4EemegPQxlEOT_A" name="PME_Trig317" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6Q48wEr4EemegPQxlEOT_A" name="PME_Trig318" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6Q_DYEr4EemegPQxlEOT_A" name="PME_Trig319" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6RCGsEr4EemegPQxlEOT_A" name="PME_Trig320" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6RKpkEr4EemegPQxlEOT_A" name="PME_Trig321" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6RMewEr4EemegPQxlEOT_A" name="PME_Trig322" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6RTMcEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__Retry__323" guard="_6R0J0Ur4EemegPQxlEOT_A" source="_6NecYEr4EemegPQxlEOT_A" target="_tMuV8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6R0J0Ur4EemegPQxlEOT_A" name="PME_checkDecesion327">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6R0J0Er4EemegPQxlEOT_A" name="PME_checkDecesion327">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Retry__323&quot;,&quot;Debug__B__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6RVBoEr4EemegPQxlEOT_A" name="To__Debug__B__Ex__Retry__324" guard="_6R1X8Ur4EemegPQxlEOT_A" source="_6NecYEr4EemegPQxlEOT_A" target="_tMtH0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6R1X8Ur4EemegPQxlEOT_A" name="PME_checkDecesion328">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6R1X8Er4EemegPQxlEOT_A" name="PME_checkDecesion328">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Retry__324&quot;,&quot;Debug__B__Ex__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6RW20Er4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__325" source="_6NXHoEr4EemegPQxlEOT_A" target="_6NecYEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6Rgn0Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__324&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__326&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6RXd4Er4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__326" guard="_6R4bQEr4EemegPQxlEOT_A" source="_6NecYEr4EemegPQxlEOT_A" target="_6NY80Er4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6R4bQEr4EemegPQxlEOT_A" name="PME_checkDecesion329">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6R3NIEr4EemegPQxlEOT_A" name="PME_checkDecesion329">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__326&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMtH0ErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMtH0UrDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM1DoErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry__773">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMuV8ErDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMuV8UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM3f4UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry__774">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6NecYEr4EemegPQxlEOT_A" name="DecesionPoint__277" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6Nit0Er4EemegPQxlEOT_A" name="Init__State__278"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tNMQAUrDEem2BZRQc2M93A" name="Debug__C__ServiceResult">
              <connectionPoint xmi:id="_5uZTsEr4EemegPQxlEOT_A" name="From__Parent__31" kind="entryPoint"/>
              <connectionPoint xmi:id="_5ueMMEr4EemegPQxlEOT_A" name="To__Parent__33" kind="exitPoint"/>
              <region xmi:id="_tNMQAkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_5utcwEr4EemegPQxlEOT_A" name="Trans__Init__State__3637" source="_5urAgEr4EemegPQxlEOT_A" target="_5ujEsEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_50yPkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__36&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__62&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__36&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__36&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_5uyVQEr4EemegPQxlEOT_A" name="From__Debug__A__Ac__ServiceResult__38" source="_tNkqgErDEem2BZRQc2M93A" target="_5ujEsEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_51h2cEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__62&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_5u1_oEr4EemegPQxlEOT_A" name="PME_Trig39" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5u5qAEr4EemegPQxlEOT_A" name="PME_Trig40" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_5vA-wEr4EemegPQxlEOT_A" name="PME_Trig41" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5vKIsEr4EemegPQxlEOT_A" name="PME_Trig42" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_5vdqsEr4EemegPQxlEOT_A" name="PME_Trig43" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5vwloEr4EemegPQxlEOT_A" name="PME_Trig44" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_5wFVwEr4EemegPQxlEOT_A" name="PME_Trig45" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5wXCkEr4EemegPQxlEOT_A" name="PME_Trig46" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_5wsZwEr4EemegPQxlEOT_A" name="PME_Trig47" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5w84cEr4EemegPQxlEOT_A" name="PME_Trig48" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_5xOlQEr4EemegPQxlEOT_A" name="PME_Trig49" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_5xj8cEr4EemegPQxlEOT_A" name="PME_Trig50" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_5xwwwEr4EemegPQxlEOT_A" name="PME_Trig51" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_5yB2gEr4EemegPQxlEOT_A" name="PME_Trig52" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5yRuIEr4EemegPQxlEOT_A" name="PME_Trig53" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_5ymeQEr4EemegPQxlEOT_A" name="PME_Trig54" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_5y7OYEr4EemegPQxlEOT_A" name="PME_Trig55" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_5zHboEr4EemegPQxlEOT_A" name="PME_Trig56" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_5zXTQEr4EemegPQxlEOT_A" name="PME_Trig57" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_5zjggEr4EemegPQxlEOT_A" name="PME_Trig58" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5z10YEr4EemegPQxlEOT_A" name="PME_Trig59" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_50J9cEr4EemegPQxlEOT_A" name="To__Debug__A__Ac__ServiceResult__60" guard="_51y8MUr4EemegPQxlEOT_A" source="_5ujEsEr4EemegPQxlEOT_A" target="_tNkqgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_51y8MUr4EemegPQxlEOT_A" name="PME_checkDecesion64">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_51y8MEr4EemegPQxlEOT_A" name="PME_checkDecesion64">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceResult__60&quot;,&quot;Debug__A__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_50U8kEr4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__61" source="_5uZTsEr4EemegPQxlEOT_A" target="_5ujEsEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_51KDAEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__62&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_50ZOAEr4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__62" guard="_51rncEr4EemegPQxlEOT_A" source="_5ujEsEr4EemegPQxlEOT_A" target="_5ueMMEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_51rncEr4EemegPQxlEOT_A" name="PME_checkDecesion63">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_51rAYEr4EemegPQxlEOT_A" name="PME_checkDecesion63">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__62&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tNkqgErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNkqgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN1JMErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult__802">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_5ujEsEr4EemegPQxlEOT_A" name="DecesionPoint__35" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_5urAgEr4EemegPQxlEOT_A" name="Init__State__36"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tOXUsErDEem2BZRQc2M93A" name="Debug__C__reqService">
              <connectionPoint xmi:id="_tOc0QUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_6ULhUEr4EemegPQxlEOT_A" name="From__Parent__367" kind="entryPoint"/>
              <connectionPoint xmi:id="_6UN9kEr4EemegPQxlEOT_A" name="To__Parent__369" kind="exitPoint"/>
              <region xmi:id="_tOXUsUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6UecQEr4EemegPQxlEOT_A" name="Trans__ex373" source="_tOc0QUrDEem2BZRQc2M93A" target="_6UUrQEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6WdZQEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__399&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__397&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6Ug4gEr4EemegPQxlEOT_A" name="Trans__Init__State__372374" source="_6UYVoEr4EemegPQxlEOT_A" target="_6UUrQEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6Wa9AEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__372&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__399&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__372&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__397&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__372&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6Uj70Er4EemegPQxlEOT_A" name="From__Debug__B__Ac__reqService__375" source="_tO2c4ErDEem2BZRQc2M93A" target="_6UUrQEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6WfOcEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__399&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__397&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6UpbYEr4EemegPQxlEOT_A" name="PME_Trig376" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6UtFwEr4EemegPQxlEOT_A" name="PME_Trig377" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6U0agEr4EemegPQxlEOT_A" name="PME_Trig378" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6U4E4Er4EemegPQxlEOT_A" name="PME_Trig379" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6VAnwEr4EemegPQxlEOT_A" name="PME_Trig380" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6VHVcEr4EemegPQxlEOT_A" name="PME_Trig381" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6VMN8Er4EemegPQxlEOT_A" name="PME_Trig382" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6VTisEr4EemegPQxlEOT_A" name="PME_Trig383" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6VWmAEr4EemegPQxlEOT_A" name="PME_Trig384" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6VdTsEr4EemegPQxlEOT_A" name="PME_Trig385" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6Vfv8Er4EemegPQxlEOT_A" name="PME_Trig386" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6VjaUEr4EemegPQxlEOT_A" name="PME_Trig387" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Vpg8Er4EemegPQxlEOT_A" name="PME_Trig388" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6VskQEr4EemegPQxlEOT_A" name="PME_Trig389" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6VzR8Er4EemegPQxlEOT_A" name="PME_Trig390" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6V1uMEr4EemegPQxlEOT_A" name="PME_Trig391" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6V700Er4EemegPQxlEOT_A" name="PME_Trig392" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6V9qAEr4EemegPQxlEOT_A" name="PME_Trig393" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6WAGQEr4EemegPQxlEOT_A" name="PME_Trig394" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6WFl0Er4EemegPQxlEOT_A" name="PME_Trig395" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6WJQMEr4EemegPQxlEOT_A" name="PME_Trig396" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6WQk8Er4EemegPQxlEOT_A" name="To__Debug__B__Ac__reqService__397" guard="_6WkuAUr4EemegPQxlEOT_A" source="_6UUrQEr4EemegPQxlEOT_A" target="_tO2c4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6WkuAUr4EemegPQxlEOT_A" name="PME_checkDecesion401">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6WkuAEr4EemegPQxlEOT_A" name="PME_checkDecesion401">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqService__397&quot;,&quot;Debug__B__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6WRzEEr4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__398" source="_6ULhUEr4EemegPQxlEOT_A" target="_6UUrQEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6WWrkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__399&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__397&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6WSaIEr4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__399" guard="_6WhqsUr4EemegPQxlEOT_A" source="_6UUrQEr4EemegPQxlEOT_A" target="_6UN9kEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6WhqsUr4EemegPQxlEOT_A" name="PME_checkDecesion400">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6WhqsEr4EemegPQxlEOT_A" name="PME_checkDecesion400">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__399&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tO2c4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO2c4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO7VYErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService__824">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6UUrQEr4EemegPQxlEOT_A" name="DecesionPoint__371" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6UYVoEr4EemegPQxlEOT_A" name="Init__State__372"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tPy4EErDEem2BZRQc2M93A" name="Debug__C__inittrans">
              <connectionPoint xmi:id="_6FaskEr4EemegPQxlEOT_A" name="From__Parent__181" kind="entryPoint"/>
              <connectionPoint xmi:id="_6FchwEr4EemegPQxlEOT_A" name="To__Parent__183" kind="exitPoint"/>
              <region xmi:id="_tPy4EUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6Fu1oEr4EemegPQxlEOT_A" name="Trans__Init__State__186187" source="_6Fm50Er4EemegPQxlEOT_A" target="_6FkdkEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6ISaYEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__186&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__212&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__186&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__210&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__186&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6FxR4Er4EemegPQxlEOT_A" name="From__Debug__A__En__inittrans__188" source="_tQFzAErDEem2BZRQc2M93A" target="_6FkdkEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6IJ3gEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__212&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__210&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6F4moEr4EemegPQxlEOT_A" name="PME_Trig189" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6F8RAEr4EemegPQxlEOT_A" name="PME_Trig190" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6GEz4Er4EemegPQxlEOT_A" name="PME_Trig191" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6GMvsEr4EemegPQxlEOT_A" name="PME_Trig192" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6GQaEEr4EemegPQxlEOT_A" name="PME_Trig193" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6GYV4Er4EemegPQxlEOT_A" name="PME_Trig194" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Gd1cEr4EemegPQxlEOT_A" name="PME_Trig195" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Gj8EEr4EemegPQxlEOT_A" name="PME_Trig196" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6GrQ0Er4EemegPQxlEOT_A" name="PME_Trig197" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Gu7MEr4EemegPQxlEOT_A" name="PME_Trig198" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6G2P8Er4EemegPQxlEOT_A" name="PME_Trig199" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6G89oEr4EemegPQxlEOT_A" name="PME_Trig200" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6HB2IEr4EemegPQxlEOT_A" name="PME_Trig201" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6HJx8Er4EemegPQxlEOT_A" name="PME_Trig202" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6HNcUEr4EemegPQxlEOT_A" name="PME_Trig203" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6HVYIEr4EemegPQxlEOT_A" name="PME_Trig204" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6Ha3sEr4EemegPQxlEOT_A" name="PME_Trig205" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6HiMcEr4EemegPQxlEOT_A" name="PME_Trig206" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6HqvUEr4EemegPQxlEOT_A" name="PME_Trig207" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6HwO4Er4EemegPQxlEOT_A" name="PME_Trig208" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6H1ucEr4EemegPQxlEOT_A" name="PME_Trig209" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6H-RUEr4EemegPQxlEOT_A" name="To__Debug__A__En__inittrans__210" guard="_6IcycUr4EemegPQxlEOT_A" source="_6FkdkEr4EemegPQxlEOT_A" target="_tQFzAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6IcycUr4EemegPQxlEOT_A" name="PME_checkDecesion214">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6IcycEr4EemegPQxlEOT_A" name="PME_checkDecesion214">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__inittrans__210&quot;,&quot;Debug__A__En__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6IB7sEr4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__211" source="_6FaskEr4EemegPQxlEOT_A" target="_6FkdkEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6IWEwEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__212&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__210&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6IEX8Er4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__212" guard="_6IbkUUr4EemegPQxlEOT_A" source="_6FkdkEr4EemegPQxlEOT_A" target="_6FchwEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6IbkUUr4EemegPQxlEOT_A" name="PME_checkDecesion213">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6IbkUEr4EemegPQxlEOT_A" name="PME_checkDecesion213">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__212&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQFzAErDEem2BZRQc2M93A" name="Debug__A__En__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQFzAUrDEem2BZRQc2M93A" name="Debug__A__En__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__En__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQNu0UrDEem2BZRQc2M93A" name="Debug__A__En__inittrans__871">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__En__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6FkdkEr4EemegPQxlEOT_A" name="DecesionPoint__185" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6Fm50Er4EemegPQxlEOT_A" name="Init__State__186"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tQWRsErDEem2BZRQc2M93A" name="Debug__Path__ReqFlowDone" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tQW4wUrDEem2BZRQc2M93A" name="Debug__C__ReqFlowDone">
              <connectionPoint xmi:id="_6ADEYEr4EemegPQxlEOT_A" name="From__Parent__123" kind="entryPoint"/>
              <connectionPoint xmi:id="_6ALnQEr4EemegPQxlEOT_A" name="To__Parent__125" kind="exitPoint"/>
              <region xmi:id="_tQW4wkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6ActAEr4EemegPQxlEOT_A" name="Trans__Init__State__128129" source="_6AV_UEr4EemegPQxlEOT_A" target="_6ARG0Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6E7kYEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__128&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__128&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__128&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__175&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__128&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6Ag-cEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__ReqFlowDone__130" source="_tQwhYErDEem2BZRQc2M93A" target="_6ARG0Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6FIYsEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__175&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6AjasEr4EemegPQxlEOT_A" name="PME_Trig131" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6ArWgEr4EemegPQxlEOT_A" name="PME_Trig132" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6A5Y8Er4EemegPQxlEOT_A" name="PME_Trig133" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6BAGoEr4EemegPQxlEOT_A" name="PME_Trig134" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6BICcEr4EemegPQxlEOT_A" name="PME_Trig135" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6BLFwEr4EemegPQxlEOT_A" name="PME_Trig136" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6BSagEr4EemegPQxlEOT_A" name="PME_Trig137" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6BWr8Er4EemegPQxlEOT_A" name="PME_Trig138" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6BcykEr4EemegPQxlEOT_A" name="PME_Trig139" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Bl8gEr4EemegPQxlEOT_A" name="PME_Trig140" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6Bo_0Er4EemegPQxlEOT_A" name="PME_Trig141" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6BxisEr4EemegPQxlEOT_A" name="PME_Trig142" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6B4QYEr4EemegPQxlEOT_A" name="PME_Trig143" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6B8h0Er4EemegPQxlEOT_A" name="PME_Trig144" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6CD2kEr4EemegPQxlEOT_A" name="PME_Trig145" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6CHg8Er4EemegPQxlEOT_A" name="PME_Trig146" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6CO1sEr4EemegPQxlEOT_A" name="PME_Trig147" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6CRR8Er4EemegPQxlEOT_A" name="PME_Trig148" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6CX_oEr4EemegPQxlEOT_A" name="PME_Trig149" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6Cab4Er4EemegPQxlEOT_A" name="PME_Trig150" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Ci-wEr4EemegPQxlEOT_A" name="PME_Trig151" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6CpscEr4EemegPQxlEOT_A" name="From__Debug__A__En__Ready__152" source="_tQy9oErDEem2BZRQc2M93A" target="_6ARG0Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6EzBgEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__175&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6Ct94Er4EemegPQxlEOT_A" name="PME_Trig153" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6CvzEEr4EemegPQxlEOT_A" name="PME_Trig154" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6C3u4Er4EemegPQxlEOT_A" name="PME_Trig155" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6C6LIEr4EemegPQxlEOT_A" name="PME_Trig156" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6DCG8Er4EemegPQxlEOT_A" name="PME_Trig157" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6DG_cEr4EemegPQxlEOT_A" name="PME_Trig158" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6DNGEEr4EemegPQxlEOT_A" name="PME_Trig159" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6DTzwEr4EemegPQxlEOT_A" name="PME_Trig160" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6DYFMEr4EemegPQxlEOT_A" name="PME_Trig161" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6DeL0Er4EemegPQxlEOT_A" name="PME_Trig162" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6DidQEr4EemegPQxlEOT_A" name="PME_Trig163" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6DmHoEr4EemegPQxlEOT_A" name="PME_Trig164" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6Dn80Er4EemegPQxlEOT_A" name="PME_Trig165" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6Ds1UEr4EemegPQxlEOT_A" name="PME_Trig166" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6D3NYEr4EemegPQxlEOT_A" name="PME_Trig167" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6D8s8Er4EemegPQxlEOT_A" name="PME_Trig168" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6EBlcEr4EemegPQxlEOT_A" name="PME_Trig169" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6EJhQEr4EemegPQxlEOT_A" name="PME_Trig170" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6EPn4Er4EemegPQxlEOT_A" name="PME_Trig171" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6EVHcEr4EemegPQxlEOT_A" name="PME_Trig172" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6EYKwEr4EemegPQxlEOT_A" name="PME_Trig173" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6EgGkEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__ReqFlowDone__174" guard="_6FRioUr4EemegPQxlEOT_A" source="_6ARG0Er4EemegPQxlEOT_A" target="_tQwhYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6FRioUr4EemegPQxlEOT_A" name="PME_checkDecesion179">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6FRioEr4EemegPQxlEOT_A" name="PME_checkDecesion179">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ReqFlowDone__174&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6EgtoEr4EemegPQxlEOT_A" name="To__Debug__A__En__Ready__175" guard="_6FSwwUr4EemegPQxlEOT_A" source="_6ARG0Er4EemegPQxlEOT_A" target="_tQy9oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6FSwwUr4EemegPQxlEOT_A" name="PME_checkDecesion180">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6FSwwEr4EemegPQxlEOT_A" name="PME_checkDecesion180">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__175&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6EpQgEr4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__176" source="_6ADEYEr4EemegPQxlEOT_A" target="_6ARG0Er4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6E_10Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__177&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__175&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6Ep3kEr4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__177" guard="_6FMqIEr4EemegPQxlEOT_A" source="_6ARG0Er4EemegPQxlEOT_A" target="_6ALnQEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6FMqIEr4EemegPQxlEOT_A" name="PME_checkDecesion178">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6FMDEEr4EemegPQxlEOT_A" name="PME_checkDecesion178">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__177&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQwhYErDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQwhYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReqFlowDone&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQ-j0UrDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone__893">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQy9oErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQzksErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRC1QErDEem2BZRQc2M93A" name="Debug__A__En__Ready__895">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6ARG0Er4EemegPQxlEOT_A" name="DecesionPoint__127" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6AV_UEr4EemegPQxlEOT_A" name="Init__State__128"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tRUiEUrDEem2BZRQc2M93A" name="Debug__C__StarupTransition">
              <connectionPoint xmi:id="_518GIEr4EemegPQxlEOT_A" name="From__Parent__65" kind="entryPoint"/>
              <connectionPoint xmi:id="_52EpAEr4EemegPQxlEOT_A" name="To__Parent__67" kind="exitPoint"/>
              <region xmi:id="_tRUiEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_524hUEr4EemegPQxlEOT_A" name="Trans__Init__State__7071" source="_52kYQEr4EemegPQxlEOT_A" target="_52TSgEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_5_lKUEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__70&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__116&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__70&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__70&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__119&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__70&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_53PGoEr4EemegPQxlEOT_A" name="From__Debug__A__En__Ready__72" source="_tR2GgErDEem2BZRQc2M93A" target="_52TSgEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_5_bZUEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__116&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__119&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_53gMYEr4EemegPQxlEOT_A" name="PME_Trig73" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5308gEr4EemegPQxlEOT_A" name="PME_Trig74" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_54JFkEr4EemegPQxlEOT_A" name="PME_Trig75" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_54o00Er4EemegPQxlEOT_A" name="PME_Trig76" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_55V_cEr4EemegPQxlEOT_A" name="PME_Trig77" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_56bkkEr4EemegPQxlEOT_A" name="PME_Trig78" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_56mjsEr4EemegPQxlEOT_A" name="PME_Trig79" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_56vGkEr4EemegPQxlEOT_A" name="PME_Trig80" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_56yw8Er4EemegPQxlEOT_A" name="PME_Trig81" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_566swEr4EemegPQxlEOT_A" name="PME_Trig82" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_569wEEr4EemegPQxlEOT_A" name="PME_Trig83" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_57IvMEr4EemegPQxlEOT_A" name="PME_Trig84" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_57R5IEr4EemegPQxlEOT_A" name="PME_Trig85" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_57ZN4Er4EemegPQxlEOT_A" name="PME_Trig86" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_57c4QEr4EemegPQxlEOT_A" name="PME_Trig87" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_57sv4Er4EemegPQxlEOT_A" name="PME_Trig88" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_574WEEr4EemegPQxlEOT_A" name="PME_Trig89" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_5791oEr4EemegPQxlEOT_A" name="PME_Trig90" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_58NtQEr4EemegPQxlEOT_A" name="PME_Trig91" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_58W3MEr4EemegPQxlEOT_A" name="PME_Trig92" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_58bvsEr4EemegPQxlEOT_A" name="PME_Trig93" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_58jrgEr4EemegPQxlEOT_A" name="From__Debug__B__Ex__StandBY__94" source="_tRx1EErDEem2BZRQc2M93A" target="_52TSgEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_5_RBQEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__116&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__119&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_58s1cEr4EemegPQxlEOT_A" name="PME_Trig95" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_584boEr4EemegPQxlEOT_A" name="PME_Trig96" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_59F3AEr4EemegPQxlEOT_A" name="PME_Trig97" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_59L9oEr4EemegPQxlEOT_A" name="PME_Trig98" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_59VHkEr4EemegPQxlEOT_A" name="PME_Trig99" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_59eRgEr4EemegPQxlEOT_A" name="PME_Trig100" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_59kYIEr4EemegPQxlEOT_A" name="PME_Trig101" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_59v-UEr4EemegPQxlEOT_A" name="PME_Trig102" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_594hMEr4EemegPQxlEOT_A" name="PME_Trig103" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_59-n0Er4EemegPQxlEOT_A" name="PME_Trig104" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_5-GjoEr4EemegPQxlEOT_A" name="PME_Trig105" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_5-Jm8Er4EemegPQxlEOT_A" name="PME_Trig106" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_5-Q7sEr4EemegPQxlEOT_A" name="PME_Trig107" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_5-TX8Er4EemegPQxlEOT_A" name="PME_Trig108" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5-bTwEr4EemegPQxlEOT_A" name="PME_Trig109" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_5-flMEr4EemegPQxlEOT_A" name="PME_Trig110" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_5-m58Er4EemegPQxlEOT_A" name="PME_Trig111" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_5-pWMEr4EemegPQxlEOT_A" name="PME_Trig112" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_5-wD4Er4EemegPQxlEOT_A" name="PME_Trig113" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_5-1jcEr4EemegPQxlEOT_A" name="PME_Trig114" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_5-7DAEr4EemegPQxlEOT_A" name="PME_Trig115" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_5_EM8Er4EemegPQxlEOT_A" name="To__Debug__A__En__Ready__116" guard="_5_2QEUr4EemegPQxlEOT_A" source="_52TSgEr4EemegPQxlEOT_A" target="_tR2GgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_5_2QEUr4EemegPQxlEOT_A" name="PME_checkDecesion120">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_5_2QEEr4EemegPQxlEOT_A" name="PME_checkDecesion120">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__116&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_5_E0AEr4EemegPQxlEOT_A" name="To__Debug__B__Ex__StandBY__117" guard="_5_4FQUr4EemegPQxlEOT_A" source="_52TSgEr4EemegPQxlEOT_A" target="_tRx1EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_5_4FQUr4EemegPQxlEOT_A" name="PME_checkDecesion121">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_5_4FQEr4EemegPQxlEOT_A" name="PME_checkDecesion121">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBY__117&quot;,&quot;Debug__B__Ex__StandBY&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_5_H3UEr4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__118" source="_518GIEr4EemegPQxlEOT_A" target="_52TSgEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_5_ylsEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__116&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__119&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_5_JsgEr4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__119" guard="_5_-L4Er4EemegPQxlEOT_A" source="_52TSgEr4EemegPQxlEOT_A" target="_52EpAEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_5_-L4Er4EemegPQxlEOT_A" name="PME_checkDecesion122">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_5_9k0Er4EemegPQxlEOT_A" name="PME_checkDecesion122">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__119&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tRx1EErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tRx1EUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tR7mEErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY__917">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tR2GgErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR2tkErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSEI8ErDEem2BZRQc2M93A" name="Debug__A__En__Ready__920">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_52TSgEr4EemegPQxlEOT_A" name="DecesionPoint__69" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_52kYQEr4EemegPQxlEOT_A" name="Init__State__70"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tTDncErDEem2BZRQc2M93A" name="Debug__Path__NoResponseFromServer" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tTEOgUrDEem2BZRQc2M93A" name="Debug__C__NoResponseFromServer">
              <connectionPoint xmi:id="_tTGqwErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_6R_I8Er4EemegPQxlEOT_A" name="From__Parent__331" kind="entryPoint"/>
              <connectionPoint xmi:id="_6SA-IEr4EemegPQxlEOT_A" name="To__Parent__333" kind="exitPoint"/>
              <region xmi:id="_tTEOgkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_6SLWMEr4EemegPQxlEOT_A" name="Trans__ex337" source="_tTGqwErDEem2BZRQc2M93A" target="_6SEogEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6T6bkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__363&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__361&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6SL9QEr4EemegPQxlEOT_A" name="Trans__Init__State__336338" source="_6SI58Er4EemegPQxlEOT_A" target="_6SEogEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6Tzt4Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__336&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__363&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__336&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__361&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__336&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6SSq8Er4EemegPQxlEOT_A" name="From__Debug__B__Ex__WaitingForReply__339" source="_tTTfEErDEem2BZRQc2M93A" target="_6SEogEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6TryEEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__363&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__361&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6ST5EEr4EemegPQxlEOT_A" name="PME_Trig340" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6SWVUEr4EemegPQxlEOT_A" name="PME_Trig341" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6SdqEEr4EemegPQxlEOT_A" name="PME_Trig342" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6SiikEr4EemegPQxlEOT_A" name="PME_Trig343" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6SnbEEr4EemegPQxlEOT_A" name="PME_Trig344" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6SpQQEr4EemegPQxlEOT_A" name="PME_Trig345" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6SthsEr4EemegPQxlEOT_A" name="PME_Trig346" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6SyaMEr4EemegPQxlEOT_A" name="PME_Trig347" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6S02cEr4EemegPQxlEOT_A" name="PME_Trig348" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6S6WAEr4EemegPQxlEOT_A" name="PME_Trig349" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6S8LMEr4EemegPQxlEOT_A" name="PME_Trig350" event="_5dslQEr4EemegPQxlEOT_A" port="_5hzCIEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6S-AYEr4EemegPQxlEOT_A" name="PME_Trig351" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6TCR0Er4EemegPQxlEOT_A" name="PME_Trig352" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6THKUEr4EemegPQxlEOT_A" name="PME_Trig353" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6TK0sEr4EemegPQxlEOT_A" name="PME_Trig354" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_6TPtMEr4EemegPQxlEOT_A" name="PME_Trig355" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6TSJcEr4EemegPQxlEOT_A" name="PME_Trig356" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_6TVMwEr4EemegPQxlEOT_A" name="PME_Trig357" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6TasUEr4EemegPQxlEOT_A" name="PME_Trig358" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6TeWsEr4EemegPQxlEOT_A" name="PME_Trig359" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_6Tj2QEr4EemegPQxlEOT_A" name="PME_Trig360" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6Tm5kEr4EemegPQxlEOT_A" name="To__Debug__B__Ex__WaitingForReply__361" guard="_6UBJQEr4EemegPQxlEOT_A" source="_6SEogEr4EemegPQxlEOT_A" target="_tTTfEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6UBJQEr4EemegPQxlEOT_A" name="PME_checkDecesion365">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6UAiMEr4EemegPQxlEOT_A" name="PME_checkDecesion365">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__361&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6TouwEr4EemegPQxlEOT_A" name="From__Parnet__ClientStateMachine__362" source="_6R_I8Er4EemegPQxlEOT_A" target="_6SEogEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6T-tAEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__363&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__361&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6TpV0Er4EemegPQxlEOT_A" name="To__Parent__ClientStateMachine__363" guard="_6T_7IUr4EemegPQxlEOT_A" source="_6SEogEr4EemegPQxlEOT_A" target="_6SA-IEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6T_7IUr4EemegPQxlEOT_A" name="PME_checkDecesion364">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6T_7IEr4EemegPQxlEOT_A" name="PME_checkDecesion364">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__363&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tTTfEErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTTfEUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTY-oUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__969">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6SEogEr4EemegPQxlEOT_A" name="DecesionPoint__335" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6SI58Er4EemegPQxlEOT_A" name="Init__State__336"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_5ppWkEr4EemegPQxlEOT_A" name="DecesionPoint__1" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_5pxSYEr4EemegPQxlEOT_A" name="New__State__2"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swtvYErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swtIUErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Server1Comm.recallAll();
ConfigComm.recallAll();
Server2Comm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sw_cMUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sw_cMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxFi0ErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxDGkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxYdwErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sxOswErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5lIqAUr4EemegPQxlEOT_A" name="loadHeap" specification="_5lIqAEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5lTpIEr4EemegPQxlEOT_A" name="unLoadHeap" specification="_5lSbAEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5nW3kEr4EemegPQxlEOT_A" name="sendMessage" specification="_5nVCYEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server1Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server1Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server2Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server2Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5nrAoEr4EemegPQxlEOT_A" name="sendInternalMessage" specification="_5nqZkEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5pQ8EUr4EemegPQxlEOT_A" name="initForPMD" specification="_5pQ8EEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Client::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Client::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Server1Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Server2Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;RequestTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ConfigTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ResponseTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Server1Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Server2Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swtIUErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swtvYErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sw_cMErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sw_cMUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxDGkErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxFi0ErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxDtoErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxEUsErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxE7wErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sxOswErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sxYdwErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxPT0ErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxQh8ErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxRwEUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxS-MUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxTlQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxUzYUrDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxWBgUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxXPoErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sUrDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5lIqAEr4EemegPQxlEOT_A" name="loadHeap" visibility="private" method="_5lIqAUr4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_5lSbAEr4EemegPQxlEOT_A" name="unLoadHeap" visibility="private" method="_5lTpIEr4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_5nVCYEr4EemegPQxlEOT_A" name="sendMessage" visibility="private" method="_5nW3kEr4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_5nZT0Er4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5nah8Er4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5nqZkEr4EemegPQxlEOT_A" name="sendInternalMessage" visibility="private" method="_5nrAoEr4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_5ns10Er4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5nuD8Er4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5pQ8EEr4EemegPQxlEOT_A" name="initForPMD" visibility="private" method="_5pQ8EUr4EemegPQxlEOT_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_yqOfEAxwEeaB2MeL96fedA" memberEnd="_yqPtMgxwEeaB2MeL96fedA _yqQUQAxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_yqPtMAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_yqPtMQxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_yqQUQAxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_yqOfEAxwEeaB2MeL96fedA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_z8f_QAxwEeaB2MeL96fedA" memberEnd="_z8hNYQxwEeaB2MeL96fedA _z8hNYgxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_z8gmUAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_z8hNYAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_z8hNYgxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_z8f_QAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_OiTE0AghEea_md0mpENoqg" name="Utility">
      <packagedElement xmi:type="uml:Class" xmi:id="_JesyoAgiEea_md0mpENoqg" name="HostInfo" visibility="public">
        <ownedAttribute xmi:id="_l4sHAAgiEea_md0mpENoqg" name="hostType" type="_TE8UIAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_6EOE0AglEea_md0mpENoqg" name="status" type="_gf1EkAglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_TE8UIAgiEea_md0mpENoqg" name="HostType">
        <ownedLiteral xmi:id="_Y-NNkAgiEea_md0mpENoqg" name="CLI"/>
        <ownedLiteral xmi:id="_aJOPMAgiEea_md0mpENoqg" name="SRV"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_gf1EkAglEea_md0mpENoqg" name="HostStatus" visibility="public">
        <ownedLiteral xmi:id="_ygyIkAglEea_md0mpENoqg" name="Active"/>
        <ownedLiteral xmi:id="_0Co84AglEea_md0mpENoqg" name="Deactive"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_-VDn4AglEea_md0mpENoqg" name="ServerRole">
        <ownedLiteral xmi:id="_GJYf0AgmEea_md0mpENoqg" name="Master"/>
        <ownedLiteral xmi:id="_HZTPkAgmEea_md0mpENoqg" name="Slave"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_T635wAgmEea_md0mpENoqg" name="ServerInfo">
        <generalization xmi:id="_jCuQYAgrEea_md0mpENoqg" general="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_Y5vngAgmEea_md0mpENoqg" name="role" type="_-VDn4AglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04e0AgsEea_md0mpENoqg" name="ConfigProtocol">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_v000cAgsEea_md0mpENoqg" name="ConfigProtocol">
          <interfaceRealization xmi:id="_v0_zkAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v09XUAgsEea_md0mpENoqg" contract="_v09XUAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_v1SHcAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg" contract="_v1PrMAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v09XUAgsEea_md0mpENoqg" name="ConfigProtocol">
          <ownedOperation xmi:id="_Mnix4AgtEea_md0mpENoqg" name="ReplyReplicationMode">
            <ownedParameter xmi:id="_Mnix4QgtEea_md0mpENoqg" name="RunningMode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_GvEtMAguEea_md0mpENoqg" name="ReplyServerRole">
            <ownedParameter xmi:id="_GvEtMQguEea_md0mpENoqg" name="ServerRole">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlnCwAguEea_md0mpENoqg" name="StartUp">
            <ownedParameter xmi:id="_oGfrwAlpEea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OMA_4AguEea_md0mpENoqg" name="Shutdown"/>
          <ownedOperation xmi:id="_QoJEEAguEea_md0mpENoqg" name="BIT"/>
          <ownedOperation xmi:id="_mLtTMAguEea_md0mpENoqg" name="ReplyMasterId">
            <ownedParameter xmi:id="_s-1M0AguEea_md0mpENoqg" name="MasterId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Iv10IAl4Eea_md0mpENoqg" name="ReplyConfig">
            <ownedParameter xmi:id="_Iv10IQl4Eea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1I9gAgsEea_md0mpENoqg" name="ConfigProtocol~">
          <ownedOperation xmi:id="_AW3DYAgtEea_md0mpENoqg" name="QueryReplicationMode"/>
          <ownedOperation xmi:id="_yDGNYAgtEea_md0mpENoqg" name="QueryServerRole">
            <ownedParameter xmi:id="_yDGNYQgtEea_md0mpENoqg" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_hZgIcAguEea_md0mpENoqg" name="QueryMasterId"/>
          <ownedOperation xmi:id="_BB20wAl4Eea_md0mpENoqg" name="QueryConfig"/>
          <ownedOperation xmi:id="_xu1hMAl4Eea_md0mpENoqg" name="IAMMaster">
            <ownedParameter xmi:id="_xu1hMQl4Eea_md0mpENoqg" name="MasterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1MA0AgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1I9gAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_v1N2AAgsEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1PrMAgsEea_md0mpENoqg" name="ConfigProtocolIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1SugAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_AW3qcAgtEea_md0mpENoqg" operation="_AW3DYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MnkAAAgtEea_md0mpENoqg" operation="_Mnix4AgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_yDG0cAgtEea_md0mpENoqg" operation="_yDGNYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_GvF7UAguEea_md0mpENoqg" operation="_GvEtMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MloQ4AguEea_md0mpENoqg" operation="_MlnCwAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_OMBm8AguEea_md0mpENoqg" operation="_OMA_4AguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_QoLgUAguEea_md0mpENoqg" operation="_QoJEEAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_hZh9oAguEea_md0mpENoqg" operation="_hZgIcAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_mLvIYAguEea_md0mpENoqg" operation="_mLtTMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_BB3b0Al4Eea_md0mpENoqg" operation="_BB20wAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_Iv3CQAl4Eea_md0mpENoqg" operation="_Iv10IAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xu1hMgl4Eea_md0mpENoqg" operation="_xu1hMAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RLyKYAgzEea_md0mpENoqg" name="EchoCapsule" classifierBehavior="_WlNQsAg0Eea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_PdYSYAg0Eea_md0mpENoqg" name="Echo" visibility="public" type="_nk_BAAgzEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WNSukAm2Eea_md0mpENoqg" value="8"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WOSNEAm2Eea_md0mpENoqg" value="8"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swEPIErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swFdQUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swGEUErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swS4oErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swTfsErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swUt0ErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swXKEErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_6bYVgEr4EemegPQxlEOT_A" name="dbgPortForEchoCapsule" visibility="protected" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6bYVgUr4EemegPQxlEOT_A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_6bYVgkr4EemegPQxlEOT_A" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WlNQsAg0Eea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_abLcsAg0Eea_md0mpENoqg" name="Region1">
            <transition xmi:id="_tKsVoErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKs8sErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange__718">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tKsVoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKtjwErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKtjwkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint__719">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKtjwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKuK0ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKux4UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint__720">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKux4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKvY8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKvY8krDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints__721">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKvY8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwAAErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwAAkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode__722">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tKwAAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwnEErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwnEkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg__723">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKwnEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_6dGz0Er4EemegPQxlEOT_A" name="Trans__Init__State__421422" source="_6c-4AUr4EemegPQxlEOT_A" target="_6c9C0Er4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6f8scEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__421&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__421&quot;,&quot;New__State__420&quot;,&quot;To__New__State__420__435&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__421&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6dHa4Er4EemegPQxlEOT_A" name="Trans__Debug__Path__init__WaitForEcho__8423" source="_tKgvcErDEem2BZRQc2M93A" target="_6c9C0Er4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6f3z8Er4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;New__State__420&quot;,&quot;To__New__State__420__435&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6dNhgEr4EemegPQxlEOT_A" name="424" source="_tKgvcErDEem2BZRQc2M93A" target="_6c9C0Er4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6fyUYEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;New__State__420&quot;,&quot;To__New__State__420__435&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_6dRy8Er4EemegPQxlEOT_A" name="From__New__State__420__425" source="_6c9p4Ur4EemegPQxlEOT_A" target="_6c9C0Er4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6gFPUEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__420&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__420&quot;,&quot;New__State__420&quot;,&quot;To__New__State__420__435&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__420&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_6dToIEr4EemegPQxlEOT_A" name="PME_Trig426" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_6dU2QEr4EemegPQxlEOT_A" name="PME_Trig427" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_6dcLAEr4EemegPQxlEOT_A" name="PME_Trig428" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_6deAMEr4EemegPQxlEOT_A" name="PME_Trig429" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_6dgccEr4EemegPQxlEOT_A" name="PME_Trig430" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_6dhqkEr4EemegPQxlEOT_A" name="PME_Trig431" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_6di4sEr4EemegPQxlEOT_A" name="PME_Trig432" event="_5dslQEr4EemegPQxlEOT_A" port="_6bYVgEr4EemegPQxlEOT_A"/>
              <trigger xmi:id="_6dmjEEr4EemegPQxlEOT_A" name="PME_Trig433" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_6dtQwEr4EemegPQxlEOT_A" name="PME_Trig434" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_6dxiMEr4EemegPQxlEOT_A" name="To__New__State__420__435" guard="_6gJgwUr4EemegPQxlEOT_A" source="_6c9C0Er4EemegPQxlEOT_A" target="_6c9p4Ur4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6gJgwUr4EemegPQxlEOT_A" name="PME_checkDecesion481">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6gJgwEr4EemegPQxlEOT_A" name="PME_checkDecesion481">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__New__State__420__435&quot;,&quot;New__State__420&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6d4P4Er4EemegPQxlEOT_A" name="To__Substates__Debug__C__init__WaitForEcho__8__437" guard="_6gI5sUr4EemegPQxlEOT_A" source="_6c9C0Er4EemegPQxlEOT_A" target="_6dywUEr4EemegPQxlEOT_A">
              <ownedRule xmi:id="_6gI5sUr4EemegPQxlEOT_A" name="PME_checkDecesion480">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_6gI5sEr4EemegPQxlEOT_A" name="PME_checkDecesion480">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__init__WaitForEcho__8__437&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_6d6FEUr4EemegPQxlEOT_A" name="From__Substates__Debug__C__init__WaitForEcho__8__439" source="_6d5eAEr4EemegPQxlEOT_A" target="_6c9C0Er4EemegPQxlEOT_A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6f63QEr4EemegPQxlEOT_A">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__437&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;New__State__420&quot;,&quot;To__New__State__420__435&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tKgvcErDEem2BZRQc2M93A" name="Debug__Path__init__WaitForEcho__8" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tKh9kUrDEem2BZRQc2M93A" name="Debug__C__init__WaitForEcho__8">
              <connectionPoint xmi:id="_6dywUEr4EemegPQxlEOT_A" name="From__Parent__436" kind="entryPoint"/>
              <connectionPoint xmi:id="_6d5eAEr4EemegPQxlEOT_A" name="To__Parent__438" kind="exitPoint"/>
              <region xmi:id="_tKh9kkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tK2tsUrDEem2BZRQc2M93A" name="Debug__Ac__init__WaitForEcho__8" source="_tKzDUUrDEem2BZRQc2M93A" target="_tK0RcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tK370ErDEem2BZRQc2M93A" name="init" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;EchoCapsule: Intializing\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK2tskrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tK370UrDEem2BZRQc2M93A" name="Debug__En__WaitForEcho" source="_tK0RcErDEem2BZRQc2M93A" target="_tK1fkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLF-QErDEem2BZRQc2M93A" name="Debug__En__WaitForEcho__731">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__En__WaitForEcho&quot;,(char *)&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK4i4ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_6eD2EEr4EemegPQxlEOT_A" name="Trans__Init__State__441442" source="_6d8hUEr4EemegPQxlEOT_A" target="_6d6sIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6fnVQEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__441&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__441&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__472&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__441&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__473&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__441&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__471&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__441&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6eFrQEr4EemegPQxlEOT_A" name="From__Debug__A__En__init__WaitForEcho__8__443" source="_tK1fkErDEem2BZRQc2M93A" target="_6d6sIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6fh1sEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__472&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__473&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__471&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6eG5YEr4EemegPQxlEOT_A" name="PME_Trig444" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6eOOIEr4EemegPQxlEOT_A" name="PME_Trig445" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6eQDUEr4EemegPQxlEOT_A" name="PME_Trig446" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6eTtsEr4EemegPQxlEOT_A" name="PME_Trig447" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6eZ0UEr4EemegPQxlEOT_A" name="PME_Trig448" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6ebCcEr4EemegPQxlEOT_A" name="PME_Trig449" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_6eiXMEr4EemegPQxlEOT_A" name="PME_Trig450" event="_5dslQEr4EemegPQxlEOT_A" port="_6bYVgEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6ejlUEr4EemegPQxlEOT_A" name="PME_Trig451" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6ekMYEr4EemegPQxlEOT_A" name="PME_Trig452" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_6elagEr4EemegPQxlEOT_A" name="From__Debug__B__Ac__init__WaitForEcho__8__453" source="_tKzDUUrDEem2BZRQc2M93A" target="_6d6sIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6fqYkEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__472&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__473&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__471&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6epr8Er4EemegPQxlEOT_A" name="PME_Trig454" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6esvQEr4EemegPQxlEOT_A" name="PME_Trig455" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6et9YEr4EemegPQxlEOT_A" name="PME_Trig456" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6evykEr4EemegPQxlEOT_A" name="PME_Trig457" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6e15MEr4EemegPQxlEOT_A" name="PME_Trig458" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6e3uYEr4EemegPQxlEOT_A" name="PME_Trig459" event="_5dslQEr4EemegPQxlEOT_A" port="_6bYVgEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6e48gEr4EemegPQxlEOT_A" name="PME_Trig460" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6e7_0Er4EemegPQxlEOT_A" name="PME_Trig461" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_6fA4UEr4EemegPQxlEOT_A" name="From__Debug__A__Ac__init__WaitForEcho__8__462" source="_tK0RcErDEem2BZRQc2M93A" target="_6d6sIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6frmsEr4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__472&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__473&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__471&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_6fCGcEr4EemegPQxlEOT_A" name="PME_Trig463" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_6fD7oEr4EemegPQxlEOT_A" name="PME_Trig464" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6fLQYEr4EemegPQxlEOT_A" name="PME_Trig465" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6fNFkEr4EemegPQxlEOT_A" name="PME_Trig466" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_6fOTsEr4EemegPQxlEOT_A" name="PME_Trig467" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_6fVBYEr4EemegPQxlEOT_A" name="PME_Trig468" event="_5dslQEr4EemegPQxlEOT_A" port="_6bYVgEr4EemegPQxlEOT_A"/>
                  <trigger xmi:id="_6fWPgEr4EemegPQxlEOT_A" name="PME_Trig469" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_6fXdoEr4EemegPQxlEOT_A" name="PME_Trig470" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_6feLUEr4EemegPQxlEOT_A" name="To__Debug__A__En__init__WaitForEcho__8__471" guard="_6fv4I0r4EemegPQxlEOT_A" source="_6d6sIEr4EemegPQxlEOT_A" target="_tK1fkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6fv4I0r4EemegPQxlEOT_A" name="PME_checkDecesion479">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6fv4Ikr4EemegPQxlEOT_A" name="PME_checkDecesion479">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__init__WaitForEcho__8__471&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6feyYEr4EemegPQxlEOT_A" name="To__Debug__B__Ac__init__WaitForEcho__8__472" guard="_6fvREUr4EemegPQxlEOT_A" source="_6d6sIEr4EemegPQxlEOT_A" target="_tKzDUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6fvREUr4EemegPQxlEOT_A" name="PME_checkDecesion477">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6fvREEr4EemegPQxlEOT_A" name="PME_checkDecesion477">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__init__WaitForEcho__8__472&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6ffZcEr4EemegPQxlEOT_A" name="To__Debug__A__Ac__init__WaitForEcho__8__473" guard="_6fv4IUr4EemegPQxlEOT_A" source="_6d6sIEr4EemegPQxlEOT_A" target="_tK0RcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_6fv4IUr4EemegPQxlEOT_A" name="PME_checkDecesion478">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6fv4IEr4EemegPQxlEOT_A" name="PME_checkDecesion478">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__init__WaitForEcho__8__473&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_6fgnkEr4EemegPQxlEOT_A" name="From__Parnet__StateMachine1__474" source="_6dywUEr4EemegPQxlEOT_A" target="_6d6sIEr4EemegPQxlEOT_A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6fs00Er4EemegPQxlEOT_A">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__472&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__473&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__471&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_6fgnkUr4EemegPQxlEOT_A" name="To__Parent__StateMachine1__475" guard="_6fuqAUr4EemegPQxlEOT_A" source="_6d6sIEr4EemegPQxlEOT_A" target="_6d5eAEr4EemegPQxlEOT_A">
                  <ownedRule xmi:id="_6fuqAUr4EemegPQxlEOT_A" name="PME_checkDecesion476">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_6fuqAEr4EemegPQxlEOT_A" name="PME_checkDecesion476">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__475&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKzDUUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKzqYErDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK6YEUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8__724">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK0RcErDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK0RcUrDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK9bYUrDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8__725">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK1fkErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK2GoErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLBFwErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8__726">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6d6sIEr4EemegPQxlEOT_A" name="DecesionPoint__440" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_6d8hUEr4EemegPQxlEOT_A" name="Init__State__441"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_6c9C0Er4EemegPQxlEOT_A" name="DecesionPoint__419" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_6c9p4Ur4EemegPQxlEOT_A" name="New__State__420"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_6c-4AUr4EemegPQxlEOT_A" name="Init__State__421"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swDoEErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swDBAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Echo.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swK80ErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_swKVwErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQcYErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_swOAIErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swnBsUrDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_swdQsErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6b0aYUr4EemegPQxlEOT_A" name="loadHeap" specification="_6b0aYEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6cAAkEr4EemegPQxlEOT_A" name="unLoadHeap" specification="_6b_ZgEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6cZpMEr4EemegPQxlEOT_A" name="sendMessage" specification="_6cZCIEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;Echo&quot;) {
  if(message.signal==&quot;Echo&quot;) {
   if(message.payload.size()==0){
    Echo.Echo().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6cgW4Ur4EemegPQxlEOT_A" name="sendInternalMessage" specification="_6cgW4Er4EemegPQxlEOT_A">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6c1uEUr4EemegPQxlEOT_A" name="initForPMD" specification="_6c1uEEr4EemegPQxlEOT_A">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EchoCapsule::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EchoCapsule::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swDBAErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swDoEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swKVwErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_swK80ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swOAIErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_swQcYErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swOAIUrDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swOnMErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swP1UErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_swdQsErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_swnBsUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swd3wErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swee0UrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swg7EUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiJMUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiwQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swj-YErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlMgErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlzkErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swmaoErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swnBsErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6b0aYEr4EemegPQxlEOT_A" name="loadHeap" visibility="private" method="_6b0aYUr4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_6b_ZgEr4EemegPQxlEOT_A" name="unLoadHeap" visibility="private" method="_6cAAkEr4EemegPQxlEOT_A"/>
        <ownedOperation xmi:id="_6cZCIEr4EemegPQxlEOT_A" name="sendMessage" visibility="private" method="_6cZpMEr4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_6cd6oEr4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6cehsEr4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6cgW4Er4EemegPQxlEOT_A" name="sendInternalMessage" visibility="private" method="_6cgW4Ur4EemegPQxlEOT_A">
          <ownedParameter xmi:id="_6cnEkEr4EemegPQxlEOT_A" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_6coSsEr4EemegPQxlEOT_A" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_6c1uEEr4EemegPQxlEOT_A" name="initForPMD" visibility="private" method="_6c1uEUr4EemegPQxlEOT_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nlBdQAgzEea_md0mpENoqg" name="Echo">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_nk_BAAgzEea_md0mpENoqg" name="Echo">
          <interfaceRealization xmi:id="_nlGVwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlD5gAgzEea_md0mpENoqg" contract="_nlD5gAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_nlZQsAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg" contract="_nlTKEAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlD5gAgzEea_md0mpENoqg" name="Echo"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlL1UAgzEea_md0mpENoqg" name="Echo~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlQGwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlL1UAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_nlR78AgzEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlTKEAgzEea_md0mpENoqg" name="EchoIO">
          <ownedOperation xmi:id="_7w0BIAgzEea_md0mpENoqg" name="Echo"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlae0AgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_7w0oMAgzEea_md0mpENoqg" operation="_7w0BIAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y1UDYAg6Eea_md0mpENoqg" name="SystemConfig">
        <ownedAttribute xmi:id="_lX6oUAg6Eea_md0mpENoqg" name="ConfigOK">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_lX6oUQg6Eea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rA4b8Ag6Eea_md0mpENoqg" name="RunningMode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_xR7jQAg6Eea_md0mpENoqg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4Gg1cAg6Eea_md0mpENoqg" name="MasterId">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_7FhkQAg6Eea_md0mpENoqg" name="MasterName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6tXsMAmpEea_md0mpENoqg" name="MasterList">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hzi4QAmqEea_md0mpENoqg" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HzxhwAmqEea_md0mpENoqg" value="2"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JwlzwAmqEea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_cYIKwAimEea_md0mpENoqg" name="loadConfig" specification="_QF0roAimEea_md0mpENoqg">
          <language>C++</language>
          <body>{
    /* UMLRTGEN-USERREGION-BEGIN platform:/resource/Replication/Replication.uml Replication::Configuration operation loadConfig */
    std::cout&lt;&lt;&quot;Config Class: load configuration from file\n&quot;;
    char result[PATH_MAX];
    readlink( &quot;/proc/self/exe&quot;, result, PATH_MAX );
    string temps=string(result);
    size_t tempP=temps.rfind('/');
    if (tempP>0)
    {
    temps=temps.substr(0,tempP);
    }
    else
    temps=&quot;&quot;;
    string MasterConfigFileName=&quot;./Master.config&quot;;
    string RunningModeConfigFileName=&quot;./RunningMode.config&quot;;
    string MasterConfigPath=temps+MasterConfigFileName;
    string RunningModeConfigPath=temps+RunningModeConfigFileName;
    cout &lt;&lt; RunningModeConfigPath &lt;&lt; endl;
    //ifstream RunningModeConfigFile(RunningModeConfigPath.c_str());
    ifstream RunningModeConfigFile(&quot;./RunningMode.config&quot;);
    string line;
    if (RunningModeConfigFile.is_open())
    {
    (getline(RunningModeConfigFile,line));
    {
    if (atoi(line.c_str())==0)
    {
    this->RunningMode=0;
    this->ConfigOK=true;
    RunningModeConfigFile.close();
    cout&lt;&lt;&quot;Configuration Loaded successfully, the running mode is active\n&quot;;
    //            			return true;
    }
    else if (atoi(line.c_str())==1)
    {
    this->RunningMode=1;
    //ifstream MasterConfigFile(MasterConfigPath.c_str());
    ifstream MasterConfigFile(&quot;Master.config&quot;);

    if (MasterConfigFile.is_open() &amp;&amp; (getline(MasterConfigFile,line)))
    if (line==&quot;server1&quot; || line==&quot;server2&quot;)
    {
    this->MasterName= new char[line.size()+1];
    strcpy(this->MasterName,line.c_str());
    cout &lt;&lt;&quot;Master Name is:&quot;&lt;&lt; this->MasterName&lt;&lt;endl;
    this->ConfigOK=true;
    cout &lt;&lt; &quot;configuration Loaded successfully, the running mode is passive|&quot;
    &lt;&lt;&quot; Master name is : &quot;&lt;&lt;this->MasterName&lt;&lt;endl;
    RunningModeConfigFile.close();
    MasterConfigFile.close();
    //           					return true;
    }
    else
    {
    cout&lt;&lt;&quot;Master Name is wrong, please fix it\n&quot;;
    this->ConfigOK=false;
    //           					return false;
    }
    else
    {
    cout&lt;&lt;&quot;Master config file(Master.config) cann't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //         				return false;
    }
    }
    else
    {
    cout&lt;&lt; &quot;The running mode value is incorrect, please fix that\n&quot;;
    this->ConfigOK=false;
    //       			return false;
    }
    }
    }
    else
    {
    cout&lt;&lt;&quot;The Running Mode config(RunningMode.config) file can't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //     	return false;
    }/* UMLRTGEN-USERREGION-END */
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QF0roAimEea_md0mpENoqg" name="loadConfig" method="_cYIKwAimEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4_QwUAnEEeaGqPUk-4V4qQ" name="Services">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_4--ccAnEEeaGqPUk-4V4qQ" name="Services">
          <interfaceRealization xmi:id="_5AwlIAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AqegAnEEeaGqPUk-4V4qQ" contract="_5AqegAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_5A8LUAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ" contract="_5A5IAAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AqegAnEEeaGqPUk-4V4qQ" name="Services">
          <ownedOperation xmi:id="_P49E4AnFEeaGqPUk-4V4qQ" name="Reply">
            <ownedParameter xmi:id="_P49E4QnFEeaGqPUk-4V4qQ" name="Result">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_P49E4gnFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AzBYAnEEeaGqPUk-4V4qQ" name="Services~">
          <ownedOperation xmi:id="_G3ENoAnFEeaGqPUk-4V4qQ" name="Request">
            <ownedParameter xmi:id="_G3ENoQnFEeaGqPUk-4V4qQ" name="ServiceID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_G3ENognFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A3S0AnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AzBYAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_5A354AnEEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5A5IAAnEEeaGqPUk-4V4qQ" name="ServicesIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A_1sAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_G3K7UAnFEeaGqPUk-4V4qQ" operation="_G3ENoAnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_P4-6EAnFEeaGqPUk-4V4qQ" operation="_P49E4AnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_f2zWUApBEeaGqPUk-4V4qQ" name="FailOver">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_f2ud0ApBEeaGqPUk-4V4qQ" name="FailOver">
          <interfaceRealization xmi:id="_f4EhoApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f39z8ApBEeaGqPUk-4V4qQ" contract="_f39z8ApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_f4O5sApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ" contract="_f4L2YApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f39z8ApBEeaGqPUk-4V4qQ" name="FailOver"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4FvwApBEeaGqPUk-4V4qQ" name="FailOver~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4KoQApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4FvwApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_f4LPUApBEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4L2YApBEeaGqPUk-4V4qQ" name="FailOverIO">
          <ownedOperation xmi:id="_xM6GgApBEeaGqPUk-4V4qQ" name="IAmAlive">
            <ownedParameter xmi:id="_xM6GgQpBEeaGqPUk-4V4qQ" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4Qu4ApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xM6tkApBEeaGqPUk-4V4qQ" operation="_xM6GgApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gDfqsAghEea_md0mpENoqg" name="Simulator">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_m1qiEAghEea_md0mpENoqg" client="_lYTBoAggEea_md0mpENoqg" supplier="_rPgFkAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_nyBcoAghEea_md0mpENoqg" client="_gDfqsAghEea_md0mpENoqg" supplier="_z1vioAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_d9MBUAgoEea_md0mpENoqg" name="Simulator" isActive="true">
        <ownedAttribute xmi:id="_ljfrYAgoEea_md0mpENoqg" name="server1" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ljjVwAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ljjVwQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_odv2AAgoEea_md0mpENoqg" name="client" visibility="protected" type="_zpdLYAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_odySQQgoEea_md0mpENoqg" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ody5UAgoEea_md0mpENoqg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_trcC4AgoEea_md0mpENoqg" name="ENV" visibility="protected" type="_sMZ5EAgoEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_trfGMAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trfGMQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6qCFoAg7Eea_md0mpENoqg" name="server2" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6qGXEAg7Eea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6qGXEQg7Eea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_O1v3cOM6EeaTpaLNj-zYpw" name="RTConnector6">
          <end xmi:id="_O1xsoOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_fL3OQAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_O1xsoeM6EeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_P9Q5IOM6EeaTpaLNj-zYpw" name="RTConnector7">
          <end xmi:id="_P9SHQOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_lRZpIAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_P9SHQeM6EeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_zuXWQONAEeaTpaLNj-zYpw" name="RTConnector8">
          <end xmi:id="_zuZygONAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_zuZygeNAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
        <ownedConnector xmi:id="_0bs9YONAEeaTpaLNj-zYpw" name="RTConnector9">
          <end xmi:id="_0buLgONAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_0buLgeNAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_stgqYErDEem2BZRQc2M93A" name="Debug__Top">
      <ownedAttribute xmi:id="_st6TAErDEem2BZRQc2M93A" name="Debug__Gateway">
        <type xmi:type="uml:Class" href="../CommGateWay/model.uml#_XIyCcAdxEeadtKuU2t6fMg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_st9WUErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_st99YErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_sufh0ErDEem2BZRQc2M93A" name="Debug__Simulator" type="_d9MBUAgoEea_md0mpENoqg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suhXAErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_suh-EErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_7VPVsEr4EemegPQxlEOT_A" name="dbgAgent" type="_5cUsQEr4EemegPQxlEOT_A">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7VQj0Ur4EemegPQxlEOT_A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_7VRK4Er4EemegPQxlEOT_A" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5cUsQEr4EemegPQxlEOT_A" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_5dvBgEr4EemegPQxlEOT_A" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5dzS8Er4EemegPQxlEOT_A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_5dz6AEr4EemegPQxlEOT_A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_5h5v0Er4EemegPQxlEOT_A" name="dbgPortForClient" visibility="public" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5h8MEEr4EemegPQxlEOT_A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_5h8zIEr4EemegPQxlEOT_A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_6bdOAEr4EemegPQxlEOT_A" name="dbgPortForEchoCapsule" visibility="public" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6bfDMEr4EemegPQxlEOT_A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_6bgRUEr4EemegPQxlEOT_A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_6gUf4Er4EemegPQxlEOT_A" name="dbgPortForServer" visibility="public" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6gVG8Er4EemegPQxlEOT_A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_6gVG8Ur4EemegPQxlEOT_A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_7GP3cEr4EemegPQxlEOT_A" name="dbgPortForENV" visibility="public" type="_5dFhQEr4EemegPQxlEOT_A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7GQegEr4EemegPQxlEOT_A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_7GQegUr4EemegPQxlEOT_A" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_5cxYMEr4EemegPQxlEOT_A" name="dbgAgent StateMachine">
        <region xmi:id="_6bBwMEr4EemegPQxlEOT_A" name="mainRegion">
          <transition xmi:id="_6bEzgEr4EemegPQxlEOT_A" name="Trans__Init__State__413414" source="_6bDlYUr4EemegPQxlEOT_A" target="_6bBwMkr4EemegPQxlEOT_A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6bPLkEr4EemegPQxlEOT_A">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__413&quot;,&quot;New__State__412&quot;,&quot;To__New__State__412__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__413&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_6bKTEEr4EemegPQxlEOT_A" name="From__New__State__412__415" source="_6bC-UEr4EemegPQxlEOT_A" target="_6bBwMkr4EemegPQxlEOT_A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6bRn0Er4EemegPQxlEOT_A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__412&quot;,&quot;New__State__412&quot;,&quot;To__New__State__412__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__412&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_6bMvUEr4EemegPQxlEOT_A" name="PME_Trig416" port="_5dvBgEr4EemegPQxlEOT_A">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_6bN9cEr4EemegPQxlEOT_A" name="To__New__State__412__417" guard="_6bV5QUr4EemegPQxlEOT_A" source="_6bBwMkr4EemegPQxlEOT_A" target="_6bC-UEr4EemegPQxlEOT_A">
            <ownedRule xmi:id="_6bV5QUr4EemegPQxlEOT_A" name="PME_checkDecesion418">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_6bV5QEr4EemegPQxlEOT_A" name="PME_checkDecesion418">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__412__417&quot;,&quot;New__State__412&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_6bBwMkr4EemegPQxlEOT_A" name="DecesionPoint__411" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_6bC-UEr4EemegPQxlEOT_A" name="New__State__412">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_7VRK4Ur4EemegPQxlEOT_A" name="New__State__412">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_6bDlYUr4EemegPQxlEOT_A" name="Init__State__413"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Z4gsEr4EemegPQxlEOT_A" name="loadHeap" specification="_6Z35oEr4EemegPQxlEOT_A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6Z-nUUr4EemegPQxlEOT_A" name="unLoadHeap" specification="_6Z-nUEr4EemegPQxlEOT_A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6aMCsEr4EemegPQxlEOT_A" name="sendMessage" specification="_6aLboEr4EemegPQxlEOT_A">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForClient&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForClient.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6aaFIUr4EemegPQxlEOT_A" name="sendInternalMessage" specification="_6aaFIEr4EemegPQxlEOT_A">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6a7pkEr4EemegPQxlEOT_A" name="initForPMD" specification="_6a7CgEr4EemegPQxlEOT_A">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_6Z35oEr4EemegPQxlEOT_A" name="loadHeap" visibility="private" method="_6Z4gsEr4EemegPQxlEOT_A"/>
      <ownedOperation xmi:id="_6Z-nUEr4EemegPQxlEOT_A" name="unLoadHeap" visibility="private" method="_6Z-nUUr4EemegPQxlEOT_A"/>
      <ownedOperation xmi:id="_6aLboEr4EemegPQxlEOT_A" name="sendMessage" visibility="private" method="_6aMCsEr4EemegPQxlEOT_A">
        <ownedParameter xmi:id="_6aPtEEr4EemegPQxlEOT_A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_6aQUIEr4EemegPQxlEOT_A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_6aaFIEr4EemegPQxlEOT_A" name="sendInternalMessage" visibility="private" method="_6aaFIUr4EemegPQxlEOT_A">
        <ownedParameter xmi:id="_6abTQEr4EemegPQxlEOT_A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_6ab6UEr4EemegPQxlEOT_A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_6a7CgEr4EemegPQxlEOT_A" name="initForPMD" visibility="private" method="_6a7pkEr4EemegPQxlEOT_A"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5dCd8Er4EemegPQxlEOT_A" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_5dFhQEr4EemegPQxlEOT_A" name="dbgProtocol">
        <interfaceRealization xmi:id="_5di0QEr4EemegPQxlEOT_A" client="_5dFhQEr4EemegPQxlEOT_A" supplier="_5dJysEr4EemegPQxlEOT_A" contract="_5dJysEr4EemegPQxlEOT_A"/>
        <interfaceRealization xmi:id="_5dl3kEr4EemegPQxlEOT_A" client="_5dFhQEr4EemegPQxlEOT_A" supplier="_5dNdEEr4EemegPQxlEOT_A" contract="_5dNdEEr4EemegPQxlEOT_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5dJysEr4EemegPQxlEOT_A" name="dbgProtocol">
        <ownedOperation xmi:id="_5drXIEr4EemegPQxlEOT_A" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5dM2AEr4EemegPQxlEOT_A" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_5dNdEEr4EemegPQxlEOT_A" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_5dOrMEr4EemegPQxlEOT_A" client="_5dFhQEr4EemegPQxlEOT_A" supplier="_5dM2AEr4EemegPQxlEOT_A"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_5dS8oEr4EemegPQxlEOT_A" client="_5dFhQEr4EemegPQxlEOT_A" supplier="_5dNdEEr4EemegPQxlEOT_A"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_5dslQEr4EemegPQxlEOT_A" operation="_5drXIEr4EemegPQxlEOT_A"/>
    </packagedElement>
    <profileApplication xmi:id="_lcu1sAggEea_md0mpENoqg">
      <eAnnotations xmi:id="_lcwq4AggEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_0p1pUAgxEea_md0mpENoqg">
      <eAnnotations xmi:id="_0p1pUQgxEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_iMahwAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMbv4AifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_iMeMIAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMgBUAifEea_md0mpENoqg" source="PapyrusVersion">
        <details xmi:id="_iMgBUQifEea_md0mpENoqg" key="Version" value="0.0.11"/>
        <details xmi:id="_iMgBUgifEea_md0mpENoqg" key="Comment" value=""/>
        <details xmi:id="_iMgBUwifEea_md0mpENoqg" key="Copyright" value=""/>
        <details xmi:id="_iMgBVAifEea_md0mpENoqg" key="Date" value="2015-12-10"/>
        <details xmi:id="_iMgBVQifEea_md0mpENoqg" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_iMeMIQifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_5AGSMAghEea_md0mpENoqg" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_xCrWYAgmEea_md0mpENoqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_zp7FcAgmEea_md0mpENoqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_d9rwkAgoEea_md0mpENoqg" base_Class="_d9MBUAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_ljiusAgoEea_md0mpENoqg" base_Property="_ljfrYAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_odySQAgoEea_md0mpENoqg" base_Property="_odv2AAgoEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_sM-g0AgoEea_md0mpENoqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_trefIAgoEea_md0mpENoqg" base_Property="_trcC4AgoEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_v05s8AgsEea_md0mpENoqg" base_Package="_v04e0AgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v09-YAgsEea_md0mpENoqg" base_Interface="_v09XUAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1KLoAgsEea_md0mpENoqg" base_Interface="_v1I9gAgsEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1Q5UAgsEea_md0mpENoqg" base_Interface="_v1PrMAgsEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_v1T8oAgsEea_md0mpENoqg" base_Collaboration="_v000cAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_GXxLAAgvEea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_GXsSgAgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_g3oVAAgvEea_md0mpENoqg" isWired="false" base_Port="_g3nG4AgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_-3NuMAgvEea_md0mpENoqg" isWired="false" base_Port="_-3KD0AgvEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_RMf8EAgzEea_md0mpENoqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_nlCrYAgzEea_md0mpENoqg" base_Package="_nlBdQAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlFHoAgzEea_md0mpENoqg" base_Interface="_nlD5gAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlO4oAgzEea_md0mpENoqg" base_Interface="_nlL1UAgzEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlW0cAgzEea_md0mpENoqg" base_Interface="_nlTKEAgzEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_nlbF4AgzEea_md0mpENoqg" base_Collaboration="_nk_BAAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_PdauoAg0Eea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_PdYSYAg0Eea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_6qFwAAg7Eea_md0mpENoqg" base_Property="_6qCFoAg7Eea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_l72A4AifEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include&lt;iostream>" base_Class="_sMZ5EAgoEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ZYVLEAihEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>" base_Class="_RLyKYAgzEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qp8qkAimEea_md0mpENoqg" implementationPreface="#include &lt;iostream>&#xA;#include &lt;fstream>&#xA;#include &lt;limits.h>&#xA;#include &lt;unistd.h>&#xA;using namespace std;" base_Class="_Y1UDYAg6Eea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_b2D_sAjLEea_md0mpENoqg" isWired="false" base_Port="_b1NrIAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_wQWSkAjLEea_md0mpENoqg" isWired="false" base_Port="_wQHCAAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_X4gvkAjMEea_md0mpENoqg" isWired="false" base_Port="_X4ceIAjMEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6nxNAAkFEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" implementationEnding="" base_Class="_xCGHkAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_skTr8AlKEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" base_Class="_zpdLYAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_iLgtsAmuEea_md0mpENoqg" isWired="false" base_Port="_iLeRcAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_oWjToAmuEea_md0mpENoqg" isWired="false" base_Port="_oWg3YAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_tQAV4AmuEea_md0mpENoqg" isWired="false" base_Port="_tP9SkAmuEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_5AbN8AnEEeaGqPUk-4V4qQ" base_Package="_4_QwUAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5AuI4AnEEeaGqPUk-4V4qQ" base_Interface="_5AqegAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A1doAnEEeaGqPUk-4V4qQ" base_Interface="_5AzBYAnEEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A69MAnEEeaGqPUk-4V4qQ" base_Interface="_5A5IAAnEEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_5BBq4AnEEeaGqPUk-4V4qQ" base_Collaboration="_4--ccAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_fMA_QAnFEeaGqPUk-4V4qQ" base_Port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lRkBMAnFEeaGqPUk-4V4qQ" base_Port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_pQ9x0AnMEeaGqPUk-4V4qQ" base_Port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8sLrYAovEeaGqPUk-4V4qQ" isWired="false" base_Port="_8sGy4AovEeaGqPUk-4V4qQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_f22ZoApBEeaGqPUk-4V4qQ" base_Package="_f2zWUApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4CscApBEeaGqPUk-4V4qQ" base_Interface="_f39z8ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4IMAApBEeaGqPUk-4V4qQ" base_Interface="_f4FvwApBEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4NrkApBEeaGqPUk-4V4qQ" base_Interface="_f4L2YApBEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_f4R9AApBEeaGqPUk-4V4qQ" base_Collaboration="_f2ud0ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_HIz9IApCEeaGqPUk-4V4qQ" base_Port="_HIvrsApCEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_ZDu1IApDEeaGqPUk-4V4qQ" isWired="false" base_Port="_ZDrx0ApDEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_Vj4_QApFEeaGqPUk-4V4qQ" isWired="false" base_Port="_Vj1U4ApFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lxxyEApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_lxs5kApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_rXbzAApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_rXZWwApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8587kAs1EeaGqPUk-4V4qQ" isWired="false" base_Port="_855RMAs1EeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_mKiJYOM2EeaTpaLNj-zYpw" isWired="false" base_Port="_mKfGEOM2EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_O1yTsOM6EeaTpaLNj-zYpw" base_Connector="_O1v3cOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_P9SuUOM6EeaTpaLNj-zYpw" base_Connector="_P9Q5IOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTPort xmi:id="_rmqMIOM8EeaTpaLNj-zYpw" base_Port="_rmnI0OM8EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_zuZyguNAEeaTpaLNj-zYpw" base_Connector="_zuXWQONAEeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_0bvZoONAEeaTpaLNj-zYpw" base_Connector="_0bs9YONAEeaTpaLNj-zYpw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_71nSEPMWEeauO5SNGpOV7w" headerPreface="#include &lt;fstream>" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <RTCppProperties:AttributeProperties xmi:id="_gvmcIPMYEeauO5SNGpOV7w" type="std::ofstream" base_Property="_dCa_wPMYEeauO5SNGpOV7w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_b45wYKozEeiNHY6qjNhZ4w" base_Region="_lvCAwAlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fAFjwKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_gOt6EKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_hsv-UKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_i6NP8KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_kA2H4KozEeiNHY6qjNhZ4w" base_Pseudostate="_Rrrc0AlvEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_lJDGEKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mRbDYKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_nsAyEKozEeiNHY6qjNhZ4w" base_State="_2g5S0ONBEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_o4vD4KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_rpSf8KozEeiNHY6qjNhZ4w" base_Region="_ThAzEONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTState xmi:id="_tdqAkKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ud1rMKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_veq2EKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wg0PkKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xiP3YKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_0dGe8KozEeiNHY6qjNhZ4w" base_StateMachine="_lT4V0AlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_880dQKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_88_cYKozEeiNHY6qjNhZ4w" base_Pseudostate="_887yAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_Y4mLoKo0EeiNHY6qjNhZ4w" base_Region="_Bk0GwAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_bQ-_UKo0EeiNHY6qjNhZ4w" base_Pseudostate="_Oll1cAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_cpwwIKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_du4lIKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_eug2IKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_f8K8EKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_g871gKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_h7dTQKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_jFMigKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_k5P6EKo0EeiNHY6qjNhZ4w" base_StateMachine="_BKT8EAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_Rg85wKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SuGpYKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ZzTxgKpiEeiNHY6qjNhZ4w" base_Region="_abLcsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_bJC1YKpiEeiNHY6qjNhZ4w" base_StateMachine="_WlNQsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1LnmcKpiEeiNHY6qjNhZ4w" base_Pseudostate="_npsCMAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_2O6PcKpiEeiNHY6qjNhZ4w" base_State="_sdehUAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_3WYN0KpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_4kr0AKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uXY4KpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_8Lil8KpiEeiNHY6qjNhZ4w" base_Region="_jSIzIAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_BsmawKpjEeiNHY6qjNhZ4w" base_StateMachine="_gU8CMAgwEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_stxwIErDEem2BZRQc2M93A" base_Class="_stgqYErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_st8vQErDEem2BZRQc2M93A" base_Property="_st6TAErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_sugv8ErDEem2BZRQc2M93A" base_Property="_sufh0ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svEJkErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svHM4ErDEem2BZRQc2M93A" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sviqsErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_svhckErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_svluAErDEem2BZRQc2M93A" type="SROManager" base_Property="_svkf4ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_svoKQErDEem2BZRQc2M93A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_svu38ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_svrNkUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_svyiUErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_svwtIErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv0-kErDEem2BZRQc2M93A" type="const char *" base_Parameter="_svzJYErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv3a0ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv2MsErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv5QAErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv4B4ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swFdQErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swHScErDEem2BZRQc2M93A" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swWjAErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_swUt0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swYYMErDEem2BZRQc2M93A" type="SROManager" base_Property="_swXKEErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_swbbgErDEem2BZRQc2M93A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_swee0ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_swd3wErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swg7EErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_swee0UrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swiJMErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swg7EUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swjXUErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swiwQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swklcErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swj-YErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swxZwErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sw1EIErDEem2BZRQc2M93A" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxJNMErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sxH_EErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxLCYErDEem2BZRQc2M93A" type="SROManager" base_Property="_sxJNMUrDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sxM3kErDEem2BZRQc2M93A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxP64ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sxPT0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxRwEErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sxQh8ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxS-MErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxRwEUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxUzYErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxTlQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxWBgErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxUzYUrDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxhAoErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxjc4ErDEem2BZRQc2M93A" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx1wwErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sx1JsErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx2-4ErDEem2BZRQc2M93A" type="SROManager" base_Property="_sx2X0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sx40EErDEem2BZRQc2M93A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx8ecErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sx7QUErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx9FgErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sx8ecUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx-ToErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx9skErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx_hwErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx-6sErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_syAv4ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_syAI0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syTDwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_syVgAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syXVMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syYjUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_szFG4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szGVAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szRUIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szU-gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szXawErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szk2IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szmrUErDEem2BZRQc2M93A" base_State="_szldMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sznSYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szpuoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sz93sErDEem2BZRQc2M93A" base_Region="_szldMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0KE8ErDEem2BZRQc2M93A" base_State="_sz-ewErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0NIQErDEem2BZRQc2M93A" base_State="_sz_s4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0PkgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0T18ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0fcIErDEem2BZRQc2M93A" base_Pseudostate="_s0e1EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0gqQErDEem2BZRQc2M93A" base_State="_s0fcIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0hRUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0h4YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s00zUErDEem2BZRQc2M93A" base_Region="_s0fcIkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0_LYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1COsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1GgIErDEem2BZRQc2M93A" base_State="_s032oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1L_sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ZbEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1apMErDEem2BZRQc2M93A" base_State="_s1ZbEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ceYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1dFcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s1uLMErDEem2BZRQc2M93A" base_Region="_s1ZbEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s11f8ErDEem2BZRQc2M93A" base_State="_s1uLMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s14jQErDEem2BZRQc2M93A" base_State="_s1uyQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s18NoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2Ia4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2JpAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2K3IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2LeMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s2eZIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2pYQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2r0gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2wF8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s22zoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3IgcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3JukErDEem2BZRQc2M93A" base_State="_s3JHgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3MK0ErDEem2BZRQc2M93A" base_Pseudostate="_s3KVoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3Mx4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s3bbYErDEem2BZRQc2M93A" base_Region="_s3JHgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3hiAErDEem2BZRQc2M93A" base_State="_s3bbYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3klUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3nooErDEem2BZRQc2M93A" base_State="_s3d3oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s31rEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s32SIErDEem2BZRQc2M93A" base_State="_s31rEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s325MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s34HUErDEem2BZRQc2M93A" base_Pseudostate="_s33gQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s4H-8ErDEem2BZRQc2M93A" base_Region="_s31rEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4P6wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4SXAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4WocErDEem2BZRQc2M93A" base_State="_s4LCQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4iOoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4i1sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4kq4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4lR8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s40igErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5DzEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5GPUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5JSoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5NkEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5ZKQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5ZxUErDEem2BZRQc2M93A" base_State="_s5ZKQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5a_cErDEem2BZRQc2M93A" base_Pseudostate="_s5aYYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5bmgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s5qQAErDEem2BZRQc2M93A" base_Region="_s5ZKQkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5yL0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s512MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s545gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s59K8ErDEem2BZRQc2M93A" base_State="_s5t6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s6Z24ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s60GkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s61UsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s617wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s62i0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7GacErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7IPoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7NvMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7QygErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7SnsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7dm0ErDEem2BZRQc2M93A" base_Pseudostate="_s7c_wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7eN4ErDEem2BZRQc2M93A" base_State="_s7dm0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7e08ErDEem2BZRQc2M93A" base_Pseudostate="_s7eN4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7fcAErDEem2BZRQc2M93A" base_Pseudostate="_s7e08UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7yW8ErDEem2BZRQc2M93A" base_Region="_s7dm0krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s78vAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7_yUErDEem2BZRQc2M93A" base_State="_s70MIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8C1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8IVMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8T7YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8VwkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8WXoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8W-sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s8ndYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8x1cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s804wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s84jIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s89boErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9K3AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9LeEErDEem2BZRQc2M93A" base_State="_s9K3AUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9MsMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9NTQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s9dK4ErDEem2BZRQc2M93A" base_Region="_s9K3AkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9ltwErDEem2BZRQc2M93A" base_State="_s9dx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9oxEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9rNUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9wF0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s97sAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s986IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s99hMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9-IQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-NY0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-TfcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-WiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-a0MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-pdsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-qr0ErDEem2BZRQc2M93A" base_State="_s-pdsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-rS4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-r58ErDEem2BZRQc2M93A" base_Pseudostate="_s-rS4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-4uQErDEem2BZRQc2M93A" base_Region="_s-pdskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_B4MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_E7gErDEem2BZRQc2M93A" base_State="_s-58YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_HXwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_LpMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_WoUErDEem2BZRQc2M93A" base_Pseudostate="_s_WBQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_X2cErDEem2BZRQc2M93A" base_State="_s_WoUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_YdgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_ZEkErDEem2BZRQc2M93A" base_Pseudostate="_s_YdgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s_pjQErDEem2BZRQc2M93A" base_Region="_s_XPYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_vp4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_ytMErDEem2BZRQc2M93A" base_State="_s_qxYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_1JcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s__hgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAAvoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tABWsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tACk0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tASccErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWG0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWt4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAa_UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAbmYErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAc0gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAdbkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tAssIErDEem2BZRQc2M93A" base_Region="_tAa_UkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAtTMErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAyywErDEem2BZRQc2M93A" base_State="_tAt6QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA1PAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA45YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBFGoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBGUwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIJ8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIxAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tBVlUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBbr8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBevQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBhLgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBrjkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBsxsErDEem2BZRQc2M93A" base_State="_tBrjkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwErDEem2BZRQc2M93A" base_Pseudostate="_tBsxsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tB8CQErDEem2BZRQc2M93A" base_Region="_tBrjkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCFzQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCI2kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCL54ErDEem2BZRQc2M93A" base_State="_tB-egErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCRZcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCdmsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCe00ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgC8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgqAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tCwhoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCzk8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC0zEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC6SoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC65sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC8u4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC9V8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tDN0oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDTUMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDVJYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDW-kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDjy4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDkZ8ErDEem2BZRQc2M93A" base_State="_tDjy4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDloEErDEem2BZRQc2M93A" base_Pseudostate="_tDlBAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDmPIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tD378ErDEem2BZRQc2M93A" base_Region="_tDjy4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD7mUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD8NYErDEem2BZRQc2M93A" base_State="_tD5KEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEBF4ErDEem2BZRQc2M93A" base_Pseudostate="_tEAe0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tECUAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEC7EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEDiIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tEQWcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEXEIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEaHcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEb8oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEgOEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEqmIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEr0QErDEem2BZRQc2M93A" base_State="_tEqmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEsbUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEtCYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tE8S8ErDEem2BZRQc2M93A" base_Region="_tErNMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tE_WQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFAkYErDEem2BZRQc2M93A" base_State="_tE9hEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFE10ErDEem2BZRQc2M93A" base_Pseudostate="_tFEOwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFGD8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFIgMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFJHQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFVUgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFXwwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFYX0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFd3YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFeecErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfFgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfskErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFu9IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFyngErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFz1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF4uIErDEem2BZRQc2M93A" base_Pseudostate="_tF4HEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tF7KYErDEem2BZRQc2M93A" base_State="_tF58QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF7xcErDEem2BZRQc2M93A" base_Pseudostate="_tF7KYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF8_kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tGLCAErDEem2BZRQc2M93A" base_Region="_tF58QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGa5oErDEem2BZRQc2M93A" base_State="_tGLCAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGdV4ErDEem2BZRQc2M93A" base_State="_tGMQIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGgZMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGl4wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGw34ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGxe8ErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGyGAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGzUIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHCksErDEem2BZRQc2M93A" base_Region="_tGw34krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHDLwErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHHdMErDEem2BZRQc2M93A" base_State="_tHDLwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHMVsErDEem2BZRQc2M93A" base_State="_tHDy0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHOx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHWtwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHX74ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHYi8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHZxEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHposErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHyLkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH1O4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH3rIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH78kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIIw4ErDEem2BZRQc2M93A" base_Pseudostate="_tIHiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIJX8ErDEem2BZRQc2M93A" base_State="_tIIw4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIKmEErDEem2BZRQc2M93A" base_Pseudostate="_tIJ_AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tILNIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tIbEwErDEem2BZRQc2M93A" base_Region="_tIIw4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIhLYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIjAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tImD4ErDEem2BZRQc2M93A" base_State="_tIc58ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJHoUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJv6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJxIkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJxvoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJyWsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tJ_yEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKIU8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKKxMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKNNcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKRe4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKh9kErDEem2BZRQc2M93A" base_Pseudostate="_tKgvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKjLsErDEem2BZRQc2M93A" base_State="_tKh9kUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKkZ0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKlA4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tKzDUErDEem2BZRQc2M93A" base_Region="_tKh9kkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK6YEErDEem2BZRQc2M93A" base_State="_tKzDUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK9bYErDEem2BZRQc2M93A" base_State="_tK0RcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLAesErDEem2BZRQc2M93A" base_State="_tK1fkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLMr8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tLzv8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tL0-EErDEem2BZRQc2M93A" base_State="_tLzv8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL1lIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL2zQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMFcwErDEem2BZRQc2M93A" base_Region="_tLzv8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMLjYErDEem2BZRQc2M93A" base_State="_tMFcwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMN_oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMRC8ErDEem2BZRQc2M93A" base_State="_tMH5AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMZl0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMaz8ErDEem2BZRQc2M93A" base_State="_tMaM4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMbbAErDEem2BZRQc2M93A" base_Pseudostate="_tMaz8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMcCEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMsgwErDEem2BZRQc2M93A" base_Region="_tMaM4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM0ckErDEem2BZRQc2M93A" base_State="_tMtH0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM3f4ErDEem2BZRQc2M93A" base_State="_tMuV8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM58IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM-NkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNMQAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNNeIErDEem2BZRQc2M93A" base_State="_tNMQAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNOsQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNP6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tNiOQErDEem2BZRQc2M93A" base_Region="_tNMQAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNtNYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNw3wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN0iIErDEem2BZRQc2M93A" base_State="_tNkqgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN5aoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOWtoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tObmIErDEem2BZRQc2M93A" base_State="_tOXUsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOc0QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOeCYErDEem2BZRQc2M93A" base_Pseudostate="_tOc0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tO110ErDEem2BZRQc2M93A" base_Region="_tOXUsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO6uUErDEem2BZRQc2M93A" base_State="_tO2c4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO9xoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPAN4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPKl8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPLNAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPL0EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPMbIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tPbrsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPc50ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPiZYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPk1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPmq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPyRAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPzfIErDEem2BZRQc2M93A" base_State="_tPy4EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP1UUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP17YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQDWwErDEem2BZRQc2M93A" base_Region="_tPy4EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQI2UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQLSkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQNu0ErDEem2BZRQc2M93A" base_State="_tQFzAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQW4wErDEem2BZRQc2M93A" base_Pseudostate="_tQWRsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQXf0ErDEem2BZRQc2M93A" base_State="_tQW4wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQYG4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQZVAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQvTQErDEem2BZRQc2M93A" base_Region="_tQW4wkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ32IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ-j0ErDEem2BZRQc2M93A" base_State="_tQwhYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRBAEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tREDYErDEem2BZRQc2M93A" base_State="_tQy9oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRUiEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRVwMErDEem2BZRQc2M93A" base_State="_tRUiEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRW-UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRYMcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tRxOAErDEem2BZRQc2M93A" base_Region="_tRUiEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR6_AErDEem2BZRQc2M93A" base_State="_tRx1EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR-CUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSBssErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSF-IErDEem2BZRQc2M93A" base_State="_tR2GgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSRkUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSSycErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSTZgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSUnoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tSpXwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSxTkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSzIwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS098ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS4oUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTEOgErDEem2BZRQc2M93A" base_Pseudostate="_tTDncErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTFcoErDEem2BZRQc2M93A" base_State="_tTEOgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTGDsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTHR0ErDEem2BZRQc2M93A" base_Pseudostate="_tTGqwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tTS4AErDEem2BZRQc2M93A" base_Region="_tTEOgkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTY-oErDEem2BZRQc2M93A" base_State="_tTTfEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTaz0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTcpAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTfsUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tUACoErDEem2BZRQc2M93A"/>
  <UMLRealTime:Capsule xmi:id="_5cwKEEr4EemegPQxlEOT_A" base_Class="_5cUsQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_5dB24Er4EemegPQxlEOT_A" base_StateMachine="_5cxYMEr4EemegPQxlEOT_A"/>
  <UMLRealTime:ProtocolContainer xmi:id="_5dETIEr4EemegPQxlEOT_A" base_Package="_5dCd8Er4EemegPQxlEOT_A"/>
  <UMLRealTime:Protocol xmi:id="_5dH9gEr4EemegPQxlEOT_A" base_Collaboration="_5dFhQEr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTMessageSet xmi:id="_5dYcMEr4EemegPQxlEOT_A" base_Interface="_5dJysEr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTMessageSet xmi:id="_5dgYAEr4EemegPQxlEOT_A" base_Interface="_5dM2AEr4EemegPQxlEOT_A" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_5diNMEr4EemegPQxlEOT_A" base_Interface="_5dNdEEr4EemegPQxlEOT_A" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_5d_gMEr4EemegPQxlEOT_A" base_Port="_5dvBgEr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_5h03UEr4EemegPQxlEOT_A" isWired="false" base_Port="_5hzCIEr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_5h-BQEr4EemegPQxlEOT_A" isPublish="true" isWired="false" base_Port="_5h5v0Er4EemegPQxlEOT_A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_5kuaUEr4EemegPQxlEOT_A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_5k6nkEr4EemegPQxlEOT_A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_5nh2sEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_5nah8Er4EemegPQxlEOT_A"/>
  <RTCppProperties:ParameterProperties xmi:id="_5n1YsEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_5nuD8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5prLwEr4EemegPQxlEOT_A" base_Pseudostate="_5ppWkEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTState xmi:id="_5pzHkEr4EemegPQxlEOT_A" base_State="_5pxSYEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uah0Er4EemegPQxlEOT_A" base_Pseudostate="_5uZTsEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uhPgEr4EemegPQxlEOT_A" base_Pseudostate="_5ueMMEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5ukS0Er4EemegPQxlEOT_A" base_Pseudostate="_5ujEsEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5urnkEr4EemegPQxlEOT_A" base_Pseudostate="_5urAgEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_51_JcEr4EemegPQxlEOT_A" base_Pseudostate="_518GIEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_52JhgEr4EemegPQxlEOT_A" base_Pseudostate="_52EpAEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_52aAMEr4EemegPQxlEOT_A" base_Pseudostate="_52TSgEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_52opsEr4EemegPQxlEOT_A" base_Pseudostate="_52kYQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6AGHsEr4EemegPQxlEOT_A" base_Pseudostate="_6ADEYEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6AM1YEr4EemegPQxlEOT_A" base_Pseudostate="_6ALnQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6AUxMEr4EemegPQxlEOT_A" base_Pseudostate="_6ARG0Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6AX0gEr4EemegPQxlEOT_A" base_Pseudostate="_6AV_UEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6FbToEr4EemegPQxlEOT_A" base_Pseudostate="_6FaskEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6Fdv4Er4EemegPQxlEOT_A" base_Pseudostate="_6FchwEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6FlrsEr4EemegPQxlEOT_A" base_Pseudostate="_6FkdkEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6FoH8Er4EemegPQxlEOT_A" base_Pseudostate="_6Fm50Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6IenoEr4EemegPQxlEOT_A" base_Pseudostate="_6IeAkEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6IiSAEr4EemegPQxlEOT_A" base_Pseudostate="_6IfOsEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6ImjcEr4EemegPQxlEOT_A" base_Pseudostate="_6Il8YEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6IoYoEr4EemegPQxlEOT_A" base_Pseudostate="_6InxkEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6NXusEr4EemegPQxlEOT_A" base_Pseudostate="_6NXHoEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6NZj4Er4EemegPQxlEOT_A" base_Pseudostate="_6NY80Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6Ng4oEr4EemegPQxlEOT_A" base_Pseudostate="_6NecYEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6Nj78Er4EemegPQxlEOT_A" base_Pseudostate="_6Nit0Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6R_wAEr4EemegPQxlEOT_A" base_Pseudostate="_6R_I8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6SBlMEr4EemegPQxlEOT_A" base_Pseudostate="_6SA-IEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6SHr0Er4EemegPQxlEOT_A" base_Pseudostate="_6SEogEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6SKIEEr4EemegPQxlEOT_A" base_Pseudostate="_6SI58Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6UNWgEr4EemegPQxlEOT_A" base_Pseudostate="_6ULhUEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6UOkoEr4EemegPQxlEOT_A" base_Pseudostate="_6UN9kEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6UXHgEr4EemegPQxlEOT_A" base_Pseudostate="_6UUrQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6UZjwEr4EemegPQxlEOT_A" base_Pseudostate="_6UYVoEr4EemegPQxlEOT_A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6ZxzAEr4EemegPQxlEOT_A" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_5cUsQEr4EemegPQxlEOT_A" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6Z2rgEr4EemegPQxlEOT_A" base_Class="_5cUsQEr4EemegPQxlEOT_A"/>
  <RTCppProperties:ParameterProperties xmi:id="_6aSJUEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_6aQUIEr4EemegPQxlEOT_A"/>
  <RTCppProperties:ParameterProperties xmi:id="_6advgEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_6ab6UEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_6bBwMUr4EemegPQxlEOT_A" base_Region="_6bBwMEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6bCXQEr4EemegPQxlEOT_A" base_Pseudostate="_6bBwMkr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTState xmi:id="_6bDlYEr4EemegPQxlEOT_A" base_State="_6bC-UEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6bEMcEr4EemegPQxlEOT_A" base_Pseudostate="_6bDlYUr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_6bZjoEr4EemegPQxlEOT_A" isWired="false" base_Port="_6bYVgEr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_6bhfcEr4EemegPQxlEOT_A" isPublish="true" isWired="false" base_Port="_6bdOAEr4EemegPQxlEOT_A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6bu60Er4EemegPQxlEOT_A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6bzMQEr4EemegPQxlEOT_A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_6cfv0Er4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_6cehsEr4EemegPQxlEOT_A"/>
  <RTCppProperties:ParameterProperties xmi:id="_6co5wEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_6coSsEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6c9p4Er4EemegPQxlEOT_A" base_Pseudostate="_6c9C0Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTState xmi:id="_6c-4AEr4EemegPQxlEOT_A" base_State="_6c9p4Ur4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6dAGIEr4EemegPQxlEOT_A" base_Pseudostate="_6c-4AUr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6d3o0Er4EemegPQxlEOT_A" base_Pseudostate="_6dywUEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6d6FEEr4EemegPQxlEOT_A" base_Pseudostate="_6d5eAEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6d7TMEr4EemegPQxlEOT_A" base_Pseudostate="_6d6sIEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6d9IYEr4EemegPQxlEOT_A" base_Pseudostate="_6d8hUEr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_6gT40Er4EemegPQxlEOT_A" isWired="false" base_Port="_6gSqsEr4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_6gVuAEr4EemegPQxlEOT_A" isPublish="true" isWired="false" base_Port="_6gUf4Er4EemegPQxlEOT_A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6hchQEr4EemegPQxlEOT_A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6hgysEr4EemegPQxlEOT_A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_6iJr4Er4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_6iHPoEr4EemegPQxlEOT_A"/>
  <RTCppProperties:ParameterProperties xmi:id="_6iN9UEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_6iNWQUr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6jS7YEr4EemegPQxlEOT_A" base_Pseudostate="_6jSUUEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTState xmi:id="_6jUwkEr4EemegPQxlEOT_A" base_State="_6jUJgEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6jVXoEr4EemegPQxlEOT_A" base_Pseudostate="_6jUwkUr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6k1zgEr4EemegPQxlEOT_A" base_Pseudostate="_6kzXQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6k3BoEr4EemegPQxlEOT_A" base_Pseudostate="_6k2akEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6k8hMEr4EemegPQxlEOT_A" base_Pseudostate="_6k6E8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6k_kgEr4EemegPQxlEOT_A" base_Pseudostate="_6k-WYEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6n1dIEr4EemegPQxlEOT_A" base_Pseudostate="_6n0PAEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6n2rQUr4EemegPQxlEOT_A" base_Pseudostate="_6n2rQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6n35YEr4EemegPQxlEOT_A" base_Pseudostate="_6n3SUEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6n4gcUr4EemegPQxlEOT_A" base_Pseudostate="_6n4gcEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6o9egEr4EemegPQxlEOT_A" base_Pseudostate="_6o83cEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6o-FkUr4EemegPQxlEOT_A" base_Pseudostate="_6o-FkEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6o-soUr4EemegPQxlEOT_A" base_Pseudostate="_6o-soEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6o_6wEr4EemegPQxlEOT_A" base_Pseudostate="_6o_TsEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6qBOcEr4EemegPQxlEOT_A" base_Pseudostate="_6qAnYEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6qB1gUr4EemegPQxlEOT_A" base_Pseudostate="_6qB1gEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6qDqsEr4EemegPQxlEOT_A" base_Pseudostate="_6qCckEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6qE40Er4EemegPQxlEOT_A" base_Pseudostate="_6qERwEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6rJP0Er4EemegPQxlEOT_A" base_Pseudostate="_6rIowEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6rLsEEr4EemegPQxlEOT_A" base_Pseudostate="_6rKd8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6rMTIUr4EemegPQxlEOT_A" base_Pseudostate="_6rMTIEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6rOIUEr4EemegPQxlEOT_A" base_Pseudostate="_6rNhQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6sWwwEr4EemegPQxlEOT_A" base_Pseudostate="_6sU7kEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6sXX0Ur4EemegPQxlEOT_A" base_Pseudostate="_6sXX0Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6sYl8Er4EemegPQxlEOT_A" base_Pseudostate="_6sX-4Ur4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTState xmi:id="_6sZNAUr4EemegPQxlEOT_A" base_State="_6sZNAEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6sabIEr4EemegPQxlEOT_A" base_Pseudostate="_6sZ0EEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6tq_YEr4EemegPQxlEOT_A" base_Pseudostate="_6tqYUEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6tsNgEr4EemegPQxlEOT_A" base_Pseudostate="_6trmcUr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6ts0kEr4EemegPQxlEOT_A" base_Pseudostate="_6tsNgkr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6tvQ0Er4EemegPQxlEOT_A" base_Pseudostate="_6ttboEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6vfkUEr4EemegPQxlEOT_A" base_Pseudostate="_6ve9QEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6vgycEr4EemegPQxlEOT_A" base_Pseudostate="_6vgLYEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6viAkEr4EemegPQxlEOT_A" base_Pseudostate="_6vgyckr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6vngIEr4EemegPQxlEOT_A" base_Pseudostate="_6vlq8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6xehUEr4EemegPQxlEOT_A" base_Pseudostate="_6xcsIEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6xjZ0Er4EemegPQxlEOT_A" base_Pseudostate="_6xhkoEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6xkn8Er4EemegPQxlEOT_A" base_Pseudostate="_6xkA4Ur4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6xr8sEr4EemegPQxlEOT_A" base_Pseudostate="_6xl2EEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6zfTgEr4EemegPQxlEOT_A" base_Pseudostate="_6zescEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6zkMAEr4EemegPQxlEOT_A" base_Pseudostate="_6ziW0Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6zkzEUr4EemegPQxlEOT_A" base_Pseudostate="_6zkzEEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_6znPUEr4EemegPQxlEOT_A" base_Pseudostate="_6zmoQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_61DZwEr4EemegPQxlEOT_A" base_Pseudostate="_61CysUr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_61EA0Ur4EemegPQxlEOT_A" base_Pseudostate="_61EA0Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_61FO8Er4EemegPQxlEOT_A" base_Pseudostate="_61En4Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_61GdEEr4EemegPQxlEOT_A" base_Pseudostate="_61FO8Ur4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_68Pm4Er4EemegPQxlEOT_A" base_Pseudostate="_68OYwEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_68SDIEr4EemegPQxlEOT_A" base_Pseudostate="_68QN8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_68Yw0Er4EemegPQxlEOT_A" base_Pseudostate="_68VGcEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_68fegEr4EemegPQxlEOT_A" base_Pseudostate="_68Z-8Er4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_7GPQYEr4EemegPQxlEOT_A" isWired="false" base_Port="_7GKX4Er4EemegPQxlEOT_A"/>
  <UMLRealTime:RTPort xmi:id="_7GRFkEr4EemegPQxlEOT_A" isPublish="true" isWired="false" base_Port="_7GP3cEr4EemegPQxlEOT_A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_7GuYkEr4EemegPQxlEOT_A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_7G1tUEr4EemegPQxlEOT_A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_7HXRwEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_7HWqsEr4EemegPQxlEOT_A"/>
  <RTCppProperties:ParameterProperties xmi:id="_7Hf0oEr4EemegPQxlEOT_A" type="pmd::Message" base_Parameter="_7Hd_cEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7ITF4Er4EemegPQxlEOT_A" base_Pseudostate="_7IPbgEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7J8EoEr4EemegPQxlEOT_A" base_Pseudostate="_7J6PcEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7J_vAEr4EemegPQxlEOT_A" base_Pseudostate="_7J_H8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7KA9IEr4EemegPQxlEOT_A" base_Pseudostate="_7KAWEEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7KEAcEr4EemegPQxlEOT_A" base_Pseudostate="_7KCyUEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7MVRUEr4EemegPQxlEOT_A" base_Pseudostate="_7MTcIEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7MXGgEr4EemegPQxlEOT_A" base_Pseudostate="_7MWfcEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7MYUoEr4EemegPQxlEOT_A" base_Pseudostate="_7MXtkEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7MaJ0Er4EemegPQxlEOT_A" base_Pseudostate="_7MY7sEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7OU1YEr4EemegPQxlEOT_A" base_Pseudostate="_7OTAMEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7OWqkEr4EemegPQxlEOT_A" base_Pseudostate="_7OWDgEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7ObjEEr4EemegPQxlEOT_A" base_Pseudostate="_7OaU8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7OcxMEr4EemegPQxlEOT_A" base_Pseudostate="_7OcKIEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7QZR8Ur4EemegPQxlEOT_A" base_Pseudostate="_7QZR8Er4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7QagEEr4EemegPQxlEOT_A" base_Pseudostate="_7QZ5AUr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7QbHIEr4EemegPQxlEOT_A" base_Pseudostate="_7QagEkr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7QdjYEr4EemegPQxlEOT_A" base_Pseudostate="_7QcVQEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7RXiUEr4EemegPQxlEOT_A" base_Pseudostate="_7RW7QEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7RYwcEr4EemegPQxlEOT_A" base_Pseudostate="_7RYJYEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7RbMsEr4EemegPQxlEOT_A" base_Pseudostate="_7RZXgEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7Re3EEr4EemegPQxlEOT_A" base_Pseudostate="_7ReQAEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7S064Er4EemegPQxlEOT_A" base_Pseudostate="_7SzswEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7S4lQEr4EemegPQxlEOT_A" base_Pseudostate="_7S2wEEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7S5zYEr4EemegPQxlEOT_A" base_Pseudostate="_7S5MUEr4EemegPQxlEOT_A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_7S8PoEr4EemegPQxlEOT_A" base_Pseudostate="_7S7okEr4EemegPQxlEOT_A"/>
  <UMLRealTime:CapsulePart xmi:id="_7VQj0Er4EemegPQxlEOT_A" base_Property="_7VPVsEr4EemegPQxlEOT_A"/>
</xmi:XMI>

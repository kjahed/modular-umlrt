<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_lYTBoAggEea_md0mpENoqg" name="Replication">
    <eAnnotations xmi:id="_4HZrcAgoEea_md0mpENoqg" source="UMLRT_Default_top">
      <details xmi:id="_4Ha5kAgoEea_md0mpENoqg" key="top_name" value="Debug__Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_Lcp5MKpbEeiNHY6qjNhZ4w" source="http://www.eclipse.org/papyrus-rt/language/1.0.0">
      <details xmi:id="_LcruYKpbEeiNHY6qjNhZ4w" key="language" value="umlrt-cpp"/>
    </eAnnotations>
    <eAnnotations xmi:id="_qjEF4ErgEemqaut_VarxGg" source="dummy"/>
    <eAnnotations xmi:id="_5y7a8ErjEemimL41WnrHYQ" source="dummy"/>
    <eAnnotations xmi:id="_SBevMEscEemVeMvsm7zxNw" source="dummy"/>
    <eAnnotations xmi:id="_5tU3oEvzEemtSNYVzlCq3A" source="dummy"/>
    <eAnnotations xmi:id="_A3XukEwXEemBrrwNhgxPhg" source="dummy"/>
    <eAnnotations xmi:id="_4ESM4ExZEembVIfjsJzC-g" source="dummy"/>
    <eAnnotations xmi:id="_JVk8cEyEEemed-bAjKTy_w" source="dummy"/>
    <packageImport xmi:id="_st0MYErDEem2BZRQc2M93A">
      <importedPackage xmi:type="uml:Model" href="../CommGateWay/model.uml#_MZw7AAdxEeadtKuU2t6fMg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rPgFkAggEea_md0mpENoqg" name="ENV">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_vj5dgAghEea_md0mpENoqg" client="_rPgFkAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sMZ5EAgoEea_md0mpENoqg" name="ENV" visibility="public" classifierBehavior="_gU8CMAgwEea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_GXsSgAgvEea_md0mpENoqg" name="ConfigComm" visibility="public" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NBhGMAgvEea_md0mpENoqg" value="7"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NBssYAgvEea_md0mpENoqg" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_b1NrIAjLEea_md0mpENoqg" name="FailureTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wQHCAAjLEea_md0mpENoqg" name="BITTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_X4ceIAjMEea_md0mpENoqg" name="GeneralTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lxs5kApkEeaGqPUk-4V4qQ" name="AnnouncmentServer1" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rXZWwApkEeaGqPUk-4V4qQ" name="AnnouncmentServer2" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Iq9iAApmEeaGqPUk-4V4qQ" name="AnnouncementServer1Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_UZHLMApmEeaGqPUk-4V4qQ" name="AnnouncmentServerTimeout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_UZHLMQpmEeaGqPUk-4V4qQ" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_bmibMApmEeaGqPUk-4V4qQ" name="AnnouncementServer2Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fXb_wAxwEeaB2MeL96fedA" name="systemConfig" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_fXXuUAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mKfGEOM2EeaTpaLNj-zYpw" name="configTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_svBtUErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoErDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoUrDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svgOcErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svg1gErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svhckErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svkf4ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_aBigYEr4Eem5qeRdwCQ7KQ" name="dbgPortForENV" visibility="protected" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aBigYUr4Eem5qeRdwCQ7KQ" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_aBjHcEr4Eem5qeRdwCQ7KQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_gU8CMAgwEea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_jSIzIAgwEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_3Cms8AgwEea_md0mpENoqg" name="Init__ReadConfig__1" source="_s31EAErDEem2BZRQc2M93A" target="_sdehUAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_B6hioAg6Eea_md0mpENoqg" name="ENVInit">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Init__ReadConfig__1&quot;,(char *)&quot;Debug__Path__Init__ReadConfig__1&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_nn9HYAgxEea_md0mpENoqg" name="RetryConfig" source="_s4hAgErDEem2BZRQc2M93A" target="_sdehUAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_4q_JgAkAEea_md0mpENoqg" name="retry">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: retrying configuation, The transtion Failure -> readConfig was taken \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::RetryConfig&quot;,(char *)&quot;Debug__Path__RetryConfig&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_su1hoAgxEea_md0mpENoqg" name="configLoaded" source="_syROkErDEem2BZRQc2M93A" target="_dWznsAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rKgosAigEea_md0mpENoqg" name="LogTransition">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The transition from ReadConfig -> Config was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::configLoaded&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;Config&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_zlOKoAgxEea_md0mpENoqg" name="configOK" source="_s1Y0AErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Sw7kAAjHEea_md0mpENoqg" name="configCheckL">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The configuration is OK, the transition config-> Running was taken, sending signal to servers and clients \n&quot;;
    ConfigComm.StartUp(this->systemConfig).send();
    std::cout&lt;&lt;&quot;ENV: ENV is in  Running State\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::configOK&quot;,(char *)&quot;Debug__Path__configOK&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_32w4UAgxEea_md0mpENoqg" name="ConfigNOK" source="_s3GEMErDEem2BZRQc2M93A" target="_NvBagAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r3tJQAjJEea_md0mpENoqg" name="LogFailure">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The configuration is not OK, the transition configCheck-> ConfigFailure was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigNOK&quot;,(char *)&quot;Debug__Path__ConfigNOK&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_BiTZIAmpEea_md0mpENoqg" name="MasterAnnouncment" source="_szkPEErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2u7rQAmqEea_md0mpENoqg" name="RegisterMaster">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Master Annoucment from &quot;&lt;&lt; MasterName&lt;&lt;&quot;\n&quot;;
    if (strcmp((char *)MasterName,&quot;server1&quot;)==0)
    {
    systemConfig.MasterList[0]=true;
    if (AnnouncementServer1Id.isValid())
    AnnouncmentServer1.cancelTimer(AnnouncementServer1Id);
    AnnouncementServer1Id=AnnouncmentServer1.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    else if (strcmp((char *)MasterName,&quot;server2&quot;)==0)
    {
    systemConfig.MasterList[1]=true;
    if (AnnouncementServer2Id.isValid())
    AnnouncmentServer2.cancelTimer(AnnouncementServer2Id);
    AnnouncementServer2Id=AnnouncmentServer2.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    // the following code has been generated
    if ((systemConfig.RunningMode==1)&amp;&amp; (systemConfig.MasterList[0] ) &amp;&amp; (systemConfig.MasterList[1]))
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Violation, there are 2 master in passive mode\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::MasterAnnouncment&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_WsCs0AnGEeaGqPUk-4V4qQ" name="QueryConfig" source="_s5YjMErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_488xQAnGEeaGqPUk-4V4qQ" name="configReply">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The Config request replied at index&quot; &lt;&lt; msg->sapIndex0_&lt;&lt; &quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ConfigComm.ReplyConfig(systemConfig).sendAt(tempid);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::QueryConfig&quot;,(char *)&quot;Debug__Path__QueryConfig&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_J02wAAprEeaGqPUk-4V4qQ" name="Server1Failure" source="_s2HMwErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_jzDXYAprEeaGqPUk-4V4qQ" name="Server1failure">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server1, remove server1 from masters list\n&quot;;
    systemConfig.MasterList[0]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Server1Failure&quot;,(char *)&quot;Debug__Path__Server1Failure&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_FVtOsApsEeaGqPUk-4V4qQ" name="server2Failure" source="_s0e1EErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_BjKUsAptEeaGqPUk-4V4qQ" name="Server2Failure">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server2, remove Server2 from masters list\n&quot;;
    systemConfig.MasterList[1]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::server2Failure&quot;,(char *)&quot;Debug__Path__server2Failure&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syYjUUrDEem2BZRQc2M93A" name="Debug__configLoaded" source="_sdehUAgwEea_md0mpENoqg" target="_syROkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syZxcErDEem2BZRQc2M93A" name="Debug__configLoaded__3">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_AvcsEAg5Eea_md0mpENoqg" name="configLoaded" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_syfRAErDEem2BZRQc2M93A" name="Debug__configLoaded__S" guard="_syhtQUrDEem2BZRQc2M93A" source="_syROkErDEem2BZRQc2M93A" target="_syVgAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_syhtQUrDEem2BZRQc2M93A" name="Debug__GuardconfigLoaded">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_syhtQErDEem2BZRQc2M93A" name="Debug__GuardconfigLoaded">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ReadConfig&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syjicErDEem2BZRQc2M93A" name="Debug__configLoaded__S__5">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded__S&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syoa8ErDEem2BZRQc2M93A" name="Debug__configLoaded__E" source="_syX8QErDEem2BZRQc2M93A" target="_dWznsAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sypCAErDEem2BZRQc2M93A" name="Debug__configLoaded__E__6">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Config&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syuhkErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syvvsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange__8">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_syvIoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_syyL8ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syzaEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint__9">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_syyzAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy2dYErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy3rgErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint__10">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy3EcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy5gsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy6u0ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints__11">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy6HwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy7V4ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy788UrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode__12">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sy788ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy9LEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy9yIUrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg__13">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy9yIErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_szqVsErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment" source="__kywcAgwEea_md0mpENoqg" target="_szkPEErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szq8wErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__24">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment&quot;,(char *)&quot;Running&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_UGqsMAmpEea_md0mpENoqg" name="MasterAnnouncment" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_szsx8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S" guard="_sztZAUrDEem2BZRQc2M93A" source="_szkPEErDEem2BZRQc2M93A" target="_szmrUUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_sztZAUrDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sztZAErDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szuAEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S__26">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment__S&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_szv1QErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__E" source="_sznSYUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szwcUErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__E__27">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_szyRgErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szy4kUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange__29">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_szy4kErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_szzfoErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz0GsUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint__30">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0GsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz0twErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz1U0ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint__31">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0twUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz2i8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz3KAErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints__32">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz2i8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz3xEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz4YIUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode__33">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sz4YIErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz4_MErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz5mQUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg__34">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz5mQErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0h4YUrDEem2BZRQc2M93A" name="Debug__server2Failure" source="__kywcAgwEea_md0mpENoqg" target="_s0e1EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0ifcErDEem2BZRQc2M93A" name="Debug__server2Failure__49">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__server2Failure&quot;,(char *)&quot;Running&quot;,(char *)&quot;Debug__Path__server2Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_IX_MkApvEeaGqPUk-4V4qQ" name="server2Failure" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rXZWwApkEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_s0kUoErDEem2BZRQc2M93A" name="Debug__server2Failure__S" guard="_s0liwUrDEem2BZRQc2M93A" source="_s0e1EErDEem2BZRQc2M93A" target="_s0gqQUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s0liwUrDEem2BZRQc2M93A" name="Debug__Guardserver2Failure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0liwErDEem2BZRQc2M93A" name="Debug__Guardserver2Failure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0mJ0ErDEem2BZRQc2M93A" name="Debug__server2Failure__S__51">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__server2Failure__S&quot;,(char *)&quot;Debug__Path__server2Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s0nX8ErDEem2BZRQc2M93A" name="Debug__server2Failure__E" source="_s0hRUUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0n_AErDEem2BZRQc2M93A" name="Debug__server2Failure__E__52">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__server2Failure__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s0p0MErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qbQErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange__54">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s0p0MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rCUErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rCUkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint__55">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rCUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rpYErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rpYkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint__56">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rpYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0sQcErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0s3gUrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints__57">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0s3gErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0tekErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0tekkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode__58">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s0tekUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0uFoErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0v60ErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg__59">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0ussErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1dFcUrDEem2BZRQc2M93A" name="Debug__configOK" guard="_24BOUAjEEea_md0mpENoqg" source="_dWznsAgxEea_md0mpENoqg" target="_s1Y0AErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_24BOUAjEEea_md0mpENoqg" name="checkConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0dZMAjGEea_md0mpENoqg" name="checkConfig">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <language>C++</language>
                  <body>    return systemConfig.ConfigOK;
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1dsgErDEem2BZRQc2M93A" name="Debug__configOK__74">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configOK&quot;,(char *)&quot;Config&quot;,(char *)&quot;Debug__Path__configOK&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s1fhsErDEem2BZRQc2M93A" name="Debug__configOK__S" guard="_s1gIwUrDEem2BZRQc2M93A" source="_s1Y0AErDEem2BZRQc2M93A" target="_s1apMUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s1gIwUrDEem2BZRQc2M93A" name="Debug__GuardconfigOK">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s1gIwErDEem2BZRQc2M93A" name="Debug__GuardconfigOK">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Config&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1gv0ErDEem2BZRQc2M93A" name="Debug__configOK__S__76">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configOK__S&quot;,(char *)&quot;Debug__Path__configOK&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s1jMEErDEem2BZRQc2M93A" name="Debug__configOK__E" source="_s1ceYUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1jMEUrDEem2BZRQc2M93A" name="Debug__configOK__E__77">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configOK__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s1lBQErDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1loUUrDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange__79">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s1loUErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1mPYErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1m2cErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint__80">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1mPYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1ndgErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1oEkErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint__81">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1ndgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1oroErDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1orokrDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints__82">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1oroUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1p5wErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1qg0ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode__83">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s1p5wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1rH4ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1rH4krDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg__84">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1rH4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2LeMUrDEem2BZRQc2M93A" name="Debug__Server1Failure" source="__kywcAgwEea_md0mpENoqg" target="_s2HMwErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2MFQErDEem2BZRQc2M93A" name="Debug__Server1Failure__96">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Server1Failure&quot;,(char *)&quot;Running&quot;,(char *)&quot;Debug__Path__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_X5K_UAprEeaGqPUk-4V4qQ" name="Server1Failure" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_lxs5kApkEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_s2NTYErDEem2BZRQc2M93A" name="Debug__Server1Failure__S" guard="_s2N6cUrDEem2BZRQc2M93A" source="_s2HMwErDEem2BZRQc2M93A" target="_s2KQEErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s2N6cUrDEem2BZRQc2M93A" name="Debug__GuardServer1Failure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s2N6cErDEem2BZRQc2M93A" name="Debug__GuardServer1Failure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2OhgErDEem2BZRQc2M93A" name="Debug__Server1Failure__S__98">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Server1Failure__S&quot;,(char *)&quot;Debug__Path__Server1Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s2QWsErDEem2BZRQc2M93A" name="Debug__Server1Failure__E" source="_s2K3IUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2QWsUrDEem2BZRQc2M93A" name="Debug__Server1Failure__E__99">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Server1Failure__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s2SL4ErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2Sy8UrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange__101">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s2Sy8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2UBEErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2UBEkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint__102">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2UBEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2VPMErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2V2QErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint__103">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2VPMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2XEYErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2YSgErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints__104">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2XEYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2ZgoErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2aHsErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode__105">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s2ZgoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2auwErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2auwkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg__106">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2auwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3Mx4UrDEem2BZRQc2M93A" name="Debug__ConfigNOK" source="_dWznsAgxEea_md0mpENoqg" target="_s3GEMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3NY8ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__121">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__ConfigNOK&quot;,(char *)&quot;Config&quot;,(char *)&quot;Debug__Path__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s3OAAErDEem2BZRQc2M93A" name="Debug__ConfigNOK__S" guard="_s3OnEUrDEem2BZRQc2M93A" source="_s3GEMErDEem2BZRQc2M93A" target="_s3KVoErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s3OnEUrDEem2BZRQc2M93A" name="Debug__GuardConfigNOK">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s3OnEErDEem2BZRQc2M93A" name="Debug__GuardConfigNOK">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Config&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3POIErDEem2BZRQc2M93A" name="Debug__ConfigNOK__S__123">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__ConfigNOK__S&quot;,(char *)&quot;Debug__Path__ConfigNOK&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s3RDUErDEem2BZRQc2M93A" name="Debug__ConfigNOK__E" source="_s3MK0UrDEem2BZRQc2M93A" target="_NvBagAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3RDUUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__E__124">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__ConfigNOK__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s3S4gErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3S4gkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange__126">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s3S4gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3TfkErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3UGoUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint__127">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3UGoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3UtsErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3VUwUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint__128">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3VUwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3Wi4ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3Wi4krDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints__129">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3Wi4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3XJ8ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3XxAUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode__130">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s3XxAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3YYEErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3YYEkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg__131">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3YYEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s34HUUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1" source="_s6YowErDEem2BZRQc2M93A" target="_s31EAErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s34uYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__143">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_s6bFAErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_s37xsErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S" guard="_s38YwUrDEem2BZRQc2M93A" source="_s31EAErDEem2BZRQc2M93A" target="_s32SIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s38YwUrDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s38YwErDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s38_0ErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S__145">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Init__ReadConfig__1__S&quot;,(char *)&quot;Debug__Path__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s3-N8ErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__E" source="_s33gQErDEem2BZRQc2M93A" target="_sdehUAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3-1AErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__E__146">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Init__ReadConfig__1__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4ADIErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4AqMUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange__148">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4AqMErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4BRQErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4BRQkrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint__149">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4BRQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4B4UErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4CfYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint__150">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4B4UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4CfYUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4DGcUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints__151">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4DGcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4DtgErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4E7oErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode__152">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4EUkErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4FisErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4FiskrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg__153">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4FisUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4lR8UrDEem2BZRQc2M93A" name="Debug__RetryConfig" source="_NvBagAgxEea_md0mpENoqg" target="_s4hAgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4l5AErDEem2BZRQc2M93A" name="Debug__RetryConfig__165">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__RetryConfig&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;Debug__Path__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_eihL0AkAEea_md0mpENoqg" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4nuMErDEem2BZRQc2M93A" name="Debug__RetryConfig__S" guard="_s4oVQUrDEem2BZRQc2M93A" source="_s4hAgErDEem2BZRQc2M93A" target="_s4jcwErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s4oVQUrDEem2BZRQc2M93A" name="Debug__GuardRetryConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s4oVQErDEem2BZRQc2M93A" name="Debug__GuardRetryConfig">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4o8UErDEem2BZRQc2M93A" name="Debug__RetryConfig__S__167">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__RetryConfig__S&quot;,(char *)&quot;Debug__Path__RetryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4qxgErDEem2BZRQc2M93A" name="Debug__RetryConfig__E" source="_s4kq4UrDEem2BZRQc2M93A" target="_sdehUAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4qxgUrDEem2BZRQc2M93A" name="Debug__RetryConfig__E__168">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__RetryConfig__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4r_oErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4smsUrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange__170">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4smsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4tNwErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4t00UrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint__171">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4t00ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4ub4ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vC8ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint__172">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4ub4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4vqAErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vqAkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints__173">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4vqAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4wREErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4wREkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode__174">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4wREUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4w4IErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4xfMErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg__175">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4w4IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5bmgUrDEem2BZRQc2M93A" name="Debug__QueryConfig" source="__kywcAgwEea_md0mpENoqg" target="_s5YjMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5bmgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__190">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__QueryConfig&quot;,(char *)&quot;Running&quot;,(char *)&quot;Debug__Path__QueryConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_nF2QAAnKEeaGqPUk-4V4qQ" name="QueryConfig" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_s5dbsErDEem2BZRQc2M93A" name="Debug__QueryConfig__S" guard="_s5eCwUrDEem2BZRQc2M93A" source="_s5YjMErDEem2BZRQc2M93A" target="_s5aYYErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s5eCwUrDEem2BZRQc2M93A" name="Debug__GuardQueryConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s5eCwErDEem2BZRQc2M93A" name="Debug__GuardQueryConfig">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5ep0ErDEem2BZRQc2M93A" name="Debug__QueryConfig__S__192">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__QueryConfig__S&quot;,(char *)&quot;Debug__Path__QueryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s5htIErDEem2BZRQc2M93A" name="Debug__QueryConfig__E" source="_s5a_cUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5iUMErDEem2BZRQc2M93A" name="Debug__QueryConfig__E__193">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__QueryConfig__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s5kJYErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5kwcErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange__195">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s5kJYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5lXgErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5lXgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint__196">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5lXgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5l-kErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5mloErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint__197">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5l-kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5mloUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nMsUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints__198">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5nMsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nMskrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nzwUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode__199">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s5nzwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nzwkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5oa0UrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg__200">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5oa0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s6Z24UrDEem2BZRQc2M93A" name="Debug__InitDebug" source="_npsCMAgwEea_md0mpENoqg" target="_s6YowErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6ad8ErDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH2jwEr4Eem5qeRdwCQ7KQ" name="3294" source="_szkPEErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a5XgQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH3K0Er4Eem5qeRdwCQ7KQ" name="3295" source="_s5YjMErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a2nHMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH4Y8Er4Eem5qeRdwCQ7KQ" name="3296" source="_s2HMwErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a2VaYEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH5AAEr4Eem5qeRdwCQ7KQ" name="3297" source="_s31EAErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a6HHIEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH5nEEr4Eem5qeRdwCQ7KQ" name="3298" source="_s0e1EErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a2LCUEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH6OIEr4Eem5qeRdwCQ7KQ" name="3299" source="_s4hAgErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a1shMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH6OIUr4Eem5qeRdwCQ7KQ" name="3300" source="_s3GEMErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a37V0Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH8DUEr4Eem5qeRdwCQ7KQ" name="3301" source="_s1Y0AErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a5usoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH8qYEr4Eem5qeRdwCQ7KQ" name="3302" source="_syROkErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a3vIkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aH_GoEr4Eem5qeRdwCQ7KQ" name="3303" source="_dWznsAgxEea_md0mpENoqg" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a47bYEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Config&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aICxAEr4Eem5qeRdwCQ7KQ" name="From__ConfigFailure__3304" source="_NvBagAgxEea_md0mpENoqg" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a3_nQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_aIL68Er4Eem5qeRdwCQ7KQ" name="PME_Trig3305" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aINwIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3306" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aIQzcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3307" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aIVr8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3308" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aIXhIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3309" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aIZWUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3310" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aIfc8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3311" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aIhSIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3312" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aIjuYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3313" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aIpN8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3314" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_aIrDIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3315" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aIs4UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3316" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aIv7oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3317" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_aI00IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3318" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_aI2pUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3319" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aI5soEr4Eem5qeRdwCQ7KQ" name="PME_Trig3320" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_aI-lIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3321" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aJAaUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3322" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
            </transition>
            <transition xmi:id="_aJC2kEr4Eem5qeRdwCQ7KQ" name="From__Debug__InitState__3323" source="_s6YowErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a50MMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_aJKLUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3324" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aJNOoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3325" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aJSuMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3326" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aJT8UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3327" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aJWYkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3328" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aJdGQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3329" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aJe7cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3330" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aJh-wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3331" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aJm3QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3332" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aJoscEr4Eem5qeRdwCQ7KQ" name="PME_Trig3333" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aJrvwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3334" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_aJxPUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3335" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aJzrkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3336" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aJ2H0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3337" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_aJ8OcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3338" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_aJ-DoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3339" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aKBG8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3340" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_aKF_cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3341" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aKIbsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3342" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
            </transition>
            <transition xmi:id="_aKNUMEr4Eem5qeRdwCQ7KQ" name="From__ReadConfig__3343" source="_sdehUAgwEea_md0mpENoqg" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a33rcEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_aKSzwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3344" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aKaIgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3345" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aKb9sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3346" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aKeZ8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3347" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aKj5gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3348" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aKlusEr4Eem5qeRdwCQ7KQ" name="PME_Trig3349" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aKoyAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3350" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aKtqgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3351" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aKvfsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3352" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aKxU4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3353" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aK4poEr4Eem5qeRdwCQ7KQ" name="PME_Trig3354" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_aK6e0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3355" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aK9iIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3356" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_aLCaoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3357" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_aLDowEr4Eem5qeRdwCQ7KQ" name="PME_Trig3358" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aLE24Er4Eem5qeRdwCQ7KQ" name="PME_Trig3359" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_aLH6MEr4Eem5qeRdwCQ7KQ" name="PME_Trig3360" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aLMLoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3361" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
            </transition>
            <transition xmi:id="_aLNZwEr4Eem5qeRdwCQ7KQ" name="From__Running__3362" source="__kywcAgwEea_md0mpENoqg" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a4OQwEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_aLTgYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3363" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aLXKwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3364" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aLYY4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3365" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aLaOEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3366" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aLd4cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3367" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aLg7wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3368" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aLiJ4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3369" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aLjYAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3370" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aLnpcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3371" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_aLqswEr4Eem5qeRdwCQ7KQ" name="PME_Trig3372" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_aLsh8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3373" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_aLvlQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3374" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aL1E0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3375" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_aL4IIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3376" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_aL9AoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3377" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_aMB5IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3378" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_aME8cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3379" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
            </transition>
            <transition xmi:id="_aMMRMEr4Eem5qeRdwCQ7KQ" name="To__ConfigFailure__3380" guard="_a6eTgUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_NvBagAgxEea_md0mpENoqg">
              <ownedRule xmi:id="_a6eTgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4171">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6eTgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4171">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ConfigFailure__3380&quot;,&quot;ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aMM4QEr4Eem5qeRdwCQ7KQ" name="To__Debug__InitState__3381" guard="_a6StUUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_s6YowErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_a6StUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4164">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6StUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4164">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__3381&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aMOtcEr4Eem5qeRdwCQ7KQ" name="To__ReadConfig__3382" guard="_a6loQEr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_sdehUAgwEea_md0mpENoqg">
              <ownedRule xmi:id="_a6loQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4173">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6lBMEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4173">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ReadConfig__3382&quot;,&quot;ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aMRJsEr4Eem5qeRdwCQ7KQ" name="To__Running__3383" guard="_a6m2YUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="__kywcAgwEea_md0mpENoqg">
              <ownedRule xmi:id="_a6m2YUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4175">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6m2YEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4175">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Running__3383&quot;,&quot;Running&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aMXQUEr4Eem5qeRdwCQ7KQ" name="Trans__ex3384" source="_s3MK0UrDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a4aeAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aMYecUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ConfigNOK__3386" guard="_a6mPUUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_aMXQUUr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6mPUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4174">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6mPUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4174">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aMa6sEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ConfigNOK__3388" source="_aMZFgEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a6RfMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aRVP4Er4Eem5qeRdwCQ7KQ" name="Trans__ex3459" source="_s0hRUUrDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a59WIEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aRaIYUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__server2Failure__3461" guard="_a6ndcEr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_aRXsIEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6ndcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4176">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6m2Ykr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4176">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__server2Failure__3461&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aRckoEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__server2Failure__3463" source="_aRbWgEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a5gqMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aXKyIEr4Eem5qeRdwCQ7KQ" name="Trans__ex3555" source="_s5a_cUrDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a0wGAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aXNOYEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__QueryConfig__3557" guard="_a6apIUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_aXLZMEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6apIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4167">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6apIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4167">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aXRf0Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__QueryConfig__3559" source="_aXOcgEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a5omAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aaek0Er4Eem5qeRdwCQ7KQ" name="Trans__ex3651" source="_s4kq4UrDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a3aYcEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aafL4Ur4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__RetryConfig__3653" guard="_a6dscEr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_aaek0Ur4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6dscEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4170">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6dFYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4170">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aafy8Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__RetryConfig__3655" source="_aafL4kr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a4WzoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ad8vkEr4Eem5qeRdwCQ7KQ" name="Trans__ex3747" source="_syX8QErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a1NZAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ad99skr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__configLoaded__3749" guard="_a6ceUUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_ad99sEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6ceUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4169">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6ceUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4169">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configLoaded__3749&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ad-kwkr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__configLoaded__3751" source="_ad-kwEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a4uAAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_agtIoEr4Eem5qeRdwCQ7KQ" name="Trans__ex3822" source="_s33gQErDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a4ldIEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_agtvsUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__Init__ReadConfig__1__3824" guard="_a6WXsEr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_agtIoUr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6WXsEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4166">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6VwoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4166">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aguWwkr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__Init__ReadConfig__1__3826" source="_aguWwEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a273UEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aj2jQEr4Eem5qeRdwCQ7KQ" name="Trans__ex3897" source="_s2K3IUrDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a0kf0Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aj3KUkr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__Server1Failure__3899" guard="_a6jMAUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_aj3KUEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6jMAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4172">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6jMAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4172">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_aj3xYkr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__Server1Failure__3901" source="_aj3xYEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a3gfEEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_anEPUEr4Eem5qeRdwCQ7KQ" name="Trans__ex3993" source="_s1ceYUrDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a5MhIEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_anFdcEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__configOK__3995" guard="_a6b3QUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_anE2YEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6b3QUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4168">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6b3QEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4168">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configOK__3995&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_anMLIUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__configOK__3997" source="_anHSoEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a1Y_MEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_apfRMEr4Eem5qeRdwCQ7KQ" name="Trans__ex4068" source="_sznSYUrDEem2BZRQc2M93A" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a3QAYEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_aphtcEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__MasterAnnouncment__4070" guard="_a6T7cUr4Eem5qeRdwCQ7KQ" source="_aGB-0Er4Eem5qeRdwCQ7KQ" target="_apf4QEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_a6T7cUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4165">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_a6T7cEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4165">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_apkJsUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__MasterAnnouncment__4072" source="_api7kEr4Eem5qeRdwCQ7KQ" target="_aGB-0Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a5T14Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__4070&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3557&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3995&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3380&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3386&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Running&quot;,&quot;To__Running__3383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3461&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_npsCMAgwEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:State" xmi:id="_sdehUAgwEea_md0mpENoqg" name="ReadConfig">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_EE4RAAigEea_md0mpENoqg" name="ReadConfig">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ReadConfig&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6ldEErDEem2BZRQc2M93A" name="ReadConfig__215">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="__kywcAgwEea_md0mpENoqg" name="Running">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_BfusgAjIEea_md0mpENoqg" name="runningEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6jn4ErDEem2BZRQc2M93A" name="Running__214">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_NvBagAgxEea_md0mpENoqg" name="ConfigFailure">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_TasAwAjJEea_md0mpENoqg" name="failurEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;&quot;ENV: The system is in Failure State, try to reload the config after 10 second\n&quot;;
    FailureTimer.informIn(UMLRTTimespec(10,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6n5UErDEem2BZRQc2M93A" name="ConfigFailure__216">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_dWznsAgxEea_md0mpENoqg" name="Config" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_syROkErDEem2BZRQc2M93A" name="Debug__Path__configLoaded" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_syTDwUrDEem2BZRQc2M93A" name="Debug__C__configLoaded">
              <connectionPoint xmi:id="_syVgAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_syX8QErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ad99sEr4Eem5qeRdwCQ7KQ" name="From__Parent__3748" kind="entryPoint"/>
              <connectionPoint xmi:id="_ad-kwEr4Eem5qeRdwCQ7KQ" name="To__Parent__3750" kind="exitPoint"/>
              <region xmi:id="_syTq0ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_szNpwErDEem2BZRQc2M93A" name="Debug__init__trans__configLoaded" source="_syVgAUrDEem2BZRQc2M93A" target="_szG8EErDEem2BZRQc2M93A"/>
                <transition xmi:id="_szNpwUrDEem2BZRQc2M93A" name="Debug__Ex__ReadConfig" source="_szG8EErDEem2BZRQc2M93A" target="_szJYUErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szZ3AErDEem2BZRQc2M93A" name="Debug__Ex__ReadConfig__18">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__Ex__ReadConfig&quot;,(char *)&quot;Debug__B__Ex__ReadConfig&quot;,(char *)&quot;Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szOQ0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_szO34ErDEem2BZRQc2M93A" name="Debug__AC__configLoaded" source="_szJYUErDEem2BZRQc2M93A" target="_szMboErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szPe8ErDEem2BZRQc2M93A" name="LogTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The transition from ReadConfig -> Config was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__AC__configLoaded&quot;,(char *)&quot;Debug__B__Ac__configLoaded&quot;,(char *)&quot;Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szO34UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_szQGAErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded" source="_szMboErDEem2BZRQc2M93A" target="_syX8QErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szeIcErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded__21">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__end__trans__configLoaded&quot;,(char *)&quot;Debug__A__Ac__configLoaded&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szQGAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_aeCPIEr4Eem5qeRdwCQ7KQ" name="Trans__ex3754" source="_syX8QErDEem2BZRQc2M93A" target="_ad_L0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_agrTcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3813&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3814&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aeC2MEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__37533755" source="_aeAZ8Er4Eem5qeRdwCQ7KQ" target="_ad_L0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_agjXoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3753&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3753&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3753&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3813&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3753&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3814&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3753&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aeI80Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__ReadConfig__3756" source="_szG8EErDEem2BZRQc2M93A" target="_ad_L0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aghicEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3813&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3814&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aeJj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3757" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aeKyAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3758" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aeMAIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3759" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aeQ4oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3760" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aeSGwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3761" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aeTU4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3762" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aeT78Er4Eem5qeRdwCQ7KQ" name="PME_Trig3763" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aeVKEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3764" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aeXmUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3765" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aebQsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3766" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aece0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3767" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aeds8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3768" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aee7EEr4Eem5qeRdwCQ7KQ" name="PME_Trig3769" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aeilcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3770" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aem24Er4Eem5qeRdwCQ7KQ" name="PME_Trig3771" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aeoFAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3772" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aepTIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3773" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aevZwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3774" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aexO8Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__configLoaded__3775" source="_szJYUErDEem2BZRQc2M93A" target="_ad_L0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_agnCAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3813&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3814&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aeydEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3776" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aezrMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3777" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ae5KwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3778" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ae7nAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3779" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ae81IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3780" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ae-DQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3781" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_afFYAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3782" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_afGmIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3783" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_afHNMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3784" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_afKQgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3785" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_afPwEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3786" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_afRlQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3787" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_afTacEr4Eem5qeRdwCQ7KQ" name="PME_Trig3788" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_afY6AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3789" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_afavMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3790" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_afb9UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3791" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_afgOwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3792" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_afkgMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3793" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_afluUEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__configLoaded__3794" source="_szMboErDEem2BZRQc2M93A" target="_ad_L0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_agiJgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3813&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3814&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_afmVYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3795" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_afqm0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3796" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_afu4QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3797" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_afwtcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3798" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_afzJsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3799" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_af4pQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3800" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_af53YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3801" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_af7FgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3802" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_agBzMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3803" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_agDoYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3804" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_agE2gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3805" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_agH50Er4Eem5qeRdwCQ7KQ" name="PME_Trig3806" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_agMyUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3807" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_agNZYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3808" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_agOngEr4Eem5qeRdwCQ7KQ" name="PME_Trig3809" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_agP1oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3810" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_agTgAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3811" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_agWjUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3812" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_agYYgEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__ReadConfig__3813" guard="_agr6g0r4Eem5qeRdwCQ7KQ" source="_ad_L0Er4Eem5qeRdwCQ7KQ" target="_szG8EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_agr6g0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3820">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_agr6gkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3820">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ReadConfig__3813&quot;,&quot;Debug__B__Ex__ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_agYYgUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__configLoaded__3814" guard="_agshkUr4Eem5qeRdwCQ7KQ" source="_ad_L0Er4Eem5qeRdwCQ7KQ" target="_szJYUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_agshkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3821">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_agshkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3821">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__configLoaded__3814&quot;,&quot;Debug__B__Ac__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_agYYgkr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__configLoaded__3815" guard="_agr6gUr4Eem5qeRdwCQ7KQ" source="_ad_L0Er4Eem5qeRdwCQ7KQ" target="_szMboErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_agr6gUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3819">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_agr6gEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3819">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configLoaded__3815&quot;,&quot;Debug__A__Ac__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_agZmoEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3816" source="_ad99sEr4Eem5qeRdwCQ7KQ" target="_ad_L0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aggUUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3813&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3814&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_agZmoUr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3817" guard="_agrTckr4Eem5qeRdwCQ7KQ" source="_ad_L0Er4Eem5qeRdwCQ7KQ" target="_ad-kwEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_agrTckr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3818">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_agrTcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3818">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3817&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_szG8EErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szHjIErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szRUIUrDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig__14">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_szJYUErDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szJ_YErDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;configLoaded&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szU-gUrDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded__15">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_szMboErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szMboUrDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configLoaded&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szYB0ErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded__16">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ad_L0Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__3752" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aeAZ8Er4Eem5qeRdwCQ7KQ" name="Init__State__3753"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_szkPEErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnouncment" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_szldMErDEem2BZRQc2M93A" name="Debug__C__MasterAnnouncment">
              <connectionPoint xmi:id="_szmrUUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_sznSYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_apf4QEr4Eem5qeRdwCQ7KQ" name="From__Parent__4069" kind="entryPoint"/>
              <connectionPoint xmi:id="_api7kEr4Eem5qeRdwCQ7KQ" name="To__Parent__4071" kind="exitPoint"/>
              <region xmi:id="_szldMUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0ElYErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment" source="_szmrUUrDEem2BZRQc2M93A" target="_sz-ewErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0VEEErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment__40">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__init__trans__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0ElYUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_sz-ewErDEem2BZRQc2M93A" target="_sz_s4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0WSMErDEem2BZRQc2M93A" name="Debug__Ex__Running__42">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0ElYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0GakErDEem2BZRQc2M93A" name="Debug__AC__MasterAnnouncment" source="_sz_s4ErDEem2BZRQc2M93A" target="_s0BiEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0HBoErDEem2BZRQc2M93A" name="RegisterMaster" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Master Annoucment from &quot;&lt;&lt; MasterName&lt;&lt;&quot;\n&quot;;
    if (strcmp((char *)MasterName,&quot;server1&quot;)==0)
    {
    systemConfig.MasterList[0]=true;
    if (AnnouncementServer1Id.isValid())
    AnnouncmentServer1.cancelTimer(AnnouncementServer1Id);
    AnnouncementServer1Id=AnnouncmentServer1.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    else if (strcmp((char *)MasterName,&quot;server2&quot;)==0)
    {
    systemConfig.MasterList[1]=true;
    if (AnnouncementServer2Id.isValid())
    AnnouncmentServer2.cancelTimer(AnnouncementServer2Id);
    AnnouncementServer2Id=AnnouncmentServer2.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    // the following code has been generated
    if ((systemConfig.RunningMode==1)&amp;&amp; (systemConfig.MasterList[0] ) &amp;&amp; (systemConfig.MasterList[1]))
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Violation, there are 2 master in passive mode\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__AC__MasterAnnouncment&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0GakUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0HosErDEem2BZRQc2M93A" name="Debug__En__Running" source="_s0BiEErDEem2BZRQc2M93A" target="_s0DXQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0HoskrDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0HosUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0IPwErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnouncment" source="_s0DXQErDEem2BZRQc2M93A" target="_sznSYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0Z8kErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnouncment__46">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__end__trans__MasterAnnouncment&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0IPwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_apml8Er4Eem5qeRdwCQ7KQ" name="Trans__ex4075" source="_sznSYUrDEem2BZRQc2M93A" target="_apkJskr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_azrH8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__4154&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__4155&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__4158&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_apnNAEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__40744076" source="_aplX0Er4Eem5qeRdwCQ7KQ" target="_apkJskr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_azXl8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__4074&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__4074&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__4074&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__4154&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__4074&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__4155&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__4074&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__4158&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__4074&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_apyMIEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__MasterAnnouncment__4077" source="_s0BiEErDEem2BZRQc2M93A" target="_apkJskr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_azKxoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__4154&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__4155&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__4158&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ap12gEr4Eem5qeRdwCQ7KQ" name="PME_Trig4078" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ap6H8Er4Eem5qeRdwCQ7KQ" name="PME_Trig4079" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aqDR4Er4Eem5qeRdwCQ7KQ" name="PME_Trig4080" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aqIKYEr4Eem5qeRdwCQ7KQ" name="PME_Trig4081" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aqQGMEr4Eem5qeRdwCQ7KQ" name="PME_Trig4082" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aqXa8Er4Eem5qeRdwCQ7KQ" name="PME_Trig4083" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aqc6gEr4Eem5qeRdwCQ7KQ" name="PME_Trig4084" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aqjBIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4085" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aqnSkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4086" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aqv1cEr4Eem5qeRdwCQ7KQ" name="PME_Trig4087" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aq4_YEr4Eem5qeRdwCQ7KQ" name="PME_Trig4088" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aq-e8Er4Eem5qeRdwCQ7KQ" name="PME_Trig4089" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_arD-gEr4Eem5qeRdwCQ7KQ" name="PME_Trig4090" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_arJeEEr4Eem5qeRdwCQ7KQ" name="PME_Trig4091" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_arZVsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4092" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_arjGsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4093" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_arsQoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4094" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ar0zgEr4Eem5qeRdwCQ7KQ" name="PME_Trig4095" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_ar8vUEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Running__4096" source="_s0DXQErDEem2BZRQc2M93A" target="_apkJskr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_az80wEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__4154&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__4155&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__4158&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_asCO4Er4Eem5qeRdwCQ7KQ" name="PME_Trig4097" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_asMm8Er4Eem5qeRdwCQ7KQ" name="PME_Trig4098" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_asYNIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4099" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ase60Er4Eem5qeRdwCQ7KQ" name="PME_Trig4100" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_asjMQEr4Eem5qeRdwCQ7KQ" name="PME_Trig4101" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_asuLYEr4Eem5qeRdwCQ7KQ" name="PME_Trig4102" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_as2uQEr4Eem5qeRdwCQ7KQ" name="PME_Trig4103" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_as-DAEr4Eem5qeRdwCQ7KQ" name="PME_Trig4104" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_atGl4Er4Eem5qeRdwCQ7KQ" name="PME_Trig4105" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_atOhsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4106" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_atZg0Er4Eem5qeRdwCQ7KQ" name="PME_Trig4107" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_atdLMEr4Eem5qeRdwCQ7KQ" name="PME_Trig4108" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_atlHAEr4Eem5qeRdwCQ7KQ" name="PME_Trig4109" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_atpYcEr4Eem5qeRdwCQ7KQ" name="PME_Trig4110" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_atxUQEr4Eem5qeRdwCQ7KQ" name="PME_Trig4111" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_at1lsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4112" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_at7FQEr4Eem5qeRdwCQ7KQ" name="PME_Trig4113" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_auAk0Er4Eem5qeRdwCQ7KQ" name="PME_Trig4114" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_auNZIEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Running__4115" source="_sz-ewErDEem2BZRQc2M93A" target="_apkJskr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_az6_kEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__4154&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__4155&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__4158&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_auPOUEr4Eem5qeRdwCQ7KQ" name="PME_Trig4116" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_auRqkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4117" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_auSRoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4118" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_auTfwEr4Eem5qeRdwCQ7KQ" name="PME_Trig4119" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_auUG0Er4Eem5qeRdwCQ7KQ" name="PME_Trig4120" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_auXKIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4121" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_auo28Er4Eem5qeRdwCQ7KQ" name="PME_Trig4122" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_auyn8Er4Eem5qeRdwCQ7KQ" name="PME_Trig4123" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_au5VoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4124" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_avDtsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4125" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_avHYEEr4Eem5qeRdwCQ7KQ" name="PME_Trig4126" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_avRJEEr4Eem5qeRdwCQ7KQ" name="PME_Trig4127" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_avdWUEr4Eem5qeRdwCQ7KQ" name="PME_Trig4128" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_avoVcEr4Eem5qeRdwCQ7KQ" name="PME_Trig4129" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_av40IEr4Eem5qeRdwCQ7KQ" name="PME_Trig4130" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_awHdoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4131" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_awScwEr4Eem5qeRdwCQ7KQ" name="PME_Trig4132" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_awaYkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4133" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_awkwoEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__MasterAnnouncment__4134" source="_sz_s4ErDEem2BZRQc2M93A" target="_apkJskr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_a0EJgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__4154&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__4155&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__4158&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_awq3QEr4Eem5qeRdwCQ7KQ" name="PME_Trig4135" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_awvvwEr4Eem5qeRdwCQ7KQ" name="PME_Trig4136" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aw4SoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4137" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_axA1gEr4Eem5qeRdwCQ7KQ" name="PME_Trig4138" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_axL0oEr4Eem5qeRdwCQ7KQ" name="PME_Trig4139" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_axWzwEr4Eem5qeRdwCQ7KQ" name="PME_Trig4140" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_axkPIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4141" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_axunMEr4Eem5qeRdwCQ7KQ" name="PME_Trig4142" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ax7bgEr4Eem5qeRdwCQ7KQ" name="PME_Trig4143" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ayHBsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4144" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ayRZwEr4Eem5qeRdwCQ7KQ" name="PME_Trig4145" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aySn4Er4Eem5qeRdwCQ7KQ" name="PME_Trig4146" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ayWSQEr4Eem5qeRdwCQ7KQ" name="PME_Trig4147" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aykUsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4148" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ayn_EEr4Eem5qeRdwCQ7KQ" name="PME_Trig4149" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ayomIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4150" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ayp0QEr4Eem5qeRdwCQ7KQ" name="PME_Trig4151" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ayqbUEr4Eem5qeRdwCQ7KQ" name="PME_Trig4152" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_ays3kEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__MasterAnnouncment__4153" guard="_a0EwkUr4Eem5qeRdwCQ7KQ" source="_apkJskr4Eem5qeRdwCQ7KQ" target="_s0BiEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_a0EwkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4159">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_a0EwkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4159">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ayuswEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Running__4154" guard="_a0F-sUr4Eem5qeRdwCQ7KQ" source="_apkJskr4Eem5qeRdwCQ7KQ" target="_s0DXQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_a0F-sUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4161">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_a0F-sEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4161">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__4154&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aywh8Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Running__4155" guard="_a0GlwUr4Eem5qeRdwCQ7KQ" source="_apkJskr4Eem5qeRdwCQ7KQ" target="_sz-ewErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_a0GlwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4162">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_a0GlwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4162">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__4155&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ayyXIEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__MasterAnnouncment__4156" guard="_a0FXoUr4Eem5qeRdwCQ7KQ" source="_apkJskr4Eem5qeRdwCQ7KQ" target="_sz_s4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_a0FXoUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4160">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_a0FXoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4160">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_azAZkEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__4157" source="_apf4QEr4Eem5qeRdwCQ7KQ" target="_apkJskr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aze6sEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__4153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__4156&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__4154&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__4155&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__4158&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_azBnsEr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__4158" guard="_a0HM0Ur4Eem5qeRdwCQ7KQ" source="_apkJskr4Eem5qeRdwCQ7KQ" target="_api7kEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_a0HM0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4163">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_a0HM0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4163">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__4158&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_sz-ewErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz-ewUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0KE8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Running__35">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_sz_s4ErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz_s4UrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0NIQUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment__36">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s0BiEErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s0BiEUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0PkgUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment__37">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s0DXQErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s0DXQUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0SAwErDEem2BZRQc2M93A" name="Debug__A__En__Running__38">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_apkJskr4Eem5qeRdwCQ7KQ" name="DecesionPoint__4073" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aplX0Er4Eem5qeRdwCQ7KQ" name="Init__State__4074"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s0e1EErDEem2BZRQc2M93A" name="Debug__Path__server2Failure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s0fcIUrDEem2BZRQc2M93A" name="Debug__C__server2Failure">
              <connectionPoint xmi:id="_s0gqQUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s0hRUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_aRXsIEr4Eem5qeRdwCQ7KQ" name="From__Parent__3460" kind="entryPoint"/>
              <connectionPoint xmi:id="_aRbWgEr4Eem5qeRdwCQ7KQ" name="To__Parent__3462" kind="exitPoint"/>
              <region xmi:id="_s0fcIkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0658ErDEem2BZRQc2M93A" name="Debug__init__trans__server2Failure" source="_s0gqQUrDEem2BZRQc2M93A" target="_s01aYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1MmwErDEem2BZRQc2M93A" name="Debug__init__trans__server2Failure__65">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__init__trans__server2Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0658UrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s01aYErDEem2BZRQc2M93A" target="_s02BcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1N04ErDEem2BZRQc2M93A" name="Debug__Ex__Running__67">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0658krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s07hAErDEem2BZRQc2M93A" name="Debug__AC__server2Failure" source="_s02BcErDEem2BZRQc2M93A" target="_s032oErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s08IEErDEem2BZRQc2M93A" name="Server2Failure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server2, remove Server2 from masters list\n&quot;;
    systemConfig.MasterList[1]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__AC__server2Failure&quot;,(char *)&quot;Debug__B__Ac__server2Failure&quot;,(char *)&quot;Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s07hAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s08vIErDEem2BZRQc2M93A" name="Debug__En__Running" source="_s032oErDEem2BZRQc2M93A" target="_s05EwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s099QErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__server2Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s08vIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s099QUrDEem2BZRQc2M93A" name="Debug__end__trans__server2Failure" source="_s05EwErDEem2BZRQc2M93A" target="_s0hRUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1TUcErDEem2BZRQc2M93A" name="Debug__end__trans__server2Failure__71">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__end__trans__server2Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0-kUErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_aRr1MEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__34653466" source="_aRkgcEr4Eem5qeRdwCQ7KQ" target="_aRdLsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aW1a8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3465&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3547&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3465&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3546&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3465&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3545&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3465&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3549&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3465&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3544&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3465&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aRuRcEr4Eem5qeRdwCQ7KQ" name="Trans__ex3467" source="_s0hRUUrDEem2BZRQc2M93A" target="_aRdLsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aXAaEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3547&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3546&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3545&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3549&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3544&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aR2NQEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__server2Failure__3468" source="_s032oErDEem2BZRQc2M93A" target="_aRdLsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aW3QIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3547&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3546&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3545&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3549&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3544&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aR5QkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3469" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aR7s0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3470" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aSBzcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3471" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aSEPsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3472" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aSIhIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3473" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aSOAsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3474" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aSQc8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3475" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aSXKoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3476" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aSY_0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3477" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aScDIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3478" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aShisEr4Eem5qeRdwCQ7KQ" name="PME_Trig3479" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aSj-8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3480" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aSnpUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3481" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aSqsoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3482" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aSsh0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3483" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aSuXAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3484" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aSz2kEr4Eem5qeRdwCQ7KQ" name="PME_Trig3485" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aS2S0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3486" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aS3g8Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Running__3487" source="_s01aYErDEem2BZRQc2M93A" target="_aRdLsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aW_L8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3547&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3546&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3545&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3549&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3544&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aS4vEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3488" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aS9nkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3489" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aTAD0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3490" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aTB5AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3491" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aTDuMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3492" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aTJ00Er4Eem5qeRdwCQ7KQ" name="PME_Trig3493" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aTLqAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3494" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aTVbAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3495" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aTdW0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3496" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aTfzEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3497" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aTnH0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3498" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aTyG8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3499" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aT0jMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3500" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aT5bsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3501" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aT-7QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3502" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aUHeIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3503" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aUJ6YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3504" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aURPIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3505" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aUTrYEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__server2Failure__3506" source="_s02BcErDEem2BZRQc2M93A" target="_aRdLsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aXErgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3547&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3546&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3545&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3549&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3544&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aUbnMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3507" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aUeDcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3508" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aUht0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3509" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aUn0cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3510" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aUvJMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3511" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aUxlcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3512" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aU124Er4Eem5qeRdwCQ7KQ" name="PME_Trig3513" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aU79gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3514" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aVjBgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3515" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aVk2sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3516" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aVqWQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3517" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aVuAoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3518" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aVv10Er4Eem5qeRdwCQ7KQ" name="PME_Trig3519" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aV3KkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3520" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aV4_wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3521" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aV9RMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3522" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aWCJsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3523" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aWD-4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3524" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aWJecEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Running__3525" source="_s05EwErDEem2BZRQc2M93A" target="_aRdLsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aW9WwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3547&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3546&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3545&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3549&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3544&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aWL6sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3526" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aWNv4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3527" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aWQzMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3528" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aWT2gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3529" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aWWSwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3530" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aWXg4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3531" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aWYvAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3532" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aWbyUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3533" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aWe1oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3534" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aWgDwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3535" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aWgq0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3536" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aWh48Er4Eem5qeRdwCQ7KQ" name="PME_Trig3537" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aWjHEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3538" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aWn_kEr4Eem5qeRdwCQ7KQ" name="PME_Trig3539" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aWpNsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3540" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aWp0wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3541" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aWrC4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3542" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aWsRAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3543" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aWv7YEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__server2Failure__3544" guard="_aXKLEUr4Eem5qeRdwCQ7KQ" source="_aRdLsEr4Eem5qeRdwCQ7KQ" target="_s032oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aXKLEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3554">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aXKLEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3554">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__server2Failure__3544&quot;,&quot;Debug__A__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aWwicEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Running__3545" guard="_aXJkAEr4Eem5qeRdwCQ7KQ" source="_aRdLsEr4Eem5qeRdwCQ7KQ" target="_s01aYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aXJkAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3552">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aXI89Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3552">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__3545&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aWxJgEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__server2Failure__3546" guard="_aXI880r4Eem5qeRdwCQ7KQ" source="_aRdLsEr4Eem5qeRdwCQ7KQ" target="_s02BcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aXI880r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3551">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aXI88kr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3551">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__server2Failure__3546&quot;,&quot;Debug__B__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aWxwkEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Running__3547" guard="_aXI88Ur4Eem5qeRdwCQ7KQ" source="_aRdLsEr4Eem5qeRdwCQ7KQ" target="_s05EwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aXI88Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3550">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aXI88Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3550">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__3547&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aW0M0Er4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3548" source="_aRXsIEr4Eem5qeRdwCQ7KQ" target="_aRdLsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aXIV4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3547&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3546&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3545&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3549&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3544&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aW0M0Ur4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3549" guard="_aXJkAkr4Eem5qeRdwCQ7KQ" source="_aRdLsEr4Eem5qeRdwCQ7KQ" target="_aRbWgEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_aXJkAkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3553">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aXJkAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3553">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3549&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s01aYErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s01aYUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0_ycErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__60">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s02BcErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s02BcUrDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1C1wErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure__61">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s032oErDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s032oUrDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1HHMErDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure__62">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s05EwErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s05EwUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1JjcErDEem2BZRQc2M93A" name="Debug__A__En__Running__63">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aRdLsEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3464" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aRkgcEr4Eem5qeRdwCQ7KQ" name="Init__State__3465"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s1Y0AErDEem2BZRQc2M93A" name="Debug__Path__configOK" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s1ZbEUrDEem2BZRQc2M93A" name="Debug__C__configOK">
              <connectionPoint xmi:id="_s1apMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s1ceYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_anE2YEr4Eem5qeRdwCQ7KQ" name="From__Parent__3994" kind="entryPoint"/>
              <connectionPoint xmi:id="_anHSoEr4Eem5qeRdwCQ7KQ" name="To__Parent__3996" kind="exitPoint"/>
              <region xmi:id="_s1ZbEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s1xOgErDEem2BZRQc2M93A" name="Debug__init__trans__configOK" source="_s1apMUrDEem2BZRQc2M93A" target="_s1uLMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1-C0ErDEem2BZRQc2M93A" name="Debug__init__trans__configOK__89">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__init__trans__configOK&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s1x1kErDEem2BZRQc2M93A" name="Debug__Ac__configOK" source="_s1uLMUrDEem2BZRQc2M93A" target="_s1uyQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1ycoErDEem2BZRQc2M93A" name="configCheckL" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The configuration is OK, the transition config-> Running was taken, sending signal to servers and clients \n&quot;;
    ConfigComm.StartUp(this->systemConfig).send();
    std::cout&lt;&lt;&quot;ENV: ENV is in  Running State\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__Ac__configOK&quot;,(char *)&quot;Debug__B__Ac__configOK&quot;,(char *)&quot;Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s1x1kUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s1ycoUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s1uyQErDEem2BZRQc2M93A" target="_s1wAYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1zqwErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__configOK&quot;,(char *)&quot;Debug__A__En__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s1zDsErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s1zqwUrDEem2BZRQc2M93A" name="Debug__end__trans__configOK" source="_s1wAYErDEem2BZRQc2M93A" target="_s1ceYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2CUQErDEem2BZRQc2M93A" name="Debug__end__trans__configOK__93">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__end__trans__configOK&quot;,(char *)&quot;Debug__A__En__configOK&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s10R0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_anRqsEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__39994000" source="_anOAUEr4Eem5qeRdwCQ7KQ" target="_anMyMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_apPZkEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3999&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__4063&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3999&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__4060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3999&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__4059&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3999&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__4061&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3999&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_anS40Er4Eem5qeRdwCQ7KQ" name="Trans__ex4001" source="_s1ceYUrDEem2BZRQc2M93A" target="_anMyMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_apR10Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__4063&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__4060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__4059&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__4061&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_anY_cEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__configOK__4002" source="_s1uLMUrDEem2BZRQc2M93A" target="_anMyMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_apTD8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__4063&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__4060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__4059&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__4061&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_andQ4Er4Eem5qeRdwCQ7KQ" name="PME_Trig4003" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_anhiUEr4Eem5qeRdwCQ7KQ" name="PME_Trig4004" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_anjXgEr4Eem5qeRdwCQ7KQ" name="PME_Trig4005" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ankloEr4Eem5qeRdwCQ7KQ" name="PME_Trig4006" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_anpeIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4007" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_anr6YEr4Eem5qeRdwCQ7KQ" name="PME_Trig4008" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_anshcEr4Eem5qeRdwCQ7KQ" name="PME_Trig4009" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_antvkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4010" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_anyBAEr4Eem5qeRdwCQ7KQ" name="PME_Trig4011" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_an1rYEr4Eem5qeRdwCQ7KQ" name="PME_Trig4012" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_an25gEr4Eem5qeRdwCQ7KQ" name="PME_Trig4013" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_an4HoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4014" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_an-OQEr4Eem5qeRdwCQ7KQ" name="PME_Trig4015" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aoADcEr4Eem5qeRdwCQ7KQ" name="PME_Trig4016" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aoBRkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4017" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aoB4oEr4Eem5qeRdwCQ7KQ" name="PME_Trig4018" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aoFjAEr4Eem5qeRdwCQ7KQ" name="PME_Trig4019" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aoImUEr4Eem5qeRdwCQ7KQ" name="PME_Trig4020" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aoJ0cEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__configOK__4021" source="_s1wAYErDEem2BZRQc2M93A" target="_anMyMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_apaYsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__4063&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__4060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__4059&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__4061&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aoKbgEr4Eem5qeRdwCQ7KQ" name="PME_Trig4022" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aoLCkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4023" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aoMQsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4024" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aoP7EEr4Eem5qeRdwCQ7KQ" name="PME_Trig4025" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aoTlcEr4Eem5qeRdwCQ7KQ" name="PME_Trig4026" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aoUMgEr4Eem5qeRdwCQ7KQ" name="PME_Trig4027" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aoVaoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4028" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aoWBsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4029" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aoXP0Er4Eem5qeRdwCQ7KQ" name="PME_Trig4030" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aobhQEr4Eem5qeRdwCQ7KQ" name="PME_Trig4031" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aodWcEr4Eem5qeRdwCQ7KQ" name="PME_Trig4032" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aod9gEr4Eem5qeRdwCQ7KQ" name="PME_Trig4033" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aofLoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4034" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aogZwEr4Eem5qeRdwCQ7KQ" name="PME_Trig4035" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aoi2AEr4Eem5qeRdwCQ7KQ" name="PME_Trig4036" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aomgYEr4Eem5qeRdwCQ7KQ" name="PME_Trig4037" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aonHcEr4Eem5qeRdwCQ7KQ" name="PME_Trig4038" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aooVkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4039" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aoo8oEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__configOK__4040" source="_s1uyQErDEem2BZRQc2M93A" target="_anMyMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_apbm0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__4063&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__4060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__4059&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__4061&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aopjsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4041" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aoqx0Er4Eem5qeRdwCQ7KQ" name="PME_Trig4042" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aoucMEr4Eem5qeRdwCQ7KQ" name="PME_Trig4043" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aow4cEr4Eem5qeRdwCQ7KQ" name="PME_Trig4044" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aoyGkEr4Eem5qeRdwCQ7KQ" name="PME_Trig4045" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aoytoEr4Eem5qeRdwCQ7KQ" name="PME_Trig4046" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aoz7wEr4Eem5qeRdwCQ7KQ" name="PME_Trig4047" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ao0i0Er4Eem5qeRdwCQ7KQ" name="PME_Trig4048" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ao3mIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4049" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ao7QgEr4Eem5qeRdwCQ7KQ" name="PME_Trig4050" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ao73kEr4Eem5qeRdwCQ7KQ" name="PME_Trig4051" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ao9FsEr4Eem5qeRdwCQ7KQ" name="PME_Trig4052" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ao9swEr4Eem5qeRdwCQ7KQ" name="PME_Trig4053" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ao-64Er4Eem5qeRdwCQ7KQ" name="PME_Trig4054" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_apBXIEr4Eem5qeRdwCQ7KQ" name="PME_Trig4055" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_apEacEr4Eem5qeRdwCQ7KQ" name="PME_Trig4056" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_apFokEr4Eem5qeRdwCQ7KQ" name="PME_Trig4057" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_apG2sEr4Eem5qeRdwCQ7KQ" name="PME_Trig4058" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_apIE0Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__configOK__4059" guard="_apc08Ur4Eem5qeRdwCQ7KQ" source="_anMyMEr4Eem5qeRdwCQ7KQ" target="_s1uLMUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_apc08Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4066">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_apc08Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4066">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__configOK__4059&quot;,&quot;Debug__B__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_apIE0Ur4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__configOK__4060" guard="_apcN40r4Eem5qeRdwCQ7KQ" source="_anMyMEr4Eem5qeRdwCQ7KQ" target="_s1wAYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_apcN40r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4065">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_apcN4kr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4065">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__configOK__4060&quot;,&quot;Debug__A__En__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_apIr4Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__configOK__4061" guard="_apdcAUr4Eem5qeRdwCQ7KQ" source="_anMyMEr4Eem5qeRdwCQ7KQ" target="_s1uyQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_apdcAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4067">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_apdcAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4067">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configOK__4061&quot;,&quot;Debug__A__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_apLIIEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__4062" source="_anE2YEr4Eem5qeRdwCQ7KQ" target="_anMyMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_apYjgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__4063&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__4060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__4059&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__4061&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_apLvMEr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__4063" guard="_apcN4Ur4Eem5qeRdwCQ7KQ" source="_anMyMEr4Eem5qeRdwCQ7KQ" target="_anHSoEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_apcN4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4064">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_apcN4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion4064">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__4063&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s1uLMUrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uLMkrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s11f8UrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK__85">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s1uyQErDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uyQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s14jQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK__86">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s1wAYErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1wncErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s18NoUrDEem2BZRQc2M93A" name="Debug__A__En__configOK__87">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_anMyMEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3998" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_anOAUEr4Eem5qeRdwCQ7KQ" name="Init__State__3999"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s2HMwErDEem2BZRQc2M93A" name="Debug__Path__Server1Failure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s2JB8ErDEem2BZRQc2M93A" name="Debug__C__Server1Failure">
              <connectionPoint xmi:id="_s2KQEErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s2K3IUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_aj3KUEr4Eem5qeRdwCQ7KQ" name="From__Parent__3898" kind="entryPoint"/>
              <connectionPoint xmi:id="_aj3xYEr4Eem5qeRdwCQ7KQ" name="To__Parent__3900" kind="exitPoint"/>
              <region xmi:id="_s2JB8UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s2lt4ErDEem2BZRQc2M93A" name="Debug__init__trans__Server1Failure" source="_s2KQEErDEem2BZRQc2M93A" target="_s2eZIUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s24o0ErDEem2BZRQc2M93A" name="Debug__init__trans__Server1Failure__112">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__init__trans__Server1Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s2lt4UrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s2eZIUrDEem2BZRQc2M93A" target="_s2gOUErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s27FEErDEem2BZRQc2M93A" name="Debug__Ex__Running__114">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2lt4krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2mU8ErDEem2BZRQc2M93A" name="Debug__AC__Server1Failure" source="_s2gOUErDEem2BZRQc2M93A" target="_s2iDgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2m8AErDEem2BZRQc2M93A" name="Server1failure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server1, remove server1 from masters list\n&quot;;
    systemConfig.MasterList[0]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__AC__Server1Failure&quot;,(char *)&quot;Debug__B__Ac__Server1Failure&quot;,(char *)&quot;Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2mU8UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2m8AUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s2iDgErDEem2BZRQc2M93A" target="_s2j4sErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2njEUrDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__Server1Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2njEErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2oKIErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure" source="_s2j4sErDEem2BZRQc2M93A" target="_s2K3IUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2_9kErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure__118">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__end__trans__Server1Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2oKIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_aj-fEEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__39033904" source="_aj5mkEr4Eem5qeRdwCQ7KQ" target="_aj4YcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_am7FYEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3903&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3903&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3903&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3987&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3903&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3983&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3903&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3903&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aj_GIEr4Eem5qeRdwCQ7KQ" name="Trans__ex3905" source="_s2K3IUrDEem2BZRQc2M93A" target="_aj4YcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_am_94Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3987&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3983&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_akBiYEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__Server1Failure__3906" source="_s2gOUErDEem2BZRQc2M93A" target="_aj4YcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_anBzEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3987&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3983&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_akCJcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3907" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_akDXkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3908" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akElsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3909" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akIQEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3910" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_akKFQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3911" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_akLTYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3912" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_akL6cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3913" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akNIkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3914" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akOWsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3915" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_akSBEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3916" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_akUdUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3917" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_akVrcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3918" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_akW5kEr4Eem5qeRdwCQ7KQ" name="PME_Trig3919" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akXgoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3920" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_akZV0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3921" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akcZIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3922" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ake1YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3923" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_akgqkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3924" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_akh4sEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Running__3925" source="_s2j4sErDEem2BZRQc2M93A" target="_aj4YcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_am0-wEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3987&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3983&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_akjt4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3926" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_akn_UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3927" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akpNcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3928" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akp0gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3929" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_akrCoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3930" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aksQwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3931" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_akte4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3932" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akyXYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3933" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_akzlgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3934" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ak0zoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3935" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ak2BwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3936" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ak8IYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3937" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ak-koEr4Eem5qeRdwCQ7KQ" name="PME_Trig3938" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ak_ywEr4Eem5qeRdwCQ7KQ" name="PME_Trig3939" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_alBA4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3940" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_alHHgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3941" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_alI8sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3942" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_alKx4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3943" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_alOcQEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__Server1Failure__3944" source="_s2iDgErDEem2BZRQc2M93A" target="_aj4YcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_am53QEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3987&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3983&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_alStsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3945" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_alT70Er4Eem5qeRdwCQ7KQ" name="PME_Trig3946" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_alVJ8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3947" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_alZbYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3948" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aldFwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3949" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aleT4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3950" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_alhXMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3951" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_almPsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3952" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_alnd0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3953" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_alor8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3954" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_alrvQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3955" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_alxO0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3956" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_alyc8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3957" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_alzrEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3958" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_al1gQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3959" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_al3VcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3960" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_al5KoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3961" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_al9cEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3962" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_amC7oEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Running__3963" source="_s2eZIUrDEem2BZRQc2M93A" target="_aj4YcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_am3bAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3987&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3983&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_amF-8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3964" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_amHNEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3965" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_amKQYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3966" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_amPv8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3967" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_amQ-EEr4Eem5qeRdwCQ7KQ" name="PME_Trig3968" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_amSMMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3969" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_amY54Er4Eem5qeRdwCQ7KQ" name="PME_Trig3970" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_amaIAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3971" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ambWIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3972" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_amckQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3973" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_amgOoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3974" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_amjR8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3975" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_amj5AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3976" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_amlHIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3977" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ammVQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3978" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ampYkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3979" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_amr00Er4Eem5qeRdwCQ7KQ" name="PME_Trig3980" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_amtqAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3981" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_amu4IEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__Server1Failure__3982" guard="_anDoQ0r4Eem5qeRdwCQ7KQ" source="_aj4YcEr4Eem5qeRdwCQ7KQ" target="_s2gOUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_anDoQ0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3992">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_anDoQkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3992">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,&quot;Debug__B__Ac__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_amu4IUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Running__3983" guard="_anDoQUr4Eem5qeRdwCQ7KQ" source="_aj4YcEr4Eem5qeRdwCQ7KQ" target="_s2j4sErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_anDoQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3991">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_anDoQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3991">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__3983&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_amvfMEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__Server1Failure__3984" guard="_anCaI0r4Eem5qeRdwCQ7KQ" source="_aj4YcEr4Eem5qeRdwCQ7KQ" target="_s2iDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_anCaI0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3989">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_anCaIkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3989">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,&quot;Debug__A__Ac__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_amvfMUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Running__3985" guard="_anCaIUr4Eem5qeRdwCQ7KQ" source="_aj4YcEr4Eem5qeRdwCQ7KQ" target="_s2eZIUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_anCaIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3988">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_anCaIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3988">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__3985&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_amwtUEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3986" source="_aj3KUEr4Eem5qeRdwCQ7KQ" target="_aj4YcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_am4pIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3984&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3987&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3983&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3982&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_amwtUUr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3987" guard="_anDBMUr4Eem5qeRdwCQ7KQ" source="_aj4YcEr4Eem5qeRdwCQ7KQ" target="_aj3xYEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_anDBMUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3990">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_anDBMEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3990">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3987&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s2eZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2fAMErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2p_UErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__107">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2gOUErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2gOUUrDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Server1Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2tCoErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure__108">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2iDgErDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2iDgUrDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Server1Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2wtAErDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure__109">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2j4sErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2j4sUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2zJQErDEem2BZRQc2M93A" name="Debug__A__En__Running__110">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aj4YcEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3902" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aj5mkEr4Eem5qeRdwCQ7KQ" name="Init__State__3903"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s3GEMErDEem2BZRQc2M93A" name="Debug__Path__ConfigNOK" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s3JHgErDEem2BZRQc2M93A" name="Debug__C__ConfigNOK">
              <connectionPoint xmi:id="_s3KVoErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s3MK0UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_aMXQUUr4Eem5qeRdwCQ7KQ" name="From__Parent__3385" kind="entryPoint"/>
              <connectionPoint xmi:id="_aMZFgEr4Eem5qeRdwCQ7KQ" name="To__Parent__3387" kind="exitPoint"/>
              <region xmi:id="_s3JHgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s3eesErDEem2BZRQc2M93A" name="Debug__init__trans__ConfigNOK" source="_s3KVoErDEem2BZRQc2M93A" target="_s3bbYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3pd0ErDEem2BZRQc2M93A" name="Debug__init__trans__ConfigNOK__136">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__init__trans__ConfigNOK&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s3eesUrDEem2BZRQc2M93A" name="Debug__Ac__ConfigNOK" source="_s3bbYUrDEem2BZRQc2M93A" target="_s3cpgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3fFwUrDEem2BZRQc2M93A" name="LogFailure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The configuration is not OK, the transition configCheck-> ConfigFailure was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__Ac__ConfigNOK&quot;,(char *)&quot;Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s3fFwErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s3fs0ErDEem2BZRQc2M93A" name="Debug__En__ConfigFailure" source="_s3cpgErDEem2BZRQc2M93A" target="_s3d3oErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3fs0krDEem2BZRQc2M93A" name="failurEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The system is in Failure State, try to reload the config after 10 second\n&quot;;
    FailureTimer.informIn(UMLRTTimespec(10,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__En__ConfigFailure&quot;,(char *)&quot;Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s3fs0UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s3gT4ErDEem2BZRQc2M93A" name="Debug__end__trans__ConfigNOK" source="_s3d3oErDEem2BZRQc2M93A" target="_s3MK0UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3u9YErDEem2BZRQc2M93A" name="Debug__end__trans__ConfigNOK__140">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__end__trans__ConfigNOK&quot;,(char *)&quot;Debug__A__En__ConfigNOK&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s3gT4UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_aMkEoEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__33903391" source="_aMfMIEr4Eem5qeRdwCQ7KQ" target="_aMcI0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aRNUEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3390&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3390&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3451&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3390&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3390&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3390&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aMkrsEr4Eem5qeRdwCQ7KQ" name="Trans__ex3392" source="_s3MK0UrDEem2BZRQc2M93A" target="_aMcI0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aRExMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3451&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aMyHEEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ConfigNOK__3393" source="_s3bbYUrDEem2BZRQc2M93A" target="_aMcI0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aQ7AMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3451&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aMz8QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3394" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aM4NsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3395" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aM9tQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3396" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aNAJgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3397" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aNG3MEr4Eem5qeRdwCQ7KQ" name="PME_Trig3398" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aNJTcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3399" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aNQoMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3400" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aNSdYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3401" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aNVgsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3402" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aNbnUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3403" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aNdcgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3404" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aNhG4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3405" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aNnNgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3406" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aNqQ0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3407" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aNvwYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3408" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aNxlkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3409" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aN0o4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3410" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aN6IcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3411" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aN7WkEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ConfigNOK__3412" source="_s3cpgErDEem2BZRQc2M93A" target="_aMcI0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aQ9ccEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3451&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aN8ksEr4Eem5qeRdwCQ7KQ" name="PME_Trig3413" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aOAPEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3414" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aOD5cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3415" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aOFuoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3416" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aOHj0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3417" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aOMcUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3418" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aOPfoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3419" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aORU0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3420" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aOZ3sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3421" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aOf-UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3422" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aOk20Er4Eem5qeRdwCQ7KQ" name="PME_Trig3423" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aOrkgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3424" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aOwdAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3425" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aO4Y0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3426" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aO94YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3427" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aPDX8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3428" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aPHCUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3429" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aPMh4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3430" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aPQMQEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__ConfigNOK__3431" source="_s3d3oErDEem2BZRQc2M93A" target="_aMcI0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aRHNcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3451&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aPWS4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3432" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aPYvIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3433" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aPeOsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3434" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aPgD4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3435" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aPjHMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3436" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aPp04Er4Eem5qeRdwCQ7KQ" name="PME_Trig3437" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aPsRIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3438" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aP0M8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3439" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aP2pMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3440" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aP7hsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3441" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aP_MEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3442" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aQDdgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3443" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aQKLMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3444" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aQQ44Er4Eem5qeRdwCQ7KQ" name="PME_Trig3445" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aQUjQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3446" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aQXmkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3447" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aQeUQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3448" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aQhXkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3449" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aQosUEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ConfigNOK__3450" guard="_aRPwUUr4Eem5qeRdwCQ7KQ" source="_aMcI0Er4Eem5qeRdwCQ7KQ" target="_s3bbYUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aRPwUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3455">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aRPwUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3455">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ConfigNOK__3450&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aQpTYEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ConfigNOK__3451" guard="_aRQXYUr4Eem5qeRdwCQ7KQ" source="_aMcI0Er4Eem5qeRdwCQ7KQ" target="_s3cpgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aRQXYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3456">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aRQXYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3456">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ConfigNOK__3451&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aQpTYUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__ConfigNOK__3452" guard="_aRQ-cUr4Eem5qeRdwCQ7KQ" source="_aMcI0Er4Eem5qeRdwCQ7KQ" target="_s3d3oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aRQ-cUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3457">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aRQ-cEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3457">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ConfigNOK__3452&quot;,&quot;Debug__A__En__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aQs9wEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3453" source="_aMXQUUr4Eem5qeRdwCQ7KQ" target="_aMcI0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aQ0SgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3451&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aQvaAEr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3454" guard="_aRSMkEr4Eem5qeRdwCQ7KQ" source="_aMcI0Er4Eem5qeRdwCQ7KQ" target="_aMZFgEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_aRSMkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3458">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aRRlgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3458">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3454&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s3bbYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3bbYkrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigNOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3hiAUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK__132">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s3cpgErDEem2BZRQc2M93A" name="Debug__A__Ac__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3cpgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigNOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3klUUrDEem2BZRQc2M93A" name="Debug__A__Ac__ConfigNOK__133">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s3d3oErDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3d3oUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3nooUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK__134">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aMcI0Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__3389" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aMfMIEr4Eem5qeRdwCQ7KQ" name="Init__State__3390"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s31EAErDEem2BZRQc2M93A" name="Debug__Path__Init__ReadConfig__1" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s31rEUrDEem2BZRQc2M93A" name="Debug__C__Init__ReadConfig__1">
              <connectionPoint xmi:id="_s32SIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s33gQErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_agtIoUr4Eem5qeRdwCQ7KQ" name="From__Parent__3823" kind="entryPoint"/>
              <connectionPoint xmi:id="_aguWwEr4Eem5qeRdwCQ7KQ" name="To__Parent__3825" kind="exitPoint"/>
              <region xmi:id="_s31rEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4LpUErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1" source="_s32SIUrDEem2BZRQc2M93A" target="_s4ImAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4ZEsErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1__158">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__init__trans__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s4MQYErDEem2BZRQc2M93A" name="Debug__Ac__Init__ReadConfig__1" source="_s4ImAErDEem2BZRQc2M93A" target="_s4J0IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4MQYkrDEem2BZRQc2M93A" name="ENVInit" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4MQYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4M3cErDEem2BZRQc2M93A" name="Debug__En__ReadConfig" source="_s4J0IErDEem2BZRQc2M93A" target="_s4LCQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4NegErDEem2BZRQc2M93A" name="ReadConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__En__ReadConfig&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4M3cUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4OFkErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1" source="_s4LCQErDEem2BZRQc2M93A" target="_s33gQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4d9MErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1__162">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__end__trans__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4OFkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ag1rgEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__38283829" source="_agz2UEr4Eem5qeRdwCQ7KQ" target="_agu90Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ajtZUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3828&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3892&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3828&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3828&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3828&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3888&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3828&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ag2SkEr4Eem5qeRdwCQ7KQ" name="Trans__ex3830" source="_s33gQErDEem2BZRQc2M93A" target="_agu90Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ajvOgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3892&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3888&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ag3gsEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__Init__ReadConfig__1__3831" source="_s4J0IErDEem2BZRQc2M93A" target="_agu90Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ajsLMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3892&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3888&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ag4HwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3832" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ag-1cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3833" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahADkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3834" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahAqoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3835" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ahB4wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3836" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ahDG4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3837" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ahHYUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3838" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahJNgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3839" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahKboEr4Eem5qeRdwCQ7KQ" name="PME_Trig3840" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ahLCsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3841" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ahMQ0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3842" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ahP7MEr4Eem5qeRdwCQ7KQ" name="PME_Trig3843" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ahS-gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3844" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahUMoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3845" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ahVawEr4Eem5qeRdwCQ7KQ" name="PME_Trig3846" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahWB0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3847" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ahZFIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3848" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ahcvgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3849" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_ahd9oEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__Init__ReadConfig__1__3850" source="_s4ImAErDEem2BZRQc2M93A" target="_agu90Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ajjoUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3892&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3888&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aheksEr4Eem5qeRdwCQ7KQ" name="PME_Trig3851" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ahfy0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3852" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahgZ4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3853" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahi2IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3854" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ahoVsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3855" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aho8wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3856" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ahqK4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3857" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahucUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3858" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ahytwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3859" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ahz74Er4Eem5qeRdwCQ7KQ" name="PME_Trig3860" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ah0i8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3861" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ah1xEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3862" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ah73sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3863" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ah9s4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3864" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ah-7AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3865" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aiClYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3866" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aiG20Er4Eem5qeRdwCQ7KQ" name="PME_Trig3867" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aiJTEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3868" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aiOLkEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Init__ReadConfig__1__3869" source="_s4LCQErDEem2BZRQc2M93A" target="_agu90Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ajldgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3892&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3888&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aiR18Er4Eem5qeRdwCQ7KQ" name="PME_Trig3870" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aiXVgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3871" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aicOAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3872" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aiiUoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3873" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aimmEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3874" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aiobQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3875" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aiwXEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3876" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aixlMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3877" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ai1PkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3878" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ai6vIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3879" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ai79QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3880" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ai_AkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3881" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ajA1wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3882" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ajCD4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3883" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ajO4MEr4Eem5qeRdwCQ7KQ" name="PME_Trig3884" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ajQGUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3885" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ajYpMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3886" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ajZ3UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3887" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_ajc6oEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__Init__ReadConfig__1__3888" guard="_aj18M0r4Eem5qeRdwCQ7KQ" source="_agu90Er4Eem5qeRdwCQ7KQ" target="_s4J0IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aj18M0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3896">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aj18Mkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3896">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__ReadConfig__1__3888&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ajeIwEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__Init__ReadConfig__1__3889" guard="_aj18MUr4Eem5qeRdwCQ7KQ" source="_agu90Er4Eem5qeRdwCQ7KQ" target="_s4ImAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aj18MUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3895">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aj18MEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3895">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__ReadConfig__1__3889&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ajfW4Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Init__ReadConfig__1__3890" guard="_aj1VIUr4Eem5qeRdwCQ7KQ" source="_agu90Er4Eem5qeRdwCQ7KQ" target="_s4LCQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aj1VIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3894">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aj1VIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3894">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Init__ReadConfig__1__3890&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ajiaMEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3891" source="_agtIoUr4Eem5qeRdwCQ7KQ" target="_agu90Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ajyR0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3892&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3890&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3888&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ajiaMUr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3892" guard="_aj0HAUr4Eem5qeRdwCQ7KQ" source="_agu90Er4Eem5qeRdwCQ7KQ" target="_aguWwEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_aj0HAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3893">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aj0HAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3893">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3892&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s4ImAErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4ImAUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4P6wUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1__154">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4J0IErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4J0IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4S-EErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1__155">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4LCQErDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4LCQUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4WocUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1__156">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_agu90Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__3827" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_agz2UEr4Eem5qeRdwCQ7KQ" name="Init__State__3828"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s4hAgErDEem2BZRQc2M93A" name="Debug__Path__RetryConfig" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s4iOoUrDEem2BZRQc2M93A" name="Debug__C__RetryConfig">
              <connectionPoint xmi:id="_s4jcwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s4kq4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_aaek0Ur4Eem5qeRdwCQ7KQ" name="From__Parent__3652" kind="entryPoint"/>
              <connectionPoint xmi:id="_aafL4kr4Eem5qeRdwCQ7KQ" name="To__Parent__3654" kind="exitPoint"/>
              <region xmi:id="_s4iOokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4-6kErDEem2BZRQc2M93A" name="Debug__init__trans__RetryConfig" source="_s4jcwErDEem2BZRQc2M93A" target="_s40igUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5OLIErDEem2BZRQc2M93A" name="Debug__init__trans__RetryConfig__181">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__init__trans__RetryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s4-6kUrDEem2BZRQc2M93A" name="Debug__Ex__ConfigFailure" source="_s40igUrDEem2BZRQc2M93A" target="_s41woErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5PZQErDEem2BZRQc2M93A" name="Debug__Ex__ConfigFailure__183">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__Ex__ConfigFailure&quot;,(char *)&quot;Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4-6kkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4_hoErDEem2BZRQc2M93A" name="Debug__AC__RetryConfig" source="_s41woErDEem2BZRQc2M93A" target="_s46CEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5AIsErDEem2BZRQc2M93A" name="retry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: retrying configuation, The transtion Failure -> readConfig was taken \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__AC__RetryConfig&quot;,(char *)&quot;Debug__B__Ac__RetryConfig&quot;,(char *)&quot;Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4_hoUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5AvwErDEem2BZRQc2M93A" name="Debug__En__ReadConfig" source="_s46CEErDEem2BZRQc2M93A" target="_s49scErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5BW0ErDEem2BZRQc2M93A" name="ReadConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__En__ReadConfig&quot;,(char *)&quot;Debug__A__Ac__RetryConfig&quot;,(char *)&quot;Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5AvwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5BW0UrDEem2BZRQc2M93A" name="Debug__end__trans__RetryConfig" source="_s49scErDEem2BZRQc2M93A" target="_s4kq4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5TqsErDEem2BZRQc2M93A" name="Debug__end__trans__RetryConfig__187">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__end__trans__RetryConfig&quot;,(char *)&quot;Debug__A__En__ReadConfig&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5BW0krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_aanuwEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__36573658" source="_aahBEEr4Eem5qeRdwCQ7KQ" target="_aagaAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ad0MsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3657&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__3739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3657&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3657&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3657&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3741&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3657&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3657&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aaoV0Er4Eem5qeRdwCQ7KQ" name="Trans__ex3659" source="_s4kq4UrDEem2BZRQc2M93A" target="_aagaAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_adwiUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__3739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3741&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aaqLAEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__ConfigFailure__3660" source="_s40igUrDEem2BZRQc2M93A" target="_aagaAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ady-kEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__3739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3741&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aaqyEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3661" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aatOUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3662" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aayG0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3663" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aazU8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3664" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aa0jEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3665" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aa4NcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3666" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aa-UEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3667" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_abB-cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3668" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_abG28Er4Eem5qeRdwCQ7KQ" name="PME_Trig3669" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_abIFEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3670" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_abJ6QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3671" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_abQn8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3672" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_abR2EEr4Eem5qeRdwCQ7KQ" name="PME_Trig3673" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_abTrQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3674" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_abZK0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3675" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_abbnEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3676" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_abcOIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3677" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_abeDUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3678" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_abhGoEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__RetryConfig__3679" source="_s41woErDEem2BZRQc2M93A" target="_aagaAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_adqbsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__3739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3741&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ablYEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3680" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_abmmMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3681" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_abn0UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3682" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_absFwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3683" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_abvwIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3684" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_abw-QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3685" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_abyzcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3686" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ab3E4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3687" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ab6IMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3688" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ab7WUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3689" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ab8kcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3690" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_acDSIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3691" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_acFHUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3692" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_acGVcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3693" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_acKm4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3694" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_acO4UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3695" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_acQGcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3696" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_acSisEr4Eem5qeRdwCQ7KQ" name="PME_Trig3697" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_acW0IEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__RetryConfig__3698" source="_s46CEErDEem2BZRQc2M93A" target="_aagaAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ad1a0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__3739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3741&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_acYpUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3699" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_acZ3cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3700" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_acbFkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3701" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_acdh0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3702" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_acjBYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3703" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ackPgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3704" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_acldoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3705" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_acsyYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3706" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_acuAgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3707" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_acvOoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3708" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ac18UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3709" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ac3KcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3710" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ac4YkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3711" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ac5msEr4Eem5qeRdwCQ7KQ" name="PME_Trig3712" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ac9REEr4Eem5qeRdwCQ7KQ" name="PME_Trig3713" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ac_tUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3714" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_adA7cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3715" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_adBigEr4Eem5qeRdwCQ7KQ" name="PME_Trig3716" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_adCwoEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__ReadConfig__3717" source="_s49scErDEem2BZRQc2M93A" target="_aagaAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_adpNkEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__3739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3741&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_adDXsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3718" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_adFM4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3719" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_adJeUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3720" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_adKscEr4Eem5qeRdwCQ7KQ" name="PME_Trig3721" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_adLTgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3722" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_adMhoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3723" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_adNvwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3724" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_adO94Er4Eem5qeRdwCQ7KQ" name="PME_Trig3725" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_adQzEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3726" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_adUdcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3727" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_adVEgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3728" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_adWSoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3729" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_adW5sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3730" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_adYH0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3731" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_adbyMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3732" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_adeOcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3733" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_adfckEr4Eem5qeRdwCQ7KQ" name="PME_Trig3734" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_adgDoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3735" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_adh40Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__ConfigFailure__3736" guard="_ad2o80r4Eem5qeRdwCQ7KQ" source="_aagaAEr4Eem5qeRdwCQ7KQ" target="_s40igUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ad2o80r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3744">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ad2o8kr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3744">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_adh40Ur4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__RetryConfig__3737" guard="_ad2o8Ur4Eem5qeRdwCQ7KQ" source="_aagaAEr4Eem5qeRdwCQ7KQ" target="_s41woErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ad2o8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3743">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ad2o8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3743">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,&quot;Debug__B__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_adif4Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__RetryConfig__3738" guard="_ad3QA0r4Eem5qeRdwCQ7KQ" source="_aagaAEr4Eem5qeRdwCQ7KQ" target="_s46CEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ad3QA0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3746">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ad3QAkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3746">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,&quot;Debug__A__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_adif4Ur4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__ReadConfig__3739" guard="_ad2B4Ur4Eem5qeRdwCQ7KQ" source="_aagaAEr4Eem5qeRdwCQ7KQ" target="_s49scErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ad2B4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3742">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ad2B4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3742">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ReadConfig__3739&quot;,&quot;Debug__A__En__ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_adljMEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3740" source="_aaek0Ur4Eem5qeRdwCQ7KQ" target="_aagaAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_adrp0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__3739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3741&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__3738&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_admKQEr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3741" guard="_ad3QAUr4Eem5qeRdwCQ7KQ" source="_aagaAEr4Eem5qeRdwCQ7KQ" target="_aafL4kr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ad3QAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3745">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ad3QAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3745">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3741&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s40igUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s40igkrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5DzEUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure__176">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s41woErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s41woUrDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5G2YErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig__177">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s46CEErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s46CEUrDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5J5sErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig__178">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s49scErDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s49scUrDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5Lu4ErDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig__179">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aagaAEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3656" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aahBEEr4Eem5qeRdwCQ7KQ" name="Init__State__3657"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s5YjMErDEem2BZRQc2M93A" name="Debug__Path__QueryConfig" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s5ZKQUrDEem2BZRQc2M93A" name="Debug__C__QueryConfig">
              <connectionPoint xmi:id="_s5aYYErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s5a_cUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_aXLZMEr4Eem5qeRdwCQ7KQ" name="From__Parent__3556" kind="entryPoint"/>
              <connectionPoint xmi:id="_aXOcgEr4Eem5qeRdwCQ7KQ" name="To__Parent__3558" kind="exitPoint"/>
              <region xmi:id="_s5ZKQkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s5vIgErDEem2BZRQc2M93A" name="Debug__init__trans__QueryConfig" source="_s5aYYErDEem2BZRQc2M93A" target="_s5q3EErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5-ZEErDEem2BZRQc2M93A" name="Debug__init__trans__QueryConfig__206">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__init__trans__QueryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s5vIgUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s5q3EErDEem2BZRQc2M93A" target="_s5sFMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5_nMErDEem2BZRQc2M93A" name="Debug__Ex__Running__208">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5vIgkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5vvkErDEem2BZRQc2M93A" name="Debug__AC__QueryConfig" source="_s5sFMErDEem2BZRQc2M93A" target="_s5ssQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5wWoErDEem2BZRQc2M93A" name="configReply" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The Config request replied at index&quot; &lt;&lt; msg->sapIndex0_&lt;&lt; &quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ConfigComm.ReplyConfig(systemConfig).sendAt(tempid);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__AC__QueryConfig&quot;,(char *)&quot;Debug__B__Ac__QueryConfig&quot;,(char *)&quot;Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5vvkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5wWoUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s5ssQErDEem2BZRQc2M93A" target="_s5t6YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5w9sErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__QueryConfig&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5wWokrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5w9sUrDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig" source="_s5t6YErDEem2BZRQc2M93A" target="_s5a_cUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6EfsErDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig__212">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__end__trans__QueryConfig&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5w9skrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_aXUjIEr4Eem5qeRdwCQ7KQ" name="Trans__ex3562" source="_s5a_cUrDEem2BZRQc2M93A" target="_aXSG4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aaLC0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3642&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aXVKMEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__35613563" source="_aXTVAEr4Eem5qeRdwCQ7KQ" target="_aXSG4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aaP7UEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3561&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3561&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3561&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3561&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3561&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3642&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3561&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aXce8Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__QueryConfig__3564" source="_s5sFMErDEem2BZRQc2M93A" target="_aXSG4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aaJNoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3642&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aXdGAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3565" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aXdtEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3566" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aXe7MEr4Eem5qeRdwCQ7KQ" name="PME_Trig3567" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aXgJUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3568" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aXilkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3569" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aXm3AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3570" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aXneEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3571" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aXosMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3572" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aXp6UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3573" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aXs9oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3574" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aXwoAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3575" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aXx2IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3576" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aXzEQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3577" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aXzrUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3578" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aX2HkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3579" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aX6ZAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3580" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aX7nIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3581" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aX81QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3582" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aX9cUEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Running__3583" source="_s5t6YErDEem2BZRQc2M93A" target="_aXSG4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aaMQ8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3642&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aX-DYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3584" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aYBtwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3585" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYFYIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3586" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYGmQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3587" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aYH0YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3588" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aYKQoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3589" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aYN7AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3590" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYPJIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3591" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYQXQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3592" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aYQ-UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3593" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aYSMcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3594" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aYVPwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3595" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aYY6IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3596" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYaIQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3597" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aYbWYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3598" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYdyoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3599" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aYjSMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3600" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aYlHYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3601" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aYlucEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Running__3602" source="_s5q3EErDEem2BZRQc2M93A" target="_aXSG4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aaTlsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3642&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aYm8kEr4Eem5qeRdwCQ7KQ" name="PME_Trig3603" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aYtDMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3604" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYu4YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3605" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aYvfcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3606" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aYxUoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3607" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aY20MEr4Eem5qeRdwCQ7KQ" name="PME_Trig3608" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aY5QcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3609" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aY53gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3610" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aY7ssEr4Eem5qeRdwCQ7KQ" name="PME_Trig3611" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aZCaYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3612" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aZDogEr4Eem5qeRdwCQ7KQ" name="PME_Trig3613" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aZE2oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3614" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aZIhAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3615" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZMycEr4Eem5qeRdwCQ7KQ" name="PME_Trig3616" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aZOAkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3617" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZP1wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3618" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aZUHMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3619" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aZXxkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3620" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aZY_sEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__QueryConfig__3621" source="_s5ssQErDEem2BZRQc2M93A" target="_aXSG4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aaWB8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3642&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_aZaN0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3622" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aZftYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3623" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZiJoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3624" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZjXwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3625" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aZmbEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3626" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aZrTkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3627" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aZshsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3628" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZtv0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3629" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZu98Er4Eem5qeRdwCQ7KQ" name="PME_Trig3630" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aZzPYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3631" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aZ1EkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3632" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_aZ1roEr4Eem5qeRdwCQ7KQ" name="PME_Trig3633" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_aZ25wEr4Eem5qeRdwCQ7KQ" name="PME_Trig3634" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZ4H4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3635" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aZ6kIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3636" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_aZ9ncEr4Eem5qeRdwCQ7KQ" name="PME_Trig3637" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aZ_coEr4Eem5qeRdwCQ7KQ" name="PME_Trig3638" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_aaAqwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3639" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
                </transition>
                <transition xmi:id="_aaB44Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__QueryConfig__3640" guard="_aaWpAUr4Eem5qeRdwCQ7KQ" source="_aXSG4Er4Eem5qeRdwCQ7KQ" target="_s5sFMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aaWpAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3646">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aaWpAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3646">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,&quot;Debug__B__Ac__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aaCf8Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Running__3641" guard="_aaZFQUr4Eem5qeRdwCQ7KQ" source="_aXSG4Er4Eem5qeRdwCQ7KQ" target="_s5t6YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aaZFQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3648">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aaZFQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3648">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__3641&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aaCf8Ur4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Running__3642" guard="_aadWsUr4Eem5qeRdwCQ7KQ" source="_aXSG4Er4Eem5qeRdwCQ7KQ" target="_s5q3EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aadWsUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3650">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aadWsEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3650">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__3642&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aaCf8kr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__QueryConfig__3643" guard="_aaXQEUr4Eem5qeRdwCQ7KQ" source="_aXSG4Er4Eem5qeRdwCQ7KQ" target="_s5ssQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aaXQEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3647">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aaXQEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3647">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,&quot;Debug__A__Ac__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aaFjQEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3644" source="_aXLZMEr4Eem5qeRdwCQ7KQ" target="_aXSG4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aaUz0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__3640&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3641&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3645&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3642&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aaGKUEr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3645" guard="_aabhgUr4Eem5qeRdwCQ7KQ" source="_aXSG4Er4Eem5qeRdwCQ7KQ" target="_aXOcgEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_aabhgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3649">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aabhgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3649">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3645&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s5q3EErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5q3EUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5yy4ErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__201">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5sFMErDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5sFMUrDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;QueryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s52dQErDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig__202">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5ssQErDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5ssQUrDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;QueryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s55gkErDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig__203">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5t6YErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5t6YUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s57VwErDEem2BZRQc2M93A" name="Debug__A__En__Running__204">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aXSG4Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__3560" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_aXTVAEr4Eem5qeRdwCQ7KQ" name="Init__State__3561"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s6YowErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_aGB-0Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__3293" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_su-C8ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_su9b4ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>ConfigComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svWdcUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_svWdcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;AnnouncmentServerTimeout,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncmentServerTimeout!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncmentServerTimeout);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svdyMErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_svaH0ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;AnnouncmentServerTimeout&quot;==tempVarName){
    AnnouncmentServerTimeout=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sv86YErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_svrNkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aDpZMUr4Eem5qeRdwCQ7KQ" name="loadHeap" specification="_aDpZMEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.AnnouncmentServerTimeout&quot;,this->AnnouncmentServerTimeout);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aDwt8Ur4Eem5qeRdwCQ7KQ" name="unLoadHeap" specification="_aDwt8Er4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.AnnouncmentServerTimeout&quot;,&amp;this->AnnouncmentServerTimeout);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aEiKAUr4Eem5qeRdwCQ7KQ" name="sendMessage" specification="_aEiKAEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;ReplyReplicationMode&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyReplicationMode( boost::any_cast&lt;int>(message.payload[&quot;RunningMode&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyServerRole( boost::any_cast&lt;int>(message.payload[&quot;ServerRole&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;Shutdown&quot;) {
   if(message.payload.size()==0){
    ConfigComm.Shutdown().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;StartUp&quot;) {
   if(message.payload.size()==1){
    ConfigComm.StartUp( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyConfig&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyConfig( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyMasterId&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyMasterId( boost::any_cast&lt;int>(message.payload[&quot;MasterId&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;BIT&quot;) {
   if(message.payload.size()==0){
    ConfigComm.BIT().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aEo3sEr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" specification="_aEoQoEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aF0jcUr4Eem5qeRdwCQ7KQ" name="initForPMD" specification="_aF0jcEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ENV::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ENV::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;FailureTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;BITTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;GeneralTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer1&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer2&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;configTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_su9b4ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_su-C8ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svWdcErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_svWdcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svaH0ErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_svdyMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svb9AErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svckEErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svdLIErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_svrNkErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sv86YErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svrNkUrDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svwtIErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svzJYErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv1loErDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv2MsErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv4B4ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv5QAUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv53EErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv7sQErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv8TUErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aDpZMEr4Eem5qeRdwCQ7KQ" name="loadHeap" visibility="private" method="_aDpZMUr4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_aDwt8Er4Eem5qeRdwCQ7KQ" name="unLoadHeap" visibility="private" method="_aDwt8Ur4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_aEiKAEr4Eem5qeRdwCQ7KQ" name="sendMessage" visibility="private" method="_aEiKAUr4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_aEixEEr4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aEjYIEr4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aEoQoEr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" visibility="private" method="_aEo3sEr4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_aErT8Er4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_aEr7AEr4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_aF0jcEr4Eem5qeRdwCQ7KQ" name="initForPMD" visibility="private" method="_aF0jcUr4Eem5qeRdwCQ7KQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Y0NjUAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_nk_BAAgzEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_aaXBwAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_v000cAgsEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_fXXuUAxwEeaB2MeL96fedA" memberEnd="_fXb_wAxwEeaB2MeL96fedA _fXcm0AxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_fXaKkAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_fXaxoAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_fXcm0AxwEeaB2MeL96fedA" name="env" type="_sMZ5EAgoEea_md0mpENoqg" association="_fXXuUAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_z1vioAggEea_md0mpENoqg" name="Hosts">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_wVFC0AghEea_md0mpENoqg" client="_z1vioAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4_oYIAghEea_md0mpENoqg" name="Host" isActive="true">
        <ownedAttribute xmi:id="_qKL_IAgnEea_md0mpENoqg" name="hostInfo" type="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_wp2QEAltEea_md0mpENoqg" name="hostConfig" type="_Y1UDYAg6Eea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_MFku4Ao-EeaGqPUk-4V4qQ" name="TimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_yqPtMgxwEeaB2MeL96fedA" name="hostinfo" type="_JesyoAgiEea_md0mpENoqg" aggregation="composite" association="_yqOfEAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_z8hNYQxwEeaB2MeL96fedA" name="configuration" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_z8f_QAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_dCa_wPMYEeauO5SNGpOV7w" name="logfile"/>
        <ownedAttribute xmi:id="_nU84IPMbEeauO5SNGpOV7w" name="ts">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IWYV4G6NEeSyDdTKostG4Q"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_G0bAoPMlEeauO5SNGpOV7w" name="messageID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
          <defaultValue xmi:type="uml:LiteralReal" xmi:id="_G0bAofMlEeauO5SNGpOV7w"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_xCGHkAgmEea_md0mpENoqg" name="Server" classifierBehavior="_lT4V0AlLEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_6zESYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-3KD0AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xByucAlLEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xB_iwAlLEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pQ6HcAnMEeaGqPUk-4V4qQ" name="ServerComm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etWXMAnOEeaGqPUk-4V4qQ" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_euWcwAnOEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_HIvrsApCEeaGqPUk-4V4qQ" name="Master" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_ZDrx0ApDEeaGqPUk-4V4qQ" name="KeepAliveTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Vj1U4ApFEeaGqPUk-4V4qQ" name="MasterAnnounceTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6YR3oApGEeaGqPUk-4V4qQ" name="KeepAliveTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ceg-8ApHEeaGqPUk-4V4qQ" name="KeepAliveTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Ceg-8QpHEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_N795sApHEeaGqPUk-4V4qQ" name="AnnouncementTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_YVMXUApHEeaGqPUk-4V4qQ" name="AnnouncementTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_YVMXUQpHEeaGqPUk-4V4qQ" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_855RMAs1EeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rmnI0OM8EeaTpaLNj-zYpw" name="Slave" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sxfygErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxhAoUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sxhnsErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxz7kErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx0ioErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx1JsErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx2X0ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_YSLbkEr4Eem5qeRdwCQ7KQ" name="dbgPortForServer" visibility="protected" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YSMCoEr4Eem5qeRdwCQ7KQ" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_YSMCoUr4Eem5qeRdwCQ7KQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_lT4V0AlLEea_md0mpENoqg" name="ServerStateMachine">
          <region xmi:id="_lvCAwAlLEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_myR7kAlNEea_md0mpENoqg" name="Init__StandBy__3" source="_tC5EgErDEem2BZRQc2M93A" target="_jLPjcAlNEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vR0TsAlNEea_md0mpENoqg" name="InitLog">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Init__StandBy__3&quot;,(char *)&quot;Debug__Path__Init__StandBy__3&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_fhk4oAlOEea_md0mpENoqg" name="StandBy__CheckConfig__6" source="_tGwQ0ErDEem2BZRQc2M93A" target="_Rrrc0AlvEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_jEMbEAlfEea_md0mpENoqg" name="StartupServer">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: StartingUp\n&quot;;
    this->hostConfig=config;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Configuration is:&quot;&lt;&lt; config.RunningMode&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy__CheckConfig__6&quot;,(char *)&quot;Debug__Path__StandBy__CheckConfig__6&quot;,(char *)&quot;CheckConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_l1V8wAlOEea_md0mpENoqg" name="ServerFaliure" source="_s7c_wErDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xgwrEApLEeaGqPUk-4V4qQ" name="CancellTimer">
                <language>C++</language>
                <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);
    int r=random()%30+5;
    Timer.informEvery(UMLRTTimespec(r,0),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Failure,  will recover after &quot; &lt;&lt; r &lt;&lt; &quot; seconds\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ServerFaliure&quot;,(char *)&quot;Debug__Path__ServerFaliure&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_pku_oAlOEea_md0mpENoqg" name="Recover" source="_tAaYQErDEem2BZRQc2M93A" target="_Pyhf8Ap5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yH_CUAp7EeaGqPUk-4V4qQ" name="Recover">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: is recovering\n&quot;;
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Recover&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_iM5MYAlvEea_md0mpENoqg" name="initTimer" source="_s97E8ErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nB58AApKEeaGqPUk-4V4qQ" name="InitTimer">
                <language>C++</language>
                <body>logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;    
//UMLRTTimespec ts;
    //ts.getclock(ts);
    //this->setTimePointSecond();
    logfile.open(this->getName());
    //if (logfile.is_open())
    //	logfile&lt;&lt;ts.tv_sec&lt;&lt;&quot;:&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.close();
    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(r,0),4);
   TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::initTimer&quot;,(char *)&quot;Debug__Path__initTimer&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_kdt_gAlvEea_md0mpENoqg" name="BeSlave" source="_tFEOwErDEem2BZRQc2M93A" target="_88oQAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFaNAErDEem2BZRQc2M93A" name="BeSlave__571">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::BeSlave&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;Pseudo5&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_aRWloAnREeaGqPUk-4V4qQ" name="ServiceRequest" source="_tF4HEErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_jf2tMAosEeaGqPUk-4V4qQ" name="ReplyRequest">
                <language>C++</language>
                <body>   //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ClientRequest,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Message from client replied at index &quot;&lt;&lt;msg->sapIndex0_&lt;&lt;&quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ServerComm.Reply(0).sendAt(tempid);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;
    //ts.getclock(ts);
    //if (logfile.is_open())
    //logfile&lt;&lt;&quot;CleintReply,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ServiceRequest&quot;,(char *)&quot;Debug__Path__ServiceRequest&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_2jFDsApyEeaGqPUk-4V4qQ" name="MasterAnnounce" source="_tEAe0ErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1qc9IApzEeaGqPUk-4V4qQ" name="MasterAnnounce">
                <language>C++</language>
                <body>    //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;&quot;keepAliveStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::MasterAnnounce&quot;,(char *)&quot;Debug__Path__MasterAnnounce&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_ElyUAAp0EeaGqPUk-4V4qQ" name="KeepAlive" source="_tHWGsErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9ovXcAp1EeaGqPUk-4V4qQ" name="SendKeepAlive">
                <language>C++</language>
                <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    if (hostConfig.RunningMode==1)
    Master.IAmAlive((char *)this->getName()).send();
    std::cout&lt;&lt;&quot;Master: Keep Alive is sent\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::KeepAlive&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_i_dO4Ap5EeaGqPUk-4V4qQ" name="ActiveMode" source="_s_-6cErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAX8AErDEem2BZRQc2M93A" name="ActiveMode__400">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ActiveMode&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_pYtP8Ap5EeaGqPUk-4V4qQ" name="BeingMaster" source="_tBD4gErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_lf6aoAqTEeaGqPUk-4V4qQ" name="BeMaster">
                <language>C++</language>
                <body>    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(360000);
    TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::BeingMaster&quot;,(char *)&quot;Debug__Path__BeingMaster&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_wPvR0Ap8EeaGqPUk-4V4qQ" name="PassiveMode" source="_tCc_oErDEem2BZRQc2M93A" target="_887yAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tC1aIErDEem2BZRQc2M93A" name="PassiveMode__482">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::PassiveMode&quot;,(char *)&quot;Debug__Path__PassiveMode&quot;,(char *)&quot;Pseudo2&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_QEtu0AsLEeaGqPUk-4V4qQ" name="purgeotherMessage" source="_s9KP8ErDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s94osErDEem2BZRQc2M93A" name="purgeotherMessage__315">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::purgeotherMessage&quot;,(char *)&quot;Debug__Path__purgeotherMessage&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_bHEIAONOEeaTpaLNj-zYpw" name="ExitPoint1__BeMaster__4" source="_tEp_EErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFBLcErDEem2BZRQc2M93A" name="ExitPoint1__BeMaster__4__557">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ExitPoint1__BeMaster__4&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7gDEErDEem2BZRQc2M93A" name="Debug__ServerFaliure" source="_UrcckAlOEea_md0mpENoqg" target="_s7c_wErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7gDEUrDEem2BZRQc2M93A" name="Debug__ServerFaliure__241">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServerFaliure&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__ServerFaliure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_qt8XoApEEeaGqPUk-4V4qQ" name="Failure" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7h4QErDEem2BZRQc2M93A" name="Debug__ServerFaliure__S" guard="_s7ifUUrDEem2BZRQc2M93A" source="_s7c_wErDEem2BZRQc2M93A" target="_s7eN4UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s7ifUUrDEem2BZRQc2M93A" name="Debug__GuardServerFaliure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s7ifUErDEem2BZRQc2M93A" name="Debug__GuardServerFaliure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7jGYErDEem2BZRQc2M93A" name="Debug__ServerFaliure__S__243">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServerFaliure__S&quot;,(char *)&quot;Debug__Path__ServerFaliure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7k7kErDEem2BZRQc2M93A" name="Debug__ServerFaliure__E" source="_s7e08UrDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7k7kUrDEem2BZRQc2M93A" name="Debug__ServerFaliure__E__244">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServerFaliure__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7mwwErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7nX0ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange__246">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s7mwwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7ol8ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7p0EErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint__247">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7pNAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7rCMErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7rCMkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint__248">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7rCMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7sQUErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7sQUkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints__249">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7sQUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7s3YErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7s3YkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode__250">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s7s3YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7tecErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7vToErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg__251">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7tecUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uskErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9NTQUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage" source="_hgSoEAlOEea_md0mpENoqg" target="_s9KP8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9N6UErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__290">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__purgeotherMessage&quot;,(char *)&quot;Failure&quot;,(char *)&quot;Debug__Path__purgeotherMessage&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_WQkXoAsMEeaGqPUk-4V4qQ" name="purge" event="_f4LPUApBEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ _HIvrsApCEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_s9PvgErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__S" guard="_s9PvgkrDEem2BZRQc2M93A" source="_s9KP8ErDEem2BZRQc2M93A" target="_s9MFIErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s9PvgkrDEem2BZRQc2M93A" name="Debug__GuardpurgeotherMessage">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s9PvgUrDEem2BZRQc2M93A" name="Debug__GuardpurgeotherMessage">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9Q9oErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__S__292">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__purgeotherMessage__S&quot;,(char *)&quot;Debug__Path__purgeotherMessage&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s9SLwErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__E" source="_s9MsMUrDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9SLwUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__E__293">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__purgeotherMessage__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s9UA8ErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9UoAErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange__295">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s9UA8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9VPEErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9VPEkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint__296">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9VPEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9V2IErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9WdMErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint__297">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9V2IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9YSYErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9YSYkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints__298">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9YSYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9Y5cErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ZggErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode__299">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s9Y5cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9ZggUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9auoUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg__300">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9aHkErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9auoErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9-IQUrDEem2BZRQc2M93A" name="Debug__initTimer" guard="_zq0b0AlvEea_md0mpENoqg" source="_Rrrc0AlvEea_md0mpENoqg" target="_s97E8ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_zq0b0AlvEea_md0mpENoqg" name="CheckConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_XImjEAlwEea_md0mpENoqg" name="CheckConfig">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <language>C++</language>
                  <body>    if ((hostConfig.RunningMode==0) ||
    ((hostConfig.RunningMode==1) &amp;&amp; (strcmp(hostConfig.MasterName,this->getName())==0)))
    return true;
    else 
    return false;
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9-vUErDEem2BZRQc2M93A" name="Debug__initTimer__317">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__initTimer&quot;,(char *)&quot;CheckConfig&quot;,(char *)&quot;Debug__Path__initTimer&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_pWyMEApzEeaGqPUk-4V4qQ" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9_9cErDEem2BZRQc2M93A" name="Debug__initTimer__S" guard="_s9_9ckrDEem2BZRQc2M93A" source="_s97E8ErDEem2BZRQc2M93A" target="_s986IUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s9_9ckrDEem2BZRQc2M93A" name="Debug__GuardinitTimer">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s9_9cUrDEem2BZRQc2M93A" name="Debug__GuardinitTimer">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;CheckConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-AkgErDEem2BZRQc2M93A" name="Debug__initTimer__S__319">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__initTimer__S&quot;,(char *)&quot;Debug__Path__initTimer&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s-CZsErDEem2BZRQc2M93A" name="Debug__initTimer__E" source="_s99hMUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-CZsUrDEem2BZRQc2M93A" name="Debug__initTimer__E__320">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__initTimer__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s-EO4ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-E18ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange__322">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s-EO4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-FdAErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-FdAkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint__323">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-FdAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-GrIErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-GrIkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint__324">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-GrIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-HSMErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-H5QErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints__325">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-HSMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-IgUErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-IgUkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode__326">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s-IgUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-JHYErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-KVgErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg__327">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-JHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JuckrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tACk0UrDEem2BZRQc2M93A" name="Debug__ActiveMode" guard="_OyNyIAp8EeaGqPUk-4V4qQ" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_s_-6cErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_OyNyIAp8EeaGqPUk-4V4qQ" name="checkConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyOZMAp8EeaGqPUk-4V4qQ" name="checkConfig">
                  <language>C++</language>
                  <body>    if (hostConfig.RunningMode==0)
    return true;
    else return false;
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tACk0krDEem2BZRQc2M93A" name="Debug__ActiveMode__388">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ActiveMode&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tADy8ErDEem2BZRQc2M93A" name="Debug__ActiveMode__S" guard="_tAFBEUrDEem2BZRQc2M93A" source="_s_-6cErDEem2BZRQc2M93A" target="_tAAvoUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tAFBEUrDEem2BZRQc2M93A" name="Debug__GuardActiveMode">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tAFBEErDEem2BZRQc2M93A" name="Debug__GuardActiveMode">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Choice1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAGPMErDEem2BZRQc2M93A" name="Debug__ActiveMode__S__390">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ActiveMode__S&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAIEYErDEem2BZRQc2M93A" name="Debug__ActiveMode__E" source="_tAB9wErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAIEYUrDEem2BZRQc2M93A" name="Debug__ActiveMode__E__391">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ActiveMode__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAJ5kErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAJ5kkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange__393">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAJ5kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAKgoErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tALHsUrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint__394">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tALHsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAMV0ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAMV0krDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint__395">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAMV0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAM84ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tANj8UrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints__396">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tANj8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOLAErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAOLAkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode__397">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAOLAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOyEErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAQnQErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg__398">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAPZIErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAPZIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAeCoErDEem2BZRQc2M93A" name="Debug__Recover" source="_hgSoEAlOEea_md0mpENoqg" target="_tAaYQErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAeCoUrDEem2BZRQc2M93A" name="Debug__Recover__402">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover&quot;,(char *)&quot;Failure&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_uSw5sAp6EeaGqPUk-4V4qQ" name="Timeout" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAge4ErDEem2BZRQc2M93A" name="Debug__Recover__S" guard="_tAhF8UrDEem2BZRQc2M93A" source="_tAaYQErDEem2BZRQc2M93A" target="_tAbmYUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tAhF8UrDEem2BZRQc2M93A" name="Debug__GuardRecover">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tAhF8ErDEem2BZRQc2M93A" name="Debug__GuardRecover">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAhtAErDEem2BZRQc2M93A" name="Debug__Recover__S__404">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover__S&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAjiMErDEem2BZRQc2M93A" name="Debug__Recover__E" source="_tAc0gUrDEem2BZRQc2M93A" target="_Pyhf8Ap5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAkJQErDEem2BZRQc2M93A" name="Debug__Recover__E__405">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAlXYErDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAlXYkrDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange__407">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAlXYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAl-cErDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAl-ckrDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint__408">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAl-cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAmlgErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnMkErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint__409">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAmlgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAnzoErDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnzokrDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints__410">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAnzoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAoasErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAoaskrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode__411">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAoasUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tApBwErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAqP4UrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg__412">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tApBwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAqP4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBIxAUrDEem2BZRQc2M93A" name="Debug__BeingMaster" source="_kLngAAp5EeaGqPUk-4V4qQ" target="_tBD4gErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBJYEErDEem2BZRQc2M93A" name="Debug__BeingMaster__423">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeingMaster&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;Debug__Path__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tBJ_IErDEem2BZRQc2M93A" name="Debug__BeingMaster__S" guard="_tBKmMUrDEem2BZRQc2M93A" source="_tBD4gErDEem2BZRQc2M93A" target="_tBG70ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tBKmMUrDEem2BZRQc2M93A" name="Debug__GuardBeingMaster">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tBKmMErDEem2BZRQc2M93A" name="Debug__GuardBeingMaster">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBLNQErDEem2BZRQc2M93A" name="Debug__BeingMaster__S__425">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeingMaster__S&quot;,(char *)&quot;Debug__Path__BeingMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tBMbYErDEem2BZRQc2M93A" name="Debug__BeingMaster__E" source="_tBIJ8UrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBNCcErDEem2BZRQc2M93A" name="Debug__BeingMaster__E__426">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeingMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tBOQkErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBO3oUrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange__428">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tBO3oErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBPesErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBPeskrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint__429">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBPesUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQFwErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBQFwkrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint__430">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQFwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQs0ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBRT4ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints__431">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQs0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBRT4UrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBR68ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode__432">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tBRT4krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBSiAErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBTwIErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg__433">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBSiAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCgqAUrDEem2BZRQc2M93A" name="Debug__PassiveMode" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_tCc_oErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tChREErDEem2BZRQc2M93A" name="Debug__PassiveMode__470">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__PassiveMode&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;Debug__Path__PassiveMode&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tCifMErDEem2BZRQc2M93A" name="Debug__PassiveMode__S" guard="_tCjtUUrDEem2BZRQc2M93A" source="_tCc_oErDEem2BZRQc2M93A" target="_tCe00UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tCjtUUrDEem2BZRQc2M93A" name="Debug__GuardPassiveMode">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tCjtUErDEem2BZRQc2M93A" name="Debug__GuardPassiveMode">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Choice1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCk7cErDEem2BZRQc2M93A" name="Debug__PassiveMode__S__472">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__PassiveMode__S&quot;,(char *)&quot;Debug__Path__PassiveMode&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tCmwoErDEem2BZRQc2M93A" name="Debug__PassiveMode__E" source="_tCgC8UrDEem2BZRQc2M93A" target="_887yAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCmwoUrDEem2BZRQc2M93A" name="Debug__PassiveMode__E__473">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__PassiveMode__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Pseudo2&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tCol0ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpM4UrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange__475">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tCpM4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCpz8ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpz8krDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint__476">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCpz8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCqbAErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCqbAkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint__477">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCqbAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrCEErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCrpIErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints__478">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCrCEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrpIUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCsQMUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode__479">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tCsQMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCs3QErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCteUkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg__480">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCs3QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCs3QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tC9V8UrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3" source="_tJHBQErDEem2BZRQc2M93A" target="_tC5EgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tC99AErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__484">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tJI2cErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tC_yMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S" guard="_tDAZQUrDEem2BZRQc2M93A" source="_tC5EgErDEem2BZRQc2M93A" target="_tC7gwErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tDAZQUrDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDAZQErDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDBAUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S__486">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Init__StandBy__3__S&quot;,(char *)&quot;Debug__Path__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tDCOcErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__E" source="_tC8u4UrDEem2BZRQc2M93A" target="_jLPjcAlNEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDCOcUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__E__487">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Init__StandBy__3__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tDEDoErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDEqsErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange__489">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tDEDoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDFRwErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDF40ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint__490">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDFRwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDGf4ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHG8ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint__491">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDGf4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDHuAErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHuAkrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints__492">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDHuAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDIVEErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDI8IUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode__493">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tDI8IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDJjMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDKxUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg__494">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDJjMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDJjMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEEJMErDEem2BZRQc2M93A" name="Debug__MasterAnnounce" source="_UrcckAlOEea_md0mpENoqg" target="_tEAe0ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEEJMUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__521">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__MasterAnnounce&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_8oV_gAp3EeaGqPUk-4V4qQ" name="MasterAnnouncment" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEFXUErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__S" guard="_tEF-YUrDEem2BZRQc2M93A" source="_tEAe0ErDEem2BZRQc2M93A" target="_tECUAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tEF-YUrDEem2BZRQc2M93A" name="Debug__GuardMasterAnnounce">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tEF-YErDEem2BZRQc2M93A" name="Debug__GuardMasterAnnounce">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEGlcErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__S__523">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__MasterAnnounce__S&quot;,(char *)&quot;Debug__Path__MasterAnnounce&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEHMgErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__E" source="_tEC7EUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEHzkErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__E__524">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__MasterAnnounce__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEIaoErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEJBsUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange__526">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEJBsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEJowErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEKP0ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint__527">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEJowUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEKP0UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEK24ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint__528">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEKP0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEK24UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tELd8ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints__529">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEK24krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tELd8UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEMFAUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode__530">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tEMFAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEMsEErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEN6MErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg__531">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEMsEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tEMsEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEtpcErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4" source="_M8iZcONCEeaTpaLNj-zYpw" target="_tEp_EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEtpcUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__545">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEu3kErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__S" guard="_tEveoUrDEem2BZRQc2M93A" source="_tEp_EErDEem2BZRQc2M93A" target="_tEr0QUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tEveoUrDEem2BZRQc2M93A" name="Debug__GuardExitPoint1__BeMaster__4">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tEveoErDEem2BZRQc2M93A" name="Debug__GuardExitPoint1__BeMaster__4">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEwFsErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__S__547">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4__S&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tExT0ErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__E" source="_tEsbUUrDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEx64ErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__E__548">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEzJAErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEzwEUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange__550">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEzwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE0XIErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE0-MUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint__551">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE0-MErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE1lQErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2MUErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint__552">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE1lQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE2zYErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2zYkrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints__553">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE2zYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE3acErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE4BgUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode__554">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tE4BgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE4okErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE52sUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg__555">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE4okUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE52sErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFJHQUrDEem2BZRQc2M93A" name="Debug__BeSlave" source="_Rrrc0AlvEea_md0mpENoqg" target="_tFEOwErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFJHQkrDEem2BZRQc2M93A" name="Debug__BeSlave__559">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave&quot;,(char *)&quot;CheckConfig&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFKVYErDEem2BZRQc2M93A" name="Debug__BeSlave__S" guard="_tFK8cUrDEem2BZRQc2M93A" source="_tFEOwErDEem2BZRQc2M93A" target="_tFGrAErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tFK8cUrDEem2BZRQc2M93A" name="Debug__GuardBeSlave">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tFK8cErDEem2BZRQc2M93A" name="Debug__GuardBeSlave">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;CheckConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFLjgErDEem2BZRQc2M93A" name="Debug__BeSlave__S__561">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave__S&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFMxoErDEem2BZRQc2M93A" name="Debug__BeSlave__E" source="_tFIgMUrDEem2BZRQc2M93A" target="_88oQAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFMxoUrDEem2BZRQc2M93A" name="Debug__BeSlave__E__562">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Pseudo5&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFOm0ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFPN4ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange__564">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tFOm0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFP08ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFP08krDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint__565">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFP08UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFQcAErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRDEErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint__566">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFQcAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRDEUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRqIUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints__567">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFRqIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRqIkrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFSRMErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode__568">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tFRqI0rDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFSRMUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFS4Q0rDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg__569">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFSRMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tF8_kUrDEem2BZRQc2M93A" name="Debug__ServiceRequest" source="_UrcckAlOEea_md0mpENoqg" target="_tF4HEErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tF9moErDEem2BZRQc2M93A" name="Debug__ServiceRequest__587">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_2NJiIAnREeaGqPUk-4V4qQ" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_tF_b0ErDEem2BZRQc2M93A" name="Debug__ServiceRequest__S" guard="_tF_b0krDEem2BZRQc2M93A" source="_tF4HEErDEem2BZRQc2M93A" target="_tF7KYUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tF_b0krDEem2BZRQc2M93A" name="Debug__GuardServiceRequest">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tF_b0UrDEem2BZRQc2M93A" name="Debug__GuardServiceRequest">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGAp8ErDEem2BZRQc2M93A" name="Debug__ServiceRequest__S__589">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest__S&quot;,(char *)&quot;Debug__Path__ServiceRequest&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tGB4EErDEem2BZRQc2M93A" name="Debug__ServiceRequest__E" source="_tF7xcUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGB4EUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__E__590">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tGDtQErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGDtQkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange__592">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tGDtQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGE7YErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGE7YkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint__593">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGE7YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGFicErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGFickrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint__594">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGFicUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJgErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGJgkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints__595">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGGJgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJg0rDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGwkUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode__596">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tGGwkErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGHXoErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGIlwErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg__597">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGHXoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGHXokrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGzUIUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6" source="_jLPjcAlNEea_md0mpENoqg" target="_tGwQ0ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGzUIkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__611">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__StandBy__CheckConfig__6&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;Debug__Path__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_aihU8AlfEea_md0mpENoqg" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tG1JUErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__S" guard="_tG1wYUrDEem2BZRQc2M93A" source="_tGwQ0ErDEem2BZRQc2M93A" target="_tGyGAErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tG1wYUrDEem2BZRQc2M93A" name="Debug__GuardStandBy__CheckConfig__6">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tG1wYErDEem2BZRQc2M93A" name="Debug__GuardStandBy__CheckConfig__6">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;StandBy&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG2XcErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__S__613">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__StandBy__CheckConfig__6__S&quot;,(char *)&quot;Debug__Path__StandBy__CheckConfig__6&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tG3lkErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__E" source="_tGyGAkrDEem2BZRQc2M93A" target="_Rrrc0AlvEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG4MoErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__E__614">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__StandBy__CheckConfig__6__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;CheckConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tG6B0ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG6B0krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange__616">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tG6B0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG7P8ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG7P8krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint__617">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG7P8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG8eEErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG8eEkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint__618">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG8eEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9FIErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG9sMErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints__619">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG9FIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9sMUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG-TQErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode__620">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tG9sMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG-TQUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG_hYUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg__621">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG-6UErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG_hYErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHZxEUrDEem2BZRQc2M93A" name="Debug__KeepAlive" source="_UrcckAlOEea_md0mpENoqg" target="_tHWGsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHaYIErDEem2BZRQc2M93A" name="Debug__KeepAlive__632">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_RAsgEAp1EeaGqPUk-4V4qQ" name="KeppAlive" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHbmQErDEem2BZRQc2M93A" name="Debug__KeepAlive__S" guard="_tHcNUUrDEem2BZRQc2M93A" source="_tHWGsErDEem2BZRQc2M93A" target="_tHX74UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tHcNUUrDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tHcNUErDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHc0YErDEem2BZRQc2M93A" name="Debug__KeepAlive__S__634">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive__S&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tHdbcErDEem2BZRQc2M93A" name="Debug__KeepAlive__E" source="_tHYi8UrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHeCgErDEem2BZRQc2M93A" name="Debug__KeepAlive__E__635">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tHfQoErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHf3sUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange__637">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tHf3sErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhF0ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHhF0krDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint__638">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHhF0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhs4ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHiT8UrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint__639">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHiT8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHi7AErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHjiEErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints__640">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHi7AUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHjiEUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHkJIErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode__641">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tHjiEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHkwMErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHl-UUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg__642">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHkwMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHkwMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHlXQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHl-UErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJIPYErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_hY-7oAlNEea_md0mpENoqg" target="_tJHBQErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJIPYUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYOZMEr4Eem5qeRdwCQ7KQ" name="1140" source="_Rrrc0AlvEea_md0mpENoqg" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z6DYUEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;CheckConfig&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;CheckConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYPAQEr4Eem5qeRdwCQ7KQ" name="1141" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z2E3QEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Choice1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYPnUEr4Eem5qeRdwCQ7KQ" name="1142" source="_tC5EgErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z48lEEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYPnUUr4Eem5qeRdwCQ7KQ" name="1143" source="_s9KP8ErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z3VbgEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYQOYEr4Eem5qeRdwCQ7KQ" name="1144" source="_tF4HEErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z4J64Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYQ1cEr4Eem5qeRdwCQ7KQ" name="1145" source="_s7c_wErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0fi4Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYQ1cUr4Eem5qeRdwCQ7KQ" name="1146" source="_s97E8ErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z55AQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYRcgEr4Eem5qeRdwCQ7KQ" name="1147" source="_tEp_EErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z7KLkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYTRsEr4Eem5qeRdwCQ7KQ" name="1148" source="_tFEOwErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z6MiQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYVG4Er4Eem5qeRdwCQ7KQ" name="1149" source="_tAaYQErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z1rOoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYXjIEr4Eem5qeRdwCQ7KQ" name="1150" source="_s_-6cErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z6vU0Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYYxQEr4Eem5qeRdwCQ7KQ" name="1151" source="_tBD4gErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z32_8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYZYUEr4Eem5qeRdwCQ7KQ" name="1152" source="_tHWGsErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z4l_wEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYZYUUr4Eem5qeRdwCQ7KQ" name="1153" source="_tCc_oErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z5fXoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYZ_YEr4Eem5qeRdwCQ7KQ" name="1154" source="_tEAe0ErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z4c10Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYamcEr4Eem5qeRdwCQ7KQ" name="1155" source="_tGwQ0ErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z4sGYEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YYe34Er4Eem5qeRdwCQ7KQ" name="From__Failure__1156" source="_hgSoEAlOEea_md0mpENoqg" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z3vrMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_YYjwYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1157" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YYkXcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1158" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YYllkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1159" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YYoB0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1160" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YYrFIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1161" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YYthYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1162" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_YYuvgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1163" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YYv9oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1164" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_YYwksEr4Eem5qeRdwCQ7KQ" name="PME_Trig1165" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YY2rUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1166" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_YY4ggEr4Eem5qeRdwCQ7KQ" name="PME_Trig1167" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_YY5HkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1168" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YY68wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1169" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YZAcUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1170" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YZBqcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1171" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YZCRgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1172" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_YZDfoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1173" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_YZKNUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1174" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZLbcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1175" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_YZMpkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1176" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_YZNQoEr4Eem5qeRdwCQ7KQ" name="From__StandBy__1177" source="_jLPjcAlNEea_md0mpENoqg" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z2pfAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_YZVMcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1178" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZWakEr4Eem5qeRdwCQ7KQ" name="PME_Trig1179" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YZXosEr4Eem5qeRdwCQ7KQ" name="PME_Trig1180" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZZd4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1181" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YZe9cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1182" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZgLkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1183" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_YZgyoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1184" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YZiAwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1185" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZjO4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1186" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_YZpVgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1187" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZqjoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1188" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_YZrxwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1189" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_YZsY0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1190" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YZuOAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1191" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YZwDMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1192" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YZxRUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1193" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_YZzGgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1194" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_YZ2w4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1195" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZ3_AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1196" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_YZ50MEr4Eem5qeRdwCQ7KQ" name="PME_Trig1197" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_YZ6bQEr4Eem5qeRdwCQ7KQ" name="From__Debug__InitState__1198" source="_tJHBQErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z3_i0Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_YZ83gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1199" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YZ9ekEr4Eem5qeRdwCQ7KQ" name="PME_Trig1200" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YaAh4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1201" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YaFaYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1202" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YaIdsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1203" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YaJr0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1204" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_YaKS4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1205" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YaK58Er4Eem5qeRdwCQ7KQ" name="PME_Trig1206" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YaMIEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1207" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_YaS1wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1208" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YaUD4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1209" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_YaUq8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1210" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_YaV5EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1211" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YaYVUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1212" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YabYoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1213" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YacmwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1214" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_YadN0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1215" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_Yad04Er4Eem5qeRdwCQ7KQ" name="PME_Trig1216" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_YafDAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1217" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YagRIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1218" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_YaiGUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1219" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_YaitYEr4Eem5qeRdwCQ7KQ" name="From__RunAsMaster__1220" source="_UrcckAlOEea_md0mpENoqg" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z5FvAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_YalJoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1221" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YamXwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1222" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Yao0AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1223" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YatFcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1224" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_YawIwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1225" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YaxW4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1226" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_Yax98Er4Eem5qeRdwCQ7KQ" name="PME_Trig1227" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YazMEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1228" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_YazzIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1229" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_Ya1oUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1230" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_Ya5SsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1231" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_Ya7H4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1232" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_Ya7u8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1233" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Ya8WAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1234" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_Ya9kIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1235" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_Ya-yQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1236" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_YbB1kEr4Eem5qeRdwCQ7KQ" name="PME_Trig1237" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_YbGHAEr4Eem5qeRdwCQ7KQ" name="To__Failure__1238" guard="_Z7oFoUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_hgSoEAlOEea_md0mpENoqg">
              <ownedRule xmi:id="_Z7oFoUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3159">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7oFoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3159">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Failure__1238&quot;,&quot;Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YbGuEEr4Eem5qeRdwCQ7KQ" name="To__StandBy__1239" guard="_Z7mQcUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_jLPjcAlNEea_md0mpENoqg">
              <ownedRule xmi:id="_Z7mQcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3158">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7mQcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3158">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBy__1239&quot;,&quot;StandBy&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YbGuEUr4Eem5qeRdwCQ7KQ" name="To__Debug__InitState__1240" guard="_Z7YOAUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_tJHBQErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_Z7YOAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3145">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7YOAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3145">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__1240&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YbHVIEr4Eem5qeRdwCQ7KQ" name="To__RunAsMaster__1241" guard="_Z7aDMUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_UrcckAlOEea_md0mpENoqg">
              <ownedRule xmi:id="_Z7aDMUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3146">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7aDMEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3146">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__RunAsMaster__1241&quot;,&quot;RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YbJKUEr4Eem5qeRdwCQ7KQ" name="Trans__ex1242" source="_tGyGAkrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z5O48Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YbMNoEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__StandBy__CheckConfig__6__1244" guard="_Z7gJ0Ur4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_YbKYcEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7gJ0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3153">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7gJ0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3153">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YbPQ8Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__StandBy__CheckConfig__6__1246" source="_YbOp4Er4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z1kg8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Yf-nAEr4Eem5qeRdwCQ7KQ" name="Trans__ex1323" source="_tAB9wErDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z6WTQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YgAcMEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ActiveMode__1325" guard="_Z7e7sUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_Yf_OEEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7e7sUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3150">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7e7sEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3150">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YgEGkEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ActiveMode__1327" source="_YgBqUEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z3pkkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YmEA4Er4Eem5qeRdwCQ7KQ" name="Trans__ex1381" source="_tEC7EUrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0WY8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YmFPAUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__MasterAnnounce__1383" guard="_Z7lCUUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_YmEn8Er4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7lCUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3157">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7lCUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3157">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YmI5YEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__MasterAnnounce__1385" source="_YmGdIEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z2YZQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YqM6AEr4Eem5qeRdwCQ7KQ" name="Trans__ex1485" source="_tHYi8UrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z1QX4Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YqNhEUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__KeepAlive__1487" guard="_Z7dtkUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_YqM6AUr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7dtkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3148">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7dtkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3148">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YqOIIUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__KeepAlive__1489" source="_YqNhEkr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z09c8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YtHEEEr4Eem5qeRdwCQ7KQ" name="Trans__ex1589" source="_tC8u4UrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z633sEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YtI5QUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__Init__StandBy__3__1591" guard="_Z7osskr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_YtHrIEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7osskr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3161">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7ossUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3161">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YtJgUkr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__Init__StandBy__3__1593" source="_YtJgUEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z6p1QEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YwLmMEr4Eem5qeRdwCQ7KQ" name="Trans__ExitPoint11670" source="_M8iZcONCEeaTpaLNj-zYpw" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z25WoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YwOCcUr4Eem5qeRdwCQ7KQ" name="To__Substates__Backup__1672" guard="_Z7eUoUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_YwNbYEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7eUoUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3149">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7eUoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3149">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Backup__1672&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YwPQkUr4Eem5qeRdwCQ7KQ" name="From__Substates__Backup__1674" source="_YwOpgEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z3CgkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZStrgEr4Eem5qeRdwCQ7KQ" name="Trans__ex2416" source="_tF7xcUrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z5uBIEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZSykAUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ServiceRequest__2418" guard="_Z7jNIUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_ZSu5oEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7jNIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3156">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7jNIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3156">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ZSzyIEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ServiceRequest__2420" source="_ZSzLEEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0pT4Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZWfYQEr4Eem5qeRdwCQ7KQ" name="Trans__ex2520" source="_s7e08UrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z3fMgEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZWibkEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ServerFaliure__2522" guard="_Z7pTwUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_ZWf_UEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7pTwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3162">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7pTwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3162">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ZWk30Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ServerFaliure__2524" source="_ZWkQwEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z41QUEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZajY4Er4Eem5qeRdwCQ7KQ" name="Trans__ex2624" source="_s9MsMUrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z5ZRAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZaknAUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__purgeotherMessage__2626" guard="_Z7e7s0r4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_Zaj_8Er4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7e7s0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3151">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7e7skr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3151">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ZanqUEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__purgeotherMessage__2628" source="_ZalOEEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z1av8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZdyTEEr4Eem5qeRdwCQ7KQ" name="Trans__ex2728" source="_tEsbUUrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z2hjMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZdzhMUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730" guard="_Z7hX8Ur4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_Zdy6IEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7hX8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3155">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7hX8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3155">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Zd0IQUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ExitPoint1__BeMaster__4__2732" source="_ZdzhMkr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z4TE0Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Zf_5kEr4Eem5qeRdwCQ7KQ" name="Trans__ex2786" source="_s99hMUrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z3LqgEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZgBuwUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__initTimer__2788" guard="_Z7dGgUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_Zf_5kUr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7dGgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3147">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7dGgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3147">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__initTimer__2788&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ZgC84Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__initTimer__2790" source="_ZgCV0Er4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z2OoQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Zkh0QEr4Eem5qeRdwCQ7KQ" name="Trans__ex2867" source="_tBIJ8UrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z7BBoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Zkn64Er4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__BeingMaster__2869" guard="_Z7fiwUr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_ZkjCYEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7fiwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3152">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7fiwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3152">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Zk5AoEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__BeingMaster__2871" source="_ZkuBgEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z7UjoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZrU_0Er4Eem5qeRdwCQ7KQ" name="Trans__ex2948" source="_tCgC8UrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z18UYEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZrXcEEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__PassiveMode__2950" guard="_Z7ossEr4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_ZrVm4Er4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7ossEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3160">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7oFokr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3160">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ZrbGcEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__PassiveMode__2952" source="_ZrYqMEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z00TAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Zv590Er4Eem5qeRdwCQ7KQ" name="Trans__ex3006" source="_tFIgMUrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z2xa0Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZwArgEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__BeSlave__3008" guard="_Z7p60Ur4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_Zv6k4Er4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7p60Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3163">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7p60Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3163">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeSlave__3008&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ZwGyIEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__BeSlave__3010" source="_ZwGLEEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z1HN8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Zx_BcEr4Eem5qeRdwCQ7KQ" name="Trans__ex3064" source="_tAc0gUrDEem2BZRQc2M93A" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z6fdMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ZyCEwUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__Recover__3066" guard="_Z7gw4Ur4Eem5qeRdwCQ7KQ" source="_YWwZkEr4Eem5qeRdwCQ7KQ" target="_ZyAPkEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_Z7gw4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3154">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z7gw4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3154">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Recover__3066&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_ZyFIEUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__Recover__3068" source="_ZyEhAEr4Eem5qeRdwCQ7KQ" target="_YWwZkEr4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z10YkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__1241&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__1672&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1325&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__2626&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__2869&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__3066&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__2730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__2418&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Failure&quot;,&quot;To__Failure__1238&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__2950&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1591&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__2522&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__3008&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_hY-7oAlNEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:State" xmi:id="_jLPjcAlNEea_md0mpENoqg" name="StandBy">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0ErDEem2BZRQc2M93A" name="StandBy__679">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0UrDEem2BZRQc2M93A" name="StandBy__680">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_UrcckAlOEea_md0mpENoqg" name="RunAsMaster">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_YzyAkAlyEea_md0mpENoqg" name="RunAsMasterEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_cjKg0PMsEeauO5SNGpOV7w" name="startTransition">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_hgSoEAlOEea_md0mpENoqg" name="Failure">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_GNo-cAp7EeaGqPUk-4V4qQ" name="SetTimer">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    //------

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJrB8ErDEem2BZRQc2M93A" name="Failure__685">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Rrrc0AlvEea_md0mpENoqg" name="CheckConfig" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Pyhf8Ap5EeaGqPUk-4V4qQ" name="Choice1" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_kLngAAp5EeaGqPUk-4V4qQ" name="BeMaster" kind="junction"/>
            <subvertex xmi:type="uml:State" xmi:id="_2g5S0ONBEeaTpaLNj-zYpw" name="Backup">
              <connectionPoint xmi:id="_M8iZcONCEeaTpaLNj-zYpw" name="ExitPoint1" kind="exitPoint"/>
              <connectionPoint xmi:id="_88oQAKozEeiNHY6qjNhZ4w" name="Pseudo5" kind="entryPoint"/>
              <connectionPoint xmi:id="_887yAKozEeiNHY6qjNhZ4w" name="Pseudo2" kind="entryPoint"/>
              <connectionPoint xmi:id="_YwNbYEr4Eem5qeRdwCQ7KQ" name="From__Parent__1671" kind="entryPoint"/>
              <connectionPoint xmi:id="_YwOpgEr4Eem5qeRdwCQ7KQ" name="To__Parent__1673" kind="exitPoint"/>
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJjtMErDEem2BZRQc2M93A" name="Backup__681">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJkUQErDEem2BZRQc2M93A" name="Backup__682">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
              <region xmi:id="_ThAzEONCEeaTpaLNj-zYpw" name="Region1">
                <transition xmi:id="_LmVmEONDEeaTpaLNj-zYpw" name="NokeepAlive" source="_s-oPkErDEem2BZRQc2M93A" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_LmWNIONDEeaTpaLNj-zYpw" name="CancellTimer">
                    <language>C++</language>
                    <body>    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No keep Alive message from Master, Try to be Master-------\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(2,0),4);
    ConfigComm.QueryConfig().send();
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to be Master\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::NokeepAlive&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_R_7lYONDEeaTpaLNj-zYpw" name="BackToSlave" source="_s8TUUErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_R_7lYeNDEeaTpaLNj-zYpw" name="MasterRecovered">
                    <language>C++</language>
                    <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: The Master recovered itself, backing to slave mode\n&quot;;
    //if (TimerId.isValid())
    //	Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::BackToSlave&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XafJkONDEeaTpaLNj-zYpw" name="ReplyConfig" source="_s6zfgErDEem2BZRQc2M93A" target="_NU8OsAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7Z8cErDEem2BZRQc2M93A" name="ReplyConfig__239">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::ReplyConfig&quot;,(char *)&quot;Debug__Path__ReplyConfig&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_dg_NwONDEeaTpaLNj-zYpw" name="backtoslave1" source="_tDikwErDEem2BZRQc2M93A" target="_5yefMAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD9bgErDEem2BZRQc2M93A" name="backtoslave1__519">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::backtoslave1&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;Slave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_dg_NweNDEeaTpaLNj-zYpw" name="backtoslave" source="_s_WBQErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_9FQErDEem2BZRQc2M93A" name="backtoslave__386">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::backtoslave&quot;,(char *)&quot;Debug__Path__backtoslave&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_mHBPcONDEeaTpaLNj-zYpw" name="KeepAliveMsg" source="_tBq8gErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mHBPceNDEeaTpaLNj-zYpw" name="ProcessKeppAlive">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Keep Alive Message from &quot;&lt;&lt; ServerName&lt;&lt;&quot;\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    //KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::KeepAliveMsg&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_-mdZ0ONDEeaTpaLNj-zYpw" name="Initial1__RunAsSlave__7" source="_tIHiwErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIv04ErDEem2BZRQc2M93A" name="Initial1__RunAsSlave__7__678">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_CPd8UONOEeaTpaLNj-zYpw" name="CheckNoMaster" source="_tFdQUErDEem2BZRQc2M93A" target="_M8iZcONCEeaTpaLNj-zYpw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tF0csErDEem2BZRQc2M93A" name="CheckNoMaster__585">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::CheckNoMaster&quot;,(char *)&quot;Debug__Path__CheckNoMaster&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s63J4ErDEem2BZRQc2M93A" name="Debug__ReplyConfig" source="_Px2BIAqSEeaGqPUk-4V4qQ" target="_s6zfgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s63J4UrDEem2BZRQc2M93A" name="Debug__ReplyConfig__218">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__ReplyConfig&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;Debug__Path__ReplyConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_XafJkeNDEeaTpaLNj-zYpw" name="ConfigReply" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_s64YAErDEem2BZRQc2M93A" name="Debug__ReplyConfig__S" guard="_s64_EUrDEem2BZRQc2M93A" source="_s6zfgErDEem2BZRQc2M93A" target="_s61UsUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s64_EUrDEem2BZRQc2M93A" name="Debug__GuardReplyConfig">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s64_EErDEem2BZRQc2M93A" name="Debug__GuardReplyConfig">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s65mIErDEem2BZRQc2M93A" name="Debug__ReplyConfig__S__220">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__ReplyConfig__S&quot;,(char *)&quot;Debug__Path__ReplyConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s660QErDEem2BZRQc2M93A" name="Debug__ReplyConfig__E" source="_s617wUrDEem2BZRQc2M93A" target="_NU8OsAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s660QUrDEem2BZRQc2M93A" name="Debug__ReplyConfig__E__221">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__ReplyConfig__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s68pcErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s69QgUrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange__223">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s69QgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s693kErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s693kkrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint__224">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s693kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6-eoErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6_FsErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint__225">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6-eoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6_swErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7AT0ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints__226">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6_swUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7A64ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7Bh8ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode__227">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s7A64UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7Bh8UrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7DXIErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg__228">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s7CJAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CJAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8W-sUrDEem2BZRQc2M93A" name="Debug__BackToSlave" guard="_ZSsdYUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_s8TUUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZSsdYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2415">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSsdYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2415">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;Debug__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8XlwErDEem2BZRQc2M93A" name="Debug__BackToSlave__265">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_R_7lYuNDEeaTpaLNj-zYpw" name="BackToSlave" event="_xM6tkApBEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_s8Yz4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__S" guard="_s8Za8UrDEem2BZRQc2M93A" source="_s8TUUErDEem2BZRQc2M93A" target="_s8VwkUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s8Za8UrDEem2BZRQc2M93A" name="Debug__GuardBackToSlave">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s8Za8ErDEem2BZRQc2M93A" name="Debug__GuardBackToSlave">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8aCAErDEem2BZRQc2M93A" name="Debug__BackToSlave__S__267">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave__S&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s8ceQErDEem2BZRQc2M93A" name="Debug__BackToSlave__E" source="_s8WXoUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8ceQUrDEem2BZRQc2M93A" name="Debug__BackToSlave__E__268">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s8dsYErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8eTcErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange__270">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s8dsYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8eTcUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8e6gUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint__271">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8e6gErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8fhkErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gIoErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint__272">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8fhkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8gvsErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gvskrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints__273">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8gvsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8hWwErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8h90ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode__274">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s8hWwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8ik4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8jzAErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg__275">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8ik4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik40rDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8jL8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-r58UrDEem2BZRQc2M93A" name="Debug__NokeepAlive" source="_ZaK1gAlOEea_md0mpENoqg" target="_s-oPkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-shAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__339">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_LmWNIeNDEeaTpaLNj-zYpw" name="KeepAliveTimer" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-tIEErDEem2BZRQc2M93A" name="Debug__NokeepAlive__S" guard="_s-tvIUrDEem2BZRQc2M93A" source="_s-oPkErDEem2BZRQc2M93A" target="_s-qr0UrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s-tvIUrDEem2BZRQc2M93A" name="Debug__GuardNokeepAlive">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s-tvIErDEem2BZRQc2M93A" name="Debug__GuardNokeepAlive">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-uWMErDEem2BZRQc2M93A" name="Debug__NokeepAlive__S__341">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive__S&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-vkUErDEem2BZRQc2M93A" name="Debug__NokeepAlive__E" source="_s-rS4UrDEem2BZRQc2M93A" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-vkUUrDEem2BZRQc2M93A" name="Debug__NokeepAlive__E__342">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-xZgErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-yAkErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange__344">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s-xZgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-ynoErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-ynokrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint__345">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-ynoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-zOsErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-zOskrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint__346">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-zOsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-z1wErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-0c0ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints__347">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-z1wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-0c0UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-1D4ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode__348">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s-0c0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-1D4UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-2SAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg__349">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-1D4krDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8krDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_ZEkUrDEem2BZRQc2M93A" name="Debug__backtoslave" source="_5yefMAszEeaGqPUk-4V4qQ" target="_s_WBQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_ZroErDEem2BZRQc2M93A" name="Debug__backtoslave__364">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave&quot;,(char *)&quot;Slave&quot;,(char *)&quot;Debug__Path__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s_bg0ErDEem2BZRQc2M93A" name="Debug__backtoslave__S" guard="_s_cH4UrDEem2BZRQc2M93A" source="_s_WBQErDEem2BZRQc2M93A" target="_s_X2cUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s_cH4UrDEem2BZRQc2M93A" name="Debug__Guardbacktoslave">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s_cH4ErDEem2BZRQc2M93A" name="Debug__Guardbacktoslave">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Slave&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_cu8ErDEem2BZRQc2M93A" name="Debug__backtoslave__S__366">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave__S&quot;,(char *)&quot;Debug__Path__backtoslave&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s_ekIErDEem2BZRQc2M93A" name="Debug__backtoslave__E" source="_s_YdgUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_ekIUrDEem2BZRQc2M93A" name="Debug__backtoslave__E__367">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s_gZUErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hAYErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange__369">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s_gZUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_hncErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hnckrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint__370">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_hncUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_i1kErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_kDsErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint__371">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_i1kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_kqwErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_lR0ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints__372">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_kqwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_l44ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_mf8ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode__373">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s_l44UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_mf8UrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_nuEkrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg__374">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_nHAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nHAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBtYw0rDEem2BZRQc2M93A" name="Debug__KeepAliveMsg" source="_ZaK1gAlOEea_md0mpENoqg" target="_tBq8gErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBt_0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__445">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_mHBPcuNDEeaTpaLNj-zYpw" name="IAmlive" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                </transition>
                <transition xmi:id="_tBvN8ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S" guard="_tBv1AUrDEem2BZRQc2M93A" source="_tBq8gErDEem2BZRQc2M93A" target="_tBsxsUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tBv1AUrDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tBv1AErDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBxDIErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S__447">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__S&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tByRQErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E" source="_tBtYwUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBy4UErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E__448">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tB0GcErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB0GckrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange__450">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tB0GcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB0tgErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB1UkErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint__451">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB0tgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB17oErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB17okrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint__452">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB17oUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB2isErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB2iskrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints__453">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB2isUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB3JwErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB3w0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode__454">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tB3JwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB4X4ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB5mAErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg__455">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB4X4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4X4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDmPIUrDEem2BZRQc2M93A" name="Debug__backtoslave1" source="_NU8OsAszEeaGqPUk-4V4qQ" target="_tDikwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDm2MErDEem2BZRQc2M93A" name="Debug__backtoslave1__507">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDorYErDEem2BZRQc2M93A" name="Debug__backtoslave1__S" guard="_tDpScUrDEem2BZRQc2M93A" source="_tDikwErDEem2BZRQc2M93A" target="_tDlBAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tDpScUrDEem2BZRQc2M93A" name="Debug__Guardbacktoslave1">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDpScErDEem2BZRQc2M93A" name="Debug__Guardbacktoslave1">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Choice2&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDp5gErDEem2BZRQc2M93A" name="Debug__backtoslave1__S__509">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1__S&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDsVwErDEem2BZRQc2M93A" name="Debug__backtoslave1__E" source="_tDloEUrDEem2BZRQc2M93A" target="_5yefMAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDs80ErDEem2BZRQc2M93A" name="Debug__backtoslave1__E__510">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Slave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDuyAErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDuyAkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange__512">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tDuyAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDvZEErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDwAIUrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint__513">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwAIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDwnMErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDxOQErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint__514">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwnMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDx1UErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDx1UkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints__515">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDx1UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDycYErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDycYkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode__516">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tDycYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDzDcErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD04oErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg__517">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDzqgErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tDzqgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFfskUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster" guard="_CPd8UeNOEeaTpaLNj-zYpw" source="_NU8OsAszEeaGqPUk-4V4qQ" target="_tFdQUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_CPd8UeNOEeaTpaLNj-zYpw" name="CheckNoServer">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_CPd8UuNOEeaTpaLNj-zYpw" name="checkNoServer">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <language>C++</language>
                      <body>    std::cout&lt;&lt;&quot;00000----------------------------------------------------000000\n&quot;;
    this->hostConfig=config;
    if (!(this->hostConfig.MasterList[0] || this->hostConfig.MasterList[1]))
    {
    //Echo.Echo().send();
    //Timer.cancelTimer(TimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No one is Master, I am going to Be master\n&quot;;
    return true;
    }
    else if ((strcmp((char*)this->getName(),&quot;server1&quot;)==0) &amp;&amp; (config.MasterList[1]==false))
    {
    //Echo.Echo().send();
    //Timer.cancelTimer(TimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No one is Master, I am going to Be master\n&quot;;
    return true;
    }
    else if ((strcmp((char *)this->getName(),&quot;server2&quot;))==0 &amp;&amp; (config.MasterList[0]==false))
    {
    //Echo.Echo().send();
    //Timer.cancelTimer(TimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No one is Master, I am going to Be master\n&quot;;
    return true;
    }
    std::cout&lt;&lt;&quot;11111111-----------------------------------------111111111111\n&quot;;
    return false;
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFgToErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__573">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;Debug__Path__CheckNoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFhhwErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__S" guard="_tFiI0UrDEem2BZRQc2M93A" source="_tFdQUErDEem2BZRQc2M93A" target="_tFeecUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tFiI0UrDEem2BZRQc2M93A" name="Debug__GuardCheckNoMaster">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tFiI0ErDEem2BZRQc2M93A" name="Debug__GuardCheckNoMaster">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Choice2&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFiv4ErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__S__575">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster__S&quot;,(char *)&quot;Debug__Path__CheckNoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFj-AErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E" source="_tFfFgUrDEem2BZRQc2M93A" target="_M8iZcONCEeaTpaLNj-zYpw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFklEErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E__576">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFmaQErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFnBUUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange__578">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tFnBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFnoYErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFoPcErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint__579">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFnoYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFo2gErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFpdkErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint__580">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFo2gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqEoErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFqrsErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints__581">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFqEoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqrsUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFrSwErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode__582">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tFqrskrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFrSwUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFsg4ErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg__583">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFr50ErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50UrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50krDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr500rDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tILNIUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7" source="_8WMAUONDEeaTpaLNj-zYpw" target="_tIHiwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIL0MErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__656">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7&quot;,(char *)&quot;Initial1&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tINCUErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__S" guard="_tINpYUrDEem2BZRQc2M93A" source="_tIHiwErDEem2BZRQc2M93A" target="_tIJ_AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tINpYUrDEem2BZRQc2M93A" name="Debug__GuardInitial1__RunAsSlave__7">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tINpYErDEem2BZRQc2M93A" name="Debug__GuardInitial1__RunAsSlave__7">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Initial1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIOQcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__S__658">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7__S&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIO3gErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E" source="_tIKmEUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIO3gUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E__659">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIQFoErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIQssUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange__661">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tIQssErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIRTwErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIR60UrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint__662">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIR60ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tITI8ErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tITwAUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint__663">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tITwAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIUXEErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIU-IUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints__664">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIU-IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIU-IkrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIVlMUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode__665">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tIVlMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIWMQErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIYBcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg__666">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIWzUErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIWzUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YwiykEr4Eem5qeRdwCQ7KQ" name="Trans__Pseudo21676" source="_887yAKozEeiNHY6qjNhZ4w" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQe24Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YwiykUr4Eem5qeRdwCQ7KQ" name="Trans__Pseudo51677" source="_88oQAKozEeiNHY6qjNhZ4w" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPmtIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YwkAsEr4Eem5qeRdwCQ7KQ" name="Trans__ExitPoint11678" source="_M8iZcONCEeaTpaLNj-zYpw" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQ8J4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxCh0Er4Eem5qeRdwCQ7KQ" name="1679" source="_s-oPkErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQVF4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDI4Er4Eem5qeRdwCQ7KQ" name="1680" source="_tFdQUErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRSvMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDI4Ur4Eem5qeRdwCQ7KQ" name="1681" source="_tBq8gErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQZ-YEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDI4kr4Eem5qeRdwCQ7KQ" name="1682" source="_s8TUUErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPq-kEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDI40r4Eem5qeRdwCQ7KQ" name="1683" source="_NU8OsAszEeaGqPUk-4V4qQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRgxoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Choice2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDv8Er4Eem5qeRdwCQ7KQ" name="1684" source="_tDikwErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQGcYEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDv8Ur4Eem5qeRdwCQ7KQ" name="1685" source="_s_WBQErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZSQYgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDv8kr4Eem5qeRdwCQ7KQ" name="1686" source="_s6zfgErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQkWcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxDv80r4Eem5qeRdwCQ7KQ" name="1687" source="_tIHiwErDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZR_50Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YxGMMEr4Eem5qeRdwCQ7KQ" name="From__TryBeMaster__1688" source="_Px2BIAqSEeaGqPUk-4V4qQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZSMHEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YxLrwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1689" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxM54Er4Eem5qeRdwCQ7KQ" name="PME_Trig1690" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YxOIAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1691" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxPWIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1692" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YxRyYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1693" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxSZcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1694" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YxTnkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1695" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YxU1sEr4Eem5qeRdwCQ7KQ" name="PME_Trig1696" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YxWD0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1697" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxaVQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1698" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YxdYkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1699" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Yxgb4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1700" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxhC8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1701" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YxiREEr4Eem5qeRdwCQ7KQ" name="PME_Trig1702" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YxjfMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1703" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YxnwoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1704" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Yxpl0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1705" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_Yxqz8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1706" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxsCEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1707" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YxspIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1708" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Yxt3QEr4Eem5qeRdwCQ7KQ" name="From__RunAsSlave__1709" source="_ZaK1gAlOEea_md0mpENoqg" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPdjMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YxwTgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1710" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxxhoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1711" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YxyIsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1712" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YxzW0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1713" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yxz94Er4Eem5qeRdwCQ7KQ" name="PME_Trig1714" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yx4PUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1715" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Yx6EgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1716" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yx7SoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1717" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yx8gwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1718" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YyALIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1719" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YyBZQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1720" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YyIuAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1721" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YyJ8IEr4Eem5qeRdwCQ7KQ" name="PME_Trig1722" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YyLKQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1723" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YyMYYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1724" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YyQCwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1725" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_YySfAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1726" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YyTGEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1727" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YyUUMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1728" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YyWJYEr4Eem5qeRdwCQ7KQ" name="To__TryBeMaster__1729" guard="_ZSozAUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <ownedRule xmi:id="_ZSozAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2412">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSozAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2412">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__TryBeMaster__1729&quot;,&quot;TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YyWwcEr4Eem5qeRdwCQ7KQ" name="To__RunAsSlave__1730" guard="_ZSfCAUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_ZaK1gAlOEea_md0mpENoqg">
                  <ownedRule xmi:id="_ZSfCAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2406">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSfCAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2406">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__RunAsSlave__1730&quot;,&quot;RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YyZMsEr4Eem5qeRdwCQ7KQ" name="Trans__ex1731" source="_tIKmEUrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQMjAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YyZzwUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__Initial1__RunAsSlave__7__1733" guard="_ZSdz4Ur4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_YyZMsUr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSdz4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2404">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSdz4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2404">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Yybo8Er4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__Initial1__RunAsSlave__7__1735" source="_Yyaa0Er4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRx3YEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Y1JlwEr4Eem5qeRdwCQ7KQ" name="Trans__ex1812" source="_s8WXoUrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZSELQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Y1KM0Ur4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__BackToSlave__1814" guard="_ZSiFUEr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_Y1JlwUr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSiFUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2408">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSheQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2408">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Y1Kz4Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__BackToSlave__1816" source="_Y1KM0kr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRlDEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Y5bo0Er4Eem5qeRdwCQ7KQ" name="Trans__ex1916" source="_tDloEUrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZP6PIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Y5fTMEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__backtoslave1__1918" guard="_ZSisYUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_Y5cP4Er4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSisYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2410">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSisYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2410">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Y5mn8Er4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__backtoslave1__1920" source="_Y5hIYEr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRC3kEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Y9IdEEr4Eem5qeRdwCQ7KQ" name="Trans__ex1974" source="_s617wUrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRaD8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Y9JEIUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ReplyConfig__1976" guard="_ZSlvsUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_Y9IdEUr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSlvsUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2411">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSlvsEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2411">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Y9KSQUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ReplyConfig__1978" source="_Y9JrMEr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZP_HoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZBqXwEr4Eem5qeRdwCQ7KQ" name="Trans__ex2055" source="_s_YdgUrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZR4lEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZBuCIEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__backtoslave__2057" guard="_ZSiFUkr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_ZBq-0Er4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSiFUkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2409">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSiFUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2409">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave__2057&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZBxFcUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__backtoslave__2059" source="_ZBv3UEr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRPE0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZG3A0Er4Eem5qeRdwCQ7KQ" name="Trans__ex2136" source="_s-rS4UrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQ2DQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZG3n4Ur4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__NokeepAlive__2138" guard="_ZSrPQUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_ZG3A0Ur4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSrPQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2413">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSrPQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2413">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZG5dEUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__NokeepAlive__2140" source="_ZG42AEr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRsX0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZKMBoEr4Eem5qeRdwCQ7KQ" name="Trans__ex2240" source="_tBtYwUrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZSXtQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZKNPwEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__KeepAliveMsg__2242" guard="_ZSg3MUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_ZKMosEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSg3MUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2407">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSg3MEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2407">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZKOd4Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__KeepAliveMsg__2244" source="_ZKNPwUr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQp2AEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZNl68Er4Eem5qeRdwCQ7KQ" name="Trans__ex2344" source="_tFfFgUrDEem2BZRQc2M93A" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPzhcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZNmiAUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__CheckNoMaster__2346" guard="_ZSr2UUr4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_ZNl68Ur4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSr2UUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2414">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSr2UEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2414">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZNnJEUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__CheckNoMaster__2348" source="_ZNmiAkr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZRKMUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZPSkEEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__2402" source="_YwNbYEr4Eem5qeRdwCQ7KQ" target="_YwP3oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZQwjsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1733&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__2403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__1730&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__2242&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__2057&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1918&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__1976&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__1729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__2138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZPUZQEr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__2403" guard="_ZSea8Ur4Eem5qeRdwCQ7KQ" source="_YwP3oEr4Eem5qeRdwCQ7KQ" target="_YwOpgEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZSea8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2405">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZSea8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2405">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2403&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_Px2BIAqSEeaGqPUk-4V4qQ" name="TryBeMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_6FKVcAqVEeaGqPUk-4V4qQ" name="trytobemasterinit">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to Be Master ------------\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJolsErDEem2BZRQc2M93A" name="TryBeMaster__684">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_NU8OsAszEeaGqPUk-4V4qQ" name="Choice2" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_ZaK1gAlOEea_md0mpENoqg" name="RunAsSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_JeHBoAlzEea_md0mpENoqg" name="RunAsSlaveEntry">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJmJcErDEem2BZRQc2M93A" name="RunAsSlave__683">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_5yefMAszEeaGqPUk-4V4qQ" name="Slave" kind="junction"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_8WMAUONDEeaTpaLNj-zYpw" name="Initial1"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s6zfgErDEem2BZRQc2M93A" name="Debug__Path__ReplyConfig" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s60GkUrDEem2BZRQc2M93A" name="Debug__C__ReplyConfig">
                  <connectionPoint xmi:id="_s61UsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s617wUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_Y9IdEUr4Eem5qeRdwCQ7KQ" name="From__Parent__1975" kind="entryPoint"/>
                  <connectionPoint xmi:id="_Y9JrMEr4Eem5qeRdwCQ7KQ" name="To__Parent__1977" kind="exitPoint"/>
                  <region xmi:id="_s60GkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s7LS8ErDEem2BZRQc2M93A" name="Debug__init__trans__ReplyConfig" source="_s61UsUrDEem2BZRQc2M93A" target="_s7IPoUrDEem2BZRQc2M93A"/>
                    <transition xmi:id="_s7L6AErDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster" source="_s7IPoUrDEem2BZRQc2M93A" target="_s7JdwErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7VrAErDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster__233">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s7L6AUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s7MhEErDEem2BZRQc2M93A" name="Debug__AC__ReplyConfig" source="_s7JdwErDEem2BZRQc2M93A" target="_s7Kr4ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7W5IErDEem2BZRQc2M93A" name="Debug__AC__ReplyConfig__235">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__AC__ReplyConfig&quot;,(char *)&quot;Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;Debug__A__Ac__ReplyConfig&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s7MhEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s7NIIErDEem2BZRQc2M93A" name="Debug__end__trans__ReplyConfig" source="_s7Kr4ErDEem2BZRQc2M93A" target="_s617wUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7YuUErDEem2BZRQc2M93A" name="Debug__end__trans__ReplyConfig__237">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__end__trans__ReplyConfig&quot;,(char *)&quot;Debug__A__Ac__ReplyConfig&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s7NIIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_Y9S1IEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__19801981" source="_Y9QY4Er4Eem5qeRdwCQ7KQ" target="_Y9K5UEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZBfYoEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1980&quot;,&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;To__Debug__A__Ac__ReplyConfig__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1980&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1980&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__2047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1980&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__2050&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1980&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y9S1IUr4Eem5qeRdwCQ7KQ" name="Trans__ex1982" source="_s617wUrDEem2BZRQc2M93A" target="_Y9K5UEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZBEh4Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;To__Debug__A__Ac__ReplyConfig__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__2047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__2050&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y9XGkEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ReplyConfig__1983" source="_s7Kr4ErDEem2BZRQc2M93A" target="_Y9K5UEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZBk4MEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;To__Debug__A__Ac__ReplyConfig__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__2047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__2050&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y9YUsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1984" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y9aJ4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1985" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y9fCYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1986" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y9iFsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1987" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y9j64Er4Eem5qeRdwCQ7KQ" name="PME_Trig1988" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y9pacEr4Eem5qeRdwCQ7KQ" name="PME_Trig1989" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y9r2sEr4Eem5qeRdwCQ7KQ" name="PME_Trig1990" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y9tr4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1991" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y9x9UEr4Eem5qeRdwCQ7KQ" name="PME_Trig1992" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y91nsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1993" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y94rAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1994" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y988cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1995" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y9__wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1996" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y-B08Er4Eem5qeRdwCQ7KQ" name="PME_Trig1997" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y-GtcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1998" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y-KX0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1999" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y-M0EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2000" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y-ThwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2001" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y-ZBUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2002" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y-a2gEr4Eem5qeRdwCQ7KQ" name="PME_Trig2003" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y-eg4Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ReplyConfig__2004" source="_s7JdwErDEem2BZRQc2M93A" target="_Y9K5UEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZBTycEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;To__Debug__A__Ac__ReplyConfig__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__2047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__2050&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y-fvAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2005" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y-l1oEr4Eem5qeRdwCQ7KQ" name="PME_Trig2006" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y-pgAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2007" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y-u_kEr4Eem5qeRdwCQ7KQ" name="PME_Trig2008" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y-yC4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2009" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y-1tQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2010" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y-5-sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2011" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y-9pEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2012" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y--3MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2013" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y_AFUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2014" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y_DvsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2015" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y_GL8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2016" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y_HaEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2017" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y_IoMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2018" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y_LEcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2019" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y_OHwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2020" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y_QkAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2021" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y_TAQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2022" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y_XRsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2023" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y_bjIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2024" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y_f0kEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__TryBeMaster__2025" source="_s7IPoUrDEem2BZRQc2M93A" target="_Y9K5UEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZBXc0Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;To__Debug__A__Ac__ReplyConfig__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__2047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__2050&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y_hCsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2026" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y_i34Er4Eem5qeRdwCQ7KQ" name="PME_Trig2027" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y_l7MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2028" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y_oXcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2029" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y_vFIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2030" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y_yIcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2031" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y_42IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2032" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y_7SYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2033" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y_9uoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2034" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZAEcUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2035" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZAItwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2036" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZAM_MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2037" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZAQCgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2038" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZAUT8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2039" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZAZMcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2040" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZAbosEr4Eem5qeRdwCQ7KQ" name="PME_Trig2041" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZAesAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2042" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZAkLkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2043" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZAqSMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2044" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZAt8kEr4Eem5qeRdwCQ7KQ" name="PME_Trig2045" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZA3GgEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ReplyConfig__2046" guard="_ZBmGUUr4Eem5qeRdwCQ7KQ" source="_Y9K5UEr4Eem5qeRdwCQ7KQ" target="_s7Kr4ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZBmGUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2051">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBmGUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2051">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ReplyConfig__2046&quot;,&quot;Debug__A__Ac__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZA3tkEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ReplyConfig__2047" guard="_ZBmtYUr4Eem5qeRdwCQ7KQ" source="_Y9K5UEr4Eem5qeRdwCQ7KQ" target="_s7JdwErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZBmtYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2053">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBmtYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2053">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ReplyConfig__2047&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZA3tkUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__TryBeMaster__2048" guard="_ZBmGU0r4Eem5qeRdwCQ7KQ" source="_Y9K5UEr4Eem5qeRdwCQ7KQ" target="_s7IPoUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZBmGU0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2052">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBmGUkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2052">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__TryBeMaster__2048&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZA7_AEr4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__2049" source="_Y9IdEUr4Eem5qeRdwCQ7KQ" target="_Y9K5UEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZBNEwEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__A__Ac__ReplyConfig&quot;,&quot;To__Debug__A__Ac__ReplyConfig__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__2047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__2050&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZA-bQEr4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__2050" guard="_ZBn7gUr4Eem5qeRdwCQ7KQ" source="_Y9K5UEr4Eem5qeRdwCQ7KQ" target="_Y9JrMEr4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_ZBn7gUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2054">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZBn7gEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2054">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2050&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s7IPoUrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7IPokrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s7OWQErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster__229">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s7JdwErDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7JdwUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReplyConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s7QygUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig__230">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s7Kr4ErDEem2BZRQc2M93A" name="Debug__A__Ac__ReplyConfig">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7Kr4UrDEem2BZRQc2M93A" name="Debug__A__Ac__ReplyConfig">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;ReplyConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__A__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s7TOwErDEem2BZRQc2M93A" name="Debug__A__Ac__ReplyConfig__231">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__A__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Y9K5UEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1979" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Y9QY4Er4Eem5qeRdwCQ7KQ" name="Init__State__1980"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s8TUUErDEem2BZRQc2M93A" name="Debug__Path__BackToSlave" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s8T7YUrDEem2BZRQc2M93A" name="Debug__C__BackToSlave">
                  <connectionPoint xmi:id="_s8VwkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s8WXoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_Y1JlwUr4Eem5qeRdwCQ7KQ" name="From__Parent__1813" kind="entryPoint"/>
                  <connectionPoint xmi:id="_Y1KM0kr4Eem5qeRdwCQ7KQ" name="To__Parent__1815" kind="exitPoint"/>
                  <region xmi:id="_s8T7YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s8uLEErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave" source="_s8VwkUrDEem2BZRQc2M93A" target="_s8ndYUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8-CsErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave__281">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__init__trans__BackToSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s8uLEUrDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster" source="_s8ndYUrDEem2BZRQc2M93A" target="_s8pSkErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8_34ErDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster__283">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8uyIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s8uyIUrDEem2BZRQc2M93A" name="Debug__AC__BackToSlave" source="_s8pSkErDEem2BZRQc2M93A" target="_s8qgsErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8vZMUrDEem2BZRQc2M93A" name="MasterRecovered" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: The Master recovered itself, backing to slave mode\n&quot;;
    //if (TimerId.isValid())
    //	Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__AC__BackToSlave&quot;,(char *)&quot;Debug__B__Ac__BackToSlave&quot;,(char *)&quot;Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8vZMErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s8wAQErDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_s8qgsErDEem2BZRQc2M93A" target="_s8s88ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8wnUErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__BackToSlave&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8wAQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s8xOYErDEem2BZRQc2M93A" name="Debug__end__trans__BackToSlave" source="_s8s88ErDEem2BZRQc2M93A" target="_s8WXoUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9FXcErDEem2BZRQc2M93A" name="Debug__end__trans__BackToSlave__287">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__end__trans__BackToSlave&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8xOYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_Y1NQIEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__18181819" source="_Y1MCAEr4Eem5qeRdwCQ7KQ" target="_Y1Kz4kr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y5QpsEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1818&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1818&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1818&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1818&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1818&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__1906&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1818&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y1N3MEr4Eem5qeRdwCQ7KQ" name="Trans__ex1820" source="_s8WXoUrDEem2BZRQc2M93A" target="_Y1Kz4kr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y5FqkEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__1906&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y1Q6gEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__TryBeMaster__1821" source="_s8ndYUrDEem2BZRQc2M93A" target="_Y1Kz4kr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y5CAMEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__1906&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y1RhkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1822" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y1SvsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1823" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y1XBIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1824" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y1Y2UEr4Eem5qeRdwCQ7KQ" name="PME_Trig1825" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y1bSkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1826" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y1cgsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1827" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y1gyIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1828" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y1jOYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1829" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y1nf0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1830" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y1ot8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1831" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y1p8EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1832" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y1rKMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1833" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y1sYUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1834" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y1u0kEr4Eem5qeRdwCQ7KQ" name="PME_Trig1835" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y1wCsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1836" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y1xQ0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1837" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y1x34Er4Eem5qeRdwCQ7KQ" name="PME_Trig1838" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y13-gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1839" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y15zsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1840" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y17B0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1841" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y18P8Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__RunAsSlave__1842" source="_s8s88ErDEem2BZRQc2M93A" target="_Y1Kz4kr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y5KjEEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__1906&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y1-FIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1843" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2C9oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1844" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y2ELwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1845" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2Ey0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1846" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y2GA8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1847" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2IdMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1848" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y2NVsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1849" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y2N8wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1850" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2PK4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1851" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y2QZAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1852" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2UDYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1853" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y2XtwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1854" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y2Y74Er4Eem5qeRdwCQ7KQ" name="PME_Trig1855" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2aKAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1856" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y2cmQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1857" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y2hewEr4Eem5qeRdwCQ7KQ" name="PME_Trig1858" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y2is4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1859" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y2j7AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1860" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2lJIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1861" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y2ozgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1862" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y2rPwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__BackToSlave__1863" source="_s8qgsErDEem2BZRQc2M93A" target="_Y1Kz4kr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y5MYQEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__1906&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y2r20Er4Eem5qeRdwCQ7KQ" name="PME_Trig1864" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y2tsAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1865" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y2218Er4Eem5qeRdwCQ7KQ" name="PME_Trig1866" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y24rIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1867" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y3CcIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1868" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y3GGgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1869" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y3IiwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1870" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y3LmEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1871" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y3OCUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1872" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y3WlMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1873" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y3cEwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1874" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y3fvIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1875" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y3hkUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1876" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y3o5EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1877" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y3sjcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1878" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y31GUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1879" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y33ikEr4Eem5qeRdwCQ7KQ" name="PME_Trig1880" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y34wsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1881" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y36l4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1882" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y4BTkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1883" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y4ChsEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__BackToSlave__1884" source="_s8pSkErDEem2BZRQc2M93A" target="_Y1Kz4kr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y5O0gEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__1906&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y4DIwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1885" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y4EW4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1886" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y4HaMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1887" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y4IBQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1888" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y4J2cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1889" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y4PWAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1890" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y4RyQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1891" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y4TAYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1892" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y4UOgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1893" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y4X44Er4Eem5qeRdwCQ7KQ" name="PME_Trig1894" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y4cKUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1895" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y4dYcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1896" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y4emkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1897" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y4kGIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1898" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y4nJcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1899" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y4oXkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1900" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y4tQEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1901" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y4yvoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1902" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y41L4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1903" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y42aAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1904" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y44PMEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__TryBeMaster__1905" guard="_Y5X-cEr4Eem5qeRdwCQ7KQ" source="_Y1Kz4kr4Eem5qeRdwCQ7KQ" target="_s8ndYUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y5X-cEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1911">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y5XXYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1911">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y46EYEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__RunAsSlave__1906" guard="_Y5aas0r4Eem5qeRdwCQ7KQ" source="_Y1Kz4kr4Eem5qeRdwCQ7KQ" target="_s8s88ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y5aas0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1915">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y5aaskr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1915">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsSlave__1906&quot;,&quot;Debug__A__En__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y47SgEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__BackToSlave__1907" guard="_Y5ZMkUr4Eem5qeRdwCQ7KQ" source="_Y1Kz4kr4Eem5qeRdwCQ7KQ" target="_s8qgsErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y5ZMkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1912">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y5ZMkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1912">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,&quot;Debug__A__Ac__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y49HsEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__BackToSlave__1908" guard="_Y5aasUr4Eem5qeRdwCQ7KQ" source="_Y1Kz4kr4Eem5qeRdwCQ7KQ" target="_s8pSkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y5aasUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1914">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y5aasEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1914">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,&quot;Debug__B__Ac__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y4_j8Er4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__1909" source="_Y1JlwUr4Eem5qeRdwCQ7KQ" target="_Y1Kz4kr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y5WJQEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1905&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__1906&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y5ALAEr4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__1910" guard="_Y5ZzoUr4Eem5qeRdwCQ7KQ" source="_Y1Kz4kr4Eem5qeRdwCQ7KQ" target="_Y1KM0kr4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_Y5ZzoUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1913">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y5ZzoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1913">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1910&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s8ndYUrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8oEcErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8ycgErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster__276">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8pSkErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8pSkUrDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;BackToSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s81f0ErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave__277">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8qgsErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8rHwErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;BackToSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s85KMErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave__278">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8s88ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8s88UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s86_YErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave__279">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Y1Kz4kr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1817" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Y1MCAEr4Eem5qeRdwCQ7KQ" name="Init__State__1818"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s-oPkErDEem2BZRQc2M93A" name="Debug__Path__NokeepAlive" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s-pdsUrDEem2BZRQc2M93A" name="Debug__C__NokeepAlive">
                  <connectionPoint xmi:id="_s-qr0UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s-rS4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_ZG3A0Ur4Eem5qeRdwCQ7KQ" name="From__Parent__2137" kind="entryPoint"/>
                  <connectionPoint xmi:id="_ZG42AEr4Eem5qeRdwCQ7KQ" name="To__Parent__2139" kind="exitPoint"/>
                  <region xmi:id="_s-pdskrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s--N0ErDEem2BZRQc2M93A" name="Debug__init__trans__NokeepAlive" source="_s-qr0UrDEem2BZRQc2M93A" target="_s-5VUErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_MQQErDEem2BZRQc2M93A" name="Debug__init__trans__NokeepAlive__355">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__init__trans__NokeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s--N0UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave" source="_s-5VUErDEem2BZRQc2M93A" target="_s-58YErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_OFcErDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave__357">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s--04ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s--04UrDEem2BZRQc2M93A" name="Debug__AC__NokeepAlive" source="_s-58YErDEem2BZRQc2M93A" target="_s-7xkErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-_b8UrDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No keep Alive message from Master, Try to be Master-------\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(2,0),4);
    ConfigComm.QueryConfig().send();
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to be Master\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__AC__NokeepAlive&quot;,(char *)&quot;Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s-_b8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_ADAErDEem2BZRQc2M93A" name="Debug__En__TryBeMaster" source="_s-7xkErDEem2BZRQc2M93A" target="_s-8_sErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_AqEErDEem2BZRQc2M93A" name="trytobemasterinit" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to Be Master ------------\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__En__TryBeMaster&quot;,(char *)&quot;Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_ADAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_AqEUrDEem2BZRQc2M93A" name="Debug__end__trans__NokeepAlive" source="_s-8_sErDEem2BZRQc2M93A" target="_s-rS4UrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_Rv0ErDEem2BZRQc2M93A" name="Debug__end__trans__NokeepAlive__361">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__end__trans__NokeepAlive&quot;,(char *)&quot;Debug__A__En__TryBeMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_AqEkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_ZG-VkEr4Eem5qeRdwCQ7KQ" name="Trans__ex2143" source="_s-rS4UrDEem2BZRQc2M93A" target="_ZG5dEkr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZJ7i8Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__2231&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__2234&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZG-8oEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__21422144" source="_ZG6rMEr4Eem5qeRdwCQ7KQ" target="_ZG5dEkr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZJxK4Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2142&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2142&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2142&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__2231&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2142&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2142&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__2234&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2142&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZHBY4Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__NokeepAlive__2145" source="_s-58YErDEem2BZRQc2M93A" target="_ZG5dEkr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZKFT8Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__2231&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__2234&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZHDOEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2146" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHEcMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2147" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZHFqUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2148" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHG4cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2149" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZHJ7wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2150" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHM_EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2151" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZHONMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2152" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZHPbUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2153" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHQpcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2154" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZHSeoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2155" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHVh8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2156" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZHXXIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2157" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZHYlQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2158" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHZzYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2159" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZHbBgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2160" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZHc2sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2161" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZHf6AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2162" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZHiWQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2163" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHjkYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2164" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZHkLcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2165" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZHlZkEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__RunAsSlave__2166" source="_s-5VUErDEem2BZRQc2M93A" target="_ZG5dEkr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZJ8xEEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__2231&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__2234&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZHn10Er4Eem5qeRdwCQ7KQ" name="PME_Trig2167" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHqSEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2168" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZHsuUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2169" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHt8cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2170" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZHvKkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2171" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZHwYsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2172" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZH0qIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2173" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZH2fUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2174" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZH3tcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2175" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZH6wwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2176" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZH8l8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2177" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZH90EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2178" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZH_pQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2179" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZIBecEr4Eem5qeRdwCQ7KQ" name="PME_Trig2180" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZICskEr4Eem5qeRdwCQ7KQ" name="PME_Trig2181" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZIFI0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2182" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZIHlEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2183" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZIIzMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2184" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZILPcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2185" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZIMdkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2186" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZIOSwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__TryBeMaster__2187" source="_s-8_sErDEem2BZRQc2M93A" target="_ZG5dEkr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZJ3RgEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__2231&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__2234&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZIQvAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2188" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZISkMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2189" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZITyUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2190" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZIWOkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2191" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZIW1oEr4Eem5qeRdwCQ7KQ" name="PME_Trig2192" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZIYDwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2193" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZIbHEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2194" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZIeKYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2195" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZIf_kEr4Eem5qeRdwCQ7KQ" name="PME_Trig2196" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZIhNsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2197" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZIh0wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2198" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZIjp8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2199" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZInUUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2200" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZIpJgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2201" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZIqXoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2202" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZIuCAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2203" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZIv3MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2204" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZIxFUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2205" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZIy6gEr4Eem5qeRdwCQ7KQ" name="PME_Trig2206" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZI0IoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2207" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZI0vsEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__NokeepAlive__2208" source="_s-7xkErDEem2BZRQc2M93A" target="_ZG5dEkr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZKC3sEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__2231&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__2234&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZI190Er4Eem5qeRdwCQ7KQ" name="PME_Trig2209" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZI2k4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2210" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZI7dYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2211" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZI8rgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2212" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZI-gsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2213" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZI_u0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2214" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZJEAQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2215" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZJF1cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2216" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZJIRsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2217" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZJI4wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2218" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZJKG4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2219" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZJLVAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2220" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZJQNgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2221" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZJSpwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2222" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZJT34Er4Eem5qeRdwCQ7KQ" name="PME_Trig2223" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZJW7MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2224" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZJbMoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2225" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZJdo4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2226" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZJfeEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2227" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZJmLwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2228" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZJooAEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__NokeepAlive__2229" guard="_ZKGiEUr4Eem5qeRdwCQ7KQ" source="_ZG5dEkr4Eem5qeRdwCQ7KQ" target="_s-58YErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZKGiEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2236">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZKGiEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2236">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZJooAUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__RunAsSlave__2230" guard="_ZKF7AUr4Eem5qeRdwCQ7KQ" source="_ZG5dEkr4Eem5qeRdwCQ7KQ" target="_s-5VUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZKF7AUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2235">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZKF7AEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2235">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZJpPEEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__TryBeMaster__2231" guard="_ZKIXQUr4Eem5qeRdwCQ7KQ" source="_ZG5dEkr4Eem5qeRdwCQ7KQ" target="_s-8_sErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZKIXQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2237">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZKIXQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2237">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__TryBeMaster__2231&quot;,&quot;Debug__A__En__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZJpPEUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__NokeepAlive__2232" guard="_ZKJlYUr4Eem5qeRdwCQ7KQ" source="_ZG5dEkr4Eem5qeRdwCQ7KQ" target="_s-7xkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZKJlYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2238">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZKJlYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2238">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZJtggEr4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__2233" source="_ZG3A0Ur4Eem5qeRdwCQ7KQ" target="_ZG5dEkr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZJ_NUEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2230&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__2229&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__2231&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__2232&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__2234&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZJuHkEr4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__2234" guard="_ZKKzgUr4Eem5qeRdwCQ7KQ" source="_ZG5dEkr4Eem5qeRdwCQ7KQ" target="_ZG42AEr4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_ZKKzgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2239">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZKKzgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2239">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2234&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s-5VUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-5VUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_CfQErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__350">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-58YErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-6jcErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_E7gUrDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive__351">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-7xkErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-7xkUrDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_H-0ErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive__352">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-8_sErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-9mwErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_J0AErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster__353">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZG5dEkr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2141" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZG6rMEr4Eem5qeRdwCQ7KQ" name="Init__State__2142"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_WBQErDEem2BZRQc2M93A" name="Debug__Path__backtoslave" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s_WoUUrDEem2BZRQc2M93A" name="Debug__C__backtoslave">
                  <connectionPoint xmi:id="_s_X2cUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s_YdgUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_ZBq-0Er4Eem5qeRdwCQ7KQ" name="From__Parent__2056" kind="entryPoint"/>
                  <connectionPoint xmi:id="_ZBv3UEr4Eem5qeRdwCQ7KQ" name="To__Parent__2058" kind="exitPoint"/>
                  <region xmi:id="_s_XPYErDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s_tNoErDEem2BZRQc2M93A" name="Debug__init__trans__backtoslave" source="_s_X2cUrDEem2BZRQc2M93A" target="_s_pjQUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_3lsErDEem2BZRQc2M93A" name="Debug__init__trans__backtoslave__379">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__init__trans__backtoslave&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s_tNoUrDEem2BZRQc2M93A" name="Debug__Ac__backtoslave" source="_s_pjQUrDEem2BZRQc2M93A" target="_s_qxYErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_5a4ErDEem2BZRQc2M93A" name="Debug__Ac__backtoslave__381">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__Ac__backtoslave&quot;,(char *)&quot;Debug__B__Ac__backtoslave&quot;,(char *)&quot;Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_tNokrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_t0sErDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_s_qxYErDEem2BZRQc2M93A" target="_s_r_gErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_ubwErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__backtoslave&quot;,(char *)&quot;Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_t0sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_ubwUrDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave" source="_s_r_gErDEem2BZRQc2M93A" target="_s_YdgUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_73IErDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave__384">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__end__trans__backtoslave&quot;,(char *)&quot;Debug__A__En__backtoslave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_ubwkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_ZB8EkEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__20612062" source="_ZB1W4Er4Eem5qeRdwCQ7KQ" target="_ZBxsgEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZGplcEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2061&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__2129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2061&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2127&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2061&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2128&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2061&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2131&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2061&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZB8EkUr4Eem5qeRdwCQ7KQ" name="Trans__ex2063" source="_s_YdgUrDEem2BZRQc2M93A" target="_ZBxsgEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZGsowEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__2129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2127&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2128&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2131&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZCIR0Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__backtoslave__2064" source="_s_pjQUrDEem2BZRQc2M93A" target="_ZBxsgEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZGmiIEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__2129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2127&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2128&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2131&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZCKHAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2065" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZCQ0sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2066" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZCUfEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2067" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZCalsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2068" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZCeQEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2069" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZCkWsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2070" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZCnaAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2071" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZCpPMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2072" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZCvV0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2073" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZCyZIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2074" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZC3RoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2075" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZC5G0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2076" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZC7jEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2077" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZDBCoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2078" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZDEtAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2079" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZDHJQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2080" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZDI-cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2081" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZDPsIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2082" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZDWZ0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2083" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZDlqYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2084" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZDwpgEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__backtoslave__2085" source="_s_qxYErDEem2BZRQc2M93A" target="_ZBxsgEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZGyIUEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__2129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2127&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2128&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2131&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZD3-QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2086" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZD6agEr4Eem5qeRdwCQ7KQ" name="PME_Trig2087" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZD-E4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2088" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZE_YkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2089" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZFAmsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2090" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFB00Er4Eem5qeRdwCQ7KQ" name="PME_Trig2091" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZFIigEr4Eem5qeRdwCQ7KQ" name="PME_Trig2092" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZFKXsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2093" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFLl0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2094" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZFOpIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2095" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFQeUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2096" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZFSTgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2097" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZFUIsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2098" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFVW0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2099" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZFV94Er4Eem5qeRdwCQ7KQ" name="PME_Trig2100" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZFXzEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2101" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZFa2YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2102" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZFd5sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2103" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFfH0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2104" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZFgV8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2105" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZFknYEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__backtoslave__2106" source="_s_r_gErDEem2BZRQc2M93A" target="_ZBxsgEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZGt24Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__2129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2127&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2128&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2131&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZFlOcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2107" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFnqsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2108" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZFo40Er4Eem5qeRdwCQ7KQ" name="PME_Trig2109" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFr8IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2110" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZFuYYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2111" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZFvmgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2112" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZFyCwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2113" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZF2UMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2114" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZF9B4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2115" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZGDIgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2116" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZGGL0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2117" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZGKdQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2118" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZGOHoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2119" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZGQj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2120" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZGRyAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2121" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZGTAIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2122" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZGWDcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2123" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZGZt0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2124" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZGbjAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2125" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZGcxIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2126" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZGiQsEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__backtoslave__2127" guard="_ZG1LoEr4Eem5qeRdwCQ7KQ" source="_ZBxsgEr4Eem5qeRdwCQ7KQ" target="_s_pjQUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZG1LoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2133">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZG0kkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2133">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave__2127&quot;,&quot;Debug__B__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZGi3wEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__backtoslave__2128" guard="_ZG1ysUr4Eem5qeRdwCQ7KQ" source="_ZBxsgEr4Eem5qeRdwCQ7KQ" target="_s_qxYErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZG1ysUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2134">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZG1ysEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2134">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave__2128&quot;,&quot;Debug__A__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZGi3wUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__backtoslave__2129" guard="_ZGzWcUr4Eem5qeRdwCQ7KQ" source="_ZBxsgEr4Eem5qeRdwCQ7KQ" target="_s_r_gErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZGzWcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2132">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZGzWcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2132">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__backtoslave__2129&quot;,&quot;Debug__A__En__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZGkF4Er4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__2130" source="_ZBq-0Er4Eem5qeRdwCQ7KQ" target="_ZBxsgEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZGwTIEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__2129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__2127&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__2128&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__2131&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZGks8Er4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__2131" guard="_ZG1ys0r4Eem5qeRdwCQ7KQ" source="_ZBxsgEr4Eem5qeRdwCQ7KQ" target="_ZBv3UEr4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_ZG1ys0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2135">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZG1yskr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2135">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2131&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s_pjQUrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qKUErDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_vp4UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave__375">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s_qxYErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qxYUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_ytMUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave__376">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s_r_gErDEem2BZRQc2M93A" name="Debug__A__En__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_r_gUrDEem2BZRQc2M93A" name="Debug__A__En__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_1wgErDEem2BZRQc2M93A" name="Debug__A__En__backtoslave__377">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZBxsgEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2060" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZB1W4Er4Eem5qeRdwCQ7KQ" name="Init__State__2061"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tBq8gErDEem2BZRQc2M93A" name="Debug__Path__KeepAliveMsg" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tBrjkUrDEem2BZRQc2M93A" name="Debug__C__KeepAliveMsg">
                  <connectionPoint xmi:id="_tBsxsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tBtYwUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_ZKMosEr4Eem5qeRdwCQ7KQ" name="From__Parent__2241" kind="entryPoint"/>
                  <connectionPoint xmi:id="_ZKNPwUr4Eem5qeRdwCQ7KQ" name="To__Parent__2243" kind="exitPoint"/>
                  <region xmi:id="_tBrjkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tCBh0ErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAliveMsg" source="_tBsxsUrDEem2BZRQc2M93A" target="_tB8pUErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCSnkErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAliveMsg__461">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__init__trans__KeepAliveMsg&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_tCBh0UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave" source="_tB8pUErDEem2BZRQc2M93A" target="_tB9QYErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCVD0ErDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave__463">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCBh0krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCCI4ErDEem2BZRQc2M93A" name="Debug__AC__KeepAliveMsg" source="_tB9QYErDEem2BZRQc2M93A" target="_tB-egErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCCv8ErDEem2BZRQc2M93A" name="ProcessKeppAlive" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Keep Alive Message from &quot;&lt;&lt; ServerName&lt;&lt;&quot;\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    //KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__AC__KeepAliveMsg&quot;,(char *)&quot;Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCCI4UrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCCv8UrDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_tB-egErDEem2BZRQc2M93A" target="_tCATsErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCDXAErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCCv8krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCD-EErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg" source="_tCATsErDEem2BZRQc2M93A" target="_tBtYwUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCZVQErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg__467">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__end__trans__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCD-EUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_ZKUkgEr4Eem5qeRdwCQ7KQ" name="Trans__ex2247" source="_tBtYwUrDEem2BZRQc2M93A" target="_ZKPE8Er4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZNbi4Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2334&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2338&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZKVLkEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__22462248" source="_ZKQTEEr4Eem5qeRdwCQ7KQ" target="_ZKPE8Er4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZNOHgEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2246&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2246&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2334&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2246&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2246&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2338&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2246&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2246&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZKXn0Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__KeepAliveMsg__2249" source="_tB-egErDEem2BZRQc2M93A" target="_ZKPE8Er4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZNd_IEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2334&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2338&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZKY18Er4Eem5qeRdwCQ7KQ" name="PME_Trig2250" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZKaEEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2251" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZKbSMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2252" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZKcgUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2253" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZKfjoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2254" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZKh_4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2255" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZKkcIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2256" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZKlDMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2257" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZKmRUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2258" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZKotkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2259" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZKrw4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2260" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZKtmEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2261" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZKu0MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2262" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZKvbQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2263" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZKwpYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2264" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZKzssEr4Eem5qeRdwCQ7KQ" name="PME_Trig2265" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZK2I8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2266" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZK4lMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2267" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZK5zUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2268" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZK7BcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2269" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZK-EwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__RunAsSlave__2270" source="_tCATsErDEem2BZRQc2M93A" target="_ZKPE8Er4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZNX4gEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2334&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2338&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZK_S4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2271" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLAhAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2272" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZLC9QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2273" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLELYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2274" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZLH1wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2275" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLJq8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2276" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZLKSAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2277" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZLMHMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2278" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLN8YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2279" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZLQ_sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2280" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLS04Er4Eem5qeRdwCQ7KQ" name="PME_Trig2281" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZLUDAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2282" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZLWfQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2283" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLXGUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2284" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZLYUcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2285" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZLZikEr4Eem5qeRdwCQ7KQ" name="PME_Trig2286" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZLdM8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2287" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZLgQQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2288" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLg3UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2289" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZLiFcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2290" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZLkhsEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__RunAsSlave__2291" source="_tB8pUErDEem2BZRQc2M93A" target="_ZKPE8Er4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZNTAAEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2334&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2338&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZLm98Er4Eem5qeRdwCQ7KQ" name="PME_Trig2292" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLoMEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2293" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZLqoUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2294" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLrPYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2295" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZLsdgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2296" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZLtroEr4Eem5qeRdwCQ7KQ" name="PME_Trig2297" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZLwH4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2298" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZLykIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2299" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZL0ZUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2300" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZL2OgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2301" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZL6f8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2302" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZL7uEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2303" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZL88MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2304" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZL-KUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2305" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZMAmkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2306" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZMBNoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2307" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZMDC0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2308" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZMGtMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2309" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZMH7UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2310" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZMJwgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2311" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZMK-oEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__KeepAliveMsg__2312" source="_tB9QYErDEem2BZRQc2M93A" target="_ZKPE8Er4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZNhpgEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2334&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2338&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZMMz0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2313" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZMP3IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2314" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZMRFQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2315" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZMSTYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2316" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZMUIkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2317" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZMVWsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2318" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZMYaAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2319" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZMaPMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2320" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZMbdUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2321" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZMdSgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2322" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZMfuwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2323" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZMjZIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2324" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZMnDgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2325" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZMo4sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2326" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZMqG0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2327" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZMu_UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2328" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZMw0gEr4Eem5qeRdwCQ7KQ" name="PME_Trig2329" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZMzQwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2330" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZM0e4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2331" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZM7zoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2332" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZNEWgEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__KeepAliveMsg__2333" guard="_ZNlT4Ur4Eem5qeRdwCQ7KQ" source="_ZKPE8Er4Eem5qeRdwCQ7KQ" target="_tB-egErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZNlT4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2343">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZNlT4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2343">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZNFkoEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__RunAsSlave__2334" guard="_ZNi3oUr4Eem5qeRdwCQ7KQ" source="_ZKPE8Er4Eem5qeRdwCQ7KQ" target="_tCATsErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZNi3oUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2340">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZNi3oEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2340">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsSlave__2334&quot;,&quot;Debug__A__En__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZNGLsEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__RunAsSlave__2335" guard="_ZNkFwUr4Eem5qeRdwCQ7KQ" source="_ZKPE8Er4Eem5qeRdwCQ7KQ" target="_tB8pUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZNkFwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2341">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZNkFwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2341">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZNGywEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__KeepAliveMsg__2336" guard="_ZNiQkUr4Eem5qeRdwCQ7KQ" source="_ZKPE8Er4Eem5qeRdwCQ7KQ" target="_tB9QYErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZNiQkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2339">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZNiQkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2339">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZNIA4Er4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__2337" source="_ZKMosEr4Eem5qeRdwCQ7KQ" target="_ZKPE8Er4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZNRK0Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__2334&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__2338&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__2333&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZNIA4Ur4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__2338" guard="_ZNks0Ur4Eem5qeRdwCQ7KQ" source="_ZKPE8Er4Eem5qeRdwCQ7KQ" target="_ZKNPwUr4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_ZNks0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2342">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZNks0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2342">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2338&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tB8pUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB8pUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCGaUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__456">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tB9QYErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB9QYUrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCJdoErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg__457">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tB-egErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB_FkErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCL54UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg__458">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tCATsErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCATsUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCOWIErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave__459">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZKPE8Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__2245" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZKQTEEr4Eem5qeRdwCQ7KQ" name="Init__State__2246"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tDikwErDEem2BZRQc2M93A" name="Debug__Path__backtoslave1" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tDjy4UrDEem2BZRQc2M93A" name="Debug__C__backtoslave1">
                  <connectionPoint xmi:id="_tDlBAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tDloEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_Y5cP4Er4Eem5qeRdwCQ7KQ" name="From__Parent__1917" kind="entryPoint"/>
                  <connectionPoint xmi:id="_Y5hIYEr4Eem5qeRdwCQ7KQ" name="To__Parent__1919" kind="exitPoint"/>
                  <region xmi:id="_tDjy4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tD6YMErDEem2BZRQc2M93A" name="Debug__init__trans__backtoslave1" source="_tDlBAErDEem2BZRQc2M93A" target="_tD378UrDEem2BZRQc2M93A"/>
                    <transition xmi:id="_tD6YMUrDEem2BZRQc2M93A" name="Debug__Ac__backtoslave1" source="_tD378UrDEem2BZRQc2M93A" target="_tD5KEErDEem2BZRQc2M93A">
                      <trigger xmi:id="_tD6YMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tD6_QErDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave1" source="_tD5KEErDEem2BZRQc2M93A" target="_tDloEUrDEem2BZRQc2M93A">
                      <trigger xmi:id="_tD6_QUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_Y5qSUEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__19221923" source="_Y5pEMEr4Eem5qeRdwCQ7KQ" target="_Y5n2EEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y86aoEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1922&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1970&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1922&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1922&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1968&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1922&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y5q5YEr4Eem5qeRdwCQ7KQ" name="Trans__ex1924" source="_tDloEUrDEem2BZRQc2M93A" target="_Y5n2EEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y82wQEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1970&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1968&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y5tVoEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__backtoslave1__1925" source="_tD378UrDEem2BZRQc2M93A" target="_Y5n2EEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y9CWcEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1970&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1968&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y5ujwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1926" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y5vx4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1927" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y50DUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1928" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y54UwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1929" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y56J8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1930" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y6BesEr4Eem5qeRdwCQ7KQ" name="PME_Trig1931" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y6DT4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1932" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y6G-QEr4Eem5qeRdwCQ7KQ" name="PME_Trig1933" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y6QvQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1934" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y6SkcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1935" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y6WO0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1936" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y6YEAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1937" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y6eKoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1938" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y6hN8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1939" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y6jqMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1940" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y6q-8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1941" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y6s0IEr4Eem5qeRdwCQ7KQ" name="PME_Trig1942" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y60I4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1943" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y62lIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1944" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y68EsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1945" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y6_vEEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__backtoslave1__1946" source="_tD5KEErDEem2BZRQc2M93A" target="_Y5n2EEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y8_TIEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1970&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1968&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Y7CyYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1947" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y7GcwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1948" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y7KHIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1949" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y7O_oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1950" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y7TREEr4Eem5qeRdwCQ7KQ" name="PME_Trig1951" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y7VtUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1952" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y7dpIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1953" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y7feUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1954" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y7ooQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1955" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y7qdcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1956" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y7xyMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1957" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y7znYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1958" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y79YYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1959" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y8CQ4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1960" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y8KzwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1961" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y8Mo8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1962" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y8QTUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1963" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y8WZ8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1964" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y8aEUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1965" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y8fj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1966" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y8lqgEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__backtoslave1__1967" guard="_Y9Dkk0r4Eem5qeRdwCQ7KQ" source="_Y5n2EEr4Eem5qeRdwCQ7KQ" target="_tD378UrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y9Dkk0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1972">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y9Dkkkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1972">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave1__1967&quot;,&quot;Debug__B__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y8lqgUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__backtoslave1__1968" guard="_Y9ELoUr4Eem5qeRdwCQ7KQ" source="_Y5n2EEr4Eem5qeRdwCQ7KQ" target="_tD5KEErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y9ELoUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1973">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y9ELoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1973">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave1__1968&quot;,&quot;Debug__A__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y8rKEEr4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__1969" source="_Y5cP4Er4Eem5qeRdwCQ7KQ" target="_Y5n2EEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y8wpoEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1970&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1968&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y8rxIEr4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__1970" guard="_Y9DkkUr4Eem5qeRdwCQ7KQ" source="_Y5n2EEr4Eem5qeRdwCQ7KQ" target="_Y5hIYEr4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_Y9DkkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1971">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y9DkkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1971">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1970&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tD378UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD378krDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tD5KEErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD5KEUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Y5n2EEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1921" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Y5pEMEr4Eem5qeRdwCQ7KQ" name="Init__State__1922"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFdQUErDEem2BZRQc2M93A" name="Debug__Path__CheckNoMaster" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tFd3YUrDEem2BZRQc2M93A" name="Debug__C__CheckNoMaster">
                  <connectionPoint xmi:id="_tFeecUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tFfFgUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_ZNl68Ur4Eem5qeRdwCQ7KQ" name="From__Parent__2345" kind="entryPoint"/>
                  <connectionPoint xmi:id="_ZNmiAkr4Eem5qeRdwCQ7KQ" name="To__Parent__2347" kind="exitPoint"/>
                  <region xmi:id="_tFd3YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tFxZYErDEem2BZRQc2M93A" name="Debug__init__trans__CheckNoMaster" source="_tFeecUrDEem2BZRQc2M93A" target="_tFvkMErDEem2BZRQc2M93A"/>
                    <transition xmi:id="_tFxZYUrDEem2BZRQc2M93A" name="Debug__Ac__CheckNoMaster" source="_tFvkMErDEem2BZRQc2M93A" target="_tFwyUErDEem2BZRQc2M93A">
                      <trigger xmi:id="_tFxZYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tFxZY0rDEem2BZRQc2M93A" name="Debug__end__trans__CheckNoMaster" source="_tFwyUErDEem2BZRQc2M93A" target="_tFfFgUrDEem2BZRQc2M93A">
                      <trigger xmi:id="_tFxZZErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_ZNsooEr4Eem5qeRdwCQ7KQ" name="Trans__ex2351" source="_tFfFgUrDEem2BZRQc2M93A" target="_ZNoXMEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPCscEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__2398&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__2395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__2396&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZNsooUr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__23502352" source="_ZNragEr4Eem5qeRdwCQ7KQ" target="_ZNoXMEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPIMAEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2350&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__2398&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2350&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__2395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2350&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__2396&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2350&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZNvE4Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__CheckNoMaster__2353" source="_tFvkMErDEem2BZRQc2M93A" target="_ZNoXMEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPGW0Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__2398&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__2395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__2396&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZNvr8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2354" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZNw6EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2355" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZNzWUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2356" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZN2ZoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2357" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZN414Er4Eem5qeRdwCQ7KQ" name="PME_Trig2358" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZN6EAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2359" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZN75MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2360" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZN_jkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2361" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOAxsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2362" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZOB_0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2363" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOD1AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2364" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZOFDIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2365" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZOFqMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2366" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOHfYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2367" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZOLJwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2368" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZONmAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2369" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZOO0IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2370" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZOQCQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2371" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZORQYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2372" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZOU6wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2373" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZOWI4Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__CheckNoMaster__2374" source="_tFwyUErDEem2BZRQc2M93A" target="_ZNoXMEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPL2YEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__2398&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__2395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__2396&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ZOX-EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2375" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOZMMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2376" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZObocEr4Eem5qeRdwCQ7KQ" name="PME_Trig2377" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOeEsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2378" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZOfS0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2379" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOgg8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2380" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ZOi9MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2381" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZOjkQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2382" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOkyYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2383" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ZOnOoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2384" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOsuMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2385" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ZOt8UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2386" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_ZOvxgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2387" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZOy00Er4Eem5qeRdwCQ7KQ" name="PME_Trig2388" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ZO0C8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2389" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZO14IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2390" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ZO3GQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2391" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_ZO47cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2392" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ZO7-wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2393" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_ZO9M4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2394" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_ZO_CEEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__CheckNoMaster__2395" guard="_ZPNEgUr4Eem5qeRdwCQ7KQ" source="_ZNoXMEr4Eem5qeRdwCQ7KQ" target="_tFvkMErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZPNEgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2400">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZPNEgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2400">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__CheckNoMaster__2395&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZO_pIEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__CheckNoMaster__2396" guard="_ZPO5sUr4Eem5qeRdwCQ7KQ" source="_ZNoXMEr4Eem5qeRdwCQ7KQ" target="_tFwyUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ZPO5sUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2401">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZPO5sEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2401">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__CheckNoMaster__2396&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_ZPA3QEr4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__2397" source="_ZNl68Ur4Eem5qeRdwCQ7KQ" target="_ZNoXMEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZPKBMEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__2398&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__2395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__2396&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ZPA3QUr4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__2398" guard="_ZPL2Ykr4Eem5qeRdwCQ7KQ" source="_ZNoXMEr4Eem5qeRdwCQ7KQ" target="_ZNmiAkr4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_ZPL2Ykr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2399">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZPL2YUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2399">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__2398&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tFvkMErDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFvkMUrDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;CheckNoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tFwyUErDEem2BZRQc2M93A" name="Debug__A__Ac__CheckNoMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFwyUUrDEem2BZRQc2M93A" name="Debug__A__Ac__CheckNoMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;CheckNoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZNoXMEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2349" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZNragEr4Eem5qeRdwCQ7KQ" name="Init__State__2350"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tIHiwErDEem2BZRQc2M93A" name="Debug__Path__Initial1__RunAsSlave__7" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tIIw4UrDEem2BZRQc2M93A" name="Debug__C__Initial1__RunAsSlave__7">
                  <connectionPoint xmi:id="_tIJ_AErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tIKmEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_YyZMsUr4Eem5qeRdwCQ7KQ" name="From__Parent__1732" kind="entryPoint"/>
                  <connectionPoint xmi:id="_Yyaa0Er4Eem5qeRdwCQ7KQ" name="To__Parent__1734" kind="exitPoint"/>
                  <region xmi:id="_tIIw4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tIeIEErDEem2BZRQc2M93A" name="Debug__init__trans__Initial1__RunAsSlave__7" source="_tIJ_AErDEem2BZRQc2M93A" target="_tIbEwUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIpHMErDEem2BZRQc2M93A" name="Debug__init__trans__Initial1__RunAsSlave__7__671">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__init__trans__Initial1__RunAsSlave__7&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_tIeIEUrDEem2BZRQc2M93A" name="Debug__Ac__Initial1__RunAsSlave__7" source="_tIbEwUrDEem2BZRQc2M93A" target="_tIbr0ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIrjcErDEem2BZRQc2M93A" name="Debug__Ac__Initial1__RunAsSlave__7__673">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tIeIEkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tIevIErDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_tIbr0ErDEem2BZRQc2M93A" target="_tIc58ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIfWMErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tIevIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tIfWMUrDEem2BZRQc2M93A" name="Debug__end__trans__Initial1__RunAsSlave__7" source="_tIc58ErDEem2BZRQc2M93A" target="_tIKmEUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIumwErDEem2BZRQc2M93A" name="Debug__end__trans__Initial1__RunAsSlave__7__676">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__end__trans__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tIf9QErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_YyhvkEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__17371738" source="_Yyf6YEr4Eem5qeRdwCQ7KQ" target="_YycQAEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y1Bp8Er4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1737&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1807&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1737&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__1803&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1737&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1805&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1737&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1804&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1737&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_YyiWoEr4Eem5qeRdwCQ7KQ" name="Trans__ex1739" source="_tIKmEUrDEem2BZRQc2M93A" target="_YycQAEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y0yZYEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1807&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__1803&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1805&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1804&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_YykL0Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__Initial1__RunAsSlave__7__1740" source="_tIbr0ErDEem2BZRQc2M93A" target="_YycQAEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y068QEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1807&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__1803&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1805&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1804&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Yyky4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1741" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YymBAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1742" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_YyrgkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1743" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YytVwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1744" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Yyuj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1745" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YyyOQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1746" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Yy0DcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1747" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Yy1RkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1748" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Yy3t0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1749" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Yy4U4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1750" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Yy5jAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1751" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Yy6xIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1752" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Yy8mUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1753" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YzBe0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1754" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_YzDUAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1755" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_YzG-YEr4Eem5qeRdwCQ7KQ" name="PME_Trig1756" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_YzIMgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1757" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_YzL24Er4Eem5qeRdwCQ7KQ" name="PME_Trig1758" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YzO6MEr4Eem5qeRdwCQ7KQ" name="PME_Trig1759" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_YzQIUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1760" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_YzRWcEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Initial1__RunAsSlave__7__1761" source="_tIc58ErDEem2BZRQc2M93A" target="_YycQAEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y0zngEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1807&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__1803&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1805&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1804&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_YzR9gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1762" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YzTLoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1763" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_YzUZwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1764" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YzW2AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1765" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_YzYEIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1766" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YzYrMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1767" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_YzbHcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1768" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Yzf_8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1769" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YzhOEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1770" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_YzicMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1771" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_YzkRYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1772" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_YznUsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1773" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Yzpw8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1774" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Yzq_EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1775" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_YzsNMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1776" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_YzupcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1777" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_YzxFsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1778" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Yzy64Er4Eem5qeRdwCQ7KQ" name="PME_Trig1779" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Yz3MUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1780" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Yz5BgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1781" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Yz6PoEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__Initial1__RunAsSlave__7__1782" source="_tIbEwUrDEem2BZRQc2M93A" target="_YycQAEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y09YgEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1807&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__1803&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1805&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1804&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_Yz62sEr4Eem5qeRdwCQ7KQ" name="PME_Trig1783" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Yz8r4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1784" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y0AWQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1785" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y0CygEr4Eem5qeRdwCQ7KQ" name="PME_Trig1786" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y0EAoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1787" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y0EnsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1788" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_Y0F10Er4Eem5qeRdwCQ7KQ" name="PME_Trig1789" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y0ISEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1790" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y0KHQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1791" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_Y0LVYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1792" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y0QN4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1793" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_Y0RcAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1794" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                      <trigger xmi:id="_Y0T4QEr4Eem5qeRdwCQ7KQ" name="PME_Trig1795" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y0VGYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1796" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_Y0ZX0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1797" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y0bNAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1798" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_Y0dpQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1799" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_Y0fecEr4Eem5qeRdwCQ7KQ" name="PME_Trig1800" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_Y0gskEr4Eem5qeRdwCQ7KQ" name="PME_Trig1801" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_Y0mzMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1802" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_Y0pPcEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__Initial1__RunAsSlave__7__1803" guard="_Y1C4E0r4Eem5qeRdwCQ7KQ" source="_YycQAEr4Eem5qeRdwCQ7KQ" target="_tIbr0ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y1C4E0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1809">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y1C4Ekr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1809">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__1803&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y0pPcUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Initial1__RunAsSlave__7__1804" guard="_Y1HJgUr4Eem5qeRdwCQ7KQ" source="_YycQAEr4Eem5qeRdwCQ7KQ" target="_tIc58ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y1HJgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1811">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y1HJgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1811">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1804&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y0p2gEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__Initial1__RunAsSlave__7__1805" guard="_Y1FUUUr4Eem5qeRdwCQ7KQ" source="_YycQAEr4Eem5qeRdwCQ7KQ" target="_tIbEwUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_Y1FUUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1810">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y1FUUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1810">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1805&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_Y0qdkEr4Eem5qeRdwCQ7KQ" name="From__Parnet__Backup__1806" source="_YyZMsUr4Eem5qeRdwCQ7KQ" target="_YycQAEr4Eem5qeRdwCQ7KQ">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Y01csEr4Eem5qeRdwCQ7KQ">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1807&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__Ac__Initial1__RunAsSlave__7__1803&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1805&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1804&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_Y0rEoEr4Eem5qeRdwCQ7KQ" name="To__Parent__Backup__1807" guard="_Y1C4EUr4Eem5qeRdwCQ7KQ" source="_YycQAEr4Eem5qeRdwCQ7KQ" target="_Yyaa0Er4Eem5qeRdwCQ7KQ">
                      <ownedRule xmi:id="_Y1C4EUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1808">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_Y1C4EEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1808">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1807&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tIbEwUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIbEwkrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;Initial1__RunAsSlave__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tIhLYUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7__667">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tIbr0ErDEem2BZRQc2M93A" name="Debug__A__Ac__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIbr0UrDEem2BZRQc2M93A" name="Debug__A__Ac__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;Initial1__RunAsSlave__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tIjnoErDEem2BZRQc2M93A" name="Debug__A__Ac__Initial1__RunAsSlave__7__668">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tIc58ErDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIc58UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tImD4UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7__669">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_YycQAEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1736" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_Yyf6YEr4Eem5qeRdwCQ7KQ" name="Init__State__1737"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YwP3oEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1675" kind="choice"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s7c_wErDEem2BZRQc2M93A" name="Debug__Path__ServerFaliure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s7dm0UrDEem2BZRQc2M93A" name="Debug__C__ServerFaliure">
              <connectionPoint xmi:id="_s7eN4UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s7e08UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ZWf_UEr4Eem5qeRdwCQ7KQ" name="From__Parent__2521" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZWkQwEr4Eem5qeRdwCQ7KQ" name="To__Parent__2523" kind="exitPoint"/>
              <region xmi:id="_s7dm0krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s732gErDEem2BZRQc2M93A" name="Debug__init__trans__ServerFaliure" source="_s7eN4UrDEem2BZRQc2M93A" target="_s7y-AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8I8QErDEem2BZRQc2M93A" name="Debug__init__trans__ServerFaliure__257">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__init__trans__ServerFaliure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s74dkErDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_s7y-AErDEem2BZRQc2M93A" target="_s70MIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s75rsErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s75EoErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s75rsUrDEem2BZRQc2M93A" name="Debug__AC__ServerFaliure" source="_s70MIErDEem2BZRQc2M93A" target="_s71aQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s76SwErDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);
    int r=random()%30+5;
    Timer.informEvery(UMLRTTimespec(r,0),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Failure,  will recover after &quot; &lt;&lt; r &lt;&lt; &quot; seconds\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__AC__ServerFaliure&quot;,(char *)&quot;Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s75rskrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s76SwUrDEem2BZRQc2M93A" name="Debug__En__Failure" source="_s71aQErDEem2BZRQc2M93A" target="_s73PcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7650ErDEem2BZRQc2M93A" name="SetTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    //------

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__En__Failure&quot;,(char *)&quot;Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s76SwkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7650UrDEem2BZRQc2M93A" name="Debug__end__trans__ServerFaliure" source="_s73PcErDEem2BZRQc2M93A" target="_s7e08UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8Pp8ErDEem2BZRQc2M93A" name="Debug__end__trans__ServerFaliure__262">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__end__trans__ServerFaliure&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s7650krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZWoiMEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__25262527" source="_ZWmtAEr4Eem5qeRdwCQ7KQ" target="_ZWle4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZZ8U4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2526&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2526&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2526&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__2618&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2526&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2526&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2614&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2526&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZWpJQEr4Eem5qeRdwCQ7KQ" name="Trans__ex2528" source="_s7e08UrDEem2BZRQc2M93A" target="_ZWle4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZaRFAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__2618&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2614&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZWq-cEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ServerFaliure__2529" source="_s70MIErDEem2BZRQc2M93A" target="_ZWle4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZaB0cEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__2618&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2614&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZWrlgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2530" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZWweAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2531" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZWxsIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2532" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZWzhUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2533" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZW1WgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2534" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZW5A4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2535" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZW6PAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2536" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZW7dIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2537" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZW8rQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2538" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZW95YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2539" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZW_HgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2540" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZXAVoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2541" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZXCx4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2542" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXFOIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2543" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZXHDUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2544" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZXIRcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2545" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZXKGoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2546" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZXNJ8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2547" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXNxAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2548" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZXO_IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2549" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZXQNQEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Failure__2550" source="_s73PcErDEem2BZRQc2M93A" target="_ZWle4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZaGF4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__2618&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2614&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZXRbYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2551" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXSpgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2552" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZXTQkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2553" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXVFwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2554" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZXYJEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2555" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXZXMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2556" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZXalUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2557" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZXdBkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2558" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXfd0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2559" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZXihIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2560" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXjIMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2561" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZXkWUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2562" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZXmLgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2563" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZXnZoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2564" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZXonwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2565" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZXqc8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2566" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZXuHUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2567" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZXxxsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2568" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZX1cEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2569" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZX5GcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2570" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZX9-8Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ServerFaliure__2571" source="_s71aQErDEem2BZRQc2M93A" target="_ZWle4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZaJwQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__2618&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2614&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZYBCQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2572" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZYCQYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2573" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZYEFkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2574" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZYMBYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2575" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZYPEsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2576" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZYQS0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2577" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZYVyYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2578" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZYXnkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2579" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZYaq4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2580" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZYgKcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2581" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZYj00Er4Eem5qeRdwCQ7KQ" name="PME_Trig2582" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZYlC8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2583" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZYmREEr4Eem5qeRdwCQ7KQ" name="PME_Trig2584" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZYrwoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2585" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZYx3QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2586" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZY0TgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2587" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZY1hoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2588" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZY4k8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2589" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZY9dcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2590" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZY-rkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2591" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZY_SoEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__RunAsMaster__2592" source="_s7y-AErDEem2BZRQc2M93A" target="_ZWle4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZaUIUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__2618&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2614&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZZBu4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2593" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZZC9AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2594" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZZGAUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2595" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZZJqsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2596" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZZMuAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2597" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZZSNkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2598" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZZTbsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2599" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZZV38Er4Eem5qeRdwCQ7KQ" name="PME_Trig2600" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZZXGEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2601" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZZXtIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2602" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZZY7QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2603" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZZdMsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2604" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZZfo8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2605" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZZg3EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2606" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZZiFMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2607" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZZjTUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2608" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZZoL0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2609" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZZrPIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2610" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZZwusEr4Eem5qeRdwCQ7KQ" name="PME_Trig2611" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZZyj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2612" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZZ1nMEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ServerFaliure__2613" guard="_ZaUvYUr4Eem5qeRdwCQ7KQ" source="_ZWle4Er4Eem5qeRdwCQ7KQ" target="_s70MIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZaUvYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2619">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZaUvYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2619">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZZ2OQEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Failure__2614" guard="_ZabdEUr4Eem5qeRdwCQ7KQ" source="_ZWle4Er4Eem5qeRdwCQ7KQ" target="_s73PcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZabdEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2623">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZabdEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2623">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Failure__2614&quot;,&quot;Debug__A__En__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZZ2OQUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ServerFaliure__2615" guard="_ZaVWcUr4Eem5qeRdwCQ7KQ" source="_ZWle4Er4Eem5qeRdwCQ7KQ" target="_s71aQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZaVWcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2620">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZaVWcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2620">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZZ21UEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__RunAsMaster__2616" guard="_Zaa2AUr4Eem5qeRdwCQ7KQ" source="_ZWle4Er4Eem5qeRdwCQ7KQ" target="_s7y-AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Zaa2AUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2622">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zaa2AEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2622">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZZ54oEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__2617" source="_ZWf_UEr4Eem5qeRdwCQ7KQ" target="_ZWle4Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZZ_YMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__2618&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2616&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2614&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZZ6fsEr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__2618" guard="_ZaXysUr4Eem5qeRdwCQ7KQ" source="_ZWle4Er4Eem5qeRdwCQ7KQ" target="_ZWkQwEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZaXysUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2621">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZaXysEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2621">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2618&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s7y-AErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7y-AUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s79WEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__252">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s70MIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s70MIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8AZYErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure__253">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s71aQErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s71aQUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8DcsErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure__254">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s73PcErDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s73PcUrDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8FR4ErDEem2BZRQc2M93A" name="Debug__A__En__Failure__255">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZWle4Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__2525" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZWmtAEr4Eem5qeRdwCQ7KQ" name="Init__State__2526"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s9KP8ErDEem2BZRQc2M93A" name="Debug__Path__purgeotherMessage" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s9K3AUrDEem2BZRQc2M93A" name="Debug__C__purgeotherMessage">
              <connectionPoint xmi:id="_s9MFIErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s9MsMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_Zaj_8Er4Eem5qeRdwCQ7KQ" name="From__Parent__2625" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZalOEEr4Eem5qeRdwCQ7KQ" name="To__Parent__2627" kind="exitPoint"/>
              <region xmi:id="_s9K3AkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s9hcUErDEem2BZRQc2M93A" name="Debug__init__trans__purgeotherMessage" source="_s9MFIErDEem2BZRQc2M93A" target="_s9dx8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ws4ErDEem2BZRQc2M93A" name="Debug__init__trans__purgeotherMessage__306">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__init__trans__purgeotherMessage&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s9iDYErDEem2BZRQc2M93A" name="Debug__Ex__Failure" source="_s9dx8ErDEem2BZRQc2M93A" target="_s9fAEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9x7AErDEem2BZRQc2M93A" name="Debug__Ex__Failure__308">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__Ex__Failure&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9iDYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s9iqcErDEem2BZRQc2M93A" name="Debug__AC__purgeotherMessage" source="_s9fAEErDEem2BZRQc2M93A" target="_s9gOMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9zwMErDEem2BZRQc2M93A" name="Debug__AC__purgeotherMessage__310">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__AC__purgeotherMessage&quot;,(char *)&quot;Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;Debug__A__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9iqcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s9jRgErDEem2BZRQc2M93A" name="Debug__En__Failure" source="_s9gOMErDEem2BZRQc2M93A" target="_s9g1QErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9j4kErDEem2BZRQc2M93A" name="SetTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    //------

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__En__Failure&quot;,(char *)&quot;Debug__A__Ac__purgeotherMessage&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9jRgUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s9kfoErDEem2BZRQc2M93A" name="Debug__end__trans__purgeotherMessage" source="_s9g1QErDEem2BZRQc2M93A" target="_s9MsMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s93akErDEem2BZRQc2M93A" name="Debug__end__trans__purgeotherMessage__313">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__end__trans__purgeotherMessage&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9kfoUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZayCYEr4Eem5qeRdwCQ7KQ" name="Trans__ex2631" source="_s9MsMUrDEem2BZRQc2M93A" target="_Zao4cEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZdqXQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__2722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__2719&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZaypcEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__26302632" source="_ZauYAEr4Eem5qeRdwCQ7KQ" target="_Zao4cEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zdk3sEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2630&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2630&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2630&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2630&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__2722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2630&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__2719&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2630&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Za4wEEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__purgeotherMessage__2633" source="_s9fAEErDEem2BZRQc2M93A" target="_Zao4cEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZdibcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__2722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__2719&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Za5XIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2634" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Za7zYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2635" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Za9BgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2636" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Za9okEr4Eem5qeRdwCQ7KQ" name="PME_Trig2637" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Za_dwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2638" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZbChEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2639" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZbE9UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2640" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZbGLcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2641" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZbLrAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2642" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZbMSEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2643" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZbNgMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2644" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZbP8cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2645" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZbRKkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2646" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZbTm0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2647" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZbWDEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2648" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZbXRMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2649" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZbX4QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2650" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZbZGYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2651" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zba7kEr4Eem5qeRdwCQ7KQ" name="PME_Trig2652" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZbcJsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2653" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZbcwwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__purgeotherMessage__2654" source="_s9gOMErDEem2BZRQc2M93A" target="_Zao4cEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZdtakEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__2722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__2719&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Zbd-4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2655" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZbiQUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2656" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZbkskEr4Eem5qeRdwCQ7KQ" name="PME_Trig2657" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zbl6sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2658" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zbnv4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2659" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZbqzMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2660" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZbsoYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2661" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zbt2gEr4Eem5qeRdwCQ7KQ" name="PME_Trig2662" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZbvrsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2663" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZbwSwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2664" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zbxg4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2665" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Zb0kMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2666" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Zb2ZYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2667" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zb4OkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2668" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zb6DwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2669" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zb748Er4Eem5qeRdwCQ7KQ" name="PME_Trig2670" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zb-VMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2671" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Zb_jUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2672" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcAxcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2673" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZcBYgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2674" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZcDNsEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Failure__2675" source="_s9dx8ErDEem2BZRQc2M93A" target="_Zao4cEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZdmF0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__2722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__2719&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZcFC4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2676" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcIGMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2677" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZcJUUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2678" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcJ7YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2679" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZcLJgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2680" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcNlwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2681" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZcOM0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2682" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZcPa8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2683" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcTFUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2684" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZcU6gEr4Eem5qeRdwCQ7KQ" name="PME_Trig2685" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcVhkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2686" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZcX90Er4Eem5qeRdwCQ7KQ" name="PME_Trig2687" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZcZL8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2688" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcboMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2689" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zchu0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2690" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZcjkAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2691" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zcn1cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2692" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZcpDkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2693" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcqRsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2694" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZcsG4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2695" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZctVAEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Failure__2696" source="_s9g1QErDEem2BZRQc2M93A" target="_Zao4cEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZdpJIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__2722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__2719&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Zct8EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2697" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZcyNgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2698" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zc134Er4Eem5qeRdwCQ7KQ" name="PME_Trig2699" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zc2e8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2700" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zc3tEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2701" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zc6wYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2702" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Zc8lkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2703" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zc_o4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2704" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZdA3AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2705" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZdEhYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2706" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZdGWkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2707" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZdHksEr4Eem5qeRdwCQ7KQ" name="PME_Trig2708" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZdKoAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2709" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZdL2IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2710" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZdOSYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2711" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZdQuoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2712" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZdR8wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2713" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZdTx8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2714" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZdVAEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2715" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZdWOMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2716" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZdafoEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__purgeotherMessage__2717" guard="_Zdv20Ur4Eem5qeRdwCQ7KQ" source="_Zao4cEr4Eem5qeRdwCQ7KQ" target="_s9fAEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Zdv20Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2724">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zdv20Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2724">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZdbGsEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__purgeotherMessage__2718" guard="_ZdvPwUr4Eem5qeRdwCQ7KQ" source="_Zao4cEr4Eem5qeRdwCQ7KQ" target="_s9gOMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZdvPwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2723">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZdvPwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2723">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZdbGsUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Failure__2719" guard="_ZdxE8Ur4Eem5qeRdwCQ7KQ" source="_Zao4cEr4Eem5qeRdwCQ7KQ" target="_s9dx8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZdxE8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2727">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZdxE8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2727">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__2719&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZdbtwEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Failure__2720" guard="_Zdv200r4Eem5qeRdwCQ7KQ" source="_Zao4cEr4Eem5qeRdwCQ7KQ" target="_s9g1QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Zdv200r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2725">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zdv20kr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2725">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Failure__2720&quot;,&quot;Debug__A__En__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZdcU0Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__2721" source="_Zaj_8Er4Eem5qeRdwCQ7KQ" target="_Zao4cEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZdfYIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__Ac__purgeotherMessage&quot;,&quot;To__Debug__A__Ac__purgeotherMessage__2718&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__2717&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__2720&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__2722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__2719&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Zdc74Er4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__2722" guard="_Zdwd4Ur4Eem5qeRdwCQ7KQ" source="_Zao4cEr4Eem5qeRdwCQ7KQ" target="_ZalOEEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Zdwd4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2726">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zdwd4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2726">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2722&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s9dx8ErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9dx8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9ltwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__301">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9fAEErDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9fAEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;purgeotherMessage&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9oxEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage__302">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9gOMErDEem2BZRQc2M93A" name="Debug__A__Ac__purgeotherMessage">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9gOMUrDEem2BZRQc2M93A" name="Debug__A__Ac__purgeotherMessage">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;purgeotherMessage&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9rNUUrDEem2BZRQc2M93A" name="Debug__A__Ac__purgeotherMessage__303">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9g1QErDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9g1QUrDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9uQoErDEem2BZRQc2M93A" name="Debug__A__En__Failure__304">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Zao4cEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2629" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZauYAEr4Eem5qeRdwCQ7KQ" name="Init__State__2630"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s97E8ErDEem2BZRQc2M93A" name="Debug__Path__initTimer" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s97sAUrDEem2BZRQc2M93A" name="Debug__C__initTimer">
              <connectionPoint xmi:id="_s986IUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s99hMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_Zf_5kUr4Eem5qeRdwCQ7KQ" name="From__Parent__2787" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZgCV0Er4Eem5qeRdwCQ7KQ" name="To__Parent__2789" kind="exitPoint"/>
              <region xmi:id="_s98TEErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s-RqQErDEem2BZRQc2M93A" name="Debug__init__trans__initTimer" source="_s986IUrDEem2BZRQc2M93A" target="_s-N_4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-d3gErDEem2BZRQc2M93A" name="Debug__init__trans__initTimer__332">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__init__trans__initTimer&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-RqQUrDEem2BZRQc2M93A" name="Debug__Ac__initTimer" source="_s-N_4ErDEem2BZRQc2M93A" target="_s-POAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-SRUErDEem2BZRQc2M93A" name="InitTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;    
//UMLRTTimespec ts;
    //ts.getclock(ts);
    //this->setTimePointSecond();
    logfile.open(this->getName());
    //if (logfile.is_open())
    //	logfile&lt;&lt;ts.tv_sec&lt;&lt;&quot;:&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.close();
    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(r,0),4);
   TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__Ac__initTimer&quot;,(char *)&quot;Debug__B__Ac__initTimer&quot;,(char *)&quot;Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-RqQkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-SRUUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_s-POAErDEem2BZRQc2M93A" target="_s-QcIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-S4YErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__initTimer&quot;,(char *)&quot;Debug__A__En__initTimer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-SRUkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-S4YUrDEem2BZRQc2M93A" name="Debug__end__trans__initTimer" source="_s-QcIErDEem2BZRQc2M93A" target="_s99hMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-jXEErDEem2BZRQc2M93A" name="Debug__end__trans__initTimer__336">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__end__trans__initTimer&quot;,(char *)&quot;Debug__A__En__initTimer&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-S4YkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZgJqkEr4Eem5qeRdwCQ7KQ" name="Trans__ex2793" source="_s99hMUrDEem2BZRQc2M93A" target="_ZgFZIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZjmnMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__2860&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__2862&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__2859&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__2858&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZgJqkUr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__27922794" source="_ZgH1YEr4Eem5qeRdwCQ7KQ" target="_ZgFZIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZjHfAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__2860&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__2862&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__2859&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__2858&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2792&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZgMt4Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__initTimer__2795" source="_s-QcIErDEem2BZRQc2M93A" target="_ZgFZIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZjWIgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__2860&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__2862&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__2859&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__2858&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZgQ_UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2796" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZgSNcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2797" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZgTbkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2798" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZgWe4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2799" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZgXF8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2800" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZgdMkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2801" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZgdzoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2802" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zgg28Er4Eem5qeRdwCQ7KQ" name="PME_Trig2803" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zgj6QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2804" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZgmWgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2805" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zgm9kEr4Eem5qeRdwCQ7KQ" name="PME_Trig2806" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZgoywEr4Eem5qeRdwCQ7KQ" name="PME_Trig2807" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZgrPAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2808" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZgvgcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2809" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZgwukEr4Eem5qeRdwCQ7KQ" name="PME_Trig2810" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zgx8sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2811" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zg0Y8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2812" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Zg3cQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2813" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zg6fkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2814" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Zg7tsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2815" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Zg8UwEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__initTimer__2816" source="_s-N_4ErDEem2BZRQc2M93A" target="_ZgFZIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZjvKEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__2860&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__2862&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__2859&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__2858&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Zg-J8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2817" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zg__IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2818" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZhEQkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2819" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZhFesEr4Eem5qeRdwCQ7KQ" name="PME_Trig2820" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZhGs0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2821" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZhJJEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2822" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZhJwIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2823" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZhK-QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2824" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZhMMYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2825" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZhP2wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2826" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZhSTAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2827" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZhThIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2828" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZhWkcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2829" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZhZAsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2830" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zha14Er4Eem5qeRdwCQ7KQ" name="PME_Trig2831" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zhd5MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2832" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZhiKoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2833" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Zhj_0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2834" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zhl1AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2835" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZhpfYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2836" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Zhtw0Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__initTimer__2837" source="_s-POAErDEem2BZRQc2M93A" target="_ZgFZIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zj-aoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__2860&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__2862&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__2859&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__2858&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZhypUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2838" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zh3h0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2839" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zh5XAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2840" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zh8aUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2841" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZiBS0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2842" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZiCg8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2843" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZiDvEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2844" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZiGyYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2845" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZiJ1sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2846" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZiNgEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2847" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZiQjYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2848" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZiRxgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2849" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZiVb4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2850" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZiYfMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2851" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zia7cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2852" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZidXsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2853" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZiiQMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2854" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZikscEr4Eem5qeRdwCQ7KQ" name="PME_Trig2855" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zipk8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2856" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZiraIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2857" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZiudcEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__initTimer__2858" guard="_ZkYDQUr4Eem5qeRdwCQ7KQ" source="_ZgFZIEr4Eem5qeRdwCQ7KQ" target="_s-QcIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZkYDQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2866">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZkYDQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2866">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__initTimer__2858&quot;,&quot;Debug__A__En__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZivEgEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__initTimer__2859" guard="_ZkVnAEr4Eem5qeRdwCQ7KQ" source="_ZgFZIEr4Eem5qeRdwCQ7KQ" target="_s-N_4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZkVnAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2865">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZkU_8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2865">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__initTimer__2859&quot;,&quot;Debug__B__Ac__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZivrkEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__initTimer__2860" guard="_ZkMdEUr4Eem5qeRdwCQ7KQ" source="_ZgFZIEr4Eem5qeRdwCQ7KQ" target="_s-POAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZkMdEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2863">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZkMdEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2863">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__initTimer__2860&quot;,&quot;Debug__A__Ac__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZiyH0Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__2861" source="_Zf_5kUr4Eem5qeRdwCQ7KQ" target="_ZgFZIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZkILoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__2860&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__2862&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__2859&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__2858&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZizV8Er4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__2862" guard="_ZkRVkUr4Eem5qeRdwCQ7KQ" source="_ZgFZIEr4Eem5qeRdwCQ7KQ" target="_ZgCV0Er4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZkRVkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2864">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZkRVkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2864">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2862&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s-N_4ErDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-N_4UrDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;initTimer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-UGgErDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer__328">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s-POAErDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-POAUrDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;initTimer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-XJ0ErDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer__329">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s-QcIErDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-QcIUrDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-bbQErDEem2BZRQc2M93A" name="Debug__A__En__initTimer__330">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZgFZIEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2791" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZgH1YEr4Eem5qeRdwCQ7KQ" name="Init__State__2792"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_-6cErDEem2BZRQc2M93A" name="Debug__Path__ActiveMode" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAAIkErDEem2BZRQc2M93A" name="Debug__C__ActiveMode">
              <connectionPoint xmi:id="_tAAvoUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tAB9wErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_Yf_OEEr4Eem5qeRdwCQ7KQ" name="From__Parent__1324" kind="entryPoint"/>
              <connectionPoint xmi:id="_YgBqUEr4Eem5qeRdwCQ7KQ" name="To__Parent__1326" kind="exitPoint"/>
              <region xmi:id="_tAAIkUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tAURoErDEem2BZRQc2M93A" name="Debug__init__trans__ActiveMode" source="_tAAvoUrDEem2BZRQc2M93A" target="_tATDgErDEem2BZRQc2M93A"/>
                <transition xmi:id="_tAU4sErDEem2BZRQc2M93A" name="Debug__Ac__ActiveMode" source="_tATDgErDEem2BZRQc2M93A" target="_tATqkErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tAU4sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tAU4skrDEem2BZRQc2M93A" name="Debug__end__trans__ActiveMode" source="_tATqkErDEem2BZRQc2M93A" target="_tAB9wErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tAU4s0rDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YgTXIEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__13291330" source="_YgLbUEr4Eem5qeRdwCQ7KQ" target="_YgHw8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YlxtAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1329&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1329&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__1375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1329&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1374&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1329&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YgTXIUr4Eem5qeRdwCQ7KQ" name="Trans__ex1331" source="_tAB9wErDEem2BZRQc2M93A" target="_YgHw8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Yl5o0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__1375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1374&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YgUlQEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ActiveMode__1332" source="_tATDgErDEem2BZRQc2M93A" target="_YgHw8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YlnU8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__1375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1374&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YgXBgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1333" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YgfkYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1334" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Ygm5IEr4Eem5qeRdwCQ7KQ" name="PME_Trig1335" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YgqjgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1336" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YgwDEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1337" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YgxRMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1338" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YgzGYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1339" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yg2wwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1340" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yg7CMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1341" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Yg8QUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1342" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yg_ToEr4Eem5qeRdwCQ7KQ" name="PME_Trig1343" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YhGBUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1344" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YhJrsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1345" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YhQZYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1346" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YhUDwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1347" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YhdNsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1348" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YhlwkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1349" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Yhr3MEr4Eem5qeRdwCQ7KQ" name="PME_Trig1350" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yhx90Er4Eem5qeRdwCQ7KQ" name="PME_Trig1351" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YiAAQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1352" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YiKYUEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ActiveMode__1353" source="_tATqkErDEem2BZRQc2M93A" target="_YgHw8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Yls0gEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__1375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1374&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YiM0kEr4Eem5qeRdwCQ7KQ" name="PME_Trig1354" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YiUJUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1355" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yiiy0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1356" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yi3i8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1357" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YjOIQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1358" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YjX5QEr4Eem5qeRdwCQ7KQ" name="PME_Trig1359" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YjiRUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1360" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YjqNIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1361" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yj0lMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1362" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YkG5EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1363" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YkR4MEr4Eem5qeRdwCQ7KQ" name="PME_Trig1364" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YkU7gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1365" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Ykc3UEr4Eem5qeRdwCQ7KQ" name="PME_Trig1366" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YkhIwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1367" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Ykn2cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1368" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YkyOgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1369" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yk6xYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1370" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Yk_p4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1371" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YlHlsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1372" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YlO6cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1373" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YlW2QEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ActiveMode__1374" guard="_Yl_IYEr4Eem5qeRdwCQ7KQ" source="_YgHw8Er4Eem5qeRdwCQ7KQ" target="_tATDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yl_IYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1380">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yl-hUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1380">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ActiveMode__1374&quot;,&quot;Debug__B__Ac__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YlW2QUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ActiveMode__1375" guard="_Yl7eAUr4Eem5qeRdwCQ7KQ" source="_YgHw8Er4Eem5qeRdwCQ7KQ" target="_tATqkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yl7eAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1379">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yl7eAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1379">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ActiveMode__1375&quot;,&quot;Debug__A__Ac__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Ylk4sEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__1376" source="_Yf_OEEr4Eem5qeRdwCQ7KQ" target="_YgHw8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ylv30Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__1375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1374&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Ylk4sUr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__1377" guard="_Yl628Ur4Eem5qeRdwCQ7KQ" source="_YgHw8Er4Eem5qeRdwCQ7KQ" target="_YgBqUEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Yl628Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1378">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yl628Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1378">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1377&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tATDgErDEem2BZRQc2M93A" name="Debug__B__Ac__ActiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tATDgUrDEem2BZRQc2M93A" name="Debug__B__Ac__ActiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ActiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tATqkErDEem2BZRQc2M93A" name="Debug__A__Ac__ActiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tATqkUrDEem2BZRQc2M93A" name="Debug__A__Ac__ActiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ActiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YgHw8Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__1328" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YgLbUEr4Eem5qeRdwCQ7KQ" name="Init__State__1329"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tAaYQErDEem2BZRQc2M93A" name="Debug__Path__Recover" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAa_UUrDEem2BZRQc2M93A" name="Debug__C__Recover">
              <connectionPoint xmi:id="_tAbmYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tAc0gUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ZyAPkEr4Eem5qeRdwCQ7KQ" name="From__Parent__3065" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZyEhAEr4Eem5qeRdwCQ7KQ" name="To__Parent__3067" kind="exitPoint"/>
              <region xmi:id="_tAa_UkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tAw9kErDEem2BZRQc2M93A" name="Debug__init__trans__Recover" source="_tAbmYUrDEem2BZRQc2M93A" target="_tAt6QErDEem2BZRQc2M93A"/>
                <transition xmi:id="_tAw9kUrDEem2BZRQc2M93A" name="Debug__Ex__Failure" source="_tAt6QErDEem2BZRQc2M93A" target="_tAuhUErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tA78sErDEem2BZRQc2M93A" name="Debug__Ex__Failure__417">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__Ex__Failure&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;Debug__B__Ac__Recover&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAw9kkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tAxkoErDEem2BZRQc2M93A" name="Debug__AC__Recover" source="_tAuhUErDEem2BZRQc2M93A" target="_tAvvcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAxkokrDEem2BZRQc2M93A" name="Recover" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: is recovering\n&quot;;
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__AC__Recover&quot;,(char *)&quot;Debug__B__Ac__Recover&quot;,(char *)&quot;Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAxkoUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tAxko0rDEem2BZRQc2M93A" name="Debug__end__trans__Recover" source="_tAvvcErDEem2BZRQc2M93A" target="_tAc0gUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tA_AAErDEem2BZRQc2M93A" name="Debug__end__trans__Recover__420">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__end__trans__Recover&quot;,(char *)&quot;Debug__A__Ac__Recover&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAxkpErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZyIycEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__30703071" source="_ZyG9QEr4Eem5qeRdwCQ7KQ" target="_ZyFvIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0CP4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3070&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__3138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3070&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__3137&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3070&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__3136&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3070&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__3140&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3070&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZyJZgEr4Eem5qeRdwCQ7KQ" name="Trans__ex3072" source="_tAc0gUrDEem2BZRQc2M93A" target="_ZyFvIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0EsIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__3138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__3137&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__3136&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__3140&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZyQHMEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__Recover__3073" source="_tAvvcErDEem2BZRQc2M93A" target="_ZyFvIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0HIYEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__3138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__3137&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__3136&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__3140&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZyQuQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3074" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZyR8YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3075" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZyTKgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3076" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZyWN0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3077" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZyZRIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3078" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZyafQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3079" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZybGUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3080" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZycUcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3081" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZyewsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3082" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZyjCIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3083" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZyjpMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3084" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Zyk3UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3085" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZymFcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3086" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZynTkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3087" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZyohsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3088" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZysMEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3089" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZyuBQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3090" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZyuoUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3091" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zyv2cEr4Eem5qeRdwCQ7KQ" name="PME_Trig3092" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZyxroEr4Eem5qeRdwCQ7KQ" name="PME_Trig3093" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Zyy5wEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Failure__3094" source="_tAt6QErDEem2BZRQc2M93A" target="_ZyFvIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0BBwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__3138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__3137&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__3136&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__3140&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Zy1WAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3095" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zy3yQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3096" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zy5AYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3097" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zy6OgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3098" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zy7coEr4Eem5qeRdwCQ7KQ" name="PME_Trig3099" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zy9R0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3100" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZzAVIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3101" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZzCKUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3102" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzDYcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3103" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZzD_gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3104" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzFNoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3105" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZzHC0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3106" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZzKtMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3107" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzMiYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3108" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZzNwgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3109" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZzOXkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3110" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZzO-oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3111" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZzSpAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3112" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzWTYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3113" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZzXhgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3114" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZzYIkEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__Recover__3115" source="_tAuhUErDEem2BZRQc2M93A" target="_ZyFvIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zz-lgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__3138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__3137&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__3136&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__3140&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZzYvoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3116" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zzak0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3117" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zzby8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3118" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzdBEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3119" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zze2QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3120" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzhSgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3121" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZzjHsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3122" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZzjuwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3123" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzmyEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3124" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Zzp1YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3125" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZzrDgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3126" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZzrqkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3127" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Zzs4sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3128" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZztfwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3129" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZzvU8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3130" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZzyYQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3131" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zz00gEr4Eem5qeRdwCQ7KQ" name="PME_Trig3132" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Zz2CoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3133" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zz3QwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3134" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Zz5F8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3135" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Zz6UEEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__Recover__3136" guard="_Z0Kyw0r4Eem5qeRdwCQ7KQ" source="_ZyFvIEr4Eem5qeRdwCQ7KQ" target="_tAvvcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Z0Kyw0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3143">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z0Kywkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3143">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Recover__3136&quot;,&quot;Debug__A__Ac__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Zz6UEUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Failure__3137" guard="_Z0KywUr4Eem5qeRdwCQ7KQ" source="_ZyFvIEr4Eem5qeRdwCQ7KQ" target="_tAt6QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Z0KywUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3142">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z0KywEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3142">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__3137&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Zz67IEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__Recover__3138" guard="_Z0KLsUr4Eem5qeRdwCQ7KQ" source="_ZyFvIEr4Eem5qeRdwCQ7KQ" target="_tAuhUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Z0KLsUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3141">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z0KLsEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3141">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Recover__3138&quot;,&quot;Debug__B__Ac__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Zz7iMEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__3139" source="_ZyAPkEr4Eem5qeRdwCQ7KQ" target="_ZyFvIEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z0JkoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__3138&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__3137&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__3136&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__3140&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Zz7iMUr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__3140" guard="_Z0LZ0Ur4Eem5qeRdwCQ7KQ" source="_ZyFvIEr4Eem5qeRdwCQ7KQ" target="_ZyEhAEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Z0LZ0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3144">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z0LZ0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3144">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__3140&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tAt6QErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAt6QUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tAyywUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__413">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tAuhUErDEem2BZRQc2M93A" name="Debug__B__Ac__Recover">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAuhUUrDEem2BZRQc2M93A" name="Debug__B__Ac__Recover">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Recover&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tA12EErDEem2BZRQc2M93A" name="Debug__B__Ac__Recover__414">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tAvvcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAwWgErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Recover&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tA5gcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover__415">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZyFvIEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3069" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZyG9QEr4Eem5qeRdwCQ7KQ" name="Init__State__3070"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tBD4gErDEem2BZRQc2M93A" name="Debug__Path__BeingMaster" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tBFGoUrDEem2BZRQc2M93A" name="Debug__C__BeingMaster">
              <connectionPoint xmi:id="_tBG70ErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tBIJ8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ZkjCYEr4Eem5qeRdwCQ7KQ" name="From__Parent__2868" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZkuBgEr4Eem5qeRdwCQ7KQ" name="To__Parent__2870" kind="exitPoint"/>
              <region xmi:id="_tBFGokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tBYooErDEem2BZRQc2M93A" name="Debug__init__trans__BeingMaster" source="_tBG70ErDEem2BZRQc2M93A" target="_tBVlUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBiZoErDEem2BZRQc2M93A" name="Debug__init__trans__BeingMaster__438">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__init__trans__BeingMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tBYooUrDEem2BZRQc2M93A" name="Debug__Ac__BeingMaster" source="_tBVlUUrDEem2BZRQc2M93A" target="_tBWzcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBZPsUrDEem2BZRQc2M93A" name="BeMaster" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(360000);
    TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__Ac__BeingMaster&quot;,(char *)&quot;Debug__B__Ac__BeingMaster&quot;,(char *)&quot;Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBZPsErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBZPskrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tBWzcErDEem2BZRQc2M93A" target="_tBYBkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBZ2wErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__BeingMaster&quot;,(char *)&quot;Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBZPs0rDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBZ2wUrDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster" source="_tBYBkErDEem2BZRQc2M93A" target="_tBIJ8UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBmrEErDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster__442">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__end__trans__BeingMaster&quot;,(char *)&quot;Debug__A__En__BeingMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBad0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZlgEoEr4Eem5qeRdwCQ7KQ" name="Trans__ex2874" source="_tBIJ8UrDEem2BZRQc2M93A" target="_ZlDYsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zq0pgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__2940&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__2943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__2941&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__2939&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Zlig4Er4Eem5qeRdwCQ7KQ" name="Trans__Init__State__28732875" source="_ZlOX0Er4Eem5qeRdwCQ7KQ" target="_ZlDYsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zq9zcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2873&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__2940&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2873&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__2943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2873&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__2941&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2873&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__2939&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2873&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Zl-lwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__BeingMaster__2876" source="_tBWzcErDEem2BZRQc2M93A" target="_ZlDYsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zq3s0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__2940&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__2943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__2941&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__2939&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZmI90Er4Eem5qeRdwCQ7KQ" name="PME_Trig2877" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZmVyIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2878" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZmlpwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2879" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZmoGAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2880" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zmp7MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2881" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZmsXcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2882" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZmwB0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2883" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zm2vgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2884" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zm39oEr4Eem5qeRdwCQ7KQ" name="PME_Trig2885" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Zm8PEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2886" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZnBuoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2887" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZnEK4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2888" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZnMGsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2889" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZnUCgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2890" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZnXs4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2891" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZndMcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2892" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZniE8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2893" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZnlIQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2894" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Znr18Er4Eem5qeRdwCQ7KQ" name="PME_Trig2895" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Zn0Y0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2896" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Zn4qQEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__BeingMaster__2897" source="_tBYBkErDEem2BZRQc2M93A" target="_ZlDYsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZrAPsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__2940&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__2943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__2941&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__2939&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZoAmEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2898" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZoK-IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2899" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZoUIEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2900" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZoXycEr4Eem5qeRdwCQ7KQ" name="PME_Trig2901" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZodSAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2902" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZogVUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2903" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Zomb8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2904" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZooRIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2905" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZotwsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2906" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Zow0AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2907" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZoypMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2908" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Zo2TkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2909" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Zo6lAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2910" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zo7zIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2911" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zo9BQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2912" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zo-PYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2913" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZpDH4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2914" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZpHZUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2915" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZpLDsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2916" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZpP8MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2917" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZpS_gEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__BeingMaster__2918" source="_tBVlUUrDEem2BZRQc2M93A" target="_ZlDYsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZrKAsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__2940&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__2943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__2941&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__2939&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZpXQ8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2919" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zpa7UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2920" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zpd-oEr4Eem5qeRdwCQ7KQ" name="PME_Trig2921" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZpjeMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2922" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZpmhgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2923" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZpsoIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2924" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZpudUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2925" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZpvrcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2926" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zpz84Er4Eem5qeRdwCQ7KQ" name="PME_Trig2927" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Zp41YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2928" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zp8fwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2929" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZqDNcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2930" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZqFpsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2931" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZqM-cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2932" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZqPasEr4Eem5qeRdwCQ7KQ" name="PME_Trig2933" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZqVhUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2934" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZqXWgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2935" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZqaZ0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2936" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zqf5YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2937" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZqiVoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2938" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZqpqYEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__BeingMaster__2939" guard="_ZrR8gEr4Eem5qeRdwCQ7KQ" source="_ZlDYsEr4Eem5qeRdwCQ7KQ" target="_tBWzcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZrR8gEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2947">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZrRVcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2947">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeingMaster__2939&quot;,&quot;Debug__A__Ac__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Zqq4gEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__BeingMaster__2940" guard="_ZrKnwUr4Eem5qeRdwCQ7KQ" source="_ZlDYsEr4Eem5qeRdwCQ7KQ" target="_tBYBkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZrKnwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2944">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZrKnwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2944">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__BeingMaster__2940&quot;,&quot;Debug__A__En__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZqrfkEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__BeingMaster__2941" guard="_ZrOSIUr4Eem5qeRdwCQ7KQ" source="_ZlDYsEr4Eem5qeRdwCQ7KQ" target="_tBVlUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZrOSIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2946">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZrOSIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2946">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BeingMaster__2941&quot;,&quot;Debug__B__Ac__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZqvJ8Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__2942" source="_ZkjCYEr4Eem5qeRdwCQ7KQ" target="_ZlDYsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZrILgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__2940&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__2943&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__2941&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__2939&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZqvxAEr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__2943" guard="_ZrMc8Ur4Eem5qeRdwCQ7KQ" source="_ZlDYsEr4Eem5qeRdwCQ7KQ" target="_ZkuBgEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZrMc8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2945">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZrMc8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2945">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2943&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tBVlUUrDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBWMYErDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeingMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBbr8UrDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster__434">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBWzcErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBWzcUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeingMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBfWUErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster__435">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBYBkErDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBYBkUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBhLgUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster__436">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZlDYsEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2872" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZlOX0Er4Eem5qeRdwCQ7KQ" name="Init__State__2873"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tCc_oErDEem2BZRQc2M93A" name="Debug__Path__PassiveMode" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tCdmsUrDEem2BZRQc2M93A" name="Debug__C__PassiveMode">
              <connectionPoint xmi:id="_tCe00UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tCgC8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ZrVm4Er4Eem5qeRdwCQ7KQ" name="From__Parent__2949" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZrYqMEr4Eem5qeRdwCQ7KQ" name="To__Parent__2951" kind="exitPoint"/>
              <region xmi:id="_tCdmskrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tCyW0ErDEem2BZRQc2M93A" name="Debug__init__trans__PassiveMode" source="_tCe00UrDEem2BZRQc2M93A" target="_tCwhoUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tCyW0UrDEem2BZRQc2M93A" name="Debug__Ac__PassiveMode" source="_tCwhoUrDEem2BZRQc2M93A" target="_tCxIsErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tCyW0krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tCy94ErDEem2BZRQc2M93A" name="Debug__end__trans__PassiveMode" source="_tCxIsErDEem2BZRQc2M93A" target="_tCgC8UrDEem2BZRQc2M93A">
                  <trigger xmi:id="_tCy94UrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZrmFkEr4Eem5qeRdwCQ7KQ" name="Trans__ex2955" source="_tCgC8UrDEem2BZRQc2M93A" target="_Zrc7oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zvj_kEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__2999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__3000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__3002&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZrnTsEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__29542956" source="_ZrfX4Er4Eem5qeRdwCQ7KQ" target="_Zrc7oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZvUH8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2954&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__2999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2954&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__3000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2954&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__3002&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2954&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZrrlIEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__PassiveMode__2957" source="_tCwhoUrDEem2BZRQc2M93A" target="_Zrc7oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZvQdkEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__2999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__3000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__3002&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZrwdoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2958" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zrzg8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2959" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zr2kQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2960" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zr8D0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2961" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zr95AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2962" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZsD_oEr4Eem5qeRdwCQ7KQ" name="PME_Trig2963" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZsHC8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2964" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZsKtUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2965" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZsPl0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2966" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZsRbAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2967" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZsdBMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2968" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Zse2YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2969" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZsgEgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2970" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zsh5sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2971" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZslkEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2972" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZsuuAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2973" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zs5GEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2974" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZtBo8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2975" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZtGhcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2976" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZtKy4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2977" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZtN2MEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__PassiveMode__2978" source="_tCxIsErDEem2BZRQc2M93A" target="_Zrc7oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zvcq0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__2999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__3000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__3002&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZtPEUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2979" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZtUj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2980" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZtbRkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2981" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZtfjAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2982" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Ztm3wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2983" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zts-YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2984" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Zt0TIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2985" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zt3WcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2986" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zt-EIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2987" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZuEKwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2988" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZuH1IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2989" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZuLfgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2990" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZuSNMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2991" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZuV3kEr4Eem5qeRdwCQ7KQ" name="PME_Trig2992" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZuclQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2993" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZudzYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2994" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZukhEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2995" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZuoLcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2996" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zux8cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2997" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Zu6fUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2998" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZvE3YEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__PassiveMode__2999" guard="_ZvnC4Ur4Eem5qeRdwCQ7KQ" source="_Zrc7oEr4Eem5qeRdwCQ7KQ" target="_tCwhoUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZvnC4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3003">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZvnC4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3003">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__PassiveMode__2999&quot;,&quot;Debug__B__Ac__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZvFecEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__PassiveMode__3000" guard="_ZvsicUr4Eem5qeRdwCQ7KQ" source="_Zrc7oEr4Eem5qeRdwCQ7KQ" target="_tCxIsErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZvsicUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3004">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZvsicEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3004">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__PassiveMode__3000&quot;,&quot;Debug__A__Ac__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZvJI0Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__3001" source="_ZrVm4Er4Eem5qeRdwCQ7KQ" target="_Zrc7oEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZvaOkEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__2999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__3000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__3002&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZvJv4Er4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__3002" guard="_ZvvlwUr4Eem5qeRdwCQ7KQ" source="_Zrc7oEr4Eem5qeRdwCQ7KQ" target="_ZrYqMEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZvvlwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3005">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZvvlwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3005">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__3002&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tCwhoUrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCwhokrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tCxIsErDEem2BZRQc2M93A" name="Debug__A__Ac__PassiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCxIsUrDEem2BZRQc2M93A" name="Debug__A__Ac__PassiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Zrc7oEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2953" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZrfX4Er4Eem5qeRdwCQ7KQ" name="Init__State__2954"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tC5EgErDEem2BZRQc2M93A" name="Debug__Path__Init__StandBy__3" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tC6SoUrDEem2BZRQc2M93A" name="Debug__C__Init__StandBy__3">
              <connectionPoint xmi:id="_tC7gwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tC8u4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_YtHrIEr4Eem5qeRdwCQ7KQ" name="From__Parent__1590" kind="entryPoint"/>
              <connectionPoint xmi:id="_YtJgUEr4Eem5qeRdwCQ7KQ" name="To__Parent__1592" kind="exitPoint"/>
              <region xmi:id="_tC6SokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tDQ38ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3" source="_tC7gwErDEem2BZRQc2M93A" target="_tDN0oUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDZa0ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3__499">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__init__trans__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDQ38UrDEem2BZRQc2M93A" name="Debug__Ac__Init__StandBy__3" source="_tDN0oUrDEem2BZRQc2M93A" target="_tDPCwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDRfAUrDEem2BZRQc2M93A" name="InitLog" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tDRfAErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDSGEErDEem2BZRQc2M93A" name="Debug__En__StandBy" source="_tDPCwErDEem2BZRQc2M93A" target="_tDQQ4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDdFMErDEem2BZRQc2M93A" name="Debug__En__StandBy__502">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__En__StandBy&quot;,(char *)&quot;Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tDSGEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDSGEkrDEem2BZRQc2M93A" name="Debug__end__trans__Init__StandBy__3" source="_tDQQ4ErDEem2BZRQc2M93A" target="_tC8u4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDe6YErDEem2BZRQc2M93A" name="Debug__end__trans__Init__StandBy__3__504">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__end__trans__Init__StandBy__3&quot;,(char *)&quot;Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tDStIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YtQOAEr4Eem5qeRdwCQ7KQ" name="Trans__ex1596" source="_tC8u4UrDEem2BZRQc2M93A" target="_YtKHYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YvitAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YtQOAUr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__15951597" source="_YtMjoEr4Eem5qeRdwCQ7KQ" target="_YtKHYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YvlwUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1595&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1595&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1595&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1595&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1595&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YtYw4Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__Init__StandBy__3__1598" source="_tDPCwErDEem2BZRQc2M93A" target="_YtKHYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YvjUEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YtZX8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1599" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YtamEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1600" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YtdCUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1601" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YteQcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1602" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yte3gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1603" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YtgFoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1604" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YtgssEr4Eem5qeRdwCQ7KQ" name="PME_Trig1605" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yth60Er4Eem5qeRdwCQ7KQ" name="PME_Trig1606" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YtmzUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1607" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YtoogEr4Eem5qeRdwCQ7KQ" name="PME_Trig1608" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YtpPkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1609" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YtqdsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1610" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YtrEwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1611" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YtuIEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1612" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yt01wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1613" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yt2q8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1614" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yt35EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1615" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Yt4gIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1616" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yt6VUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1617" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Yt_N0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1618" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YuAb8Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Init__StandBy__3__1619" source="_tDQQ4ErDEem2BZRQc2M93A" target="_YtKHYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YvzLsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YuBDAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1620" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YuCRIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1621" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YuDfQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1622" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YuF7gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1623" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YuHJoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1624" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YuIXwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1625" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YuK0AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1626" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YuOeYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1627" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YuUlAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1628" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YuVzIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1629" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YuWaMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1630" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YuXoUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1631" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YuaEkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1632" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YubSsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1633" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yucg0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1634" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YudH4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1635" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YueWAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1636" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Yuj1kEr4Eem5qeRdwCQ7KQ" name="PME_Trig1637" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YumR0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1638" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Yum44Er4Eem5qeRdwCQ7KQ" name="PME_Trig1639" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YuoHAEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__Init__StandBy__3__1640" source="_tDN0oUrDEem2BZRQc2M93A" target="_YtKHYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YvqBwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Yup8MEr4Eem5qeRdwCQ7KQ" name="PME_Trig1641" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YuuNoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1642" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YuvbwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1643" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yuwp4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1644" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yu2wgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1645" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yu5z0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1646" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Yu7B8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1647" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YvAhgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1648" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YvC9wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1649" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YvDk0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1650" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YvEy8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1651" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YvGBEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1652" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YvGoIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1653" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YvIdUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1654" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YvN84Er4Eem5qeRdwCQ7KQ" name="PME_Trig1655" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YvPLAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1656" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YvUDgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1657" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YvVRoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1658" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YvXt4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1659" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YvY8AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1660" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YvdNcEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__Init__StandBy__3__1661" guard="_Yv4rQUr4Eem5qeRdwCQ7KQ" source="_YtKHYEr4Eem5qeRdwCQ7KQ" target="_tDPCwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yv4rQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1668">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yv4rQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1668">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__StandBy__3__1661&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YvebkEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Init__StandBy__3__1662" guard="_Yv55YUr4Eem5qeRdwCQ7KQ" source="_YtKHYEr4Eem5qeRdwCQ7KQ" target="_tDQQ4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yv55YUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1669">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yv55YEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1669">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Init__StandBy__3__1662&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YvebkUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__Init__StandBy__3__1663" guard="_Yv0Z0Ur4Eem5qeRdwCQ7KQ" source="_YtKHYEr4Eem5qeRdwCQ7KQ" target="_tDN0oUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yv0Z0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1666">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yv0Z0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1666">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__StandBy__3__1663&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YvfpsEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__1664" source="_YtHrIEr4Eem5qeRdwCQ7KQ" target="_YtKHYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YvtsIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__1661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Yvg30Er4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__1665" guard="_Yv22EUr4Eem5qeRdwCQ7KQ" source="_YtKHYEr4Eem5qeRdwCQ7KQ" target="_YtJgUEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Yv22EUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1667">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yv22EEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1667">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1665&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tDN0oUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDObsErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDTUMUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3__495">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tDPCwErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDPCwUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDVJYUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3__496">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tDQQ4ErDEem2BZRQc2M93A" name="Debug__A__En__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDQQ4UrDEem2BZRQc2M93A" name="Debug__A__En__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDW-kUrDEem2BZRQc2M93A" name="Debug__A__En__Init__StandBy__3__497">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YtKHYEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1594" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YtMjoEr4Eem5qeRdwCQ7KQ" name="Init__State__1595"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tEAe0ErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnounce" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tEBF4UrDEem2BZRQc2M93A" name="Debug__C__MasterAnnounce">
              <connectionPoint xmi:id="_tECUAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tEC7EUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_YmEn8Er4Eem5qeRdwCQ7KQ" name="From__Parent__1382" kind="entryPoint"/>
              <connectionPoint xmi:id="_YmGdIEr4Eem5qeRdwCQ7KQ" name="To__Parent__1384" kind="exitPoint"/>
              <region xmi:id="_tEBs8ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tEUn4ErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnounce" source="_tECUAUrDEem2BZRQc2M93A" target="_tEQWcUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEg1IErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnounce__537">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__init__trans__MasterAnnounce&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tEUn4UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tEQWcUrDEem2BZRQc2M93A" target="_tERkkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEVO8ErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEUn4krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEVO8UrDEem2BZRQc2M93A" name="Debug__AC__MasterAnnounce" source="_tERkkErDEem2BZRQc2M93A" target="_tESysErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEV2AErDEem2BZRQc2M93A" name="MasterAnnounce" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;&quot;keepAliveStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__AC__MasterAnnounce&quot;,(char *)&quot;Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEVO8krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEV2AUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tESysErDEem2BZRQc2M93A" target="_tEUA0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEWdEErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEV2AkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEWdEUrDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnounce" source="_tEUA0ErDEem2BZRQc2M93A" target="_tEC7EUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEmUsErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnounce__542">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__end__trans__MasterAnnounce&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEWdEkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YmTRcEr4Eem5qeRdwCQ7KQ" name="Trans__ex1388" source="_tEC7EUrDEem2BZRQc2M93A" target="_YmNK0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YqDJAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YmT4gEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__13871389" source="_YmPAAEr4Eem5qeRdwCQ7KQ" target="_YmNK0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YqB64Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1387&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1387&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1387&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1387&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1387&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1387&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Ymb0UEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__MasterAnnounce__1390" source="_tERkkErDEem2BZRQc2M93A" target="_YmNK0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Yp_eoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Yme3oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1391" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YmfesEr4Eem5qeRdwCQ7KQ" name="PME_Trig1392" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Ymgs0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1393" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YmmzcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1394" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YmoooEr4Eem5qeRdwCQ7KQ" name="PME_Trig1395" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ymp2wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1396" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Ymqd0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1397" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Ymrr8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1398" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YmwkcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1399" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YmzAsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1400" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ym5HUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1401" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Ym8xsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1402" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Ym9_0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1403" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YnEGcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1404" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YnHw0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1405" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YnI-8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1406" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YnN3cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1407" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YnSv8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1408" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yncg8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1409" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YnqjYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1410" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YnsYkEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__RunAsMaster__1411" source="_tEQWcUrDEem2BZRQc2M93A" target="_YmNK0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YqEXIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YnztUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1412" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yn07cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1413" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yn2JkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1414" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yn4l0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1415" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yn7CEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1416" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yn8QMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1417" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YoDk8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1418" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YoFaIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1419" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YoLgwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1420" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YoSOcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1421" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YoS1gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1422" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YoUDoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1423" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YoVRwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1424" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YoYVEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1425" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yob_cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1426" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yod0oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1427" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YofCwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1428" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YogQ4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1429" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YoiGEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1430" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YoitIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1431" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Yoj7QEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__MasterAnnounce__1432" source="_tESysErDEem2BZRQc2M93A" target="_YmNK0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Yp5_EEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YokiUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1433" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YolJYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1434" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YooMsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1435" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YotsQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1436" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YowIgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1437" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YoxWoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1438" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Yox9sEr4Eem5qeRdwCQ7KQ" name="PME_Trig1439" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YozL0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1440" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yo0Z8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1441" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Yo2PIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1442" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yo3dQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1443" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Yo4rYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1444" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Yo5ScEr4Eem5qeRdwCQ7KQ" name="PME_Trig1445" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yo7HoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1446" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YpERkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1447" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YpFfsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1448" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YpGt0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1449" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YpH78Er4Eem5qeRdwCQ7KQ" name="PME_Trig1450" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YpMNYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1451" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YpOpoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1452" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YpPQsEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__RunAsMaster__1453" source="_tEUA0ErDEem2BZRQc2M93A" target="_YmNK0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Yp7NMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YpP3wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1454" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YpRF4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1455" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YpSUAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1456" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YpS7EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1457" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YpVXUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1458" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YpV-YEr4Eem5qeRdwCQ7KQ" name="PME_Trig1459" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YpXMgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1460" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YpaP0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1461" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YpcsEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1462" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Ypg9gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1463" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YpiysEr4Eem5qeRdwCQ7KQ" name="PME_Trig1464" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YpkA0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1465" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Ypkn4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1466" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ypl2AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1467" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YpnEIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1468" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YppgYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1469" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YpqHcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1470" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YprVkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1471" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YpvnAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1472" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Ypw1IEr4Eem5qeRdwCQ7KQ" name="PME_Trig1473" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YpzRYEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__MasterAnnounce__1474" guard="_YqJ2sEr4Eem5qeRdwCQ7KQ" source="_YmNK0Er4Eem5qeRdwCQ7KQ" target="_tERkkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YqJ2sEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1480">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YqJPoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1480">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Ypz4cEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__RunAsMaster__1475" guard="_YqKdwUr4Eem5qeRdwCQ7KQ" source="_YmNK0Er4Eem5qeRdwCQ7KQ" target="_tEQWcUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YqKdwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1481">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YqKdwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1481">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Ypz4cUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__MasterAnnounce__1476" guard="_YqLE0Ur4Eem5qeRdwCQ7KQ" source="_YmNK0Er4Eem5qeRdwCQ7KQ" target="_tESysErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YqLE0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1482">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YqLE0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1482">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Ypz4ckr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__RunAsMaster__1477" guard="_YqLr4Ur4Eem5qeRdwCQ7KQ" source="_YmNK0Er4Eem5qeRdwCQ7KQ" target="_tEUA0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YqLr4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1483">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YqLr4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1483">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1477&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Yp1GkEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__1478" source="_YmEn8Er4Eem5qeRdwCQ7KQ" target="_YmNK0Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YqIBgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__1474&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1476&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Yp1toEr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__1479" guard="_YqMS8Ur4Eem5qeRdwCQ7KQ" source="_YmNK0Er4Eem5qeRdwCQ7KQ" target="_YmGdIEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_YqMS8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1484">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YqMS8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1484">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1479&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tEQWcUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEQWckrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEXrMErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__532">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tERkkErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tERkkUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnounce&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEaHcUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce__533">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tESysErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tESysUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnounce&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEcjsErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce__534">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tEUA0ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEUA0UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEeY4ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__535">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YmNK0Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__1386" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YmPAAEr4Eem5qeRdwCQ7KQ" name="Init__State__1387"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tEp_EErDEem2BZRQc2M93A" name="Debug__Path__ExitPoint1__BeMaster__4" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tEqmIUrDEem2BZRQc2M93A" name="Debug__C__ExitPoint1__BeMaster__4">
              <connectionPoint xmi:id="_tEr0QUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tEsbUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_Zdy6IEr4Eem5qeRdwCQ7KQ" name="From__Parent__2729" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZdzhMkr4Eem5qeRdwCQ7KQ" name="To__Parent__2731" kind="exitPoint"/>
              <region xmi:id="_tErNMErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tE-vMErDEem2BZRQc2M93A" name="Debug__init__trans__ExitPoint1__BeMaster__4" source="_tEr0QUrDEem2BZRQc2M93A" target="_tE86AErDEem2BZRQc2M93A"/>
                <transition xmi:id="_tE-vMUrDEem2BZRQc2M93A" name="Debug__Ac__ExitPoint1__BeMaster__4" source="_tE86AErDEem2BZRQc2M93A" target="_tE9hEErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tE-vMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tE-vM0rDEem2BZRQc2M93A" name="Debug__end__trans__ExitPoint1__BeMaster__4" source="_tE9hEErDEem2BZRQc2M93A" target="_tEsbUUrDEem2BZRQc2M93A">
                  <trigger xmi:id="_tE-vNErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_Zd5n0Er4Eem5qeRdwCQ7KQ" name="Trans__Init__State__27342735" source="_Zd19cEr4Eem5qeRdwCQ7KQ" target="_Zd0vUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zf3WsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2734&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__2782&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2734&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__2780&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2734&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2734&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Zd5n0Ur4Eem5qeRdwCQ7KQ" name="Trans__ex2736" source="_tEsbUUrDEem2BZRQc2M93A" target="_Zd0vUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zf06cEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__2782&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__2780&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Zd7dAEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ExitPoint1__BeMaster__4__2737" source="_tE9hEErDEem2BZRQc2M93A" target="_Zd0vUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zf5y8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__2782&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__2780&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Zd8rIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2738" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zd95QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2739" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zd_HYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2740" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZeAVgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2741" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZeD_4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2742" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZeF1EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2743" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZeHqQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2744" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZeIRUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2745" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZeJfcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2746" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZeL7sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2747" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZeO_AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2748" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZePmEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2749" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZeQ0MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2750" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZeVFoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2751" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZeXh4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2752" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZeYI8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2753" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZeZXEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2754" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZebMQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2755" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZecaYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2756" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZefdsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2757" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Zeh58Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ExitPoint1__BeMaster__4__2758" source="_tE86AErDEem2BZRQc2M93A" target="_Zd0vUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZfwpAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__2782&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__2780&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZeihAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2759" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZejvIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2760" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZemLYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2761" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZenZgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2762" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zep1wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2763" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZetgIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2764" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZevVUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2765" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZexKgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2766" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ze004Er4Eem5qeRdwCQ7KQ" name="PME_Trig2767" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Ze34MEr4Eem5qeRdwCQ7KQ" name="PME_Trig2768" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ze5tYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2769" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Ze7ikEr4Eem5qeRdwCQ7KQ" name="PME_Trig2770" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Ze_M8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2771" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZfBpMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2772" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZfEFcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2773" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZfHIwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2774" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZfKMEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2775" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZflC0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2776" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zfp7UEr4Eem5qeRdwCQ7KQ" name="PME_Trig2777" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZfrJcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2778" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZftlsEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ExitPoint1__BeMaster__4__2779" guard="_Zf-EYUr4Eem5qeRdwCQ7KQ" source="_Zd0vUEr4Eem5qeRdwCQ7KQ" target="_tE9hEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Zf-EYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2785">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zf-EYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2785">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__2779&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZfuMwEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ExitPoint1__BeMaster__4__2780" guard="_Zf82QUr4Eem5qeRdwCQ7KQ" source="_Zd0vUEr4Eem5qeRdwCQ7KQ" target="_tE86AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Zf82QUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2784">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zf82QEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2784">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__2780&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Zfuz0Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__2781" source="_Zdy6IEr4Eem5qeRdwCQ7KQ" target="_Zd0vUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zf4k0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__2782&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__2780&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Zfuz0Ur4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__2782" guard="_Zf7oIEr4Eem5qeRdwCQ7KQ" source="_Zd0vUEr4Eem5qeRdwCQ7KQ" target="_ZdzhMkr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Zf7oIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2783">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zf7BEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2783">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2782&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tE86AErDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE86AUrDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tE9hEErDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE9hEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Zd0vUEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2733" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Zd19cEr4Eem5qeRdwCQ7KQ" name="Init__State__2734"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFEOwErDEem2BZRQc2M93A" name="Debug__Path__BeSlave" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tFE10UrDEem2BZRQc2M93A" name="Debug__C__BeSlave">
              <connectionPoint xmi:id="_tFGrAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tFIgMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_Zv6k4Er4Eem5qeRdwCQ7KQ" name="From__Parent__3007" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZwGLEEr4Eem5qeRdwCQ7KQ" name="To__Parent__3009" kind="exitPoint"/>
              <region xmi:id="_tFE10krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tFXJsErDEem2BZRQc2M93A" name="Debug__init__trans__BeSlave" source="_tFGrAErDEem2BZRQc2M93A" target="_tFVUgUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tFXJsUrDEem2BZRQc2M93A" name="Debug__Ac__BeSlave" source="_tFVUgUrDEem2BZRQc2M93A" target="_tFWioErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tFXJskrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFXJs0rDEem2BZRQc2M93A" name="Debug__end__trans__BeSlave" source="_tFWioErDEem2BZRQc2M93A" target="_tFIgMUrDEem2BZRQc2M93A">
                  <trigger xmi:id="_tFXJtErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZwQjIEr4Eem5qeRdwCQ7KQ" name="Trans__ex3013" source="_tFIgMUrDEem2BZRQc2M93A" target="_ZwHZMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zx7-IEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__3058&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__3060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__3057&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZwRxQEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__30123014" source="_ZwMRsEr4Eem5qeRdwCQ7KQ" target="_ZwHZMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZxzbQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3012&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__3058&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3012&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__3060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3012&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__3057&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3012&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZwWpwEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__BeSlave__3015" source="_tFVUgUrDEem2BZRQc2M93A" target="_ZwHZMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zx3ssEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__3058&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__3060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__3057&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZwX34Er4Eem5qeRdwCQ7KQ" name="PME_Trig3016" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZwZGAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3017" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZwfzsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3018" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZwhB0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3019" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZwlTQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3020" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZwzVsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3021" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Zw1K4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3022" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zw2ZAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3023" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zw3nIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3024" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Zw7RgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3025" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zw9twEr4Eem5qeRdwCQ7KQ" name="PME_Trig3026" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Zw-74Er4Eem5qeRdwCQ7KQ" name="PME_Trig3027" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Zw_i8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3028" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxAxEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3029" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZxB_MEr4Eem5qeRdwCQ7KQ" name="PME_Trig3030" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZxEbcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3031" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZxIF0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3032" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZxIs4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3033" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxJ7AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3034" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZxLJIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3035" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZxMXQEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__BeSlave__3036" source="_tFWioErDEem2BZRQc2M93A" target="_ZwHZMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zx9MQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__3058&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__3060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__3057&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZxM-UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3037" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxOMcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3038" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZxRPwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3039" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxTsAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3040" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZxU6IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3041" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxWvUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3042" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZxaZsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3043" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZxcO4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3044" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Zxc18Er4Eem5qeRdwCQ7KQ" name="PME_Trig3045" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZxeEEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3046" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxerIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3047" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZxggUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3048" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZxhucEr4Eem5qeRdwCQ7KQ" name="PME_Trig3049" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxlY0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3050" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Zxmm8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3051" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Zxn1EEr4Eem5qeRdwCQ7KQ" name="PME_Trig3052" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZxocIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3053" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZxqRUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3054" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZxrfcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3055" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZxstkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3056" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Zxw_AEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__BeSlave__3057" guard="_Zx9zU0r4Eem5qeRdwCQ7KQ" source="_ZwHZMEr4Eem5qeRdwCQ7KQ" target="_tFVUgUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Zx9zU0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3063">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zx9zUkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3063">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BeSlave__3057&quot;,&quot;Debug__B__Ac__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZxxmEEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__BeSlave__3058" guard="_Zx9MQkr4Eem5qeRdwCQ7KQ" source="_ZwHZMEr4Eem5qeRdwCQ7KQ" target="_tFWioErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Zx9MQkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3061">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zx9MQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3061">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeSlave__3058&quot;,&quot;Debug__A__Ac__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZxyNIEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__3059" source="_Zv6k4Er4Eem5qeRdwCQ7KQ" target="_ZwHZMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Zx6wAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__3058&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__3060&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__3057&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZxyNIUr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__3060" guard="_Zx9zUUr4Eem5qeRdwCQ7KQ" source="_ZwHZMEr4Eem5qeRdwCQ7KQ" target="_ZwGLEEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Zx9zUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3062">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Zx9zUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3062">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__3060&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tFVUgUrDEem2BZRQc2M93A" name="Debug__B__Ac__BeSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFV7kErDEem2BZRQc2M93A" name="Debug__B__Ac__BeSlave">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tFWioErDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFWioUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZwHZMEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3011" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZwMRsEr4Eem5qeRdwCQ7KQ" name="Init__State__3012"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tF4HEErDEem2BZRQc2M93A" name="Debug__Path__ServiceRequest" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tF58QErDEem2BZRQc2M93A" name="Debug__C__ServiceRequest">
              <connectionPoint xmi:id="_tF7KYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tF7xcUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ZSu5oEr4Eem5qeRdwCQ7KQ" name="From__Parent__2417" kind="entryPoint"/>
              <connectionPoint xmi:id="_ZSzLEEr4Eem5qeRdwCQ7KQ" name="To__Parent__2419" kind="exitPoint"/>
              <region xmi:id="_tF58QUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tGVaEErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest" source="_tF7KYUrDEem2BZRQc2M93A" target="_tGLCAUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGmf0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest__603">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__init__trans__ServiceRequest&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tGVaEUrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tGLCAUrDEem2BZRQc2M93A" target="_tGMQIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGWoMErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGWBIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGXPQErDEem2BZRQc2M93A" name="Debug__AC__ServiceRequest" source="_tGMQIErDEem2BZRQc2M93A" target="_tGPTcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGYdYErDEem2BZRQc2M93A" name="ReplyRequest" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>   //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ClientRequest,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Message from client replied at index &quot;&lt;&lt;msg->sapIndex0_&lt;&lt;&quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ServerComm.Reply(0).sendAt(tempid);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;
    //ts.getclock(ts);
    //if (logfile.is_open())
    //logfile&lt;&lt;&quot;CleintReply,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__AC__ServiceRequest&quot;,(char *)&quot;Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGX2UErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGYdYUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tGPTcErDEem2BZRQc2M93A" target="_tGQhkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGZEcUrDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGZEcErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGZrgErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceRequest" source="_tGQhkErDEem2BZRQc2M93A" target="_tF7xcUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGsmcErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceRequest__608">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__end__trans__ServiceRequest&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGZrgUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ZS__YEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__24222423" source="_ZS7t8Er4Eem5qeRdwCQ7KQ" target="_ZS1AQEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZWRV0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2422&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2422&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2422&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2422&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__2514&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2422&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2422&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZS__YUr4Eem5qeRdwCQ7KQ" name="Trans__ex2424" source="_tF7xcUrDEem2BZRQc2M93A" target="_ZS1AQEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZWIy8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__2514&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZTHUIEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ServiceRequest__2425" source="_tGPTcErDEem2BZRQc2M93A" target="_ZS1AQEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZWL2QEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__2514&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZTJwYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2426" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZTK-gEr4Eem5qeRdwCQ7KQ" name="PME_Trig2427" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZTRFIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2428" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZTUIcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2429" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZTVWkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2430" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZTa2IEr4Eem5qeRdwCQ7KQ" name="PME_Trig2431" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZTd5cEr4Eem5qeRdwCQ7KQ" name="PME_Trig2432" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZTfHkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2433" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZTkAEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2434" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZTl1QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2435" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZToRgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2436" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZTr74Er4Eem5qeRdwCQ7KQ" name="PME_Trig2437" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZTuYIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2438" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZTvmQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2439" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZTxbcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2440" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZTypkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2441" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZTz3sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2442" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZT1F0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2443" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZT7zgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2444" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZT-PwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2445" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZUEWYEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ServiceRequest__2446" source="_tGMQIErDEem2BZRQc2M93A" target="_ZS1AQEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZWKoIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__2514&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZUGyoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2447" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZUJO4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2448" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZUM5QEr4Eem5qeRdwCQ7KQ" name="PME_Trig2449" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZUOHYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2450" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZUQjoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2451" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZUSY0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2452" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZUX4YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2453" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZUa7sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2454" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZUhpYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2455" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZUjekEr4Eem5qeRdwCQ7KQ" name="PME_Trig2456" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZUsBcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2457" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZUt2oEr4Eem5qeRdwCQ7KQ" name="PME_Trig2458" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZUvr0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2459" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZUzWMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2460" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZU1LYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2461" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZU1ycEr4Eem5qeRdwCQ7KQ" name="PME_Trig2462" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZU3AkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2463" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZU41wEr4Eem5qeRdwCQ7KQ" name="PME_Trig2464" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZU6D4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2465" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZU7SAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2466" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZU8gIEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__RunAsMaster__2467" source="_tGLCAUrDEem2BZRQc2M93A" target="_ZS1AQEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZWVAMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__2514&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZU-8YEr4Eem5qeRdwCQ7KQ" name="PME_Trig2468" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVAxkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2469" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZVCmwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2470" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVEb8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2471" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZVIGUEr4Eem5qeRdwCQ7KQ" name="PME_Trig2472" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVItYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2473" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZVJ7gEr4Eem5qeRdwCQ7KQ" name="PME_Trig2474" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZVKikEr4Eem5qeRdwCQ7KQ" name="PME_Trig2475" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVLwsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2476" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZVNl4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2477" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVO0AEr4Eem5qeRdwCQ7KQ" name="PME_Trig2478" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZVPbEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2479" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZVQpMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2480" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVTFcEr4Eem5qeRdwCQ7KQ" name="PME_Trig2481" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZVVhsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2482" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZVXW4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2483" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZVYlAEr4Eem5qeRdwCQ7KQ" name="PME_Trig2484" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZVZMEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2485" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVaaMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2486" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZVcPYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2487" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZVeroEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__RunAsMaster__2488" source="_tGQhkErDEem2BZRQc2M93A" target="_ZS1AQEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZWG9wEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__2514&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ZVfSsEr4Eem5qeRdwCQ7KQ" name="PME_Trig2489" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVgg0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2490" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZVi9EEr4Eem5qeRdwCQ7KQ" name="PME_Trig2491" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVjkIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2492" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZVkyQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2493" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVocoEr4Eem5qeRdwCQ7KQ" name="PME_Trig2494" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ZVpqwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2495" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZVq44Er4Eem5qeRdwCQ7KQ" name="PME_Trig2496" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVsuEEr4Eem5qeRdwCQ7KQ" name="PME_Trig2497" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ZVvxYEr4Eem5qeRdwCQ7KQ" name="PME_Trig2498" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZVxmkEr4Eem5qeRdwCQ7KQ" name="PME_Trig2499" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ZVy0sEr4Eem5qeRdwCQ7KQ" name="PME_Trig2500" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_ZVzbwEr4Eem5qeRdwCQ7KQ" name="PME_Trig2501" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZV1Q8Er4Eem5qeRdwCQ7KQ" name="PME_Trig2502" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ZV3GIEr4Eem5qeRdwCQ7KQ" name="PME_Trig2503" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZV3tMEr4Eem5qeRdwCQ7KQ" name="PME_Trig2504" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ZV4UQEr4Eem5qeRdwCQ7KQ" name="PME_Trig2505" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ZV6wgEr4Eem5qeRdwCQ7KQ" name="PME_Trig2506" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ZV9z0Er4Eem5qeRdwCQ7KQ" name="PME_Trig2507" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ZV-a4Er4Eem5qeRdwCQ7KQ" name="PME_Trig2508" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ZWBeMEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ServiceRequest__2509" guard="_ZWbt4Ur4Eem5qeRdwCQ7KQ" source="_ZS1AQEr4Eem5qeRdwCQ7KQ" target="_tGPTcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZWbt4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2516">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZWbt4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2516">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZWBeMUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ServiceRequest__2510" guard="_ZWc8AUr4Eem5qeRdwCQ7KQ" source="_ZS1AQEr4Eem5qeRdwCQ7KQ" target="_tGMQIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZWc8AUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2519">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZWc8AEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2519">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZWBeMkr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__RunAsMaster__2511" guard="_ZWcU8Ur4Eem5qeRdwCQ7KQ" source="_ZS1AQEr4Eem5qeRdwCQ7KQ" target="_tGLCAUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZWcU8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2517">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZWcU8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2517">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZWCFQEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__RunAsMaster__2512" guard="_ZWZ4sEr4Eem5qeRdwCQ7KQ" source="_ZS1AQEr4Eem5qeRdwCQ7KQ" target="_tGQhkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ZWZ4sEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2515">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZWZRoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2515">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__2512&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ZWFvoEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__2513" source="_ZSu5oEr4Eem5qeRdwCQ7KQ" target="_ZS1AQEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ZWW1YEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__2509&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__2511&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__2514&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__2510&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ZWFvoUr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__2514" guard="_ZWcU80r4Eem5qeRdwCQ7KQ" source="_ZS1AQEr4Eem5qeRdwCQ7KQ" target="_ZSzLEEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_ZWcU80r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2518">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ZWcU8kr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion2518">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__2514&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tGLCAUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGLpEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGa5oUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__598">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGMQIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGMQIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGd88ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest__599">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGPTcErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGPTcUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGgZMUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest__600">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGQhkErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGQhkUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGjcgErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__601">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZS1AQEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__2421" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ZS7t8Er4Eem5qeRdwCQ7KQ" name="Init__State__2422"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tGwQ0ErDEem2BZRQc2M93A" name="Debug__Path__StandBy__CheckConfig__6" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tGw34UrDEem2BZRQc2M93A" name="Debug__C__StandBy__CheckConfig__6">
              <connectionPoint xmi:id="_tGyGAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tGyGAkrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_YbKYcEr4Eem5qeRdwCQ7KQ" name="From__Parent__1243" kind="entryPoint"/>
              <connectionPoint xmi:id="_YbOp4Er4Eem5qeRdwCQ7KQ" name="To__Parent__1245" kind="exitPoint"/>
              <region xmi:id="_tGw34krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHFoAErDEem2BZRQc2M93A" name="Debug__init__trans__StandBy__CheckConfig__6" source="_tGyGAErDEem2BZRQc2M93A" target="_tHDLwUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tHGPEErDEem2BZRQc2M93A" name="Debug__Ex__StandBy" source="_tHDLwUrDEem2BZRQc2M93A" target="_tHDy0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHROMErDEem2BZRQc2M93A" name="Debug__Ex__StandBy__626">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHGPEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHGPEkrDEem2BZRQc2M93A" name="Debug__AC__StandBy__CheckConfig__6" source="_tHDy0ErDEem2BZRQc2M93A" target="_tHFA8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHG2IErDEem2BZRQc2M93A" name="StartupServer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: StartingUp\n&quot;;
    this->hostConfig=config;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Configuration is:&quot;&lt;&lt; config.RunningMode&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__AC__StandBy__CheckConfig__6&quot;,(char *)&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHGPE0rDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHG2IUrDEem2BZRQc2M93A" name="Debug__end__trans__StandBy__CheckConfig__6" source="_tHFA8ErDEem2BZRQc2M93A" target="_tGyGAkrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHTqcErDEem2BZRQc2M93A" name="Debug__end__trans__StandBy__CheckConfig__6__629">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__end__trans__StandBy__CheckConfig__6&quot;,(char *)&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHG2IkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YbSUQEr4Eem5qeRdwCQ7KQ" name="Trans__ex1249" source="_tGyGAkrDEem2BZRQc2M93A" target="_YbP4AEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YfwkkEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1318&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1316&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YbTiYEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__12481250" source="_YbRGIEr4Eem5qeRdwCQ7KQ" target="_YbP4AEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YfhUAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1248&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1248&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1318&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1248&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1248&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1316&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1248&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YbZpAEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__StandBy__1251" source="_tHDLwUrDEem2BZRQc2M93A" target="_YbP4AEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YfbNYEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1318&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1316&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YbaQEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1252" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YbbeMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1253" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YbcsUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1254" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YbgWsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1255" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Ybiy8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1256" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YbkBEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1257" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YbkoIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1258" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Ybl2QEr4Eem5qeRdwCQ7KQ" name="PME_Trig1259" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YbmdUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1260" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YboSgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1261" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YbquwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1262" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YbuZIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1263" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YbyqkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1264" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yb4KIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1265" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yb9psEr4Eem5qeRdwCQ7KQ" name="PME_Trig1266" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YcCiMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1267" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YcFlgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1268" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YcJ28Er4Eem5qeRdwCQ7KQ" name="PME_Trig1269" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YcPWgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1270" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YcRywEr4Eem5qeRdwCQ7KQ" name="PME_Trig1271" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YcUPAEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__StandBy__CheckConfig__6__1272" source="_tHDy0ErDEem2BZRQc2M93A" target="_YbP4AEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Yf0O8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1318&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1316&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YcXSUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1273" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YcZukEr4Eem5qeRdwCQ7KQ" name="PME_Trig1274" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yca8sEr4Eem5qeRdwCQ7KQ" name="PME_Trig1275" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YcenEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1276" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YciRcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1277" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YcktsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1278" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YcpmMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1279" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YctQkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1280" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YcuesEr4Eem5qeRdwCQ7KQ" name="PME_Trig1281" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YcyJEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1282" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yc1MYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1283" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Yc4PsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1284" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Yc6r8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1285" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yc_kcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1286" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YdCAsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1287" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YdDO0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1288" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YdHgQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1289" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YdMYwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1290" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YdQqMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1291" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YdUUkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1292" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YdWw0Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__StandBy__CheckConfig__6__1293" source="_tHFA8ErDEem2BZRQc2M93A" target="_YbP4AEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YfkXUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1318&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1316&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YdXX4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1294" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YdbpUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1295" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Ydgh0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1296" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YdkMMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1297" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yd9NwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1298" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YeD7cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1299" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YeGXsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1300" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YeLQMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1301" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YeR94Er4Eem5qeRdwCQ7KQ" name="PME_Trig1302" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YeWPUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1303" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YeYEgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1304" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YeZSoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1305" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Yec9AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1306" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YejDoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1307" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YejqsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1308" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yelf4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1309" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YeuCwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1310" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Ye0JYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1311" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ye3MsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1312" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Ye5B4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1313" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YfFPIEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__StandBy__1314" guard="_Yf9Y4Ur4Eem5qeRdwCQ7KQ" source="_YbP4AEr4Eem5qeRdwCQ7KQ" target="_tHDLwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yf9Y4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1321">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yf9Y4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1321">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBy__1314&quot;,&quot;Debug__B__Ex__StandBy&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YfHEUEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__StandBy__CheckConfig__6__1315" guard="_Yf6VkEr4Eem5qeRdwCQ7KQ" source="_YbP4AEr4Eem5qeRdwCQ7KQ" target="_tHDy0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yf6VkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1319">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yf5ugEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1319">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1315&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YfKHoEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__StandBy__CheckConfig__6__1316" guard="_Yf9_8Ur4Eem5qeRdwCQ7KQ" source="_YbP4AEr4Eem5qeRdwCQ7KQ" target="_tHFA8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Yf9_8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1322">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yf9_8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1322">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1316&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YfPnMEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__1317" source="_YbKYcEr4Eem5qeRdwCQ7KQ" target="_YbP4AEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Yf35UEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1318&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1316&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YfSqgEr4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__1318" guard="_Yf8x0Ur4Eem5qeRdwCQ7KQ" source="_YbP4AEr4Eem5qeRdwCQ7KQ" target="_YbOp4Er4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Yf8x0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1320">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Yf8x0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1320">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1318&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHDLwUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDLwkrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHIEQErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy__622">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHDy0ErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDy0UrDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy__CheckConfig__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHM8wErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6__623">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHFA8ErDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHFA8UrDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy__CheckConfig__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHOx8UrDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6__624">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YbP4AEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1247" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YbRGIEr4Eem5qeRdwCQ7KQ" name="Init__State__1248"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tHWGsErDEem2BZRQc2M93A" name="Debug__Path__KeepAlive" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tHWtwUrDEem2BZRQc2M93A" name="Debug__C__KeepAlive">
              <connectionPoint xmi:id="_tHX74UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tHYi8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_YqM6AUr4Eem5qeRdwCQ7KQ" name="From__Parent__1486" kind="entryPoint"/>
              <connectionPoint xmi:id="_YqNhEkr4Eem5qeRdwCQ7KQ" name="To__Parent__1488" kind="exitPoint"/>
              <region xmi:id="_tHWtwkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHuhMErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAlive" source="_tHX74UrDEem2BZRQc2M93A" target="_tHqPwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tH8joErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAlive__648">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__init__trans__KeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tHuhMUrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tHqPwErDEem2BZRQc2M93A" target="_tHq20ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHvIQErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHuhMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHvvUErDEem2BZRQc2M93A" name="Debug__AC__KeepAlive" source="_tHq20ErDEem2BZRQc2M93A" target="_tHsE8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHvvUkrDEem2BZRQc2M93A" name="SendKeepAlive" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    if (hostConfig.RunningMode==1)
    Master.IAmAlive((char *)this->getName()).send();
    std::cout&lt;&lt;&quot;Master: Keep Alive is sent\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__AC__KeepAlive&quot;,(char *)&quot;Debug__B__Ac__KeepAlive&quot;,(char *)&quot;Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHvvUUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHwWYErDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tHsE8ErDEem2BZRQc2M93A" target="_tHt6IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHw9cErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__KeepAlive&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHwWYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHw9cUrDEem2BZRQc2M93A" name="Debug__end__trans__KeepAlive" source="_tHt6IErDEem2BZRQc2M93A" target="_tHYi8UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tICqQErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAlive__653">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__end__trans__KeepAlive&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHxkgErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YqSZkEr4Eem5qeRdwCQ7KQ" name="Trans__ex1492" source="_tHYi8UrDEem2BZRQc2M93A" target="_YqOvMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YtA9cEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1583&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1580&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YqSZkUr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__14911493" source="_YqRLcEr4Eem5qeRdwCQ7KQ" target="_YqOvMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ys_vUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1491&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1583&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1491&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1491&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1491&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1580&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1491&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1491&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YqVc4Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__RunAsMaster__1494" source="_tHqPwErDEem2BZRQc2M93A" target="_YqOvMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ys1-UEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1583&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1580&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YqXSEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1495" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YqZHQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1496" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yqa8cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1497" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YqcxoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1498" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YqdYsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1499" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yqem0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1500" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YqhqIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1501" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YqjfUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1502" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YqoX0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1503" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YqqNAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1504" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yqq0EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1505" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YqsCMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1506" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YqtQUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1507" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YquecEr4Eem5qeRdwCQ7KQ" name="PME_Trig1508" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yqw6sEr4Eem5qeRdwCQ7KQ" name="PME_Trig1509" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YqxhwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1510" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yqyv4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1511" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Yq1zMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1512" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yq4PcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1513" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Yq6rsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1514" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_Yq7SwEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__KeepAlive__1515" source="_tHq20ErDEem2BZRQc2M93A" target="_YqOvMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ys0wMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1583&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1580&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Yq750Er4Eem5qeRdwCQ7KQ" name="PME_Trig1516" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yq9H8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1517" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YrALQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1518" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrCngEr4Eem5qeRdwCQ7KQ" name="PME_Trig1519" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YrFq0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1520" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrIuIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1521" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YrJVMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1522" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YrKjUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1523" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrLxcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1524" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YrM_kEr4Eem5qeRdwCQ7KQ" name="PME_Trig1525" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrO0wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1526" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YrQC4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1527" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YrQp8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1528" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrR4EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1529" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YrU7YEr4Eem5qeRdwCQ7KQ" name="PME_Trig1530" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YrWwkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1531" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YrYlwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1532" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YrZz4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1533" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrbCAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1534" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YrbpEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1535" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YrdeQEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__RunAsMaster__1536" source="_tHt6IErDEem2BZRQc2M93A" target="_YqOvMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ys3McEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1583&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1580&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YrghkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1537" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrpEcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1538" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YrprgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1539" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yrq5oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1540" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YrtV4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1541" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yrt88Er4Eem5qeRdwCQ7KQ" name="PME_Trig1542" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YrvLEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1543" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YrvyIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1544" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YrxAQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1545" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_Yry1cEr4Eem5qeRdwCQ7KQ" name="PME_Trig1546" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yr14wEr4Eem5qeRdwCQ7KQ" name="PME_Trig1547" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Yr3t8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1548" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Yr48EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1549" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Yr5jIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1550" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Yr6xQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1551" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Yr8mcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1552" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YsAQ0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1553" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YsEiQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1554" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YsGXcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1555" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YsHlkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1556" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YsIMoEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__KeepAlive__1557" source="_tHsE8ErDEem2BZRQc2M93A" target="_YqOvMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ys4akEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1583&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1580&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YsIzsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1558" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YsKB0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1559" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YsOTQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1560" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YsQvgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1561" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YsRWkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1562" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YsSksEr4Eem5qeRdwCQ7KQ" name="PME_Trig1563" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YsTy0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1564" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YsVoAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1565" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YsW2IEr4Eem5qeRdwCQ7KQ" name="PME_Trig1566" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_YsXdMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1567" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YsYrUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1568" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YsZSYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1569" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YsaggEr4Eem5qeRdwCQ7KQ" name="PME_Trig1570" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ysdj0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1571" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YshOMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1572" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Ysh1QEr4Eem5qeRdwCQ7KQ" name="PME_Trig1573" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YsicUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1574" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YsmGsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1575" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Ysn74Er4Eem5qeRdwCQ7KQ" name="PME_Trig1576" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_YsqYIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1577" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_YssNUEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__RunAsMaster__1578" guard="_YtCyoUr4Eem5qeRdwCQ7KQ" source="_YqOvMEr4Eem5qeRdwCQ7KQ" target="_tHqPwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YtCyoUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1585">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YtCyoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1585">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Yss0YEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__KeepAlive__1579" guard="_YtEAwUr4Eem5qeRdwCQ7KQ" source="_YqOvMEr4Eem5qeRdwCQ7KQ" target="_tHq20ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YtEAwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1586">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YtEAwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1586">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,&quot;Debug__B__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Yss0YUr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__RunAsMaster__1580" guard="_YtF18Er4Eem5qeRdwCQ7KQ" source="_YqOvMEr4Eem5qeRdwCQ7KQ" target="_tHt6IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YtF18Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1587">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YtFO4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1587">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1580&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YstbcEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__KeepAlive__1581" guard="_YtGdAUr4Eem5qeRdwCQ7KQ" source="_YqOvMEr4Eem5qeRdwCQ7KQ" target="_tHsE8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YtGdAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1588">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YtGdAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1588">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,&quot;Debug__A__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Ysxs4Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ServerStateMachine__1582" source="_YqM6AUr4Eem5qeRdwCQ7KQ" target="_YqOvMEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ys8sAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1583&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1579&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1580&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1581&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Ysxs4Ur4Eem5qeRdwCQ7KQ" name="To__Parent__ServerStateMachine__1583" guard="_YtBkgUr4Eem5qeRdwCQ7KQ" source="_YqOvMEr4Eem5qeRdwCQ7KQ" target="_YqNhEkr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_YtBkgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1584">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YtBkgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1584">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1583&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHqPwErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHqPwUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHyyoErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__643">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHq20ErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHq20UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH1O4UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive__644">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHsE8ErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHsE8UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH3rIUrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive__645">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHt6IErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHt6IUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH6HYErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__646">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YqOvMEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1490" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YqRLcEr4Eem5qeRdwCQ7KQ" name="Init__State__1491"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tJHBQErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_YWwZkEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1139" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxfLcUrDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_sxfLcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Slave.recallAll();
ConfigComm.recallAll();
Master.recallAll();
ServerComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxvDEErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sxucAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;KeepAliveTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(KeepAliveTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,KeepAliveTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
tempS.append(&quot;AnnouncementTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncementTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncementTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxzUgUrDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxyGYErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;KeepAliveTimeOut&quot;==tempVarName){
    KeepAliveTimeOut=atoi(varValue);
    return true;
}else if (&quot;AnnouncementTimeOut&quot;==tempVarName){
    AnnouncementTimeOut=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_syDzMErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sx6CMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YVsCkUr4Eem5qeRdwCQ7KQ" name="loadHeap" specification="_YVsCkEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.KeepAliveTimeOut&quot;,this->KeepAliveTimeOut);
heap.setVarValue(&quot;this.AnnouncementTimeOut&quot;,this->AnnouncementTimeOut);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YVt3wUr4Eem5qeRdwCQ7KQ" name="unLoadHeap" specification="_YVt3wEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.KeepAliveTimeOut&quot;,&amp;this->KeepAliveTimeOut);
heap.loadVarFromHeap(&quot;this.AnnouncementTimeOut&quot;,&amp;this->AnnouncementTimeOut);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YWJ8oUr4Eem5qeRdwCQ7KQ" name="sendMessage" specification="_YWJ8oEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;ServerComm&quot;) {
  if(message.signal==&quot;Reply&quot;) {
   if(message.payload.size()==1){
    ServerComm.Reply( boost::any_cast&lt;int>(message.payload[&quot;Result&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Master&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Master.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Slave&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Slave.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YWLx0Ur4Eem5qeRdwCQ7KQ" name="sendInternalMessage" specification="_YWLx0Er4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YWqS8Ur4Eem5qeRdwCQ7KQ" name="initForPMD" specification="_YWqS8Er4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Server::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Server::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ServerComm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;ServerComm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;KeepAliveTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;MasterAnnounceTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sxfLcErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_sxfLcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxucAErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sxvDEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxyGYErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxzUgUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxytcErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxytcUrDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxzUgErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sx6CMErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_syDzMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sx7QUErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx8ecUrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx9skErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-ToUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-6sErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syAI0ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8ErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8UrDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syClEErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syDMIErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_YVsCkEr4Eem5qeRdwCQ7KQ" name="loadHeap" visibility="private" method="_YVsCkUr4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_YVt3wEr4Eem5qeRdwCQ7KQ" name="unLoadHeap" visibility="private" method="_YVt3wUr4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_YWJ8oEr4Eem5qeRdwCQ7KQ" name="sendMessage" visibility="private" method="_YWJ8oUr4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_YWKjsEr4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_YWKjsUr4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_YWLx0Er4Eem5qeRdwCQ7KQ" name="sendInternalMessage" visibility="private" method="_YWLx0Ur4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_YWMY4Er4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_YWM_8Er4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_YWqS8Er4Eem5qeRdwCQ7KQ" name="initForPMD" visibility="private" method="_YWqS8Ur4Eem5qeRdwCQ7KQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_zpdLYAgmEea_md0mpENoqg" name="Client" classifierBehavior="_BKT8EAlKEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_5utSYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_g3nG4AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kSO0IAliEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kSfS0AliEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_iLeRcAmuEea_md0mpENoqg" name="RequestTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_oWg3YAmuEea_md0mpENoqg" name="ConfigTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tP9SkAmuEea_md0mpENoqg" name="ResponseTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_fL3OQAnFEeaGqPUk-4V4qQ" name="Server1Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jNC1oAnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNNNsAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lRZpIAnFEeaGqPUk-4V4qQ" name="Server2Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pIHs8AnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pIOaoAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_8sGy4AovEeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swu9gErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swxZwUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swyA0ErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8ErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8UrDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxH_EErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxJNMUrDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Wi0WwEr4Eem5qeRdwCQ7KQ" name="dbgPortForClient" visibility="protected" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Wi090Er4Eem5qeRdwCQ7KQ" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_Wi1k4Er4Eem5qeRdwCQ7KQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_BKT8EAlKEea_md0mpENoqg" name="ClientStateMachine">
          <region xmi:id="_Bk0GwAlKEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_UScqkAlKEea_md0mpENoqg" name="inittrans" source="_tPxp8ErDEem2BZRQc2M93A" target="_Q5-S4AlKEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ptLt0AlKEea_md0mpENoqg" name="InitLog">
                <language>C++</language>
                <body>      std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;
     char  fileName[30];
     char  clientIndex[5];
     //itoa(clientIndex,this->getIndex(),10);

	sprintf(clientIndex, &quot;%d&quot;, this->getIndex());
     strcpy(fileName,this->getName());
     strcat(fileName, clientIndex);
     logfile.open(fileName);
     logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::inittrans&quot;,(char *)&quot;Debug__Path__inittrans&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_LR5_sAlhEea_md0mpENoqg" name="StarupTransition" source="_tRT7AErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_h7nXgAlhEea_md0mpENoqg" name="StartUPClient">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; Client is startingUP \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StarupTransition&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_7y_ToAmtEea_md0mpENoqg" name="reqFlowInit" source="_tSQ9QErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTAkIErDEem2BZRQc2M93A" name="reqFlowInit__956">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::reqFlowInit&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_9CvEQAmtEea_md0mpENoqg" name="getMasterName__checkConfig__9" source="_tPJ-4ErDEem2BZRQc2M93A" target="_qr_J4AnCEeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPtYgErDEem2BZRQc2M93A" name="getMasterName__checkConfig__9__856">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::getMasterName__checkConfig__9&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;checkConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_BanqgAmuEea_md0mpENoqg" name="ServiceResult" source="_tNLo8ErDEem2BZRQc2M93A" target="_uScfwAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_CC7jEAovEeaGqPUk-4V4qQ" name="getResponse">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: got reponse from server, go to process response state\n&quot;;
    int j=0;
    for (int i=0;i&lt;=100000;i++)
	j=j+1;
    std::cout&lt;&lt;j;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ServiceResult&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_Cf20QAmuEea_md0mpENoqg" name="ReqFlowDone" source="_tQWRsErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_PDYPsAoxEeaGqPUk-4V4qQ" name="AllIsDone">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The service Request has been done sucessfully\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ReqFlowDone&quot;,(char *)&quot;Debug__Path__ReqFlowDone&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_xsxFAAnCEeaGqPUk-4V4qQ" name="NoMaster" source="_tLzI4ErDEem2BZRQc2M93A" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMXJkErDEem2BZRQc2M93A" name="NoMaster__760">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::NoMaster&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_6NrWIAnCEeaGqPUk-4V4qQ" name="reqService" source="_tOHdEErDEem2BZRQc2M93A" target="_fO-gkAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvuAcAnEEeaGqPUk-4V4qQ" name="requestserive">
                <language>C++</language>
                <body>    
    messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,SendingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    if (hostConfig.MasterList[0] &amp;&amp; hostConfig.MasterList[1])
    {
    int r=rand()%2;
    if (r==0)
    {
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else{
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }
    }
    else if (hostConfig.MasterList[0]){
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else
    {
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::reqService&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_QnYuMAozEeaGqPUk-4V4qQ" name="NoResponseFromServer" source="_tTDncErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_WkrVwApkEeaGqPUk-4V4qQ" name="ServiceFailure">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Service Failur.....\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::NoResponseFromServer&quot;,(char *)&quot;Debug__Path__NoResponseFromServer&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_KpN_QAo2EeaGqPUk-4V4qQ" name="Retry" source="_tMY-wErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNJMsErDEem2BZRQc2M93A" name="Retry__787">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL2zQUrDEem2BZRQc2M93A" name="Debug__NoMaster" source="_qr_J4AnCEeaGqPUk-4V4qQ" target="_tLzI4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL2zQkrDEem2BZRQc2M93A" name="Debug__NoMaster__738">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoMaster&quot;,(char *)&quot;checkConfig&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL4ocErDEem2BZRQc2M93A" name="Debug__NoMaster__S" guard="_tL5PgUrDEem2BZRQc2M93A" source="_tLzI4ErDEem2BZRQc2M93A" target="_tL0-EUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tL5PgUrDEem2BZRQc2M93A" name="Debug__GuardNoMaster">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tL5PgErDEem2BZRQc2M93A" name="Debug__GuardNoMaster">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;checkConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL6doErDEem2BZRQc2M93A" name="Debug__NoMaster__S__740">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoMaster__S&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL7rwErDEem2BZRQc2M93A" name="Debug__NoMaster__E" source="_tL1lIUrDEem2BZRQc2M93A" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL8S0ErDEem2BZRQc2M93A" name="Debug__NoMaster__E__741">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL854ErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL9g8UrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange__743">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tL9g8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL-IAErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL-vEErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint__744">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL-IAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_WIErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL_WIkrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint__745">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_WIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_9MErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMAkQErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints__746">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_9MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMAkQUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMBLUErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode__747">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMAkQkrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMBLUUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMCZcUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg__748">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMByYErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMByYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMCZcErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMcCEUrDEem2BZRQc2M93A" name="Debug__Retry" source="_KwFHIAo0EeaGqPUk-4V4qQ" target="_tMY-wErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMcpIErDEem2BZRQc2M93A" name="Debug__Retry__762">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry&quot;,(char *)&quot;Retry&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_2jDQUAo3EeaGqPUk-4V4qQ" name="Retry" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMd3QErDEem2BZRQc2M93A" name="Debug__Retry__S" guard="_tMeeUUrDEem2BZRQc2M93A" source="_tMY-wErDEem2BZRQc2M93A" target="_tMaz8UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tMeeUUrDEem2BZRQc2M93A" name="Debug__GuardRetry">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tMeeUErDEem2BZRQc2M93A" name="Debug__GuardRetry">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Retry&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMfscErDEem2BZRQc2M93A" name="Debug__Retry__S__764">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry__S&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tMg6kErDEem2BZRQc2M93A" name="Debug__Retry__E" source="_tMbbAUrDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMg6kUrDEem2BZRQc2M93A" name="Debug__Retry__E__765">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tMiIsErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMivwErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange__767">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tMiIsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMj94ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMkk8ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint__768">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMj94UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMlzEErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMmaIErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint__769">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMlzEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnBMErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMnoQErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints__770">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMnBMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnoQUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMoPUUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode__771">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMoPUErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMo2YErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMqEgErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg__772">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMo2YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNP6YUrDEem2BZRQc2M93A" name="Debug__ServiceResult" source="_fO-gkAmtEea_md0mpENoqg" target="_tNLo8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNP6YkrDEem2BZRQc2M93A" name="Debug__ServiceResult__789">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_DEh6sAnGEeaGqPUk-4V4qQ" name="Result" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ _lRZpIAnFEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_tNRIgErDEem2BZRQc2M93A" name="Debug__ServiceResult__S" guard="_tNSWoUrDEem2BZRQc2M93A" source="_tNLo8ErDEem2BZRQc2M93A" target="_tNOFMErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tNSWoUrDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tNSWoErDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNS9sErDEem2BZRQc2M93A" name="Debug__ServiceResult__S__791">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__S&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNUL0ErDEem2BZRQc2M93A" name="Debug__ServiceResult__E" source="_tNOsQUrDEem2BZRQc2M93A" target="_uScfwAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNUy4ErDEem2BZRQc2M93A" name="Debug__ServiceResult__E__792">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNWBAErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNWoEErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange__794">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tNWBAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNXPIErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNYdQErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint__795">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNXPIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNZrYErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNZrYkrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint__796">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNZrYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNaScErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNa5gErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints__797">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNaScUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNa5gUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNbgkUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode__798">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tNbgkErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNdVwErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNd80krDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg__799">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNdVwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOeCYUrDEem2BZRQc2M93A" name="Debug__reqService" guard="_BkmgYAnDEeaGqPUk-4V4qQ" source="_qr_J4AnCEeaGqPUk-4V4qQ" target="_tOHdEErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_BkmgYAnDEeaGqPUk-4V4qQ" name="MasterIsAvailable">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ro31QAnDEeaGqPUk-4V4qQ" name="checkMaster">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <language>C++</language>
                  <body>    hostConfig=config;
    if (hostConfig.MasterList[0] || hostConfig.MasterList[1])
    return true;
    else 
    return false;
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOf3kErDEem2BZRQc2M93A" name="Debug__reqService__813">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqService&quot;,(char *)&quot;checkConfig&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tOiT0ErDEem2BZRQc2M93A" name="Debug__reqService__S" guard="_tOkJAUrDEem2BZRQc2M93A" source="_tOHdEErDEem2BZRQc2M93A" target="_tObmIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tOkJAUrDEem2BZRQc2M93A" name="Debug__GuardreqService">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tOkJAErDEem2BZRQc2M93A" name="Debug__GuardreqService">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;checkConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOlXIErDEem2BZRQc2M93A" name="Debug__reqService__S__815">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqService__S&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tOnzYErDEem2BZRQc2M93A" name="Debug__reqService__E" source="_tOc0QUrDEem2BZRQc2M93A" target="_fO-gkAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOoacErDEem2BZRQc2M93A" name="Debug__reqService__E__816">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqService__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tOsE0ErDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOsr4UrDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange__818">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tOsr4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOvvMErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOwWQErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint__819">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOvvMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOw9UErDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOw9UkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint__820">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOw9UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOxkYErDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOxkYkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints__821">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOxkYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyLcErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOyLckrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode__822">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tOyLcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyygErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOzZkkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg__823">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOyygUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPNCMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9" source="_aVMuMAmtEea_md0mpENoqg" target="_tPJ-4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPNCMUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__835">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_fW6vEAnCEeaGqPUk-4V4qQ" name="ConfigReply" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tPOQUErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S" guard="_tPO3YErDEem2BZRQc2M93A" source="_tPJ-4ErDEem2BZRQc2M93A" target="_tPLNAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tPO3YErDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tPOQUUrDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;getMasterName&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPPecErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S__837">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9__S&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tPQskErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__E" source="_tPMbIErDEem2BZRQc2M93A" target="_qr_J4AnCEeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPRToErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__E__838">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;checkConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tPShwErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTI0ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange__840">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tPShwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPTv4ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTv4krDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint__841">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPTv4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPUW8ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPU-AUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint__842">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPU-AErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPVlEErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWMIUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints__843">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPWMIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPWzMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWzMkrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode__844">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tPWzMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPXaQErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPYoYUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg__845">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPXaQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYoYErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP17YUrDEem2BZRQc2M93A" name="Debug__inittrans" source="_tT_bkErDEem2BZRQc2M93A" target="_tPxp8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP17YkrDEem2BZRQc2M93A" name="Debug__inittrans__858">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitingForReply&quot;,&quot;ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;Reply&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;checkConfig&quot;,&quot;NoMaster&quot;,&quot;Retry&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;init&quot;,&quot;&quot;,&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Ready&quot;,&quot;reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;init&quot;,&quot;inittrans&quot;,&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitingForReply&quot;,&quot;NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Retry&quot;,&quot;Retry&quot;,&quot;getMasterName&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBY&quot;,&quot;StarupTransition&quot;,&quot;Ready&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;getMasterName&quot;,&quot;&quot;,&quot;checkConfig&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;checkConfig&quot;,&quot;reqService&quot;,&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitForEcho&quot;,&quot;DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;Echo&quot;,&quot;Echo&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;ProcessResponse&quot;,&quot;ReqFlowDone&quot;,&quot;Ready&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tUB30ErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP3JgErDEem2BZRQc2M93A" name="Debug__inittrans__S" guard="_tP3wkUrDEem2BZRQc2M93A" source="_tPxp8ErDEem2BZRQc2M93A" target="_tPzfIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tP3wkUrDEem2BZRQc2M93A" name="Debug__Guardinittrans">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tP3wkErDEem2BZRQc2M93A" name="Debug__Guardinittrans">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP4XoErDEem2BZRQc2M93A" name="Debug__inittrans__S__860">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__inittrans__S&quot;,(char *)&quot;Debug__Path__inittrans&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tP5lwErDEem2BZRQc2M93A" name="Debug__inittrans__E" source="_tP1UUUrDEem2BZRQc2M93A" target="_Q5-S4AlKEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP5lwUrDEem2BZRQc2M93A" name="Debug__inittrans__E__861">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__inittrans__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tP7a8ErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP7a8krDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange__863">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tP7a8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP8pEErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP8pEkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint__864">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP8pEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP9QIErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP93MUrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint__865">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP93MErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP-eQErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP-eQkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints__866">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP-eQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_FUErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP_FUkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode__867">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tP_FUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_sYErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQA6gErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg__868">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQATcErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATckrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQZVAUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone" source="_uScfwAmtEea_md0mpENoqg" target="_tQWRsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQZ8EErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__881">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;Debug__Path__ReqFlowDone&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_rVlzAAovEeaGqPUk-4V4qQ" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQbKMErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__S" guard="_tQbxQUrDEem2BZRQc2M93A" source="_tQWRsErDEem2BZRQc2M93A" target="_tQYG4ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tQbxQUrDEem2BZRQc2M93A" name="Debug__GuardReqFlowDone">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tQbxQErDEem2BZRQc2M93A" name="Debug__GuardReqFlowDone">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQcYUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__S__883">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone__S&quot;,(char *)&quot;Debug__Path__ReqFlowDone&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tQkUIErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__E" source="_tQYt8ErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQk7MErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__E__884">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tQmJUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQmwYUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange__886">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tQmwYErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQnXcErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQn-gErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint__887">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQnXcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQolkErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQolkkrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint__888">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQolkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQpzsErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQqawErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints__889">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQpzsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQqawUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQrB0UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode__890">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tQrB0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQro4ErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQsP8UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg__891">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQro4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQro4krDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQsP8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRYzgErDEem2BZRQc2M93A" name="Debug__StarupTransition" source="_Q5-S4AlKEea_md0mpENoqg" target="_tRT7AErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRYzgUrDEem2BZRQc2M93A" name="Debug__StarupTransition__906">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_TP2tsAlhEea_md0mpENoqg" name="startUp" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tRfhMErDEem2BZRQc2M93A" name="Debug__StarupTransition__S" guard="_tRhWYErDEem2BZRQc2M93A" source="_tRT7AErDEem2BZRQc2M93A" target="_tRVwMUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tRhWYErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tRgvUErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;StandBY&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRh9cErDEem2BZRQc2M93A" name="Debug__StarupTransition__S__908">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition__S&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tRjyoErDEem2BZRQc2M93A" name="Debug__StarupTransition__E" source="_tRYMcErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRkZsErDEem2BZRQc2M93A" name="Debug__StarupTransition__E__909">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tRmO4ErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRm18UrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange__911">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tRm18ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRndAErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRoEEUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint__912">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRoEEErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRorIErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRpSMUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint__913">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRpSMErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRrHYErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRrucErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints__914">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRrHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRsVgErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRs8kErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode__915">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tRsVgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRs8kUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRuKsUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg__916">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRtjoErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRtjoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRuKsErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSUnoUrDEem2BZRQc2M93A" name="Debug__reqFlowInit" source="_IjppsAlhEea_md0mpENoqg" target="_tSQ9QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSUnokrDEem2BZRQc2M93A" name="Debug__reqFlowInit__931">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit&quot;,(char *)&quot;Ready&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_JtvGgAnKEeaGqPUk-4V4qQ" name="RequestTimer" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSWc0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__S" guard="_tSXD4UrDEem2BZRQc2M93A" source="_tSQ9QErDEem2BZRQc2M93A" target="_tSSycUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tSXD4UrDEem2BZRQc2M93A" name="Debug__GuardreqFlowInit">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tSXD4ErDEem2BZRQc2M93A" name="Debug__GuardreqFlowInit">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Ready&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSYSAErDEem2BZRQc2M93A" name="Debug__reqFlowInit__S__933">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit__S&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tSauQErDEem2BZRQc2M93A" name="Debug__reqFlowInit__E" source="_tSUAkErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSauQUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__E__934">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tScjcErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSdKgErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange__936">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tScjcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSeYoErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSe_sUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint__937">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSe_sErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSfmwErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSgN0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint__938">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSfmwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tShb8ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSiqEErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints__939">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tShb8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSiqEUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSjRIUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode__940">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tSjRIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSj4MErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSlGUErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg__941">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSj4MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTHR0UrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer" source="_fO-gkAmtEea_md0mpENoqg" target="_tTDncErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTHR0krDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__958">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoResponseFromServer&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;Debug__Path__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_ZV1SwAo4EeaGqPUk-4V4qQ" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTJHAErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__S" guard="_tTJHAkrDEem2BZRQc2M93A" source="_tTDncErDEem2BZRQc2M93A" target="_tTFcoUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tTJHAkrDEem2BZRQc2M93A" name="Debug__GuardNoResponseFromServer">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tTJHAUrDEem2BZRQc2M93A" name="Debug__GuardNoResponseFromServer">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTKVIErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__S__960">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoResponseFromServer__S&quot;,(char *)&quot;Debug__Path__NoResponseFromServer&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tTLjQErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__E" source="_tTGqwErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTMKUErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__E__961">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoResponseFromServer__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tTNYcErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTNYckrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange__963">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tTNYcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTN_gErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTN_gkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint__964">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTN_gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTOmkErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTOmkkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint__965">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTOmkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTPNoErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTPNokrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints__966">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTPNoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTP0sErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTP0skrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode__967">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tTP0sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTQbwErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTRC0krDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg__968">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTQbwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tUApsErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_Oll1cAlKEea_md0mpENoqg" target="_tT_bkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tUApsUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuEkgEr4Eem5qeRdwCQ7KQ" name="2" source="_tSQ9QErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YNcFgEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuHAwEr4Eem5qeRdwCQ7KQ" name="3" source="_tQWRsErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YMFaoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuI18Er4Eem5qeRdwCQ7KQ" name="4" source="_tOHdEErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YPIHkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuNHYEr4Eem5qeRdwCQ7KQ" name="5" source="_tTDncErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YLoHoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuQKsEr4Eem5qeRdwCQ7KQ" name="6" source="_tRT7AErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YM8WQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuUcIEr4Eem5qeRdwCQ7KQ" name="7" source="_tNLo8ErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YN5YgEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuW4YEr4Eem5qeRdwCQ7KQ" name="8" source="_tPxp8ErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YOZHwEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuZ7sEr4Eem5qeRdwCQ7KQ" name="9" source="_tMY-wErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YMwwEEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WudmEEr4Eem5qeRdwCQ7KQ" name="10" source="_qr_J4AnCEeaGqPUk-4V4qQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YP0EEEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;checkConfig&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;checkConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WuhQcEr4Eem5qeRdwCQ7KQ" name="11" source="_tLzI4ErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YNJKkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_WukTwEr4Eem5qeRdwCQ7KQ" name="12" source="_tPJ-4ErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YMLhQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Wu9VUEr4Eem5qeRdwCQ7KQ" name="From__WaitingForReply__13" source="_fO-gkAmtEea_md0mpENoqg" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YNSUgEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_WvT6oEr4Eem5qeRdwCQ7KQ" name="PME_Trig14" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WvdroEr4Eem5qeRdwCQ7KQ" name="PME_Trig15" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_WvncoEr4Eem5qeRdwCQ7KQ" name="PME_Trig16" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WvtjQEr4Eem5qeRdwCQ7KQ" name="PME_Trig17" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Wv6-oEr4Eem5qeRdwCQ7KQ" name="PME_Trig18" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WwBFQEr4Eem5qeRdwCQ7KQ" name="PME_Trig19" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_WwMrcEr4Eem5qeRdwCQ7KQ" name="PME_Trig20" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WwRj8Er4Eem5qeRdwCQ7KQ" name="PME_Trig21" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_WwYRoEr4Eem5qeRdwCQ7KQ" name="PME_Trig22" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WwdxMEr4Eem5qeRdwCQ7KQ" name="PME_Trig23" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_WwlF8Er4Eem5qeRdwCQ7KQ" name="PME_Trig24" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_WwowUEr4Eem5qeRdwCQ7KQ" name="PME_Trig25" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_WwsasEr4Eem5qeRdwCQ7KQ" name="PME_Trig26" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_Wwx6QEr4Eem5qeRdwCQ7KQ" name="PME_Trig27" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Ww5PAEr4Eem5qeRdwCQ7KQ" name="PME_Trig28" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_Ww_VoEr4Eem5qeRdwCQ7KQ" name="PME_Trig29" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_WxGqYEr4Eem5qeRdwCQ7KQ" name="PME_Trig30" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WxOmMEr4Eem5qeRdwCQ7KQ" name="PME_Trig31" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_WxbagEr4Eem5qeRdwCQ7KQ" name="From__Debug__InitState__32" source="_tT_bkErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YQINIEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_WxnAsEr4Eem5qeRdwCQ7KQ" name="PME_Trig33" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WxvjkEr4Eem5qeRdwCQ7KQ" name="PME_Trig34" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Wx0cEEr4Eem5qeRdwCQ7KQ" name="PME_Trig35" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_Wx8-8Er4Eem5qeRdwCQ7KQ" name="PME_Trig36" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_WyE6wEr4Eem5qeRdwCQ7KQ" name="PME_Trig37" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WyLBYEr4Eem5qeRdwCQ7KQ" name="PME_Trig38" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_WyQg8Er4Eem5qeRdwCQ7KQ" name="PME_Trig39" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WyWAgEr4Eem5qeRdwCQ7KQ" name="PME_Trig40" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_Wya5AEr4Eem5qeRdwCQ7KQ" name="PME_Trig41" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WyiNwEr4Eem5qeRdwCQ7KQ" name="PME_Trig42" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_Wyo7cEr4Eem5qeRdwCQ7KQ" name="PME_Trig43" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_Wyr-wEr4Eem5qeRdwCQ7KQ" name="PME_Trig44" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_WyyscEr4Eem5qeRdwCQ7KQ" name="PME_Trig45" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_Wy6BMEr4Eem5qeRdwCQ7KQ" name="PME_Trig46" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WzBV8Er4Eem5qeRdwCQ7KQ" name="PME_Trig47" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_WzHckEr4Eem5qeRdwCQ7KQ" name="PME_Trig48" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_WzLuAEr4Eem5qeRdwCQ7KQ" name="PME_Trig49" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_WzSbsEr4Eem5qeRdwCQ7KQ" name="PME_Trig50" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_WzXUMEr4Eem5qeRdwCQ7KQ" name="PME_Trig51" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_Wzda0Er4Eem5qeRdwCQ7KQ" name="PME_Trig52" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_WzhsQEr4Eem5qeRdwCQ7KQ" name="PME_Trig53" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_WzpBAEr4Eem5qeRdwCQ7KQ" name="From__ProcessResponse__54" source="_uScfwAmtEea_md0mpENoqg" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YP8m8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_Wzw80Er4Eem5qeRdwCQ7KQ" name="PME_Trig55" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_Wz11UEr4Eem5qeRdwCQ7KQ" name="PME_Trig56" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Wz9xIEr4Eem5qeRdwCQ7KQ" name="PME_Trig57" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W0DQsEr4Eem5qeRdwCQ7KQ" name="PME_Trig58" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W0HiIEr4Eem5qeRdwCQ7KQ" name="PME_Trig59" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W0NBsEr4Eem5qeRdwCQ7KQ" name="PME_Trig60" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W0R6MEr4Eem5qeRdwCQ7KQ" name="PME_Trig61" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W0UWcEr4Eem5qeRdwCQ7KQ" name="PME_Trig62" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W0cSQEr4Eem5qeRdwCQ7KQ" name="PME_Trig63" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W0iY4Er4Eem5qeRdwCQ7KQ" name="PME_Trig64" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_W0qUsEr4Eem5qeRdwCQ7KQ" name="PME_Trig65" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W0vNMEr4Eem5qeRdwCQ7KQ" name="PME_Trig66" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_W04-MEr4Eem5qeRdwCQ7KQ" name="PME_Trig67" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W1A6AEr4Eem5qeRdwCQ7KQ" name="PME_Trig68" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W1FLcEr4Eem5qeRdwCQ7KQ" name="PME_Trig69" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W1L5IEr4Eem5qeRdwCQ7KQ" name="PME_Trig70" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W1PjgEr4Eem5qeRdwCQ7KQ" name="PME_Trig71" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_W1XfUEr4Eem5qeRdwCQ7KQ" name="PME_Trig72" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_W1c-4Er4Eem5qeRdwCQ7KQ" name="PME_Trig73" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W1kToEr4Eem5qeRdwCQ7KQ" name="PME_Trig74" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_W1qaQEr4Eem5qeRdwCQ7KQ" name="From__Ready__75" source="_IjppsAlhEea_md0mpENoqg" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YNE5IEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_W11ZYEr4Eem5qeRdwCQ7KQ" name="PME_Trig76" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W16R4Er4Eem5qeRdwCQ7KQ" name="PME_Trig77" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W2CNsEr4Eem5qeRdwCQ7KQ" name="PME_Trig78" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W2KwkEr4Eem5qeRdwCQ7KQ" name="PME_Trig79" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W2ReQEr4Eem5qeRdwCQ7KQ" name="PME_Trig80" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W2YL8Er4Eem5qeRdwCQ7KQ" name="PME_Trig81" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W2gu0Er4Eem5qeRdwCQ7KQ" name="PME_Trig82" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W2lnUEr4Eem5qeRdwCQ7KQ" name="PME_Trig83" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W2uKMEr4Eem5qeRdwCQ7KQ" name="PME_Trig84" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W2zCsEr4Eem5qeRdwCQ7KQ" name="PME_Trig85" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_W26-gEr4Eem5qeRdwCQ7KQ" name="PME_Trig86" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W28zsEr4Eem5qeRdwCQ7KQ" name="PME_Trig87" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_W3EIcEr4Eem5qeRdwCQ7KQ" name="PME_Trig88" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W3GksEr4Eem5qeRdwCQ7KQ" name="PME_Trig89" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W3KPEEr4Eem5qeRdwCQ7KQ" name="PME_Trig90" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W3QVsEr4Eem5qeRdwCQ7KQ" name="PME_Trig91" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W3UnIEr4Eem5qeRdwCQ7KQ" name="PME_Trig92" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_W3b74Er4Eem5qeRdwCQ7KQ" name="PME_Trig93" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_W3hbcEr4Eem5qeRdwCQ7KQ" name="PME_Trig94" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W3oJIEr4Eem5qeRdwCQ7KQ" name="PME_Trig95" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_W3uPwEr4Eem5qeRdwCQ7KQ" name="From__Retry__96" source="_KwFHIAo0EeaGqPUk-4V4qQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YOrboEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_W35O4Er4Eem5qeRdwCQ7KQ" name="PME_Trig97" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W385QEr4Eem5qeRdwCQ7KQ" name="PME_Trig98" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W4Dm8Er4Eem5qeRdwCQ7KQ" name="PME_Trig99" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W4H4YEr4Eem5qeRdwCQ7KQ" name="PME_Trig100" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W4N_AEr4Eem5qeRdwCQ7KQ" name="PME_Trig101" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W4RpYEr4Eem5qeRdwCQ7KQ" name="PME_Trig102" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W4XwAEr4Eem5qeRdwCQ7KQ" name="PME_Trig103" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W4baYEr4Eem5qeRdwCQ7KQ" name="PME_Trig104" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W4iIEEr4Eem5qeRdwCQ7KQ" name="PME_Trig105" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W4lLYEr4Eem5qeRdwCQ7KQ" name="PME_Trig106" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_W4rSAEr4Eem5qeRdwCQ7KQ" name="PME_Trig107" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W4tuQEr4Eem5qeRdwCQ7KQ" name="PME_Trig108" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_W41DAEr4Eem5qeRdwCQ7KQ" name="PME_Trig109" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W45UcEr4Eem5qeRdwCQ7KQ" name="PME_Trig110" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W47JoEr4Eem5qeRdwCQ7KQ" name="PME_Trig111" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W5ETkEr4Eem5qeRdwCQ7KQ" name="PME_Trig112" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W5KaMEr4Eem5qeRdwCQ7KQ" name="PME_Trig113" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_W5RH4Er4Eem5qeRdwCQ7KQ" name="PME_Trig114" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_W5UyQEr4Eem5qeRdwCQ7KQ" name="PME_Trig115" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W5ZDsEr4Eem5qeRdwCQ7KQ" name="PME_Trig116" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_W5fxYEr4Eem5qeRdwCQ7KQ" name="From__getMasterName__117" source="_aVMuMAmtEea_md0mpENoqg" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YL4mUEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_W5piYEr4Eem5qeRdwCQ7KQ" name="PME_Trig118" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W5yFQEr4Eem5qeRdwCQ7KQ" name="PME_Trig119" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W50hgEr4Eem5qeRdwCQ7KQ" name="PME_Trig120" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W59rcEr4Eem5qeRdwCQ7KQ" name="PME_Trig121" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W6BV0Er4Eem5qeRdwCQ7KQ" name="PME_Trig122" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W6HccEr4Eem5qeRdwCQ7KQ" name="PME_Trig123" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W6M8AEr4Eem5qeRdwCQ7KQ" name="PME_Trig124" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W6R0gEr4Eem5qeRdwCQ7KQ" name="PME_Trig125" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W6WF8Er4Eem5qeRdwCQ7KQ" name="PME_Trig126" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W6eo0Er4Eem5qeRdwCQ7KQ" name="PME_Trig127" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_W6i6QEr4Eem5qeRdwCQ7KQ" name="PME_Trig128" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W6pA4Er4Eem5qeRdwCQ7KQ" name="PME_Trig129" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_W6wVoEr4Eem5qeRdwCQ7KQ" name="PME_Trig130" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W60AAEr4Eem5qeRdwCQ7KQ" name="PME_Trig131" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W69J8Er4Eem5qeRdwCQ7KQ" name="PME_Trig132" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W7D3oEr4Eem5qeRdwCQ7KQ" name="PME_Trig133" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W7J-QEr4Eem5qeRdwCQ7KQ" name="PME_Trig134" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_W7O2wEr4Eem5qeRdwCQ7KQ" name="PME_Trig135" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_W7UWUEr4Eem5qeRdwCQ7KQ" name="PME_Trig136" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W7ac8Er4Eem5qeRdwCQ7KQ" name="PME_Trig137" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_W7hxsEr4Eem5qeRdwCQ7KQ" name="From__StandBY__138" source="_Q5-S4AlKEea_md0mpENoqg" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YMnmIEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_W7tX4Er4Eem5qeRdwCQ7KQ" name="PME_Trig139" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W7xpUEr4Eem5qeRdwCQ7KQ" name="PME_Trig140" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W74XAEr4Eem5qeRdwCQ7KQ" name="PME_Trig141" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W792kEr4Eem5qeRdwCQ7KQ" name="PME_Trig142" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W8IOoEr4Eem5qeRdwCQ7KQ" name="PME_Trig143" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W8MgEEr4Eem5qeRdwCQ7KQ" name="PME_Trig144" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W8VC8Er4Eem5qeRdwCQ7KQ" name="PME_Trig145" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W8YtUEr4Eem5qeRdwCQ7KQ" name="PME_Trig146" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W8gCEEr4Eem5qeRdwCQ7KQ" name="PME_Trig147" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W8jFYEr4Eem5qeRdwCQ7KQ" name="PME_Trig148" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W8lhoEr4Eem5qeRdwCQ7KQ" name="PME_Trig149" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_W8rBMEr4Eem5qeRdwCQ7KQ" name="PME_Trig150" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W8vSoEr4Eem5qeRdwCQ7KQ" name="PME_Trig151" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_W8zkEEr4Eem5qeRdwCQ7KQ" name="PME_Trig152" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_W82AUEr4Eem5qeRdwCQ7KQ" name="PME_Trig153" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_W87f4Er4Eem5qeRdwCQ7KQ" name="PME_Trig154" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_W89VEEr4Eem5qeRdwCQ7KQ" name="PME_Trig155" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_W8_KQEr4Eem5qeRdwCQ7KQ" name="PME_Trig156" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_W9C0oEr4Eem5qeRdwCQ7KQ" name="PME_Trig157" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_W9HtIEr4Eem5qeRdwCQ7KQ" name="PME_Trig158" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_W9SsQEr4Eem5qeRdwCQ7KQ" name="To__WaitingForReply__159" guard="_YQR-IUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_fO-gkAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_YQR-IUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1120">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQR-IEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1120">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__WaitingForReply__159&quot;,&quot;WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W9T6YEr4Eem5qeRdwCQ7KQ" name="To__Debug__InitState__160" guard="_YQMekUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_tT_bkErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_YQMekUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1117">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQMekEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1117">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__160&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W9WWoEr4Eem5qeRdwCQ7KQ" name="To__ProcessResponse__161" guard="_YQc9QUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_uScfwAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_YQc9QUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1127">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQc9QEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1127">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ProcessResponse__161&quot;,&quot;ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W9XkwEr4Eem5qeRdwCQ7KQ" name="To__Ready__162" guard="_YQRXEUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_IjppsAlhEea_md0mpENoqg">
              <ownedRule xmi:id="_YQRXEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1119">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQRXEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1119">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Ready__162&quot;,&quot;Ready&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W9dEUEr4Eem5qeRdwCQ7KQ" name="To__Retry__163" guard="_YQOTwEr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <ownedRule xmi:id="_YQOTwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1118">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQNssEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1118">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Retry__163&quot;,&quot;Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W9gusEr4Eem5qeRdwCQ7KQ" name="To__getMasterName__164" guard="_YQdkUUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_aVMuMAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_YQdkUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1128">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQdkUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1128">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__getMasterName__164&quot;,&quot;getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W9kZEEr4Eem5qeRdwCQ7KQ" name="To__StandBY__165" guard="_YQKpYUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_Q5-S4AlKEea_md0mpENoqg">
              <ownedRule xmi:id="_YQKpYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1115">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQKpYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1115">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBY__165&quot;,&quot;StandBY&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W9x0cEr4Eem5qeRdwCQ7KQ" name="Trans__ex166" source="_tMbbAUrDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YQBfcEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_W92F4Er4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__Retry__168" guard="_YQTMQUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_W9ybgEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQTMQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1122">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQTMQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1122">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Retry__168&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_W98MgEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__Retry__170" source="_W96-YEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YLgy4Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XHkCkEr4Eem5qeRdwCQ7KQ" name="Trans__ex270" source="_tRYMcErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YMfDQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XHns8Er4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__StarupTransition__272" guard="_YQeycUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_XHme0Er4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQeycUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1130">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQeycEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1130">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StarupTransition__272&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_XHr-YUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__StarupTransition__274" source="_XHo7EEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YOhqoEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XT5OYEr4Eem5qeRdwCQ7KQ" name="Trans__ex374" source="_tP1UUUrDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YOz-gEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XUAjIUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__inittrans__376" guard="_YQSlMUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_XT7qoEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQSlMUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1121">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQSlMEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1121">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__inittrans__376&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_XUCYUEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__inittrans__378" source="_XUBKMEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YMtFsEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Xjhl0Er4Eem5qeRdwCQ7KQ" name="Trans__ex455" source="_tTGqwErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YPWKAEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XjphoEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__NoResponseFromServer__457" guard="_YQcWMUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_XjnFYEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQcWMUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1126">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQcWMEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1126">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Xjw2YUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__NoResponseFromServer__459" source="_XjtMAEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YLxRkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XsjmAEr4Eem5qeRdwCQ7KQ" name="Trans__ex559" source="_tQYt8ErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YMSO8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XsqTsUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ReqFlowDone__561" guard="_YQLQcUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_XsoegEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQLQcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1116">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQLQcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1116">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_XssI4Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ReqFlowDone__563" source="_Xsq6wEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YOPWwEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_XyZvUEr4Eem5qeRdwCQ7KQ" name="Trans__ex663" source="_tL1lIUrDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YO5eEEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Xya9cUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__NoMaster__665" guard="_YQZ58Ur4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_XyaWYEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQZ58Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1124">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQZ58Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1124">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoMaster__665&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Xyen0Er4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__NoMaster__667" source="_XybkgEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YPAy0Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_X2Sw0Er4Eem5qeRdwCQ7KQ" name="Trans__ex744" source="_tPMbIErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YNlPcEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_X2WbMUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__getMasterName__checkConfig__9__746" guard="_YQKCUUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_X2UmAEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQKCUUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1114">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQKCUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1114">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_X2YQYEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__getMasterName__checkConfig__9__748" source="_X2XpUEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YPfT8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_X8h7sEr4Eem5qeRdwCQ7KQ" name="Trans__ex825" source="_tOc0QUrDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YOE-sEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_X8jw4Ur4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__reqService__827" guard="_YQeLYUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_X8jJ0Er4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQeLYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1129">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQeLYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1129">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqService__827&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_X8lmEUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__reqService__829" source="_X8k_AEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YNvAcEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YCCt0Er4Eem5qeRdwCQ7KQ" name="Trans__ex906" source="_tSUAkErDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YPNAEEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YCHmUEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__reqFlowInit__908" guard="_YQbvIUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_YCEjAEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQbvIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1125">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQbvIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1125">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YCKCkEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__reqFlowInit__910" source="_YCI0cEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YLXB4Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YHZH4Er4Eem5qeRdwCQ7KQ" name="Trans__ex1010" source="_tNOsQUrDEem2BZRQc2M93A" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YPsIQEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_YHZu8Ur4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__ServiceResult__1012" guard="_YQVogUr4Eem5qeRdwCQ7KQ" source="_Wqx_8Er4Eem5qeRdwCQ7KQ" target="_YHZH4Ur4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_YQVogUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1123">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQVogEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1123">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_YHcyQEr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__ServiceResult__1014" source="_YHaWAEr4Eem5qeRdwCQ7KQ" target="_Wqx_8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YPn20Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__165&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__561&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__160&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__163&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__168&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1012&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__457&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__827&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__272&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Oll1cAlKEea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_Q5-S4AlKEea_md0mpENoqg" name="StandBY">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYErDEem2BZRQc2M93A" name="StandBY__984">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYUrDEem2BZRQc2M93A" name="StandBY__985">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_IjppsAlhEea_md0mpENoqg" name="Ready">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_fmLpMAm5Eea_md0mpENoqg" name="ReadyEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Ready&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU7PsErDEem2BZRQc2M93A" name="Ready__986">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_aVMuMAmtEea_md0mpENoqg" name="getMasterName">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_nvRWkAnBEea_md0mpENoqg" name="GetMasterNameEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;getMasterName&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU2XMErDEem2BZRQc2M93A" name="getMasterName__983">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_fO-gkAmtEea_md0mpENoqg" name="WaitingForReply">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_SJEfMAo6EeaGqPUk-4V4qQ" name="WaitForReply">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_r05c0Ao9EeaGqPUk-4V4qQ" name="CancellTimer">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_uScfwAmtEea_md0mpENoqg" name="ProcessResponse">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_u-x1UAoxEeaGqPUk-4V4qQ" name="ProcessMessage">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; : Processing Response .....\n&quot;;
    //int r=rand()%10;
    
    Timer.informIn(UMLRTTimespec(0,500),4);
    //messageID=messageID+1; 
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageProcessed,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tUvpgErDEem2BZRQc2M93A" name="ProcessResponse__981">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_qr_J4AnCEeaGqPUk-4V4qQ" name="checkConfig" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_KwFHIAo0EeaGqPUk-4V4qQ" name="Retry">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_1CJTsAo2EeaGqPUk-4V4qQ" name="RetryConfig">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Retry&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    int r=rand()%5;
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The master is not available, retry in &quot;&lt;&lt;r&lt;&lt; &quot; second\n&quot;;
    Timer.informIn(UMLRTTimespec(r,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tUyFwErDEem2BZRQc2M93A" name="Retry__982">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tLzI4ErDEem2BZRQc2M93A" name="Debug__Path__NoMaster" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tLzv8UrDEem2BZRQc2M93A" name="Debug__C__NoMaster">
              <connectionPoint xmi:id="_tL0-EUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tL1lIUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_XyaWYEr4Eem5qeRdwCQ7KQ" name="From__Parent__664" kind="entryPoint"/>
              <connectionPoint xmi:id="_XybkgEr4Eem5qeRdwCQ7KQ" name="To__Parent__666" kind="exitPoint"/>
              <region xmi:id="_tLzv8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMJHIErDEem2BZRQc2M93A" name="Debug__init__trans__NoMaster" source="_tL0-EUrDEem2BZRQc2M93A" target="_tMFcwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMS4IErDEem2BZRQc2M93A" name="Debug__init__trans__NoMaster__753">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__init__trans__NoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tMJHIUrDEem2BZRQc2M93A" name="Debug__Ac__NoMaster" source="_tMFcwUrDEem2BZRQc2M93A" target="_tMGq4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMUGQErDEem2BZRQc2M93A" name="Debug__Ac__NoMaster__755">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__Ac__NoMaster&quot;,(char *)&quot;Debug__B__Ac__NoMaster&quot;,(char *)&quot;Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMJHIkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMJuMErDEem2BZRQc2M93A" name="Debug__En__Retry" source="_tMGq4ErDEem2BZRQc2M93A" target="_tMH5AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMJuMkrDEem2BZRQc2M93A" name="RetryConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    int r=rand()%5;
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The master is not available, retry in &quot;&lt;&lt;r&lt;&lt; &quot; second\n&quot;;
    Timer.informIn(UMLRTTimespec(r,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__En__Retry&quot;,(char *)&quot;Debug__A__Ac__NoMaster&quot;,(char *)&quot;Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMJuMUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMKVQErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster" source="_tMH5AErDEem2BZRQc2M93A" target="_tL1lIUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMWigErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster__758">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__end__trans__NoMaster&quot;,(char *)&quot;Debug__A__En__NoMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMKVQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XymjoEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__669670" source="_XykHYEr4Eem5qeRdwCQ7KQ" target="_Xyi5QEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X2EHUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__669&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__669&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__669&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__669&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__736&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__669&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XynxwEr4Eem5qeRdwCQ7KQ" name="Trans__ex671" source="_tL1lIUrDEem2BZRQc2M93A" target="_Xyi5QEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X2CSIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__736&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XyyJ0Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__NoMaster__672" source="_tMH5AErDEem2BZRQc2M93A" target="_Xyi5QEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X2NRQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__736&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Xy2bQEr4Eem5qeRdwCQ7KQ" name="PME_Trig673" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xy4QcEr4Eem5qeRdwCQ7KQ" name="PME_Trig674" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xy6FoEr4Eem5qeRdwCQ7KQ" name="PME_Trig675" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xy_lMEr4Eem5qeRdwCQ7KQ" name="PME_Trig676" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XzCBcEr4Eem5qeRdwCQ7KQ" name="PME_Trig677" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XzD2oEr4Eem5qeRdwCQ7KQ" name="PME_Trig678" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XzGS4Er4Eem5qeRdwCQ7KQ" name="PME_Trig679" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XzLycEr4Eem5qeRdwCQ7KQ" name="PME_Trig680" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XzNnoEr4Eem5qeRdwCQ7KQ" name="PME_Trig681" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XzRSAEr4Eem5qeRdwCQ7KQ" name="PME_Trig682" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XzU8YEr4Eem5qeRdwCQ7KQ" name="PME_Trig683" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XzWKgEr4Eem5qeRdwCQ7KQ" name="PME_Trig684" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XzXYoEr4Eem5qeRdwCQ7KQ" name="PME_Trig685" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XzYmwEr4Eem5qeRdwCQ7KQ" name="PME_Trig686" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XzcRIEr4Eem5qeRdwCQ7KQ" name="PME_Trig687" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xzf7gEr4Eem5qeRdwCQ7KQ" name="PME_Trig688" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XzhJoEr4Eem5qeRdwCQ7KQ" name="PME_Trig689" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XziXwEr4Eem5qeRdwCQ7KQ" name="PME_Trig690" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XzlbEEr4Eem5qeRdwCQ7KQ" name="PME_Trig691" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xzq6oEr4Eem5qeRdwCQ7KQ" name="PME_Trig692" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_Xzt98Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__NoMaster__693" source="_tMFcwUrDEem2BZRQc2M93A" target="_Xyi5QEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X2MDIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__736&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XzvzIEr4Eem5qeRdwCQ7KQ" name="PME_Trig694" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xzy2cEr4Eem5qeRdwCQ7KQ" name="PME_Trig695" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xz0EkEr4Eem5qeRdwCQ7KQ" name="PME_Trig696" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xz1SsEr4Eem5qeRdwCQ7KQ" name="PME_Trig697" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xz3H4Er4Eem5qeRdwCQ7KQ" name="PME_Trig698" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xz7ZUEr4Eem5qeRdwCQ7KQ" name="PME_Trig699" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xz_qwEr4Eem5qeRdwCQ7KQ" name="PME_Trig700" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X0FxYEr4Eem5qeRdwCQ7KQ" name="PME_Trig701" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X0KC0Er4Eem5qeRdwCQ7KQ" name="PME_Trig702" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X0PiYEr4Eem5qeRdwCQ7KQ" name="PME_Trig703" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X0TMwEr4Eem5qeRdwCQ7KQ" name="PME_Trig704" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_X0Tz0Er4Eem5qeRdwCQ7KQ" name="PME_Trig705" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X0XeMEr4Eem5qeRdwCQ7KQ" name="PME_Trig706" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_X0c9wEr4Eem5qeRdwCQ7KQ" name="PME_Trig707" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X0eL4Er4Eem5qeRdwCQ7KQ" name="PME_Trig708" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X0gBEEr4Eem5qeRdwCQ7KQ" name="PME_Trig709" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X0nV0Er4Eem5qeRdwCQ7KQ" name="PME_Trig710" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X0pLAEr4Eem5qeRdwCQ7KQ" name="PME_Trig711" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_X0uDgEr4Eem5qeRdwCQ7KQ" name="PME_Trig712" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X0xG0Er4Eem5qeRdwCQ7KQ" name="PME_Trig713" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X0yU8Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__NoMaster__714" source="_tMGq4ErDEem2BZRQc2M93A" target="_Xyi5QEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X17kcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__736&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_X0zjEEr4Eem5qeRdwCQ7KQ" name="PME_Trig715" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X01_UEr4Eem5qeRdwCQ7KQ" name="PME_Trig716" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X07e4Er4Eem5qeRdwCQ7KQ" name="PME_Trig717" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X08tAEr4Eem5qeRdwCQ7KQ" name="PME_Trig718" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X0_JQEr4Eem5qeRdwCQ7KQ" name="PME_Trig719" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X1GeAEr4Eem5qeRdwCQ7KQ" name="PME_Trig720" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X1ITMEr4Eem5qeRdwCQ7KQ" name="PME_Trig721" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X1PA4Er4Eem5qeRdwCQ7KQ" name="PME_Trig722" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X1QPAEr4Eem5qeRdwCQ7KQ" name="PME_Trig723" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X1RdIEr4Eem5qeRdwCQ7KQ" name="PME_Trig724" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X1TSUEr4Eem5qeRdwCQ7KQ" name="PME_Trig725" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_X1anEEr4Eem5qeRdwCQ7KQ" name="PME_Trig726" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X1b1MEr4Eem5qeRdwCQ7KQ" name="PME_Trig727" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_X1ffkEr4Eem5qeRdwCQ7KQ" name="PME_Trig728" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X1mNQEr4Eem5qeRdwCQ7KQ" name="PME_Trig729" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X1sT4Er4Eem5qeRdwCQ7KQ" name="PME_Trig730" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X1uJEEr4Eem5qeRdwCQ7KQ" name="PME_Trig731" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X1vXMEr4Eem5qeRdwCQ7KQ" name="PME_Trig732" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_X1wlUEr4Eem5qeRdwCQ7KQ" name="PME_Trig733" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X11d0Er4Eem5qeRdwCQ7KQ" name="PME_Trig734" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X14hIEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__NoMaster__735" guard="_X2N4UUr4Eem5qeRdwCQ7KQ" source="_Xyi5QEr4Eem5qeRdwCQ7KQ" target="_tMH5AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_X2N4UUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion741">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2N4UEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion741">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__NoMaster__735&quot;,&quot;Debug__A__En__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_X14hIUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__NoMaster__736" guard="_X2PGcUr4Eem5qeRdwCQ7KQ" source="_Xyi5QEr4Eem5qeRdwCQ7KQ" target="_tMFcwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_X2PGcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion743">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2PGcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion743">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoMaster__736&quot;,&quot;Debug__B__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_X15IMEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__NoMaster__737" guard="_X2NRQkr4Eem5qeRdwCQ7KQ" source="_Xyi5QEr4Eem5qeRdwCQ7KQ" target="_tMGq4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_X2NRQkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion740">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2NRQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion740">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoMaster__737&quot;,&quot;Debug__A__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_X15vQEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__738" source="_XyaWYEr4Eem5qeRdwCQ7KQ" target="_Xyi5QEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X2HKoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__736&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_X16WUEr4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__739" guard="_X2OfYUr4Eem5qeRdwCQ7KQ" source="_Xyi5QEr4Eem5qeRdwCQ7KQ" target="_XybkgEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_X2OfYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion742">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2OfYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion742">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__739&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMFcwUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMFcwkrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMLjYUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster__749">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMGq4ErDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMGq4UrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMN_oUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster__750">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMH5AErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMIgEErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMRC8UrDEem2BZRQc2M93A" name="Debug__A__En__NoMaster__751">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Xyi5QEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__668" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_XykHYEr4Eem5qeRdwCQ7KQ" name="Init__State__669"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tMY-wErDEem2BZRQc2M93A" name="Debug__Path__Retry" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tMaM4ErDEem2BZRQc2M93A" name="Debug__C__Retry">
              <connectionPoint xmi:id="_tMaz8UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tMbbAUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_W9ybgEr4Eem5qeRdwCQ7KQ" name="From__Parent__167" kind="entryPoint"/>
              <connectionPoint xmi:id="_W96-YEr4Eem5qeRdwCQ7KQ" name="To__Parent__169" kind="exitPoint"/>
              <region xmi:id="_tMaM4UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMyAUErDEem2BZRQc2M93A" name="Debug__init__trans__Retry" source="_tMaz8UrDEem2BZRQc2M93A" target="_tMtH0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNACwErDEem2BZRQc2M93A" name="Debug__init__trans__Retry__778">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__init__trans__Retry&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tMyAUUrDEem2BZRQc2M93A" name="Debug__Ex__Retry" source="_tMtH0ErDEem2BZRQc2M93A" target="_tMuV8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNB38ErDEem2BZRQc2M93A" name="Debug__Ex__Retry__780">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__Ex__Retry&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMyAUkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMyAU0rDEem2BZRQc2M93A" name="Debug__AC__Retry" source="_tMuV8ErDEem2BZRQc2M93A" target="_tMwLIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNEUMErDEem2BZRQc2M93A" name="Debug__AC__Retry__782">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__AC__Retry&quot;,(char *)&quot;Debug__B__Ac__Retry&quot;,(char *)&quot;Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMynYErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMynYUrDEem2BZRQc2M93A" name="Debug__En__getMasterName" source="_tMwLIErDEem2BZRQc2M93A" target="_tMxZQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMzOcErDEem2BZRQc2M93A" name="GetMasterNameEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__En__getMasterName&quot;,(char *)&quot;Debug__A__Ac__Retry&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMynYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMzOcUrDEem2BZRQc2M93A" name="Debug__end__trans__Retry" source="_tMxZQErDEem2BZRQc2M93A" target="_tMbbAUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNH-kErDEem2BZRQc2M93A" name="Debug__end__trans__Retry__785">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__end__trans__Retry&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMzOckrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_W-Q8oEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__172173" source="_W-FWcEr4Eem5qeRdwCQ7KQ" target="_W99aoEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XG-MsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__172&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__262&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__172&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__261&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__172&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__172&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__260&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__172&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__172&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_W-RjsEr4Eem5qeRdwCQ7KQ" name="Trans__ex174" source="_tMbbAUrDEem2BZRQc2M93A" target="_W99aoEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XHLoEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__262&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__261&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__260&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_W-keoEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__Retry__175" source="_tMuV8ErDEem2BZRQc2M93A" target="_W99aoEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XHTj4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__262&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__261&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__260&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_W-owEEr4Eem5qeRdwCQ7KQ" name="PME_Trig176" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_W-x6AEr4Eem5qeRdwCQ7KQ" name="PME_Trig177" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_W-510Er4Eem5qeRdwCQ7KQ" name="PME_Trig178" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_W_CYsEr4Eem5qeRdwCQ7KQ" name="PME_Trig179" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_W_HRMEr4Eem5qeRdwCQ7KQ" name="PME_Trig180" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_W_N-4Er4Eem5qeRdwCQ7KQ" name="PME_Trig181" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_W_WhwEr4Eem5qeRdwCQ7KQ" name="PME_Trig182" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_W_baQEr4Eem5qeRdwCQ7KQ" name="PME_Trig183" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_W_hg4Er4Eem5qeRdwCQ7KQ" name="PME_Trig184" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_W_lLQEr4Eem5qeRdwCQ7KQ" name="PME_Trig185" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_W_sgAEr4Eem5qeRdwCQ7KQ" name="PME_Trig186" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_W_wxcEr4Eem5qeRdwCQ7KQ" name="PME_Trig187" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_W_4GMEr4Eem5qeRdwCQ7KQ" name="PME_Trig188" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_W__a8Er4Eem5qeRdwCQ7KQ" name="PME_Trig189" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XAB3MEr4Eem5qeRdwCQ7KQ" name="PME_Trig190" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XAJL8Er4Eem5qeRdwCQ7KQ" name="PME_Trig191" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XANdYEr4Eem5qeRdwCQ7KQ" name="PME_Trig192" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XAQgsEr4Eem5qeRdwCQ7KQ" name="PME_Trig193" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XAZDkEr4Eem5qeRdwCQ7KQ" name="PME_Trig194" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XAfKMEr4Eem5qeRdwCQ7KQ" name="PME_Trig195" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XAkCsEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__Retry__196" source="_tMwLIErDEem2BZRQc2M93A" target="_W99aoEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XGjV8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__262&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__261&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__260&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XApiQEr4Eem5qeRdwCQ7KQ" name="PME_Trig197" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XAvB0Er4Eem5qeRdwCQ7KQ" name="PME_Trig198" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XA1IcEr4Eem5qeRdwCQ7KQ" name="PME_Trig199" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XA8dMEr4Eem5qeRdwCQ7KQ" name="PME_Trig200" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XBAHkEr4Eem5qeRdwCQ7KQ" name="PME_Trig201" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XBHcUEr4Eem5qeRdwCQ7KQ" name="PME_Trig202" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XBLGsEr4Eem5qeRdwCQ7KQ" name="PME_Trig203" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XBX7AEr4Eem5qeRdwCQ7KQ" name="PME_Trig204" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XBjhMEr4Eem5qeRdwCQ7KQ" name="PME_Trig205" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XBpAwEr4Eem5qeRdwCQ7KQ" name="PME_Trig206" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XBvucEr4Eem5qeRdwCQ7KQ" name="PME_Trig207" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XByxwEr4Eem5qeRdwCQ7KQ" name="PME_Trig208" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XB5fcEr4Eem5qeRdwCQ7KQ" name="PME_Trig209" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XB9J0Er4Eem5qeRdwCQ7KQ" name="PME_Trig210" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XCCpYEr4Eem5qeRdwCQ7KQ" name="PME_Trig211" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XCFssEr4Eem5qeRdwCQ7KQ" name="PME_Trig212" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XCOPkEr4Eem5qeRdwCQ7KQ" name="PME_Trig213" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XCR58Er4Eem5qeRdwCQ7KQ" name="PME_Trig214" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XCYnoEr4Eem5qeRdwCQ7KQ" name="PME_Trig215" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XCbq8Er4Eem5qeRdwCQ7KQ" name="PME_Trig216" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XCjmwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__getMasterName__217" source="_tMxZQErDEem2BZRQc2M93A" target="_W99aoEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XHDsQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__262&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__261&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__260&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XCptYEr4Eem5qeRdwCQ7KQ" name="PME_Trig218" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XCtXwEr4Eem5qeRdwCQ7KQ" name="PME_Trig219" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XC1TkEr4Eem5qeRdwCQ7KQ" name="PME_Trig220" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XC498Er4Eem5qeRdwCQ7KQ" name="PME_Trig221" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XDBg0Er4Eem5qeRdwCQ7KQ" name="PME_Trig222" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XDEkIEr4Eem5qeRdwCQ7KQ" name="PME_Trig223" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XDMf8Er4Eem5qeRdwCQ7KQ" name="PME_Trig224" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XDVp4Er4Eem5qeRdwCQ7KQ" name="PME_Trig225" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XDYtMEr4Eem5qeRdwCQ7KQ" name="PME_Trig226" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XDfa4Er4Eem5qeRdwCQ7KQ" name="PME_Trig227" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XDieMEr4Eem5qeRdwCQ7KQ" name="PME_Trig228" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XDok0Er4Eem5qeRdwCQ7KQ" name="PME_Trig229" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XDroIEr4Eem5qeRdwCQ7KQ" name="PME_Trig230" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XDv5kEr4Eem5qeRdwCQ7KQ" name="PME_Trig231" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XD31YEr4Eem5qeRdwCQ7KQ" name="PME_Trig232" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XD-jEEr4Eem5qeRdwCQ7KQ" name="PME_Trig233" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XEDbkEr4Eem5qeRdwCQ7KQ" name="PME_Trig234" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XEI7IEr4Eem5qeRdwCQ7KQ" name="PME_Trig235" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XEQ28Er4Eem5qeRdwCQ7KQ" name="PME_Trig236" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XEVvcEr4Eem5qeRdwCQ7KQ" name="PME_Trig237" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XEdEMEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Retry__238" source="_tMtH0ErDEem2BZRQc2M93A" target="_W99aoEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XGr40Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__262&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__261&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__260&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XEgukEr4Eem5qeRdwCQ7KQ" name="PME_Trig239" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XEmOIEr4Eem5qeRdwCQ7KQ" name="PME_Trig240" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XErGoEr4Eem5qeRdwCQ7KQ" name="PME_Trig241" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XExNQEr4Eem5qeRdwCQ7KQ" name="PME_Trig242" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XE03oEr4Eem5qeRdwCQ7KQ" name="PME_Trig243" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XE6-QEr4Eem5qeRdwCQ7KQ" name="PME_Trig244" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XE_2wEr4Eem5qeRdwCQ7KQ" name="PME_Trig245" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XFGkcEr4Eem5qeRdwCQ7KQ" name="PME_Trig246" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XFNSIEr4Eem5qeRdwCQ7KQ" name="PME_Trig247" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XFQ8gEr4Eem5qeRdwCQ7KQ" name="PME_Trig248" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XFYRQEr4Eem5qeRdwCQ7KQ" name="PME_Trig249" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XFatgEr4Eem5qeRdwCQ7KQ" name="PME_Trig250" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XFg0IEr4Eem5qeRdwCQ7KQ" name="PME_Trig251" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XFlsoEr4Eem5qeRdwCQ7KQ" name="PME_Trig252" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XFsaUEr4Eem5qeRdwCQ7KQ" name="PME_Trig253" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XFu2kEr4Eem5qeRdwCQ7KQ" name="PME_Trig254" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XF2yYEr4Eem5qeRdwCQ7KQ" name="PME_Trig255" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XF5OoEr4Eem5qeRdwCQ7KQ" name="PME_Trig256" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XGC_oEr4Eem5qeRdwCQ7KQ" name="PME_Trig257" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XGHREEr4Eem5qeRdwCQ7KQ" name="PME_Trig258" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XGNXsEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__Retry__259" guard="_XHejAUr4Eem5qeRdwCQ7KQ" source="_W99aoEr4Eem5qeRdwCQ7KQ" target="_tMuV8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XHejAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion269">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XHejAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion269">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Retry__259&quot;,&quot;Debug__B__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XGN-wEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__Retry__260" guard="_XHdU4Ur4Eem5qeRdwCQ7KQ" source="_W99aoEr4Eem5qeRdwCQ7KQ" target="_tMwLIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XHdU4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion268">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XHdU4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion268">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Retry__260&quot;,&quot;Debug__A__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XGPz8Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__getMasterName__261" guard="_XHX1UUr4Eem5qeRdwCQ7KQ" source="_W99aoEr4Eem5qeRdwCQ7KQ" target="_tMxZQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XHX1UUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion266">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XHX1UEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion266">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__261&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XGQbAEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Retry__262" guard="_XHUyAUr4Eem5qeRdwCQ7KQ" source="_W99aoEr4Eem5qeRdwCQ7KQ" target="_tMtH0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XHUyAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion265">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XHUyAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion265">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Retry__262&quot;,&quot;Debug__B__Ex__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XGYW0Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__263" source="_W9ybgEr4Eem5qeRdwCQ7KQ" target="_W99aoEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XG0bsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__262&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__261&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__260&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XGY94Er4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__264" guard="_XHct0Ur4Eem5qeRdwCQ7KQ" source="_W99aoEr4Eem5qeRdwCQ7KQ" target="_W96-YEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_XHct0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion267">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XHct0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion267">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__264&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMtH0ErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMtH0UrDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM1DoErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry__773">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMuV8ErDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMuV8UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM3f4UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry__774">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMwLIErDEem2BZRQc2M93A" name="Debug__A__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMwLIUrDEem2BZRQc2M93A" name="Debug__A__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM58IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Retry__775">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMxZQErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMxZQUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM7xUErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__776">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_W99aoEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__171" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_W-FWcEr4Eem5qeRdwCQ7KQ" name="Init__State__172"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tNLo8ErDEem2BZRQc2M93A" name="Debug__Path__ServiceResult" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tNMQAUrDEem2BZRQc2M93A" name="Debug__C__ServiceResult">
              <connectionPoint xmi:id="_tNOFMErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tNOsQUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_YHZH4Ur4Eem5qeRdwCQ7KQ" name="From__Parent__1011" kind="entryPoint"/>
              <connectionPoint xmi:id="_YHaWAEr4Eem5qeRdwCQ7KQ" name="To__Parent__1013" kind="exitPoint"/>
              <region xmi:id="_tNMQAkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tNnt0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult" source="_tNOFMErDEem2BZRQc2M93A" target="_tNiOQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tN6BsErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult__805">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__init__trans__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tNnt0UrDEem2BZRQc2M93A" name="Debug__Ex__WaitingForReply" source="_tNiOQUrDEem2BZRQc2M93A" target="_tNjcYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNoU4ErDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNnt0krDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tNo78ErDEem2BZRQc2M93A" name="Debug__AC__ServiceResult" source="_tNjcYErDEem2BZRQc2M93A" target="_tNkqgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNpjAErDEem2BZRQc2M93A" name="getResponse" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: got reponse from server, go to process response state\n&quot;;
    int j=0;
    for (int i=0;i&lt;=100000;i++)
	j=j+1;
    std::cout&lt;&lt;j;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__AC__ServiceResult&quot;,(char *)&quot;Debug__B__Ac__ServiceResult&quot;,(char *)&quot;Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNo78UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tNqKEErDEem2BZRQc2M93A" name="Debug__En__ProcessResponse" source="_tNkqgErDEem2BZRQc2M93A" target="_tNmfsErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNqxIErDEem2BZRQc2M93A" name="ProcessMessage" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; : Processing Response .....\n&quot;;
    //int r=rand()%10;
    
    Timer.informIn(UMLRTTimespec(0,500),4);
    //messageID=messageID+1; 
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageProcessed,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__En__ProcessResponse&quot;,(char *)&quot;Debug__A__Ac__ServiceResult&quot;,(char *)&quot;Debug__A__En__ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNqKEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tNr_QErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceResult" source="_tNmfsErDEem2BZRQc2M93A" target="_tNOsQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOBWcErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceResult__810">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__end__trans__ServiceResult&quot;,(char *)&quot;Debug__A__En__ProcessResponse&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNr_QUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YHiR0Er4Eem5qeRdwCQ7KQ" name="Trans__ex1017" source="_tNOsQUrDEem2BZRQc2M93A" target="_YHeAYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YLEG8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1108&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__1106&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YHi44Er4Eem5qeRdwCQ7KQ" name="Trans__Init__State__10161018" source="_YHhDsEr4Eem5qeRdwCQ7KQ" target="_YHeAYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YK35sEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1016&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1108&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1016&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1016&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__1106&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1016&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1016&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1016&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YHlVIEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ServiceResult__1019" source="_tNjcYErDEem2BZRQc2M93A" target="_YHeAYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YK-AUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1108&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__1106&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YHo_gEr4Eem5qeRdwCQ7KQ" name="PME_Trig1020" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YHrbwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1021" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YHsp4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1022" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YHt4AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1023" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YHvGIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1024" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YHz-oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1025" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YH1z0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1026" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YH3B8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1027" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YH3pAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1028" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YH43IEr4Eem5qeRdwCQ7KQ" name="PME_Trig1029" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YH9IkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1030" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YH_k0Er4Eem5qeRdwCQ7KQ" name="PME_Trig1031" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YIAy8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1032" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YICBEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1033" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIDPMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1034" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YIFrcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1035" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YIKj8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1036" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YILyEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1037" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YINAMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1038" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIQqkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1039" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YITG0Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ServiceResult__1040" source="_tNkqgErDEem2BZRQc2M93A" target="_YHeAYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YLC40Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1108&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__1106&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YIUU8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1041" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIU8AEr4Eem5qeRdwCQ7KQ" name="PME_Trig1042" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YIWKIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1043" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIXYQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1044" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YIabkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1045" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIde4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1046" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YIetAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1047" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIf7IEr4Eem5qeRdwCQ7KQ" name="PME_Trig1048" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YIgiMEr4Eem5qeRdwCQ7KQ" name="PME_Trig1049" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIiXYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1050" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YImBwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1051" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YIoeAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1052" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YIpsIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1053" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YIq6QEr4Eem5qeRdwCQ7KQ" name="PME_Trig1054" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YIrhUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1055" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YIvLsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1056" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YIy2EEr4Eem5qeRdwCQ7KQ" name="PME_Trig1057" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YIzdIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1058" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YI0rQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1059" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJFJ8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1060" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YJI0UEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__WaitingForReply__1061" source="_tNiOQUrDEem2BZRQc2M93A" target="_YHeAYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YK0PUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1108&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__1106&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YJJbYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1062" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJKpgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1063" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YJPiAEr4Eem5qeRdwCQ7KQ" name="PME_Trig1064" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJR-QEr4Eem5qeRdwCQ7KQ" name="PME_Trig1065" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YJTMYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1066" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJUagEr4Eem5qeRdwCQ7KQ" name="PME_Trig1067" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YJYr8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1068" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJcWUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1069" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YJc9YEr4Eem5qeRdwCQ7KQ" name="PME_Trig1070" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJeLgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1071" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YJfZoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1072" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YJh14Er4Eem5qeRdwCQ7KQ" name="PME_Trig1073" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YJmHUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1074" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YJnVcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1075" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJpKoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1076" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YJsN8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1077" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YJvRQEr4Eem5qeRdwCQ7KQ" name="PME_Trig1078" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YJv4UEr4Eem5qeRdwCQ7KQ" name="PME_Trig1079" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YJxGcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1080" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJy7oEr4Eem5qeRdwCQ7KQ" name="PME_Trig1081" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YJ0JwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__ProcessResponse__1082" source="_tNmfsErDEem2BZRQc2M93A" target="_YHeAYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YKthoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1108&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__1106&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YJ3NEEr4Eem5qeRdwCQ7KQ" name="PME_Trig1083" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJ7egEr4Eem5qeRdwCQ7KQ" name="PME_Trig1084" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YJ8soEr4Eem5qeRdwCQ7KQ" name="PME_Trig1085" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YJ_I4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1086" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YKEBYEr4Eem5qeRdwCQ7KQ" name="PME_Trig1087" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YKFPgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1088" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YKF2kEr4Eem5qeRdwCQ7KQ" name="PME_Trig1089" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YKHEsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1090" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YKJg8Er4Eem5qeRdwCQ7KQ" name="PME_Trig1091" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YKNLUEr4Eem5qeRdwCQ7KQ" name="PME_Trig1092" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YKOZcEr4Eem5qeRdwCQ7KQ" name="PME_Trig1093" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YKPnkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1094" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YKQOoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1095" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YKRcwEr4Eem5qeRdwCQ7KQ" name="PME_Trig1096" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YKVHIEr4Eem5qeRdwCQ7KQ" name="PME_Trig1097" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YKYxgEr4Eem5qeRdwCQ7KQ" name="PME_Trig1098" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YKZYkEr4Eem5qeRdwCQ7KQ" name="PME_Trig1099" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YKamsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1100" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YKcb4Er4Eem5qeRdwCQ7KQ" name="PME_Trig1101" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YKjwoEr4Eem5qeRdwCQ7KQ" name="PME_Trig1102" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YKmM4Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ServiceResult__1103" guard="_YLMp0Ur4Eem5qeRdwCQ7KQ" source="_YHeAYEr4Eem5qeRdwCQ7KQ" target="_tNjcYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YLMp0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1113">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLMp0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1113">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,&quot;Debug__B__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YKmz8Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ServiceResult__1104" guard="_YLMCwUr4Eem5qeRdwCQ7KQ" source="_YHeAYEr4Eem5qeRdwCQ7KQ" target="_tNkqgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YLMCwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1112">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLMCwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1112">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,&quot;Debug__A__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YKmz8Ur4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__WaitingForReply__1105" guard="_YLIYYEr4Eem5qeRdwCQ7KQ" source="_YHeAYEr4Eem5qeRdwCQ7KQ" target="_tNiOQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YLIYYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1110">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLHxUEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1110">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YKnbAEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__ProcessResponse__1106" guard="_YLKNkUr4Eem5qeRdwCQ7KQ" source="_YHeAYEr4Eem5qeRdwCQ7KQ" target="_tNmfsErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YLKNkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1111">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLKNkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1111">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ProcessResponse__1106&quot;,&quot;Debug__A__En__ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YKqeUEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__1107" source="_YHZH4Ur4Eem5qeRdwCQ7KQ" target="_YHeAYEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YK2EgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1108&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__1106&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1104&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__1103&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YKqeUUr4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__1108" guard="_YLF8IUr4Eem5qeRdwCQ7KQ" source="_YHeAYEr4Eem5qeRdwCQ7KQ" target="_YHaWAEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_YLF8IUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1109">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLF8IEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1109">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1108&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tNiOQUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNiOQkrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNtNYUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__800">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNjcYErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNjcYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNxe0ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult__801">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNkqgErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNkqgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN1JMErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult__802">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNmfsErDEem2BZRQc2M93A" name="Debug__A__En__ProcessResponse">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNmfsUrDEem2BZRQc2M93A" name="Debug__A__En__ProcessResponse">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__En__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN3lcErDEem2BZRQc2M93A" name="Debug__A__En__ProcessResponse__803">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__En__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YHeAYEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1015" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YHhDsEr4Eem5qeRdwCQ7KQ" name="Init__State__1016"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tOHdEErDEem2BZRQc2M93A" name="Debug__Path__reqService" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tOXUsErDEem2BZRQc2M93A" name="Debug__C__reqService">
              <connectionPoint xmi:id="_tObmIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tOc0QUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_X8jJ0Er4Eem5qeRdwCQ7KQ" name="From__Parent__826" kind="entryPoint"/>
              <connectionPoint xmi:id="_X8k_AEr4Eem5qeRdwCQ7KQ" name="To__Parent__828" kind="exitPoint"/>
              <region xmi:id="_tOXUsUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tO45IErDEem2BZRQc2M93A" name="Debug__init__trans__reqService" source="_tObmIUrDEem2BZRQc2M93A" target="_tO2c4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPCDEErDEem2BZRQc2M93A" name="Debug__init__trans__reqService__828">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__init__trans__reqService&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tO5gMErDEem2BZRQc2M93A" name="Debug__Ac__reqService" source="_tO2c4ErDEem2BZRQc2M93A" target="_tO3D8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tO5gMkrDEem2BZRQc2M93A" name="requestserive" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,SendingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    if (hostConfig.MasterList[0] &amp;&amp; hostConfig.MasterList[1])
    {
    int r=rand()%2;
    if (r==0)
    {
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else{
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }
    }
    else if (hostConfig.MasterList[0]){
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else
    {
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__Ac__reqService&quot;,(char *)&quot;Debug__B__Ac__reqService&quot;,(char *)&quot;Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO5gMUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tO5gM0rDEem2BZRQc2M93A" name="Debug__En__WaitingForReply" source="_tO3D8ErDEem2BZRQc2M93A" target="_tO4SEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tO6HQUrDEem2BZRQc2M93A" name="WaitForReply" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__En__WaitingForReply&quot;,(char *)&quot;Debug__A__Ac__reqService&quot;,(char *)&quot;Debug__A__En__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO6HQErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tO6HQkrDEem2BZRQc2M93A" name="Debug__end__trans__reqService" source="_tO4SEErDEem2BZRQc2M93A" target="_tOc0QUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPFtcErDEem2BZRQc2M93A" name="Debug__end__trans__reqService__832">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__end__trans__reqService&quot;,(char *)&quot;Debug__A__En__reqService&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO6HQ0rDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X85vIEr4Eem5qeRdwCQ7KQ" name="Trans__ex832" source="_tOc0QUrDEem2BZRQc2M93A" target="_X8oCUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YBqTUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__898&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__901&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__899&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_X86WMEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__831833" source="_X8v-IEr4Eem5qeRdwCQ7KQ" target="_X8oCUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YB0rYEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__831&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__898&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__831&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__901&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__831&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__831&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__899&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__831&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_X9EHMEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__reqService__834" source="_tO4SEErDEem2BZRQc2M93A" target="_X8oCUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YB5j4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__898&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__901&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__899&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_X9FVUEr4Eem5qeRdwCQ7KQ" name="PME_Trig835" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X9NRIEr4Eem5qeRdwCQ7KQ" name="PME_Trig836" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X9SwsEr4Eem5qeRdwCQ7KQ" name="PME_Trig837" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X9XCIEr4Eem5qeRdwCQ7KQ" name="PME_Trig838" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X9asgEr4Eem5qeRdwCQ7KQ" name="PME_Trig839" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X9gMEEr4Eem5qeRdwCQ7KQ" name="PME_Trig840" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X9iBQEr4Eem5qeRdwCQ7KQ" name="PME_Trig841" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X9pWAEr4Eem5qeRdwCQ7KQ" name="PME_Trig842" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X9tAYEr4Eem5qeRdwCQ7KQ" name="PME_Trig843" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X9zHAEr4Eem5qeRdwCQ7KQ" name="PME_Trig844" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X91jQEr4Eem5qeRdwCQ7KQ" name="PME_Trig845" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_X93_gEr4Eem5qeRdwCQ7KQ" name="PME_Trig846" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X97p4Er4Eem5qeRdwCQ7KQ" name="PME_Trig847" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_X9-tMEr4Eem5qeRdwCQ7KQ" name="PME_Trig848" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X-Ez0Er4Eem5qeRdwCQ7KQ" name="PME_Trig849" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X-JsUEr4Eem5qeRdwCQ7KQ" name="PME_Trig850" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X-MIkEr4Eem5qeRdwCQ7KQ" name="PME_Trig851" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X-SPMEr4Eem5qeRdwCQ7KQ" name="PME_Trig852" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_X-VSgEr4Eem5qeRdwCQ7KQ" name="PME_Trig853" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X-Zj8Er4Eem5qeRdwCQ7KQ" name="PME_Trig854" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X-d1YEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__reqService__855" source="_tO2c4ErDEem2BZRQc2M93A" target="_X8oCUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YBcQ4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__898&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__901&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__899&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_X-fDgEr4Eem5qeRdwCQ7KQ" name="PME_Trig856" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X-j8AEr4Eem5qeRdwCQ7KQ" name="PME_Trig857" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X-oNcEr4Eem5qeRdwCQ7KQ" name="PME_Trig858" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X-qpsEr4Eem5qeRdwCQ7KQ" name="PME_Trig859" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X-wwUEr4Eem5qeRdwCQ7KQ" name="PME_Trig860" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X-zMkEr4Eem5qeRdwCQ7KQ" name="PME_Trig861" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X-1o0Er4Eem5qeRdwCQ7KQ" name="PME_Trig862" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X-56QEr4Eem5qeRdwCQ7KQ" name="PME_Trig863" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X-9koEr4Eem5qeRdwCQ7KQ" name="PME_Trig864" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X_HVoEr4Eem5qeRdwCQ7KQ" name="PME_Trig865" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X_LAAEr4Eem5qeRdwCQ7KQ" name="PME_Trig866" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_X_RGoEr4Eem5qeRdwCQ7KQ" name="PME_Trig867" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X_Ti4Er4Eem5qeRdwCQ7KQ" name="PME_Trig868" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_X_ZCcEr4Eem5qeRdwCQ7KQ" name="PME_Trig869" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X_dT4Er4Eem5qeRdwCQ7KQ" name="PME_Trig870" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X_kooEr4Eem5qeRdwCQ7KQ" name="PME_Trig871" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X_nr8Er4Eem5qeRdwCQ7KQ" name="PME_Trig872" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X_tLgEr4Eem5qeRdwCQ7KQ" name="PME_Trig873" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_X_wO0Er4Eem5qeRdwCQ7KQ" name="PME_Trig874" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X_1HUEr4Eem5qeRdwCQ7KQ" name="PME_Trig875" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X_5YwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__reqService__876" source="_tO3D8ErDEem2BZRQc2M93A" target="_X8oCUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YBvL0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__898&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__901&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__899&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_X_7N8Er4Eem5qeRdwCQ7KQ" name="PME_Trig877" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X__fYEr4Eem5qeRdwCQ7KQ" name="PME_Trig878" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YAEX4Er4Eem5qeRdwCQ7KQ" name="PME_Trig879" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YAIpUEr4Eem5qeRdwCQ7KQ" name="PME_Trig880" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YANh0Er4Eem5qeRdwCQ7KQ" name="PME_Trig881" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YAP-EEr4Eem5qeRdwCQ7KQ" name="PME_Trig882" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YAUPgEr4Eem5qeRdwCQ7KQ" name="PME_Trig883" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YAZIAEr4Eem5qeRdwCQ7KQ" name="PME_Trig884" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YAbkQEr4Eem5qeRdwCQ7KQ" name="PME_Trig885" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YAiR8Er4Eem5qeRdwCQ7KQ" name="PME_Trig886" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YAkuMEr4Eem5qeRdwCQ7KQ" name="PME_Trig887" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YApmsEr4Eem5qeRdwCQ7KQ" name="PME_Trig888" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YAsqAEr4Eem5qeRdwCQ7KQ" name="PME_Trig889" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YAvtUEr4Eem5qeRdwCQ7KQ" name="PME_Trig890" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YA1z8Er4Eem5qeRdwCQ7KQ" name="PME_Trig891" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YA3pIEr4Eem5qeRdwCQ7KQ" name="PME_Trig892" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YA8hoEr4Eem5qeRdwCQ7KQ" name="PME_Trig893" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YBAzEEr4Eem5qeRdwCQ7KQ" name="PME_Trig894" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YBD2YEr4Eem5qeRdwCQ7KQ" name="PME_Trig895" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YBJ9AEr4Eem5qeRdwCQ7KQ" name="PME_Trig896" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YBOOcEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__reqService__897" guard="_YB_DcUr4Eem5qeRdwCQ7KQ" source="_X8oCUEr4Eem5qeRdwCQ7KQ" target="_tO4SEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YB_DcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion904">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB_DcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion904">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__reqService__897&quot;,&quot;Debug__A__En__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YBPckEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__reqService__898" guard="_YB8AIUr4Eem5qeRdwCQ7KQ" source="_X8oCUEr4Eem5qeRdwCQ7KQ" target="_tO2c4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YB8AIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion902">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB8AIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion902">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqService__898&quot;,&quot;Debug__B__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YBQqsEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__reqService__899" guard="_YB_qgUr4Eem5qeRdwCQ7KQ" source="_X8oCUEr4Eem5qeRdwCQ7KQ" target="_tO3D8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YB_qgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion905">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB_qgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion905">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqService__899&quot;,&quot;Debug__A__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YBU8IEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__900" source="_X8jJ0Er4Eem5qeRdwCQ7KQ" target="_X8oCUEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YBhwcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__898&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__901&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__899&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YBVjMEr4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__901" guard="_YB91UUr4Eem5qeRdwCQ7KQ" source="_X8oCUEr4Eem5qeRdwCQ7KQ" target="_X8k_AEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_YB91UUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion903">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB91UEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion903">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__901&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tO2c4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO2c4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO7VYErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService__824">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tO3D8ErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO3D8UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO-YsErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService__825">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tO4SEErDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO4SEUrDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPAN4UrDEem2BZRQc2M93A" name="Debug__A__En__reqService__826">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_X8oCUEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__830" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_X8v-IEr4Eem5qeRdwCQ7KQ" name="Init__State__831"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tPJ-4ErDEem2BZRQc2M93A" name="Debug__Path__getMasterName__checkConfig__9" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tPKl8UrDEem2BZRQc2M93A" name="Debug__C__getMasterName__checkConfig__9">
              <connectionPoint xmi:id="_tPLNAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tPMbIErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_X2UmAEr4Eem5qeRdwCQ7KQ" name="From__Parent__745" kind="entryPoint"/>
              <connectionPoint xmi:id="_X2XpUEr4Eem5qeRdwCQ7KQ" name="To__Parent__747" kind="exitPoint"/>
              <region xmi:id="_tPKl8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tPf9IErDEem2BZRQc2M93A" name="Debug__init__trans__getMasterName__checkConfig__9" source="_tPLNAUrDEem2BZRQc2M93A" target="_tPc50UrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tPf9IUrDEem2BZRQc2M93A" name="Debug__Ex__getMasterName" source="_tPc50UrDEem2BZRQc2M93A" target="_tPeH8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPpHEErDEem2BZRQc2M93A" name="Debug__Ex__getMasterName__850">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__Ex__getMasterName&quot;,(char *)&quot;Debug__B__Ex__getMasterName&quot;,(char *)&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tPgkMErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tPgkMUrDEem2BZRQc2M93A" name="Debug__AC__getMasterName__checkConfig__9" source="_tPeH8ErDEem2BZRQc2M93A" target="_tPfWEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPqVMErDEem2BZRQc2M93A" name="Debug__AC__getMasterName__checkConfig__9__852">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__AC__getMasterName__checkConfig__9&quot;,(char *)&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tPgkMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tPhLQErDEem2BZRQc2M93A" name="Debug__end__trans__getMasterName__checkConfig__9" source="_tPfWEErDEem2BZRQc2M93A" target="_tPMbIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPsKYErDEem2BZRQc2M93A" name="Debug__end__trans__getMasterName__checkConfig__9__854">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__end__trans__getMasterName__checkConfig__9&quot;,(char *)&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tPhLQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X2gzQEr4Eem5qeRdwCQ7KQ" name="Trans__ex751" source="_tPMbIErDEem2BZRQc2M93A" target="_X2YQYUr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X8PAwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__820&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_X2haUEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__750752" source="_X2aFkEr4Eem5qeRdwCQ7KQ" target="_X2YQYUr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X8ITEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__750&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__750&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__750&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__820&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__750&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__750&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_X2pWIEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__getMasterName__checkConfig__9__753" source="_tPfWEErDEem2BZRQc2M93A" target="_X2YQYUr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X8EosEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__820&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_X2sZcEr4Eem5qeRdwCQ7KQ" name="PME_Trig754" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X2wD0Er4Eem5qeRdwCQ7KQ" name="PME_Trig755" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X22KcEr4Eem5qeRdwCQ7KQ" name="PME_Trig756" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X26b4Er4Eem5qeRdwCQ7KQ" name="PME_Trig757" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X3AigEr4Eem5qeRdwCQ7KQ" name="PME_Trig758" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X3Dl0Er4Eem5qeRdwCQ7KQ" name="PME_Trig759" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X3KTgEr4Eem5qeRdwCQ7KQ" name="PME_Trig760" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X3NW0Er4Eem5qeRdwCQ7KQ" name="PME_Trig761" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X3TdcEr4Eem5qeRdwCQ7KQ" name="PME_Trig762" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X3V5sEr4Eem5qeRdwCQ7KQ" name="PME_Trig763" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X3cnYEr4Eem5qeRdwCQ7KQ" name="PME_Trig764" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_X3fDoEr4Eem5qeRdwCQ7KQ" name="PME_Trig765" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X3j8IEr4Eem5qeRdwCQ7KQ" name="PME_Trig766" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_X3pbsEr4Eem5qeRdwCQ7KQ" name="PME_Trig767" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X3uUMEr4Eem5qeRdwCQ7KQ" name="PME_Trig768" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X3zMsEr4Eem5qeRdwCQ7KQ" name="PME_Trig769" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X35TUEr4Eem5qeRdwCQ7KQ" name="PME_Trig770" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X3-L0Er4Eem5qeRdwCQ7KQ" name="PME_Trig771" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_X4EScEr4Eem5qeRdwCQ7KQ" name="PME_Trig772" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X4H80Er4Eem5qeRdwCQ7KQ" name="PME_Trig773" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X4M1UEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__getMasterName__774" source="_tPc50UrDEem2BZRQc2M93A" target="_X2YQYUr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X8SEEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__getMasterName&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__getMasterName&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__getMasterName&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__820&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__getMasterName&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_X4RGwEr4Eem5qeRdwCQ7KQ" name="PME_Trig775" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X4UKEEr4Eem5qeRdwCQ7KQ" name="PME_Trig776" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X4cF4Er4Eem5qeRdwCQ7KQ" name="PME_Trig777" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X4lP0Er4Eem5qeRdwCQ7KQ" name="PME_Trig778" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X4qIUEr4Eem5qeRdwCQ7KQ" name="PME_Trig779" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X4wO8Er4Eem5qeRdwCQ7KQ" name="PME_Trig780" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X41HcEr4Eem5qeRdwCQ7KQ" name="PME_Trig781" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X49DQEr4Eem5qeRdwCQ7KQ" name="PME_Trig782" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X5EYAEr4Eem5qeRdwCQ7KQ" name="PME_Trig783" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X5IpcEr4Eem5qeRdwCQ7KQ" name="PME_Trig784" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X5OwEEr4Eem5qeRdwCQ7KQ" name="PME_Trig785" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_X5RzYEr4Eem5qeRdwCQ7KQ" name="PME_Trig786" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X5XS8Er4Eem5qeRdwCQ7KQ" name="PME_Trig787" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_X5bkYEr4Eem5qeRdwCQ7KQ" name="PME_Trig788" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X5i5IEr4Eem5qeRdwCQ7KQ" name="PME_Trig789" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X5lVYEr4Eem5qeRdwCQ7KQ" name="PME_Trig790" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X5sqIEr4Eem5qeRdwCQ7KQ" name="PME_Trig791" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X5vGYEr4Eem5qeRdwCQ7KQ" name="PME_Trig792" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_X52bIEr4Eem5qeRdwCQ7KQ" name="PME_Trig793" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X57ToEr4Eem5qeRdwCQ7KQ" name="PME_Trig794" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X6BaQEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__getMasterName__checkConfig__9__795" source="_tPeH8ErDEem2BZRQc2M93A" target="_X2YQYUr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X8YxwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__820&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_X6GSwEr4Eem5qeRdwCQ7KQ" name="PME_Trig796" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X6MZYEr4Eem5qeRdwCQ7KQ" name="PME_Trig797" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X6UVMEr4Eem5qeRdwCQ7KQ" name="PME_Trig798" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X6bp8Er4Eem5qeRdwCQ7KQ" name="PME_Trig799" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X6hwkEr4Eem5qeRdwCQ7KQ" name="PME_Trig800" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X6q6gEr4Eem5qeRdwCQ7KQ" name="PME_Trig801" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X6zdYEr4Eem5qeRdwCQ7KQ" name="PME_Trig802" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X63HwEr4Eem5qeRdwCQ7KQ" name="PME_Trig803" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X691cEr4Eem5qeRdwCQ7KQ" name="PME_Trig804" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X7ARsEr4Eem5qeRdwCQ7KQ" name="PME_Trig805" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X7FKMEr4Eem5qeRdwCQ7KQ" name="PME_Trig806" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_X7JboEr4Eem5qeRdwCQ7KQ" name="PME_Trig807" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X7NGAEr4Eem5qeRdwCQ7KQ" name="PME_Trig808" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_X7TMoEr4Eem5qeRdwCQ7KQ" name="PME_Trig809" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X7W3AEr4Eem5qeRdwCQ7KQ" name="PME_Trig810" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_X7cWkEr4Eem5qeRdwCQ7KQ" name="PME_Trig811" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_X7ey0Er4Eem5qeRdwCQ7KQ" name="PME_Trig812" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_X7kSYEr4Eem5qeRdwCQ7KQ" name="PME_Trig813" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_X7n8wEr4Eem5qeRdwCQ7KQ" name="PME_Trig814" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_X7s1QEr4Eem5qeRdwCQ7KQ" name="PME_Trig815" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_X7y74Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__getMasterName__checkConfig__9__816" guard="_X8am8Ur4Eem5qeRdwCQ7KQ" source="_X2YQYUr4Eem5qeRdwCQ7KQ" target="_tPfWEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_X8am8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion822">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8am8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion822">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__816&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_X7zi8Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__getMasterName__817" guard="_X8Z_4Ur4Eem5qeRdwCQ7KQ" source="_X2YQYUr4Eem5qeRdwCQ7KQ" target="_tPc50UrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_X8Z_4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion821">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8Z_4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion821">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__getMasterName__817&quot;,&quot;Debug__B__Ex__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_X7zi8Ur4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__getMasterName__checkConfig__9__818" guard="_X8ccIUr4Eem5qeRdwCQ7KQ" source="_X2YQYUr4Eem5qeRdwCQ7KQ" target="_tPeH8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_X8ccIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion824">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8ccIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion824">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__818&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_X75CgEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__819" source="_X2UmAEr4Eem5qeRdwCQ7KQ" target="_X2YQYUr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_X797AEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__817&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__820&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_X76QoEr4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__820" guard="_X8b1EUr4Eem5qeRdwCQ7KQ" source="_X2YQYUr4Eem5qeRdwCQ7KQ" target="_X2XpUEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_X8b1EUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion823">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8b1EEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion823">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__820&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tPc50UrDEem2BZRQc2M93A" name="Debug__B__Ex__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPdg4ErDEem2BZRQc2M93A" name="Debug__B__Ex__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ex__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPiZYUrDEem2BZRQc2M93A" name="Debug__B__Ex__getMasterName__846">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ex__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tPeH8ErDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPeH8UrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName__checkConfig__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPk1oUrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9__847">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tPfWEErDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPfWEUrDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName__checkConfig__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPnR4ErDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9__848">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_X2YQYUr4Eem5qeRdwCQ7KQ" name="DecesionPoint__749" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_X2aFkEr4Eem5qeRdwCQ7KQ" name="Init__State__750"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tPxp8ErDEem2BZRQc2M93A" name="Debug__Path__inittrans" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tPy4EErDEem2BZRQc2M93A" name="Debug__C__inittrans">
              <connectionPoint xmi:id="_tPzfIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tP1UUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_XT7qoEr4Eem5qeRdwCQ7KQ" name="From__Parent__375" kind="entryPoint"/>
              <connectionPoint xmi:id="_XUBKMEr4Eem5qeRdwCQ7KQ" name="To__Parent__377" kind="exitPoint"/>
              <region xmi:id="_tPy4EUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQHBIErDEem2BZRQc2M93A" name="Debug__init__trans__inittrans" source="_tPzfIUrDEem2BZRQc2M93A" target="_tQDWwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQPkAErDEem2BZRQc2M93A" name="Debug__init__trans__inittrans__873">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__init__trans__inittrans&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tQHBIUrDEem2BZRQc2M93A" name="Debug__Ac__inittrans" source="_tQDWwUrDEem2BZRQc2M93A" target="_tQD90ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQHoMErDEem2BZRQc2M93A" name="InitLog" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>      std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;
     char  fileName[30];
     char  clientIndex[5];
     //itoa(clientIndex,this->getIndex(),10);

	sprintf(clientIndex, &quot;%d&quot;, this->getIndex());
     strcpy(fileName,this->getName());
     strcat(fileName, clientIndex);
     logfile.open(fileName);
     logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__Ac__inittrans&quot;,(char *)&quot;Debug__B__Ac__inittrans&quot;,(char *)&quot;Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQHBIkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQHoMUrDEem2BZRQc2M93A" name="Debug__En__StandBY" source="_tQD90ErDEem2BZRQc2M93A" target="_tQFzAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQSAQErDEem2BZRQc2M93A" name="Debug__En__StandBY__876">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__En__StandBY&quot;,(char *)&quot;Debug__A__Ac__inittrans&quot;,(char *)&quot;Debug__A__En__inittrans&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQHoMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQIPQErDEem2BZRQc2M93A" name="Debug__end__trans__inittrans" source="_tQFzAErDEem2BZRQc2M93A" target="_tP1UUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQTOYErDEem2BZRQc2M93A" name="Debug__end__trans__inittrans__878">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__end__trans__inittrans&quot;,(char *)&quot;Debug__A__En__inittrans&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQIPQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XUXvgEr4Eem5qeRdwCQ7KQ" name="Trans__ex381" source="_tP1UUUrDEem2BZRQc2M93A" target="_XUDmcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XiQagEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__448&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__447&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__446&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XUaLwEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__380382" source="_XUMJUEr4Eem5qeRdwCQ7KQ" target="_XUDmcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XjIkQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__380&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__448&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__380&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__447&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__380&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__380&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__446&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__380&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XUkj0Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__inittrans__383" source="_tQDWwUrDEem2BZRQc2M93A" target="_XUDmcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XiJFwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__448&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__447&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__446&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XUmZAEr4Eem5qeRdwCQ7KQ" name="PME_Trig384" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XU-zgEr4Eem5qeRdwCQ7KQ" name="PME_Trig385" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XVOEEEr4Eem5qeRdwCQ7KQ" name="PME_Trig386" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XVbfcEr4Eem5qeRdwCQ7KQ" name="PME_Trig387" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XVuaYEr4Eem5qeRdwCQ7KQ" name="PME_Trig388" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XV9q8Er4Eem5qeRdwCQ7KQ" name="PME_Trig389" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XWFmwEr4Eem5qeRdwCQ7KQ" name="PME_Trig390" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XWOwsEr4Eem5qeRdwCQ7KQ" name="PME_Trig391" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XWkH4Er4Eem5qeRdwCQ7KQ" name="PME_Trig392" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XWvHAEr4Eem5qeRdwCQ7KQ" name="PME_Trig393" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XW9JcEr4Eem5qeRdwCQ7KQ" name="PME_Trig394" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XXFFQEr4Eem5qeRdwCQ7KQ" name="PME_Trig395" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XXWLAEr4Eem5qeRdwCQ7KQ" name="PME_Trig396" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XXmCoEr4Eem5qeRdwCQ7KQ" name="PME_Trig397" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XXvzoEr4Eem5qeRdwCQ7KQ" name="PME_Trig398" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XX4WgEr4Eem5qeRdwCQ7KQ" name="PME_Trig399" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XYI1MEr4Eem5qeRdwCQ7KQ" name="PME_Trig400" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XYSmMEr4Eem5qeRdwCQ7KQ" name="PME_Trig401" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XYZT4Er4Eem5qeRdwCQ7KQ" name="PME_Trig402" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XZs7cEr4Eem5qeRdwCQ7KQ" name="PME_Trig403" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XZ2FYEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__inittrans__404" source="_tQD90ErDEem2BZRQc2M93A" target="_XUDmcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XhiBwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__448&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__447&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__446&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XZ8zEEr4Eem5qeRdwCQ7KQ" name="PME_Trig405" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XaFV8Er4Eem5qeRdwCQ7KQ" name="PME_Trig406" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XaLckEr4Eem5qeRdwCQ7KQ" name="PME_Trig407" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XaRjMEr4Eem5qeRdwCQ7KQ" name="PME_Trig408" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XaV0oEr4Eem5qeRdwCQ7KQ" name="PME_Trig409" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xae-kEr4Eem5qeRdwCQ7KQ" name="PME_Trig410" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XaoIgEr4Eem5qeRdwCQ7KQ" name="PME_Trig411" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XavdQEr4Eem5qeRdwCQ7KQ" name="PME_Trig412" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XazHoEr4Eem5qeRdwCQ7KQ" name="PME_Trig413" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xa84oEr4Eem5qeRdwCQ7KQ" name="PME_Trig414" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XbGpoEr4Eem5qeRdwCQ7KQ" name="PME_Trig415" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XbUFAEr4Eem5qeRdwCQ7KQ" name="PME_Trig416" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XbfEIEr4Eem5qeRdwCQ7KQ" name="PME_Trig417" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XbxYAEr4Eem5qeRdwCQ7KQ" name="PME_Trig418" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XcE6AEr4Eem5qeRdwCQ7KQ" name="PME_Trig419" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XcOD8Er4Eem5qeRdwCQ7KQ" name="PME_Trig420" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XcbfUEr4Eem5qeRdwCQ7KQ" name="PME_Trig421" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XclQUEr4Eem5qeRdwCQ7KQ" name="PME_Trig422" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Xc2WEEr4Eem5qeRdwCQ7KQ" name="PME_Trig423" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XdAHEEr4Eem5qeRdwCQ7KQ" name="PME_Trig424" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XdKfIEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__inittrans__425" source="_tQFzAErDEem2BZRQc2M93A" target="_XUDmcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Xh3Y8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__448&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__447&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__446&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XdRM0Er4Eem5qeRdwCQ7KQ" name="PME_Trig426" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XdX6gEr4Eem5qeRdwCQ7KQ" name="PME_Trig427" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XdhEcEr4Eem5qeRdwCQ7KQ" name="PME_Trig428" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XdoZMEr4Eem5qeRdwCQ7KQ" name="PME_Trig429" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XdyxQEr4Eem5qeRdwCQ7KQ" name="PME_Trig430" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xd6tEEr4Eem5qeRdwCQ7KQ" name="PME_Trig431" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XeFFIEr4Eem5qeRdwCQ7KQ" name="PME_Trig432" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XeWK4Er4Eem5qeRdwCQ7KQ" name="PME_Trig433" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XeeGsEr4Eem5qeRdwCQ7KQ" name="PME_Trig434" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XelbcEr4Eem5qeRdwCQ7KQ" name="PME_Trig435" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xe8AwEr4Eem5qeRdwCQ7KQ" name="PME_Trig436" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XfFxwEr4Eem5qeRdwCQ7KQ" name="PME_Trig437" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XfUbQEr4Eem5qeRdwCQ7KQ" name="PME_Trig438" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XfyVUEr4Eem5qeRdwCQ7KQ" name="PME_Trig439" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XgPoUEr4Eem5qeRdwCQ7KQ" name="PME_Trig440" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XgRdgEr4Eem5qeRdwCQ7KQ" name="PME_Trig441" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xgb1kEr4Eem5qeRdwCQ7KQ" name="PME_Trig442" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xgm0sEr4Eem5qeRdwCQ7KQ" name="PME_Trig443" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XgzpAEr4Eem5qeRdwCQ7KQ" name="PME_Trig444" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XhKOUEr4Eem5qeRdwCQ7KQ" name="PME_Trig445" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XhPt4Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__inittrans__446" guard="_XjdUYUr4Eem5qeRdwCQ7KQ" source="_XUDmcEr4Eem5qeRdwCQ7KQ" target="_tQDWwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XjdUYUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion454">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XjdUYEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion454">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__inittrans__446&quot;,&quot;Debug__B__Ac__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XhPt4Ur4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__inittrans__447" guard="_XjS8UUr4Eem5qeRdwCQ7KQ" source="_XUDmcEr4Eem5qeRdwCQ7KQ" target="_tQD90ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XjS8UUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion452">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XjS8UEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion452">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__inittrans__447&quot;,&quot;Debug__A__Ac__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XhSKIEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__inittrans__448" guard="_XjSVQUr4Eem5qeRdwCQ7KQ" source="_XUDmcEr4Eem5qeRdwCQ7KQ" target="_tQFzAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XjSVQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion451">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XjSVQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion451">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__inittrans__448&quot;,&quot;Debug__A__En__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XhY30Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__449" source="_XT7qoEr4Eem5qeRdwCQ7KQ" target="_XUDmcEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XihgQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__448&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__447&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__446&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XhY30Ur4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__450" guard="_XjbfMUr4Eem5qeRdwCQ7KQ" source="_XUDmcEr4Eem5qeRdwCQ7KQ" target="_XUBKMEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_XjbfMUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion453">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XjbfMEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion453">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__450&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQDWwUrDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQDWwkrDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;inittrans&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQJdYErDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans__869">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQD90ErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQEk4ErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;inittrans&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQL5oErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans__870">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQFzAErDEem2BZRQc2M93A" name="Debug__A__En__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQFzAUrDEem2BZRQc2M93A" name="Debug__A__En__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__En__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQNu0UrDEem2BZRQc2M93A" name="Debug__A__En__inittrans__871">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__En__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_XUDmcEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__379" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_XUMJUEr4Eem5qeRdwCQ7KQ" name="Init__State__380"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tQWRsErDEem2BZRQc2M93A" name="Debug__Path__ReqFlowDone" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tQW4wUrDEem2BZRQc2M93A" name="Debug__C__ReqFlowDone">
              <connectionPoint xmi:id="_tQYG4ErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tQYt8ErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_XsoegEr4Eem5qeRdwCQ7KQ" name="From__Parent__560" kind="entryPoint"/>
              <connectionPoint xmi:id="_Xsq6wEr4Eem5qeRdwCQ7KQ" name="To__Parent__562" kind="exitPoint"/>
              <region xmi:id="_tQW4wkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQ0LwErDEem2BZRQc2M93A" name="Debug__init__trans__ReqFlowDone" source="_tQYG4ErDEem2BZRQc2M93A" target="_tQvTQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tREDYUrDEem2BZRQc2M93A" name="Debug__init__trans__ReqFlowDone__897">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__init__trans__ReqFlowDone&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tQ0LwUrDEem2BZRQc2M93A" name="Debug__Ex__ProcessResponse" source="_tQvTQUrDEem2BZRQc2M93A" target="_tQwhYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRF4kErDEem2BZRQc2M93A" name="Debug__Ex__ProcessResponse__899">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__Ex__ProcessResponse&quot;,(char *)&quot;Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ0y0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQ0y0UrDEem2BZRQc2M93A" name="Debug__AC__ReqFlowDone" source="_tQwhYErDEem2BZRQc2M93A" target="_tQxvgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQ1Z4ErDEem2BZRQc2M93A" name="AllIsDone" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The service Request has been done sucessfully\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__AC__ReqFlowDone&quot;,(char *)&quot;Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ0y0krDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQ1Z4UrDEem2BZRQc2M93A" name="Debug__En__Ready" source="_tQxvgErDEem2BZRQc2M93A" target="_tQy9oErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQ2A8UrDEem2BZRQc2M93A" name="ReadyEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__En__Ready&quot;,(char *)&quot;Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ2A8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQ2oAErDEem2BZRQc2M93A" name="Debug__end__trans__ReqFlowDone" source="_tQy9oErDEem2BZRQc2M93A" target="_tQYt8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRQQoErDEem2BZRQc2M93A" name="Debug__end__trans__ReqFlowDone__903">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__end__trans__ReqFlowDone&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ2oAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_Xs3vEEr4Eem5qeRdwCQ7KQ" name="Trans__ex566" source="_tQYt8ErDEem2BZRQc2M93A" target="_Xssv8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XyDxEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__654&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__657&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Xs5kQEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__565567" source="_Xs0rwEr4Eem5qeRdwCQ7KQ" target="_Xssv8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Xx3j0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__565&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__654&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__565&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__565&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__565&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__657&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__565&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__565&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XtI00Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__ReqFlowDone__568" source="_tQwhYErDEem2BZRQc2M93A" target="_Xssv8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XxnsMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__654&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__657&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XtJb4Er4Eem5qeRdwCQ7KQ" name="PME_Trig569" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XtLREEr4Eem5qeRdwCQ7KQ" name="PME_Trig570" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XtSl0Er4Eem5qeRdwCQ7KQ" name="PME_Trig571" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XtUbAEr4Eem5qeRdwCQ7KQ" name="PME_Trig572" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XtVpIEr4Eem5qeRdwCQ7KQ" name="PME_Trig573" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XtcW0Er4Eem5qeRdwCQ7KQ" name="PME_Trig574" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XtezEEr4Eem5qeRdwCQ7KQ" name="PME_Trig575" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xtn9AEr4Eem5qeRdwCQ7KQ" name="PME_Trig576" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XtpLIEr4Eem5qeRdwCQ7KQ" name="PME_Trig577" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xts1gEr4Eem5qeRdwCQ7KQ" name="PME_Trig578" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XtxG8Er4Eem5qeRdwCQ7KQ" name="PME_Trig579" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XtyVEEr4Eem5qeRdwCQ7KQ" name="PME_Trig580" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XtzjMEr4Eem5qeRdwCQ7KQ" name="PME_Trig581" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Xt1_cEr4Eem5qeRdwCQ7KQ" name="PME_Trig582" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xt9UMEr4Eem5qeRdwCQ7KQ" name="PME_Trig583" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XuCMsEr4Eem5qeRdwCQ7KQ" name="PME_Trig584" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XuFQAEr4Eem5qeRdwCQ7KQ" name="PME_Trig585" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XuGeIEr4Eem5qeRdwCQ7KQ" name="PME_Trig586" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XuHsQEr4Eem5qeRdwCQ7KQ" name="PME_Trig587" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XuITUEr4Eem5qeRdwCQ7KQ" name="PME_Trig588" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XuMkwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__ReqFlowDone__589" source="_tQxvgErDEem2BZRQc2M93A" target="_Xssv8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XxwPEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__654&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__657&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XuPoEEr4Eem5qeRdwCQ7KQ" name="PME_Trig590" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XuQ2MEr4Eem5qeRdwCQ7KQ" name="PME_Trig591" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XuSEUEr4Eem5qeRdwCQ7KQ" name="PME_Trig592" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XuVHoEr4Eem5qeRdwCQ7KQ" name="PME_Trig593" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XuccYEr4Eem5qeRdwCQ7KQ" name="PME_Trig594" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XuffsEr4Eem5qeRdwCQ7KQ" name="PME_Trig595" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XujxIEr4Eem5qeRdwCQ7KQ" name="PME_Trig596" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xuk_QEr4Eem5qeRdwCQ7KQ" name="PME_Trig597" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XumNYEr4Eem5qeRdwCQ7KQ" name="PME_Trig598" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xum0cEr4Eem5qeRdwCQ7KQ" name="PME_Trig599" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xup3wEr4Eem5qeRdwCQ7KQ" name="PME_Trig600" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XutiIEr4Eem5qeRdwCQ7KQ" name="PME_Trig601" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XuuwQEr4Eem5qeRdwCQ7KQ" name="PME_Trig602" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Xuv-YEr4Eem5qeRdwCQ7KQ" name="PME_Trig603" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XuwlcEr4Eem5qeRdwCQ7KQ" name="PME_Trig604" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XuxzkEr4Eem5qeRdwCQ7KQ" name="PME_Trig605" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xu5vYEr4Eem5qeRdwCQ7KQ" name="PME_Trig606" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xu7kkEr4Eem5qeRdwCQ7KQ" name="PME_Trig607" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XvBrMEr4Eem5qeRdwCQ7KQ" name="PME_Trig608" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XvC5UEr4Eem5qeRdwCQ7KQ" name="PME_Trig609" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XvEHcEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Ready__610" source="_tQy9oErDEem2BZRQc2M93A" target="_Xssv8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Xx7OMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__654&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__657&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XvEugEr4Eem5qeRdwCQ7KQ" name="PME_Trig611" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XvHKwEr4Eem5qeRdwCQ7KQ" name="PME_Trig612" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XvK1IEr4Eem5qeRdwCQ7KQ" name="PME_Trig613" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XvNRYEr4Eem5qeRdwCQ7KQ" name="PME_Trig614" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XvOfgEr4Eem5qeRdwCQ7KQ" name="PME_Trig615" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XvQUsEr4Eem5qeRdwCQ7KQ" name="PME_Trig616" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XvY3kEr4Eem5qeRdwCQ7KQ" name="PME_Trig617" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xvb64Er4Eem5qeRdwCQ7KQ" name="PME_Trig618" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XvgzYEr4Eem5qeRdwCQ7KQ" name="PME_Trig619" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XviokEr4Eem5qeRdwCQ7KQ" name="PME_Trig620" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XvlE0Er4Eem5qeRdwCQ7KQ" name="PME_Trig621" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XvqkYEr4Eem5qeRdwCQ7KQ" name="PME_Trig622" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XvrygEr4Eem5qeRdwCQ7KQ" name="PME_Trig623" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XvtnsEr4Eem5qeRdwCQ7KQ" name="PME_Trig624" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XvwD8Er4Eem5qeRdwCQ7KQ" name="PME_Trig625" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xv3YsEr4Eem5qeRdwCQ7KQ" name="PME_Trig626" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xv84QEr4Eem5qeRdwCQ7KQ" name="PME_Trig627" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xv_7kEr4Eem5qeRdwCQ7KQ" name="PME_Trig628" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XwBJsEr4Eem5qeRdwCQ7KQ" name="PME_Trig629" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XwCX0Er4Eem5qeRdwCQ7KQ" name="PME_Trig630" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XwGCMEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__ProcessResponse__631" source="_tQvTQUrDEem2BZRQc2M93A" target="_Xssv8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Xxl3AEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__654&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__657&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XwKToEr4Eem5qeRdwCQ7KQ" name="PME_Trig632" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XwLhwEr4Eem5qeRdwCQ7KQ" name="PME_Trig633" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XwMv4Er4Eem5qeRdwCQ7KQ" name="PME_Trig634" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XwVSwEr4Eem5qeRdwCQ7KQ" name="PME_Trig635" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XwXH8Er4Eem5qeRdwCQ7KQ" name="PME_Trig636" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XwdOkEr4Eem5qeRdwCQ7KQ" name="PME_Trig637" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XwecsEr4Eem5qeRdwCQ7KQ" name="PME_Trig638" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XwgR4Er4Eem5qeRdwCQ7KQ" name="PME_Trig639" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xwg48Er4Eem5qeRdwCQ7KQ" name="PME_Trig640" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xwj8QEr4Eem5qeRdwCQ7KQ" name="PME_Trig641" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XwoNsEr4Eem5qeRdwCQ7KQ" name="PME_Trig642" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XwqC4Er4Eem5qeRdwCQ7KQ" name="PME_Trig643" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XwtGMEr4Eem5qeRdwCQ7KQ" name="PME_Trig644" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Xw1CAEr4Eem5qeRdwCQ7KQ" name="PME_Trig645" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xw8WwEr4Eem5qeRdwCQ7KQ" name="PME_Trig646" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xw-L8Er4Eem5qeRdwCQ7KQ" name="PME_Trig647" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XxCdYEr4Eem5qeRdwCQ7KQ" name="PME_Trig648" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XxHV4Er4Eem5qeRdwCQ7KQ" name="PME_Trig649" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XxJLEEr4Eem5qeRdwCQ7KQ" name="PME_Trig650" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XxODkEr4Eem5qeRdwCQ7KQ" name="PME_Trig651" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XxXNgEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__ReqFlowDone__652" guard="_XyYhMUr4Eem5qeRdwCQ7KQ" source="_Xssv8Er4Eem5qeRdwCQ7KQ" target="_tQwhYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XyYhMUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion662">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XyYhMEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion662">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XxZCsEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__ReqFlowDone__653" guard="_XyOJIUr4Eem5qeRdwCQ7KQ" source="_Xssv8Er4Eem5qeRdwCQ7KQ" target="_tQxvgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XyOJIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion659">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XyOJIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion659">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XxaQ0Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Ready__654" guard="_XyJQoEr4Eem5qeRdwCQ7KQ" source="_Xssv8Er4Eem5qeRdwCQ7KQ" target="_tQy9oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XyJQoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion658">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XyIpkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion658">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__654&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Xxa34Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__ProcessResponse__655" guard="_XyPXQUr4Eem5qeRdwCQ7KQ" source="_Xssv8Er4Eem5qeRdwCQ7KQ" target="_tQvTQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XyPXQUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion660">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XyPXQEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion660">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XxcGAEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__656" source="_XsoegEr4Eem5qeRdwCQ7KQ" target="_Xssv8Er4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XyG0YEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__654&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__653&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__655&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__657&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__652&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XxctEEr4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__657" guard="_XyTosEr4Eem5qeRdwCQ7KQ" source="_Xssv8Er4Eem5qeRdwCQ7KQ" target="_Xsq6wEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_XyTosEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion661">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XyRMcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion661">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__657&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQvTQUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQvTQkrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQ32IUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse__892">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQwhYErDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQwhYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReqFlowDone&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQ-j0UrDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone__893">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQxvgErDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQxvgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReqFlowDone&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRBAEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone__894">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQy9oErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQzksErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRC1QErDEem2BZRQc2M93A" name="Debug__A__En__Ready__895">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Xssv8Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__564" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Xs0rwEr4Eem5qeRdwCQ7KQ" name="Init__State__565"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tRT7AErDEem2BZRQc2M93A" name="Debug__Path__StarupTransition" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tRUiEUrDEem2BZRQc2M93A" name="Debug__C__StarupTransition">
              <connectionPoint xmi:id="_tRVwMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tRYMcErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_XHme0Er4Eem5qeRdwCQ7KQ" name="From__Parent__271" kind="entryPoint"/>
              <connectionPoint xmi:id="_XHo7EEr4Eem5qeRdwCQ7KQ" name="To__Parent__273" kind="exitPoint"/>
              <region xmi:id="_tRUiEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tR3UoErDEem2BZRQc2M93A" name="Debug__init__trans__StarupTransition" source="_tRVwMUrDEem2BZRQc2M93A" target="_tRx1EErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSGlMErDEem2BZRQc2M93A" name="Debug__init__trans__StarupTransition__922">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__init__trans__StarupTransition&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tR3UoUrDEem2BZRQc2M93A" name="Debug__Ex__StandBY" source="_tRx1EErDEem2BZRQc2M93A" target="_tRycIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSHzUErDEem2BZRQc2M93A" name="Debug__Ex__StandBY__924">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__Ex__StandBY&quot;,(char *)&quot;Debug__B__Ex__StandBY&quot;,(char *)&quot;Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR3UokrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tR37sErDEem2BZRQc2M93A" name="Debug__AC__StarupTransition" source="_tRycIErDEem2BZRQc2M93A" target="_tR04YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tR4iwErDEem2BZRQc2M93A" name="StartUPClient" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; Client is startingUP \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__AC__StarupTransition&quot;,(char *)&quot;Debug__B__Ac__StarupTransition&quot;,(char *)&quot;Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR37sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tR4iwUrDEem2BZRQc2M93A" name="Debug__En__Ready" source="_tR04YErDEem2BZRQc2M93A" target="_tR2GgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tR5w4ErDEem2BZRQc2M93A" name="ReadyEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__En__Ready&quot;,(char *)&quot;Debug__A__Ac__StarupTransition&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR4iwkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tR6X8ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition" source="_tR2GgErDEem2BZRQc2M93A" target="_tRYMcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSMr0ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition__928">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__end__trans__StarupTransition&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR6X8UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XH-SQEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__276277" source="_XH1vYEr4Eem5qeRdwCQ7KQ" target="_XHtMgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XTPHEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__276&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__365&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__276&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__276&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__366&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__276&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__364&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__276&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__363&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__276&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XH_gYEr4Eem5qeRdwCQ7KQ" name="Trans__ex278" source="_tRYMcErDEem2BZRQc2M93A" target="_XHtMgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XTkeQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__365&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__366&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__364&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__363&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XIQmIEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__StarupTransition__279" source="_tRycIErDEem2BZRQc2M93A" target="_XHtMgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XTatQEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__365&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__366&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__364&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__363&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XISbUEr4Eem5qeRdwCQ7KQ" name="PME_Trig280" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XIcMUEr4Eem5qeRdwCQ7KQ" name="PME_Trig281" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XInygEr4Eem5qeRdwCQ7KQ" name="PME_Trig282" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XIvHQEr4Eem5qeRdwCQ7KQ" name="PME_Trig283" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XIzYsEr4Eem5qeRdwCQ7KQ" name="PME_Trig284" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XI9JsEr4Eem5qeRdwCQ7KQ" name="PME_Trig285" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XJII0Er4Eem5qeRdwCQ7KQ" name="PME_Trig286" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XJRSwEr4Eem5qeRdwCQ7KQ" name="PME_Trig287" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XJZOkEr4Eem5qeRdwCQ7KQ" name="PME_Trig288" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XJi_kEr4Eem5qeRdwCQ7KQ" name="PME_Trig289" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XJtXoEr4Eem5qeRdwCQ7KQ" name="PME_Trig290" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XJ2hkEr4Eem5qeRdwCQ7KQ" name="PME_Trig291" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XJ9PQEr4Eem5qeRdwCQ7KQ" name="PME_Trig292" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XKKDkEr4Eem5qeRdwCQ7KQ" name="PME_Trig293" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XKQKMEr4Eem5qeRdwCQ7KQ" name="PME_Trig294" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XKeMoEr4Eem5qeRdwCQ7KQ" name="PME_Trig295" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XKjsMEr4Eem5qeRdwCQ7KQ" name="PME_Trig296" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XKroAEr4Eem5qeRdwCQ7KQ" name="PME_Trig297" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XK0x8Er4Eem5qeRdwCQ7KQ" name="PME_Trig298" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XK5DYEr4Eem5qeRdwCQ7KQ" name="PME_Trig299" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XK_KAEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Ready__300" source="_tR2GgErDEem2BZRQc2M93A" target="_XHtMgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XSxNAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__365&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__366&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__364&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__363&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XLHs4Er4Eem5qeRdwCQ7KQ" name="PME_Trig301" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XLRd4Er4Eem5qeRdwCQ7KQ" name="PME_Trig302" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XLVvUEr4Eem5qeRdwCQ7KQ" name="PME_Trig303" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XLcdAEr4Eem5qeRdwCQ7KQ" name="PME_Trig304" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XLjKsEr4Eem5qeRdwCQ7KQ" name="PME_Trig305" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XLp4YEr4Eem5qeRdwCQ7KQ" name="PME_Trig306" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XLxNIEr4Eem5qeRdwCQ7KQ" name="PME_Trig307" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XL5wAEr4Eem5qeRdwCQ7KQ" name="PME_Trig308" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XL8MQEr4Eem5qeRdwCQ7KQ" name="PME_Trig309" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XMFWMEr4Eem5qeRdwCQ7KQ" name="PME_Trig310" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XMLc0Er4Eem5qeRdwCQ7KQ" name="PME_Trig311" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XMPuQEr4Eem5qeRdwCQ7KQ" name="PME_Trig312" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XMWb8Er4Eem5qeRdwCQ7KQ" name="PME_Trig313" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XMbUcEr4Eem5qeRdwCQ7KQ" name="PME_Trig314" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XMkeYEr4Eem5qeRdwCQ7KQ" name="PME_Trig315" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XMrzIEr4Eem5qeRdwCQ7KQ" name="PME_Trig316" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XMvdgEr4Eem5qeRdwCQ7KQ" name="PME_Trig317" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XM4AYEr4Eem5qeRdwCQ7KQ" name="PME_Trig318" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XM7DsEr4Eem5qeRdwCQ7KQ" name="PME_Trig319" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XNCYcEr4Eem5qeRdwCQ7KQ" name="PME_Trig320" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XNJtMEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__StarupTransition__321" source="_tR04YErDEem2BZRQc2M93A" target="_XHtMgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XTBrsEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__365&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__366&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__364&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__363&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XNMJcEr4Eem5qeRdwCQ7KQ" name="PME_Trig322" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XNPz0Er4Eem5qeRdwCQ7KQ" name="PME_Trig323" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XNV6cEr4Eem5qeRdwCQ7KQ" name="PME_Trig324" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XNaL4Er4Eem5qeRdwCQ7KQ" name="PME_Trig325" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XNiHsEr4Eem5qeRdwCQ7KQ" name="PME_Trig326" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XNpccEr4Eem5qeRdwCQ7KQ" name="PME_Trig327" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XNr4sEr4Eem5qeRdwCQ7KQ" name="PME_Trig328" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XN57IEr4Eem5qeRdwCQ7KQ" name="PME_Trig329" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XOMPAEr4Eem5qeRdwCQ7KQ" name="PME_Trig330" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XOUK0Er4Eem5qeRdwCQ7KQ" name="PME_Trig331" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XOei4Er4Eem5qeRdwCQ7KQ" name="PME_Trig332" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XOpiAEr4Eem5qeRdwCQ7KQ" name="PME_Trig333" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XOyE4Er4Eem5qeRdwCQ7KQ" name="PME_Trig334" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XO4LgEr4Eem5qeRdwCQ7KQ" name="PME_Trig335" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XPDKoEr4Eem5qeRdwCQ7KQ" name="PME_Trig336" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XPJRQEr4Eem5qeRdwCQ7KQ" name="PME_Trig337" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XPUQYEr4Eem5qeRdwCQ7KQ" name="PME_Trig338" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XPa-EEr4Eem5qeRdwCQ7KQ" name="PME_Trig339" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XPiS0Er4Eem5qeRdwCQ7KQ" name="PME_Trig340" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XPlWIEr4Eem5qeRdwCQ7KQ" name="PME_Trig341" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XPpnkEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__StandBY__342" source="_tRx1EErDEem2BZRQc2M93A" target="_XHtMgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XSYLcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__365&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__366&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__364&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__363&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XPvuMEr4Eem5qeRdwCQ7KQ" name="PME_Trig343" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XP2b4Er4Eem5qeRdwCQ7KQ" name="PME_Trig344" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XP9JkEr4Eem5qeRdwCQ7KQ" name="PME_Trig345" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XQDQMEr4Eem5qeRdwCQ7KQ" name="PME_Trig346" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XQMaIEr4Eem5qeRdwCQ7KQ" name="PME_Trig347" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XQSgwEr4Eem5qeRdwCQ7KQ" name="PME_Trig348" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XQbqsEr4Eem5qeRdwCQ7KQ" name="PME_Trig349" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XQhKQEr4Eem5qeRdwCQ7KQ" name="PME_Trig350" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XQi_cEr4Eem5qeRdwCQ7KQ" name="PME_Trig351" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XQptIEr4Eem5qeRdwCQ7KQ" name="PME_Trig352" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XQvzwEr4Eem5qeRdwCQ7KQ" name="PME_Trig353" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XQ2hcEr4Eem5qeRdwCQ7KQ" name="PME_Trig354" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XQ6y4Er4Eem5qeRdwCQ7KQ" name="PME_Trig355" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XRA5gEr4Eem5qeRdwCQ7KQ" name="PME_Trig356" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XREj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig357" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XRJcYEr4Eem5qeRdwCQ7KQ" name="PME_Trig358" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XRUbgEr4Eem5qeRdwCQ7KQ" name="PME_Trig359" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XRW3wEr4Eem5qeRdwCQ7KQ" name="PME_Trig360" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XRc-YEr4Eem5qeRdwCQ7KQ" name="PME_Trig361" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XRjsEEr4Eem5qeRdwCQ7KQ" name="PME_Trig362" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XRrA0Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__StarupTransition__363" guard="_XT2yIUr4Eem5qeRdwCQ7KQ" source="_XHtMgEr4Eem5qeRdwCQ7KQ" target="_tRycIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XT2yIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion373">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XT2yIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion373">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StarupTransition__363&quot;,&quot;Debug__B__Ac__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XRsO8Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Ready__364" guard="_XTzu0Ur4Eem5qeRdwCQ7KQ" source="_XHtMgEr4Eem5qeRdwCQ7KQ" target="_tR2GgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XTzu0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion372">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XTzu0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion372">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__364&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XRs2AEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__StarupTransition__365" guard="_XTtBIUr4Eem5qeRdwCQ7KQ" source="_XHtMgEr4Eem5qeRdwCQ7KQ" target="_tR04YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XTtBIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion369">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XTtBIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion369">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__StarupTransition__365&quot;,&quot;Debug__A__Ac__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XRtdEEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__StandBY__366" guard="_XTxSkUr4Eem5qeRdwCQ7KQ" source="_XHtMgEr4Eem5qeRdwCQ7KQ" target="_tRx1EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XTxSkUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion371">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XTxSkEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion371">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBY__366&quot;,&quot;Debug__B__Ex__StandBY&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XRzjsEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__367" source="_XHme0Er4Eem5qeRdwCQ7KQ" target="_XHtMgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XSIT0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__365&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__368&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__366&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__364&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__363&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XR0KwEr4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__368" guard="_XTu2UUr4Eem5qeRdwCQ7KQ" source="_XHtMgEr4Eem5qeRdwCQ7KQ" target="_XHo7EEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_XTu2UUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion370">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XTu2UEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion370">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__368&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tRx1EErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tRx1EUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tR7mEErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY__917">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tRycIErDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tRycIUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StarupTransition&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tR-CUUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition__918">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tR04YErDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR04YUrDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StarupTransition&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSBssUrDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition__919">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tR2GgErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR2tkErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSEI8ErDEem2BZRQc2M93A" name="Debug__A__En__Ready__920">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_XHtMgEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__275" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_XH1vYEr4Eem5qeRdwCQ7KQ" name="Init__State__276"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tSQ9QErDEem2BZRQc2M93A" name="Debug__Path__reqFlowInit" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tSRkUUrDEem2BZRQc2M93A" name="Debug__C__reqFlowInit">
              <connectionPoint xmi:id="_tSSycUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tSUAkErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_YCEjAEr4Eem5qeRdwCQ7KQ" name="From__Parent__907" kind="entryPoint"/>
              <connectionPoint xmi:id="_YCI0cEr4Eem5qeRdwCQ7KQ" name="To__Parent__909" kind="exitPoint"/>
              <region xmi:id="_tSRkUkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tSuQQErDEem2BZRQc2M93A" name="Debug__init__trans__reqFlowInit" source="_tSSycUrDEem2BZRQc2M93A" target="_tSpXwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS5PYErDEem2BZRQc2M93A" name="Debug__init__trans__reqFlowInit__947">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__init__trans__reqFlowInit&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tSuQQUrDEem2BZRQc2M93A" name="Debug__Ex__Ready" source="_tSpXwUrDEem2BZRQc2M93A" target="_tSql4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS6dgErDEem2BZRQc2M93A" name="Debug__Ex__Ready__949">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__Ex__Ready&quot;,(char *)&quot;Debug__B__Ex__Ready&quot;,(char *)&quot;Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSuQQkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSu3UErDEem2BZRQc2M93A" name="Debug__AC__reqFlowInit" source="_tSql4ErDEem2BZRQc2M93A" target="_tSr0AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS8SsErDEem2BZRQc2M93A" name="Debug__AC__reqFlowInit__951">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__AC__reqFlowInit&quot;,(char *)&quot;Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSu3UUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSu3UkrDEem2BZRQc2M93A" name="Debug__En__getMasterName" source="_tSr0AErDEem2BZRQc2M93A" target="_tStCIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSveYUrDEem2BZRQc2M93A" name="GetMasterNameEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__En__getMasterName&quot;,(char *)&quot;Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSveYErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSwFcErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit" source="_tStCIErDEem2BZRQc2M93A" target="_tSUAkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS_WAErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit__954">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__end__trans__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSwFcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YCc9gEr4Eem5qeRdwCQ7KQ" name="Trans__ex913" source="_tSUAkErDEem2BZRQc2M93A" target="_YCLQsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YHOIwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1004&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YCdkkEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__912914" source="_YCSlcEr4Eem5qeRdwCQ7KQ" target="_YCLQsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YHP98Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__912&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__912&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__912&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__912&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__912&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1004&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__912&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YCojsEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__getMasterName__915" source="_tStCIErDEem2BZRQc2M93A" target="_YCLQsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YHE-0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1004&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YCq_8Er4Eem5qeRdwCQ7KQ" name="PME_Trig916" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YCwfgEr4Eem5qeRdwCQ7KQ" name="PME_Trig917" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YCy7wEr4Eem5qeRdwCQ7KQ" name="PME_Trig918" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YC7eoEr4Eem5qeRdwCQ7KQ" name="PME_Trig919" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YDCzYEr4Eem5qeRdwCQ7KQ" name="PME_Trig920" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YDF2sEr4Eem5qeRdwCQ7KQ" name="PME_Trig921" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YDI6AEr4Eem5qeRdwCQ7KQ" name="PME_Trig922" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YDPAoEr4Eem5qeRdwCQ7KQ" name="PME_Trig923" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YDQ10Er4Eem5qeRdwCQ7KQ" name="PME_Trig924" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YDW8cEr4Eem5qeRdwCQ7KQ" name="PME_Trig925" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YDeRMEr4Eem5qeRdwCQ7KQ" name="PME_Trig926" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YDjJsEr4Eem5qeRdwCQ7KQ" name="PME_Trig927" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YDll8Er4Eem5qeRdwCQ7KQ" name="PME_Trig928" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YDqecEr4Eem5qeRdwCQ7KQ" name="PME_Trig929" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YDuv4Er4Eem5qeRdwCQ7KQ" name="PME_Trig930" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YDxMIEr4Eem5qeRdwCQ7KQ" name="PME_Trig931" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YD8yUEr4Eem5qeRdwCQ7KQ" name="PME_Trig932" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YEBDwEr4Eem5qeRdwCQ7KQ" name="PME_Trig933" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YEEHEEr4Eem5qeRdwCQ7KQ" name="PME_Trig934" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YEJmoEr4Eem5qeRdwCQ7KQ" name="PME_Trig935" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YEMp8Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__Ready__936" source="_tSpXwUrDEem2BZRQc2M93A" target="_YCLQsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YHUPYEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1004&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YEOfIEr4Eem5qeRdwCQ7KQ" name="PME_Trig937" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YEYQIEr4Eem5qeRdwCQ7KQ" name="PME_Trig938" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YEfk4Er4Eem5qeRdwCQ7KQ" name="PME_Trig939" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YEiBIEr4Eem5qeRdwCQ7KQ" name="PME_Trig940" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YEmSkEr4Eem5qeRdwCQ7KQ" name="PME_Trig941" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YErLEEr4Eem5qeRdwCQ7KQ" name="PME_Trig942" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YEtAQEr4Eem5qeRdwCQ7KQ" name="PME_Trig943" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YEvcgEr4Eem5qeRdwCQ7KQ" name="PME_Trig944" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YE2xQEr4Eem5qeRdwCQ7KQ" name="PME_Trig945" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YE7CsEr4Eem5qeRdwCQ7KQ" name="PME_Trig946" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YE-tEEr4Eem5qeRdwCQ7KQ" name="PME_Trig947" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YE_7MEr4Eem5qeRdwCQ7KQ" name="PME_Trig948" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YFAiQEr4Eem5qeRdwCQ7KQ" name="PME_Trig949" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YFC-gEr4Eem5qeRdwCQ7KQ" name="PME_Trig950" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YFJFIEr4Eem5qeRdwCQ7KQ" name="PME_Trig951" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YFKTQEr4Eem5qeRdwCQ7KQ" name="PME_Trig952" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YFK6UEr4Eem5qeRdwCQ7KQ" name="PME_Trig953" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YFMIcEr4Eem5qeRdwCQ7KQ" name="PME_Trig954" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YFTdMEr4Eem5qeRdwCQ7KQ" name="PME_Trig955" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YFV5cEr4Eem5qeRdwCQ7KQ" name="PME_Trig956" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YFZj0Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__reqFlowInit__957" source="_tSql4ErDEem2BZRQc2M93A" target="_YCLQsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YHBUcEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1004&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YFcnIEr4Eem5qeRdwCQ7KQ" name="PME_Trig958" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YFd1QEr4Eem5qeRdwCQ7KQ" name="PME_Trig959" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YFfDYEr4Eem5qeRdwCQ7KQ" name="PME_Trig960" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YFgRgEr4Eem5qeRdwCQ7KQ" name="PME_Trig961" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YFj74Er4Eem5qeRdwCQ7KQ" name="PME_Trig962" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YFm_MEr4Eem5qeRdwCQ7KQ" name="PME_Trig963" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YFnmQEr4Eem5qeRdwCQ7KQ" name="PME_Trig964" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YFo0YEr4Eem5qeRdwCQ7KQ" name="PME_Trig965" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YFqCgEr4Eem5qeRdwCQ7KQ" name="PME_Trig966" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YFr3sEr4Eem5qeRdwCQ7KQ" name="PME_Trig967" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YFzMcEr4Eem5qeRdwCQ7KQ" name="PME_Trig968" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YF1osEr4Eem5qeRdwCQ7KQ" name="PME_Trig969" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YF5TEEr4Eem5qeRdwCQ7KQ" name="PME_Trig970" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YF7vUEr4Eem5qeRdwCQ7KQ" name="PME_Trig971" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YF89cEr4Eem5qeRdwCQ7KQ" name="PME_Trig972" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YF-LkEr4Eem5qeRdwCQ7KQ" name="PME_Trig973" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YF_ZsEr4Eem5qeRdwCQ7KQ" name="PME_Trig974" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YGFgUEr4Eem5qeRdwCQ7KQ" name="PME_Trig975" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YGGucEr4Eem5qeRdwCQ7KQ" name="PME_Trig976" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YGH8kEr4Eem5qeRdwCQ7KQ" name="PME_Trig977" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YGJKsEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__reqFlowInit__978" source="_tSr0AErDEem2BZRQc2M93A" target="_YCLQsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YHGM8Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1004&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_YGLm8Er4Eem5qeRdwCQ7KQ" name="PME_Trig979" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YGSUoEr4Eem5qeRdwCQ7KQ" name="PME_Trig980" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YGWmEEr4Eem5qeRdwCQ7KQ" name="PME_Trig981" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YGZpYEr4Eem5qeRdwCQ7KQ" name="PME_Trig982" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YGa3gEr4Eem5qeRdwCQ7KQ" name="PME_Trig983" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YGcFoEr4Eem5qeRdwCQ7KQ" name="PME_Trig984" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YGdTwEr4Eem5qeRdwCQ7KQ" name="PME_Trig985" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YGfI8Er4Eem5qeRdwCQ7KQ" name="PME_Trig986" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YGiMQEr4Eem5qeRdwCQ7KQ" name="PME_Trig987" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YGkogEr4Eem5qeRdwCQ7KQ" name="PME_Trig988" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YGl2oEr4Eem5qeRdwCQ7KQ" name="PME_Trig989" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_YGmdsEr4Eem5qeRdwCQ7KQ" name="PME_Trig990" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YGnr0Er4Eem5qeRdwCQ7KQ" name="PME_Trig991" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_YGqIEEr4Eem5qeRdwCQ7KQ" name="PME_Trig992" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YGtycEr4Eem5qeRdwCQ7KQ" name="PME_Trig993" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_YGvAkEr4Eem5qeRdwCQ7KQ" name="PME_Trig994" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_YGwOsEr4Eem5qeRdwCQ7KQ" name="PME_Trig995" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_YGxc0Er4Eem5qeRdwCQ7KQ" name="PME_Trig996" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_YGz5EEr4Eem5qeRdwCQ7KQ" name="PME_Trig997" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_YG3jcEr4Eem5qeRdwCQ7KQ" name="PME_Trig998" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_YG5_sEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__getMasterName__999" guard="_YHVdgUr4Eem5qeRdwCQ7KQ" source="_YCLQsEr4Eem5qeRdwCQ7KQ" target="_tStCIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YHVdgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1005">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHVdgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1005">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__999&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YG5_sUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__Ready__1000" guard="_YHXSs0r4Eem5qeRdwCQ7KQ" source="_YCLQsEr4Eem5qeRdwCQ7KQ" target="_tSpXwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YHXSs0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1008">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHXSskr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1008">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Ready__1000&quot;,&quot;Debug__B__Ex__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YG5_skr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__reqFlowInit__1001" guard="_YHXSsUr4Eem5qeRdwCQ7KQ" source="_YCLQsEr4Eem5qeRdwCQ7KQ" target="_tSql4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YHXSsUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1007">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHXSsEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1007">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YG6mwEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__reqFlowInit__1002" guard="_YHWroUr4Eem5qeRdwCQ7KQ" source="_YCLQsEr4Eem5qeRdwCQ7KQ" target="_tSr0AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_YHWroUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1006">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHWroEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1006">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_YG704Er4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__1003" source="_YCEjAEr4Eem5qeRdwCQ7KQ" target="_YCLQsEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YHDJoEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__1002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1004&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_YG704Ur4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__1004" guard="_YHX5wUr4Eem5qeRdwCQ7KQ" source="_YCLQsEr4Eem5qeRdwCQ7KQ" target="_YCI0cEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_YHX5wUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1009">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHX5wEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1009">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1004&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tSpXwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSpXwkrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSxTkUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready__942">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tSql4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSql4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;reqFlowInit&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSzv0ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit__943">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tSr0AErDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSr0AUrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqFlowInit&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS098UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit__944">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tStCIErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tStCIUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS3aMErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__945">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YCLQsEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__911" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_YCSlcEr4Eem5qeRdwCQ7KQ" name="Init__State__912"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tTDncErDEem2BZRQc2M93A" name="Debug__Path__NoResponseFromServer" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tTEOgUrDEem2BZRQc2M93A" name="Debug__C__NoResponseFromServer">
              <connectionPoint xmi:id="_tTFcoUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tTGqwErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_XjnFYEr4Eem5qeRdwCQ7KQ" name="From__Parent__456" kind="entryPoint"/>
              <connectionPoint xmi:id="_XjtMAEr4Eem5qeRdwCQ7KQ" name="To__Parent__458" kind="exitPoint"/>
              <region xmi:id="_tTEOgkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tTWiYErDEem2BZRQc2M93A" name="Debug__init__trans__NoResponseFromServer" source="_tTFcoUrDEem2BZRQc2M93A" target="_tTTfEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTgTYErDEem2BZRQc2M93A" name="Debug__init__trans__NoResponseFromServer__974">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__init__trans__NoResponseFromServer&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tTWiYUrDEem2BZRQc2M93A" name="Debug__Ex__WaitingForReply" source="_tTTfEErDEem2BZRQc2M93A" target="_tTUGIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTWiY0rDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTWiYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tTXJcErDEem2BZRQc2M93A" name="Debug__AC__NoResponseFromServer" source="_tTUGIErDEem2BZRQc2M93A" target="_tTUtMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTXwgErDEem2BZRQc2M93A" name="ServiceFailure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Service Failur.....\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__AC__NoResponseFromServer&quot;,(char *)&quot;Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTXJcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tTXwgUrDEem2BZRQc2M93A" name="Debug__En__Ready" source="_tTUtMErDEem2BZRQc2M93A" target="_tTV7UErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTXwg0rDEem2BZRQc2M93A" name="ReadyEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__En__Ready&quot;,(char *)&quot;Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTXwgkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tTYXkErDEem2BZRQc2M93A" name="Debug__end__trans__NoResponseFromServer" source="_tTV7UErDEem2BZRQc2M93A" target="_tTGqwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTlL4ErDEem2BZRQc2M93A" name="Debug__end__trans__NoResponseFromServer__979">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__end__trans__NoResponseFromServer&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTYXkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XkAG8Er4Eem5qeRdwCQ7KQ" name="Trans__Init__State__461462" source="_Xj7OcEr4Eem5qeRdwCQ7KQ" target="_XjyEgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Xr9JEEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__461&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__461&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__550&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__461&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__461&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__461&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__461&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XkDKQEr4Eem5qeRdwCQ7KQ" name="Trans__ex463" source="_tTGqwErDEem2BZRQc2M93A" target="_XjyEgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XsNnwEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__550&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XkdZ8Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__NoResponseFromServer__464" source="_tTUtMErDEem2BZRQc2M93A" target="_XjyEgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Xr3pgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__550&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XkkHoEr4Eem5qeRdwCQ7KQ" name="PME_Trig465" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xkmj4Er4Eem5qeRdwCQ7KQ" name="PME_Trig466" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XkvGwEr4Eem5qeRdwCQ7KQ" name="PME_Trig467" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xk5e0Er4Eem5qeRdwCQ7KQ" name="PME_Trig468" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XlDP0Er4Eem5qeRdwCQ7KQ" name="PME_Trig469" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XlLysEr4Eem5qeRdwCQ7KQ" name="PME_Trig470" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XlNn4Er4Eem5qeRdwCQ7KQ" name="PME_Trig471" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XlRSQEr4Eem5qeRdwCQ7KQ" name="PME_Trig472" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XlX_8Er4Eem5qeRdwCQ7KQ" name="PME_Trig473" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XlbqUEr4Eem5qeRdwCQ7KQ" name="PME_Trig474" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xlhw8Er4Eem5qeRdwCQ7KQ" name="PME_Trig475" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Xlk0QEr4Eem5qeRdwCQ7KQ" name="PME_Trig476" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xlrh8Er4Eem5qeRdwCQ7KQ" name="PME_Trig477" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XltXIEr4Eem5qeRdwCQ7KQ" name="PME_Trig478" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xl2hEEr4Eem5qeRdwCQ7KQ" name="PME_Trig479" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xl5kYEr4Eem5qeRdwCQ7KQ" name="PME_Trig480" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xl_rAEr4Eem5qeRdwCQ7KQ" name="PME_Trig481" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XmDVYEr4Eem5qeRdwCQ7KQ" name="PME_Trig482" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XmJcAEr4Eem5qeRdwCQ7KQ" name="PME_Trig483" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XmLRMEr4Eem5qeRdwCQ7KQ" name="PME_Trig484" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XmT0EEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__NoResponseFromServer__485" source="_tTUGIErDEem2BZRQc2M93A" target="_XjyEgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XsLLgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__550&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Xmc-AEr4Eem5qeRdwCQ7KQ" name="PME_Trig486" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XmfaQEr4Eem5qeRdwCQ7KQ" name="PME_Trig487" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xmn9IEr4Eem5qeRdwCQ7KQ" name="PME_Trig488" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XmqZYEr4Eem5qeRdwCQ7KQ" name="PME_Trig489" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XmyVMEr4Eem5qeRdwCQ7KQ" name="PME_Trig490" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xm0KYEr4Eem5qeRdwCQ7KQ" name="PME_Trig491" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xm8GMEr4Eem5qeRdwCQ7KQ" name="PME_Trig492" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xm97YEr4Eem5qeRdwCQ7KQ" name="PME_Trig493" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XnHFUEr4Eem5qeRdwCQ7KQ" name="PME_Trig494" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XnPoMEr4Eem5qeRdwCQ7KQ" name="PME_Trig495" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XnSrgEr4Eem5qeRdwCQ7KQ" name="PME_Trig496" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XnYyIEr4Eem5qeRdwCQ7KQ" name="PME_Trig497" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xnb1cEr4Eem5qeRdwCQ7KQ" name="PME_Trig498" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XnijIEr4Eem5qeRdwCQ7KQ" name="PME_Trig499" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xnm0kEr4Eem5qeRdwCQ7KQ" name="PME_Trig500" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XnvXcEr4Eem5qeRdwCQ7KQ" name="PME_Trig501" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xnzo4Er4Eem5qeRdwCQ7KQ" name="PME_Trig502" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xn6WkEr4Eem5qeRdwCQ7KQ" name="PME_Trig503" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XoDggEr4Eem5qeRdwCQ7KQ" name="PME_Trig504" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XoKOMEr4Eem5qeRdwCQ7KQ" name="PME_Trig505" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XoQU0Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__Ready__506" source="_tTV7UErDEem2BZRQc2M93A" target="_XjyEgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XsX_0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__550&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_XoYQoEr4Eem5qeRdwCQ7KQ" name="PME_Trig507" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XoiBoEr4Eem5qeRdwCQ7KQ" name="PME_Trig508" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xom6IEr4Eem5qeRdwCQ7KQ" name="PME_Trig509" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XouO4Er4Eem5qeRdwCQ7KQ" name="PME_Trig510" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Xo1joEr4Eem5qeRdwCQ7KQ" name="PME_Trig511" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xo3Y0Er4Eem5qeRdwCQ7KQ" name="PME_Trig512" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xo6cIEr4Eem5qeRdwCQ7KQ" name="PME_Trig513" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XpBJ0Er4Eem5qeRdwCQ7KQ" name="PME_Trig514" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XpC_AEr4Eem5qeRdwCQ7KQ" name="PME_Trig515" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XpLh4Er4Eem5qeRdwCQ7KQ" name="PME_Trig516" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XpS2oEr4Eem5qeRdwCQ7KQ" name="PME_Trig517" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_XpUr0Er4Eem5qeRdwCQ7KQ" name="PME_Trig518" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XpVS4Er4Eem5qeRdwCQ7KQ" name="PME_Trig519" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XpXIEEr4Eem5qeRdwCQ7KQ" name="PME_Trig520" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XpdOsEr4Eem5qeRdwCQ7KQ" name="PME_Trig521" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XpgSAEr4Eem5qeRdwCQ7KQ" name="PME_Trig522" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XpjVUEr4Eem5qeRdwCQ7KQ" name="PME_Trig523" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XpqDAEr4Eem5qeRdwCQ7KQ" name="PME_Trig524" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XpwJoEr4Eem5qeRdwCQ7KQ" name="PME_Trig525" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xpz0AEr4Eem5qeRdwCQ7KQ" name="PME_Trig526" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_Xp1pMEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__WaitingForReply__527" source="_tTTfEErDEem2BZRQc2M93A" target="_XjyEgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XsVjkEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__550&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Xp4sgEr4Eem5qeRdwCQ7KQ" name="PME_Trig528" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xp-zIEr4Eem5qeRdwCQ7KQ" name="PME_Trig529" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XqCdgEr4Eem5qeRdwCQ7KQ" name="PME_Trig530" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XqKZUEr4Eem5qeRdwCQ7KQ" name="PME_Trig531" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XqS8MEr4Eem5qeRdwCQ7KQ" name="PME_Trig532" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_Xqa4AEr4Eem5qeRdwCQ7KQ" name="PME_Trig533" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XqdUQEr4Eem5qeRdwCQ7KQ" name="PME_Trig534" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XqnFQEr4Eem5qeRdwCQ7KQ" name="PME_Trig535" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XqvoIEr4Eem5qeRdwCQ7KQ" name="PME_Trig536" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XqxdUEr4Eem5qeRdwCQ7KQ" name="PME_Trig537" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_Xq0goEr4Eem5qeRdwCQ7KQ" name="PME_Trig538" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Xq6nQEr4Eem5qeRdwCQ7KQ" name="PME_Trig539" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_Xq8ccEr4Eem5qeRdwCQ7KQ" name="PME_Trig540" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_XrB8AEr4Eem5qeRdwCQ7KQ" name="PME_Trig541" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XrGNcEr4Eem5qeRdwCQ7KQ" name="PME_Trig542" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_XrIpsEr4Eem5qeRdwCQ7KQ" name="PME_Trig543" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_XrPXYEr4Eem5qeRdwCQ7KQ" name="PME_Trig544" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_XrQlgEr4Eem5qeRdwCQ7KQ" name="PME_Trig545" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_XrUP4Er4Eem5qeRdwCQ7KQ" name="PME_Trig546" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_XraWgEr4Eem5qeRdwCQ7KQ" name="PME_Trig547" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_XrkukEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__NoResponseFromServer__548" guard="_XsYm4Ur4Eem5qeRdwCQ7KQ" source="_XjyEgEr4Eem5qeRdwCQ7KQ" target="_tTUtMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XsYm4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion554">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XsYm4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion554">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XrlVoEr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__NoResponseFromServer__549" guard="_Xshw0Ur4Eem5qeRdwCQ7KQ" source="_XjyEgEr4Eem5qeRdwCQ7KQ" target="_tTUGIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Xshw0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion558">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Xshw0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion558">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XrmjwEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__Ready__550" guard="_XsbDIEr4Eem5qeRdwCQ7KQ" source="_XjyEgEr4Eem5qeRdwCQ7KQ" target="_tTV7UErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XsbDIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion555">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XsacEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion555">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__550&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Xrnx4Er4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__WaitingForReply__551" guard="_XshJwUr4Eem5qeRdwCQ7KQ" source="_XjyEgEr4Eem5qeRdwCQ7KQ" target="_tTTfEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_XshJwUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion557">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_XshJwEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion557">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_XrtRcEr4Eem5qeRdwCQ7KQ" name="From__Parnet__ClientStateMachine__552" source="_XjnFYEr4Eem5qeRdwCQ7KQ" target="_XjyEgEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XsD2wEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__548&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__550&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__551&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__549&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Xrt4gEr4Eem5qeRdwCQ7KQ" name="To__Parent__ClientStateMachine__553" guard="_Xsf7oUr4Eem5qeRdwCQ7KQ" source="_XjyEgEr4Eem5qeRdwCQ7KQ" target="_XjtMAEr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Xsf7oUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion556">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Xsf7oEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion556">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__553&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tTTfEErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTTfEUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTY-oUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__969">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTUGIErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUGIUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTba4ErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer__970">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTUtMErDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUtMUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTcpAUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer__971">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTV7UErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTV7UUrDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTeeMErDEem2BZRQc2M93A" name="Debug__A__En__Ready__972">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_XjyEgEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__460" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Xj7OcEr4Eem5qeRdwCQ7KQ" name="Init__State__461"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tT_bkErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Wqx_8Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__1" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swtvYErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swtIUErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Server1Comm.recallAll();
ConfigComm.recallAll();
Server2Comm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sw_cMUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sw_cMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxFi0ErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxDGkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxYdwErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sxOswErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WmLMwEr4Eem5qeRdwCQ7KQ" name="loadHeap" specification="_WmJ-oEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WmVk0Er4Eem5qeRdwCQ7KQ" name="unLoadHeap" specification="_WmU9wEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WoUh0Ur4Eem5qeRdwCQ7KQ" name="sendMessage" specification="_WoUh0Er4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server1Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server1Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server2Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server2Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Woh9MEr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" specification="_WohWIEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WqNYMUr4Eem5qeRdwCQ7KQ" name="initForPMD" specification="_WqNYMEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Client::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Client::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Server1Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Server2Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;RequestTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ConfigTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ResponseTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Server1Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Server2Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swtIUErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swtvYErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sw_cMErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sw_cMUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxDGkErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxFi0ErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxDtoErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxEUsErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxE7wErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sxOswErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sxYdwErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxPT0ErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxQh8ErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxRwEUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxS-MUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxTlQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxUzYUrDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxWBgUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxXPoErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sUrDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WmJ-oEr4Eem5qeRdwCQ7KQ" name="loadHeap" visibility="private" method="_WmLMwEr4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_WmU9wEr4Eem5qeRdwCQ7KQ" name="unLoadHeap" visibility="private" method="_WmVk0Er4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_WoUh0Er4Eem5qeRdwCQ7KQ" name="sendMessage" visibility="private" method="_WoUh0Ur4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_WoW-EEr4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WoZaUEr4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WohWIEr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" visibility="private" method="_Woh9MEr4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_WoikQEr4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_WomOoEr4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_WqNYMEr4Eem5qeRdwCQ7KQ" name="initForPMD" visibility="private" method="_WqNYMUr4Eem5qeRdwCQ7KQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_yqOfEAxwEeaB2MeL96fedA" memberEnd="_yqPtMgxwEeaB2MeL96fedA _yqQUQAxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_yqPtMAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_yqPtMQxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_yqQUQAxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_yqOfEAxwEeaB2MeL96fedA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_z8f_QAxwEeaB2MeL96fedA" memberEnd="_z8hNYQxwEeaB2MeL96fedA _z8hNYgxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_z8gmUAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_z8hNYAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_z8hNYgxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_z8f_QAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_OiTE0AghEea_md0mpENoqg" name="Utility">
      <packagedElement xmi:type="uml:Class" xmi:id="_JesyoAgiEea_md0mpENoqg" name="HostInfo" visibility="public">
        <ownedAttribute xmi:id="_l4sHAAgiEea_md0mpENoqg" name="hostType" type="_TE8UIAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_6EOE0AglEea_md0mpENoqg" name="status" type="_gf1EkAglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_TE8UIAgiEea_md0mpENoqg" name="HostType">
        <ownedLiteral xmi:id="_Y-NNkAgiEea_md0mpENoqg" name="CLI"/>
        <ownedLiteral xmi:id="_aJOPMAgiEea_md0mpENoqg" name="SRV"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_gf1EkAglEea_md0mpENoqg" name="HostStatus" visibility="public">
        <ownedLiteral xmi:id="_ygyIkAglEea_md0mpENoqg" name="Active"/>
        <ownedLiteral xmi:id="_0Co84AglEea_md0mpENoqg" name="Deactive"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_-VDn4AglEea_md0mpENoqg" name="ServerRole">
        <ownedLiteral xmi:id="_GJYf0AgmEea_md0mpENoqg" name="Master"/>
        <ownedLiteral xmi:id="_HZTPkAgmEea_md0mpENoqg" name="Slave"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_T635wAgmEea_md0mpENoqg" name="ServerInfo">
        <generalization xmi:id="_jCuQYAgrEea_md0mpENoqg" general="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_Y5vngAgmEea_md0mpENoqg" name="role" type="_-VDn4AglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04e0AgsEea_md0mpENoqg" name="ConfigProtocol">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_v000cAgsEea_md0mpENoqg" name="ConfigProtocol">
          <interfaceRealization xmi:id="_v0_zkAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v09XUAgsEea_md0mpENoqg" contract="_v09XUAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_v1SHcAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg" contract="_v1PrMAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v09XUAgsEea_md0mpENoqg" name="ConfigProtocol">
          <ownedOperation xmi:id="_Mnix4AgtEea_md0mpENoqg" name="ReplyReplicationMode">
            <ownedParameter xmi:id="_Mnix4QgtEea_md0mpENoqg" name="RunningMode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_GvEtMAguEea_md0mpENoqg" name="ReplyServerRole">
            <ownedParameter xmi:id="_GvEtMQguEea_md0mpENoqg" name="ServerRole">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlnCwAguEea_md0mpENoqg" name="StartUp">
            <ownedParameter xmi:id="_oGfrwAlpEea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OMA_4AguEea_md0mpENoqg" name="Shutdown"/>
          <ownedOperation xmi:id="_QoJEEAguEea_md0mpENoqg" name="BIT"/>
          <ownedOperation xmi:id="_mLtTMAguEea_md0mpENoqg" name="ReplyMasterId">
            <ownedParameter xmi:id="_s-1M0AguEea_md0mpENoqg" name="MasterId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Iv10IAl4Eea_md0mpENoqg" name="ReplyConfig">
            <ownedParameter xmi:id="_Iv10IQl4Eea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1I9gAgsEea_md0mpENoqg" name="ConfigProtocol~">
          <ownedOperation xmi:id="_AW3DYAgtEea_md0mpENoqg" name="QueryReplicationMode"/>
          <ownedOperation xmi:id="_yDGNYAgtEea_md0mpENoqg" name="QueryServerRole">
            <ownedParameter xmi:id="_yDGNYQgtEea_md0mpENoqg" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_hZgIcAguEea_md0mpENoqg" name="QueryMasterId"/>
          <ownedOperation xmi:id="_BB20wAl4Eea_md0mpENoqg" name="QueryConfig"/>
          <ownedOperation xmi:id="_xu1hMAl4Eea_md0mpENoqg" name="IAMMaster">
            <ownedParameter xmi:id="_xu1hMQl4Eea_md0mpENoqg" name="MasterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1MA0AgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1I9gAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_v1N2AAgsEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1PrMAgsEea_md0mpENoqg" name="ConfigProtocolIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1SugAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_AW3qcAgtEea_md0mpENoqg" operation="_AW3DYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MnkAAAgtEea_md0mpENoqg" operation="_Mnix4AgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_yDG0cAgtEea_md0mpENoqg" operation="_yDGNYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_GvF7UAguEea_md0mpENoqg" operation="_GvEtMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MloQ4AguEea_md0mpENoqg" operation="_MlnCwAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_OMBm8AguEea_md0mpENoqg" operation="_OMA_4AguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_QoLgUAguEea_md0mpENoqg" operation="_QoJEEAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_hZh9oAguEea_md0mpENoqg" operation="_hZgIcAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_mLvIYAguEea_md0mpENoqg" operation="_mLtTMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_BB3b0Al4Eea_md0mpENoqg" operation="_BB20wAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_Iv3CQAl4Eea_md0mpENoqg" operation="_Iv10IAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xu1hMgl4Eea_md0mpENoqg" operation="_xu1hMAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RLyKYAgzEea_md0mpENoqg" name="EchoCapsule" classifierBehavior="_WlNQsAg0Eea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_PdYSYAg0Eea_md0mpENoqg" name="Echo" visibility="public" type="_nk_BAAgzEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WNSukAm2Eea_md0mpENoqg" value="8"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WOSNEAm2Eea_md0mpENoqg" value="8"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swEPIErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swFdQUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swGEUErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swS4oErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swTfsErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swUt0ErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swXKEErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Z8AgIEr4Eem5qeRdwCQ7KQ" name="dbgPortForEchoCapsule" visibility="protected" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z8BHMEr4Eem5qeRdwCQ7KQ" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_Z8BHMUr4Eem5qeRdwCQ7KQ" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WlNQsAg0Eea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_abLcsAg0Eea_md0mpENoqg" name="Region1">
            <transition xmi:id="_ftWg8Ag0Eea_md0mpENoqg" name="init__WaitForEcho__8" source="_tKgvcErDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Izo0QAiiEea_md0mpENoqg" name="init">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;EchoCapsule: Intializing\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::init__WaitForEcho__8&quot;,(char *)&quot;Debug__Path__init__WaitForEcho__8&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_kUUFAAg0Eea_md0mpENoqg" name="DoEcho" source="_tJvTYErDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_L4RXcAg1Eea_md0mpENoqg" name="DoEcho">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was recieved\n&quot;;
    int tempid=msg->sapIndex0_;
    Echo.Echo().sendAt(tempid);
    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was replied\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::DoEcho&quot;,(char *)&quot;Debug__Path__DoEcho&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJy9wErDEem2BZRQc2M93A" name="Debug__DoEcho" source="_cfbzcAg0Eea_md0mpENoqg" target="_tJvTYErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJy9wUrDEem2BZRQc2M93A" name="Debug__DoEcho__687">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__DoEcho&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;Debug__Path__DoEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_2CMcAAg0Eea_md0mpENoqg" name="Echo" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tJ0y8ErDEem2BZRQc2M93A" name="Debug__DoEcho__S" guard="_tJ2BEUrDEem2BZRQc2M93A" source="_tJvTYErDEem2BZRQc2M93A" target="_tJxIkUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tJ2BEUrDEem2BZRQc2M93A" name="Debug__GuardDoEcho">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tJ2BEErDEem2BZRQc2M93A" name="Debug__GuardDoEcho">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ2oIErDEem2BZRQc2M93A" name="Debug__DoEcho__S__689">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__DoEcho__S&quot;,(char *)&quot;Debug__Path__DoEcho&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJ4dUErDEem2BZRQc2M93A" name="Debug__DoEcho__E" source="_tJxvoUrDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ5EYErDEem2BZRQc2M93A" name="Debug__DoEcho__E__690">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__DoEcho__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJ6SgErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ6SgkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange__692">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tJ6SgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ65kErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ65kkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint__693">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ65kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ7goErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ7gokrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint__694">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ7goUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8HsErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ8uwErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints__695">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ8HsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8uwUrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ9V0UrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode__696">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tJ9V0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ984ErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ984krDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg__697">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ984UrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKln8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8" source="_tLME4ErDEem2BZRQc2M93A" target="_tKgvcErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKln8UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__713">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;init&quot;,&quot;&quot;,&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitForEcho&quot;,&quot;DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;Echo&quot;,&quot;Echo&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tLOhIErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKndIErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__S" guard="_tKoEMUrDEem2BZRQc2M93A" source="_tKgvcErDEem2BZRQc2M93A" target="_tKjLsUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tKoEMUrDEem2BZRQc2M93A" name="Debug__Guardinit__WaitForEcho__8">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tKoEMErDEem2BZRQc2M93A" name="Debug__Guardinit__WaitForEcho__8">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKorQErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__S__715">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__init__WaitForEcho__8__S&quot;,(char *)&quot;Debug__Path__init__WaitForEcho__8&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tKp5YErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__E" source="_tKkZ0UrDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKqgcErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__E__716">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__init__WaitForEcho__8__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tKsVoErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKs8sErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange__718">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tKsVoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKtjwErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKtjwkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint__719">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKtjwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKuK0ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKux4UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint__720">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKux4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKvY8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKvY8krDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints__721">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKvY8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwAAErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwAAkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode__722">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tKwAAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwnEErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwnEkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg__723">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKwnEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tLNTAErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_bHyrEAg0Eea_md0mpENoqg" target="_tLME4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLNTAUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_Z85Q8Er4Eem5qeRdwCQ7KQ" name="3165" source="_tKgvcErDEem2BZRQc2M93A" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aBNJMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Z85Q8Ur4Eem5qeRdwCQ7KQ" name="3166" source="_tJvTYErDEem2BZRQc2M93A" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aBPlcEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Z854AEr4Eem5qeRdwCQ7KQ" name="From__Debug__InitState__3167" source="_tLME4ErDEem2BZRQc2M93A" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aA9RkEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_Z86fEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3168" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_Z87tMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3169" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Z887UEr4Eem5qeRdwCQ7KQ" name="PME_Trig3170" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Z8_XkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3171" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Z9Ca4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3172" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_Z9DpAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3173" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_Z9EQEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3174" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_Z9FeMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3175" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_Z9GsUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3176" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_Z9JIkEr4Eem5qeRdwCQ7KQ" name="From__WaitForEcho__3177" source="_cfbzcAg0Eea_md0mpENoqg" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aA3K8Er4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_Z9NaAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3178" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_Z9OBEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3179" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Z9PPMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3180" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Z9P2QEr4Eem5qeRdwCQ7KQ" name="PME_Trig3181" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_Z9REYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3182" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_Z9TgoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3183" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_Z9Wj8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3184" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
              <trigger xmi:id="_Z9YZIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3185" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_Z9aOUEr4Eem5qeRdwCQ7KQ" name="To__Debug__InitState__3186" guard="_aBbLoUr4Eem5qeRdwCQ7KQ" source="_Z8vf8Er4Eem5qeRdwCQ7KQ" target="_tLME4ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_aBbLoUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3290">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBbLoEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3290">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__3186&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Z9aOUUr4Eem5qeRdwCQ7KQ" name="To__WaitForEcho__3187" guard="_aBfdEUr4Eem5qeRdwCQ7KQ" source="_Z8vf8Er4Eem5qeRdwCQ7KQ" target="_cfbzcAg0Eea_md0mpENoqg">
              <ownedRule xmi:id="_aBfdEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3292">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBfdEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3292">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__WaitForEcho__3187&quot;,&quot;WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Z9cqkEr4Eem5qeRdwCQ7KQ" name="Trans__ex3188" source="_tKkZ0UrDEem2BZRQc2M93A" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aBYIUEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Z9dRoUr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__init__WaitForEcho__8__3190" guard="_aBZ9gUr4Eem5qeRdwCQ7KQ" source="_Z8vf8Er4Eem5qeRdwCQ7KQ" target="_Z9cqkUr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_aBZ9gUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3289">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBZ9gEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3289">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Z9d4sUr4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__init__WaitForEcho__8__3192" source="_Z9dRokr4Eem5qeRdwCQ7KQ" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aBDYMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Z-rZoEr4Eem5qeRdwCQ7KQ" name="Trans__ex3233" source="_tJxvoUrDEem2BZRQc2M93A" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aA5nMEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_Z-snwEr4Eem5qeRdwCQ7KQ" name="To__Substates__Debug__C__DoEcho__3235" guard="_aBdn4Ur4Eem5qeRdwCQ7KQ" source="_Z8vf8Er4Eem5qeRdwCQ7KQ" target="_Z-sAsEr4Eem5qeRdwCQ7KQ">
              <ownedRule xmi:id="_aBdn4Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3291">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_aBdn4Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3291">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__DoEcho__3235&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_Z-t14Ur4Eem5qeRdwCQ7KQ" name="From__Substates__Debug__C__DoEcho__3237" source="_Z-tO0Er4Eem5qeRdwCQ7KQ" target="_Z8vf8Er4Eem5qeRdwCQ7KQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aBIQsEr4Eem5qeRdwCQ7KQ">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__3235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__3187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_bHyrEAg0Eea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_cfbzcAg0Eea_md0mpENoqg" name="WaitForEcho">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tLow0ErDEem2BZRQc2M93A" name="WaitForEcho__735">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLpX4ErDEem2BZRQc2M93A" name="WaitForEcho__736">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tJvTYErDEem2BZRQc2M93A" name="Debug__Path__DoEcho" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tJwhgErDEem2BZRQc2M93A" name="Debug__C__DoEcho">
              <connectionPoint xmi:id="_tJxIkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tJxvoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_Z-sAsEr4Eem5qeRdwCQ7KQ" name="From__Parent__3234" kind="entryPoint"/>
              <connectionPoint xmi:id="_Z-tO0Er4Eem5qeRdwCQ7KQ" name="To__Parent__3236" kind="exitPoint"/>
              <region xmi:id="_tJwhgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tKFRoErDEem2BZRQc2M93A" name="Debug__init__trans__DoEcho" source="_tJxIkUrDEem2BZRQc2M93A" target="_tKAZIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKStAErDEem2BZRQc2M93A" name="Debug__init__trans__DoEcho__703">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__init__trans__DoEcho&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tKFRoUrDEem2BZRQc2M93A" name="Debug__Ex__WaitForEcho" source="_tKAZIErDEem2BZRQc2M93A" target="_tKBnQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKUiMErDEem2BZRQc2M93A" name="Debug__Ex__WaitForEcho__705">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__Ex__WaitForEcho&quot;,(char *)&quot;Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKFRokrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tKF4sErDEem2BZRQc2M93A" name="Debug__AC__DoEcho" source="_tKBnQErDEem2BZRQc2M93A" target="_tKC1YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKF4skrDEem2BZRQc2M93A" name="DoEcho" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was recieved\n&quot;;
    int tempid=msg->sapIndex0_;
    Echo.Echo().sendAt(tempid);
    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was replied\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__AC__DoEcho&quot;,(char *)&quot;Debug__B__Ac__DoEcho&quot;,(char *)&quot;Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKF4sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tKGfwErDEem2BZRQc2M93A" name="Debug__En__WaitForEcho" source="_tKC1YErDEem2BZRQc2M93A" target="_tKEDgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKbP4ErDEem2BZRQc2M93A" name="Debug__En__WaitForEcho__708">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__En__WaitForEcho&quot;,(char *)&quot;Debug__A__Ac__DoEcho&quot;,(char *)&quot;Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKGfwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tKHG0ErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho" source="_tKEDgErDEem2BZRQc2M93A" target="_tJxvoUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKdFEErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho__710">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__end__trans__DoEcho&quot;,(char *)&quot;Debug__A__En__WaitForEcho&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKHG0UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_Z-z8gEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__32393240" source="_Z-yHUEr4Eem5qeRdwCQ7KQ" target="_Z-vEAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aAsL0Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3239&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3239&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3239&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3239&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3280&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3239&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3239&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Z-z8gUr4Eem5qeRdwCQ7KQ" name="Trans__ex3241" source="_tJxvoUrDEem2BZRQc2M93A" target="_Z-vEAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aAZQ4Er4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3280&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Z-2YwEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__WaitForEcho__3242" source="_tKEDgErDEem2BZRQc2M93A" target="_Z-vEAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aAkQAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3280&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Z-2_0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3243" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Z-41AEr4Eem5qeRdwCQ7KQ" name="PME_Trig3244" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-7RQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3245" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-9tgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3246" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z--7oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3247" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Z_AJwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3248" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Z_BX4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3249" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Z_DNEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3250" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_Z_G3cEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__DoEcho__3251" source="_tKC1YErDEem2BZRQc2M93A" target="_Z-vEAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aAbtIEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3280&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Z_IFkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3252" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Z_JTsEr4Eem5qeRdwCQ7KQ" name="PME_Trig3253" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_Kh0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3254" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_NlIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3255" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_R2kEr4Eem5qeRdwCQ7KQ" name="PME_Trig3256" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Z_US0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3257" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Z_XWIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3258" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Z_bnkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3259" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_Z_c1sEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__DoEcho__3260" source="_tKBnQErDEem2BZRQc2M93A" target="_Z-vEAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aAmFMEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3280&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Z_eD0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3261" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Z_huMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3262" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_lYkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3263" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_nNwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3264" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_pC8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3265" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Z_sGQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3266" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Z_vwoEr4Eem5qeRdwCQ7KQ" name="PME_Trig3267" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Z_xl0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3268" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_Z_yz8Er4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ex__WaitForEcho__3269" source="_tKAZIErDEem2BZRQc2M93A" target="_Z-vEAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aAfXgEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3280&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Z_0pIEr4Eem5qeRdwCQ7KQ" name="PME_Trig3270" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Z_2eUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3271" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_6vwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3272" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z_8k8Er4Eem5qeRdwCQ7KQ" name="PME_Trig3273" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z__oQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3274" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_aAEgwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3275" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_aAFu4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3276" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_aAHkEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3277" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_aANqsEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__WaitForEcho__3278" guard="_aAtZ8Ur4Eem5qeRdwCQ7KQ" source="_Z-vEAEr4Eem5qeRdwCQ7KQ" target="_tKEDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aAtZ8Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3284">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAtZ8Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3284">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__WaitForEcho__3278&quot;,&quot;Debug__A__En__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aAORwEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__DoEcho__3279" guard="_aAvPIUr4Eem5qeRdwCQ7KQ" source="_Z-vEAEr4Eem5qeRdwCQ7KQ" target="_tKC1YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aAvPIUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3288">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAvPIEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3288">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__DoEcho__3279&quot;,&quot;Debug__A__Ac__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aAORwUr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__DoEcho__3280" guard="_aAuoE0r4Eem5qeRdwCQ7KQ" source="_Z-vEAEr4Eem5qeRdwCQ7KQ" target="_tKBnQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aAuoE0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3287">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAuoEkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3287">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__DoEcho__3280&quot;,&quot;Debug__B__Ac__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aAORwkr4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ex__WaitForEcho__3281" guard="_aAuoEUr4Eem5qeRdwCQ7KQ" source="_Z-vEAEr4Eem5qeRdwCQ7KQ" target="_tKAZIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_aAuoEUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3286">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAuoEEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3286">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_aAQG8Er4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3282" source="_Z-sAsEr4Eem5qeRdwCQ7KQ" target="_Z-vEAEr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_aAU_cEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3278&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3280&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_aAQG8Ur4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3283" guard="_aAuBAUr4Eem5qeRdwCQ7KQ" source="_Z-vEAEr4Eem5qeRdwCQ7KQ" target="_Z-tO0Er4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_aAuBAUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3285">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_aAuBAEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3285">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3283&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKAZIErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKAZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKIU8UrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho__698">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKBnQErDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKBnQUrDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;DoEcho&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKKxMUrDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho__699">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKC1YErDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKC1YUrDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;DoEcho&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKNNcUrDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho__700">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKEDgErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKEqkErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKPCoErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho__701">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Z-vEAEr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3238" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Z-yHUEr4Eem5qeRdwCQ7KQ" name="Init__State__3239"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tKgvcErDEem2BZRQc2M93A" name="Debug__Path__init__WaitForEcho__8" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tKh9kUrDEem2BZRQc2M93A" name="Debug__C__init__WaitForEcho__8">
              <connectionPoint xmi:id="_tKjLsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tKkZ0UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_Z9cqkUr4Eem5qeRdwCQ7KQ" name="From__Parent__3189" kind="entryPoint"/>
              <connectionPoint xmi:id="_Z9dRokr4Eem5qeRdwCQ7KQ" name="To__Parent__3191" kind="exitPoint"/>
              <region xmi:id="_tKh9kkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tK2tsErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8" source="_tKjLsUrDEem2BZRQc2M93A" target="_tKzDUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLC68ErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8__728">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__init__trans__init__WaitForEcho__8&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tK2tsUrDEem2BZRQc2M93A" name="Debug__Ac__init__WaitForEcho__8" source="_tKzDUUrDEem2BZRQc2M93A" target="_tK0RcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tK370ErDEem2BZRQc2M93A" name="init" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;EchoCapsule: Intializing\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK2tskrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tK370UrDEem2BZRQc2M93A" name="Debug__En__WaitForEcho" source="_tK0RcErDEem2BZRQc2M93A" target="_tK1fkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLF-QErDEem2BZRQc2M93A" name="Debug__En__WaitForEcho__731">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__En__WaitForEcho&quot;,(char *)&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK4i4ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tK4i4UrDEem2BZRQc2M93A" name="Debug__end__trans__init__WaitForEcho__8" source="_tK1fkErDEem2BZRQc2M93A" target="_tKkZ0UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLHMYErDEem2BZRQc2M93A" name="Debug__end__trans__init__WaitForEcho__8__733">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__end__trans__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK5J8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_Z9j_UEr4Eem5qeRdwCQ7KQ" name="Trans__ex3195" source="_tKkZ0UrDEem2BZRQc2M93A" target="_Z9d4skr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z-lTAEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__3226&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__3224&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__3225&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__3228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Z9kmYEr4Eem5qeRdwCQ7KQ" name="Trans__Init__State__31943196" source="_Z9ixMEr4Eem5qeRdwCQ7KQ" target="_Z9d4skr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z-o9YEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__3226&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__3224&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__3225&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__3228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3194&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Z9npsEr4Eem5qeRdwCQ7KQ" name="From__Debug__A__Ac__init__WaitForEcho__8__3197" source="_tK0RcErDEem2BZRQc2M93A" target="_Z9d4skr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z-fMYEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__3226&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__3224&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__3225&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__3228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Z9qtAEr4Eem5qeRdwCQ7KQ" name="PME_Trig3198" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Z9r7IEr4Eem5qeRdwCQ7KQ" name="PME_Trig3199" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z9tJQEr4Eem5qeRdwCQ7KQ" name="PME_Trig3200" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z9uXYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3201" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z9vlgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3202" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Z9zP4Er4Eem5qeRdwCQ7KQ" name="PME_Trig3203" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Z92TMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3204" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Z93hUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3205" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_Z94IYEr4Eem5qeRdwCQ7KQ" name="From__Debug__B__Ac__init__WaitForEcho__8__3206" source="_tKzDUUrDEem2BZRQc2M93A" target="_Z9d4skr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z-oWUEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__3226&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__3224&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__3225&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__3228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Z95WgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3207" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Z98Z0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3208" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-AEMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3209" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-BSUEr4Eem5qeRdwCQ7KQ" name="PME_Trig3210" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-B5YEr4Eem5qeRdwCQ7KQ" name="PME_Trig3211" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Z-DHgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3212" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Z-E8sEr4Eem5qeRdwCQ7KQ" name="PME_Trig3213" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Z-GK0Er4Eem5qeRdwCQ7KQ" name="PME_Trig3214" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_Z-Gx4Er4Eem5qeRdwCQ7KQ" name="From__Debug__A__En__init__WaitForEcho__8__3215" source="_tK1fkErDEem2BZRQc2M93A" target="_Z9d4skr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z-gagEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__3226&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__3224&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__3225&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__3228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_Z-InEEr4Eem5qeRdwCQ7KQ" name="PME_Trig3216" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_Z-MRcEr4Eem5qeRdwCQ7KQ" name="PME_Trig3217" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-NfkEr4Eem5qeRdwCQ7KQ" name="PME_Trig3218" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-PUwEr4Eem5qeRdwCQ7KQ" name="PME_Trig3219" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_Z-TmMEr4Eem5qeRdwCQ7KQ" name="PME_Trig3220" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_Z-VbYEr4Eem5qeRdwCQ7KQ" name="PME_Trig3221" event="_WgTOQEr4Eem5qeRdwCQ7KQ" port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
                  <trigger xmi:id="_Z-WpgEr4Eem5qeRdwCQ7KQ" name="PME_Trig3222" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_Z-X3oEr4Eem5qeRdwCQ7KQ" name="PME_Trig3223" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_Z-a68Er4Eem5qeRdwCQ7KQ" name="To__Debug__A__Ac__init__WaitForEcho__8__3224" guard="_Z-qLgUr4Eem5qeRdwCQ7KQ" source="_Z9d4skr4Eem5qeRdwCQ7KQ" target="_tK0RcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Z-qLgUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3230">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z-qLgEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3230">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__init__WaitForEcho__8__3224&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Z-a68Ur4Eem5qeRdwCQ7KQ" name="To__Debug__B__Ac__init__WaitForEcho__8__3225" guard="_Z-qLg0r4Eem5qeRdwCQ7KQ" source="_Z9d4skr4Eem5qeRdwCQ7KQ" target="_tKzDUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Z-qLg0r4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3231">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z-qLgkr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3231">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__init__WaitForEcho__8__3225&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Z-biAEr4Eem5qeRdwCQ7KQ" name="To__Debug__A__En__init__WaitForEcho__8__3226" guard="_Z-pkcUr4Eem5qeRdwCQ7KQ" source="_Z9d4skr4Eem5qeRdwCQ7KQ" target="_tK1fkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_Z-pkcUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3229">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z-pkcEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3229">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__init__WaitForEcho__8__3226&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_Z-d-QEr4Eem5qeRdwCQ7KQ" name="From__Parnet__StateMachine1__3227" source="_Z9cqkUr4Eem5qeRdwCQ7KQ" target="_Z9d4skr4Eem5qeRdwCQ7KQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Z-hooEr4Eem5qeRdwCQ7KQ">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__3226&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__3224&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__3225&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__3228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_Z-d-QUr4Eem5qeRdwCQ7KQ" name="To__Parent__StateMachine1__3228" guard="_Z-qykUr4Eem5qeRdwCQ7KQ" source="_Z9d4skr4Eem5qeRdwCQ7KQ" target="_Z9dRokr4Eem5qeRdwCQ7KQ">
                  <ownedRule xmi:id="_Z-qykUr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3232">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_Z-qykEr4Eem5qeRdwCQ7KQ" name="PME_checkDecesion3232">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3228&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKzDUUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKzqYErDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK6YEUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8__724">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK0RcErDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK0RcUrDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK9bYUrDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8__725">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK1fkErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK2GoErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLBFwErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8__726">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Z9d4skr4Eem5qeRdwCQ7KQ" name="DecesionPoint__3193" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_Z9ixMEr4Eem5qeRdwCQ7KQ" name="Init__State__3194"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tLME4ErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Z8vf8Er4Eem5qeRdwCQ7KQ" name="DecesionPoint__3164" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swDoEErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swDBAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Echo.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swK80ErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_swKVwErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQcYErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_swOAIErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swnBsUrDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_swdQsErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z8S0AUr4Eem5qeRdwCQ7KQ" name="loadHeap" specification="_Z8S0AEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z8TbEUr4Eem5qeRdwCQ7KQ" name="unLoadHeap" specification="_Z8TbEEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z8clAUr4Eem5qeRdwCQ7KQ" name="sendMessage" specification="_Z8clAEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;Echo&quot;) {
  if(message.signal==&quot;Echo&quot;) {
   if(message.payload.size()==0){
    Echo.Echo().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z8foUUr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" specification="_Z8foUEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Z8qncUr4Eem5qeRdwCQ7KQ" name="initForPMD" specification="_Z8qncEr4Eem5qeRdwCQ7KQ">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EchoCapsule::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EchoCapsule::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swDBAErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swDoEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swKVwErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_swK80ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swOAIErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_swQcYErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swOAIUrDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swOnMErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swP1UErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_swdQsErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_swnBsUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swd3wErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swee0UrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swg7EUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiJMUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiwQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swj-YErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlMgErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlzkErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swmaoErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swnBsErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z8S0AEr4Eem5qeRdwCQ7KQ" name="loadHeap" visibility="private" method="_Z8S0AUr4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_Z8TbEEr4Eem5qeRdwCQ7KQ" name="unLoadHeap" visibility="private" method="_Z8TbEUr4Eem5qeRdwCQ7KQ"/>
        <ownedOperation xmi:id="_Z8clAEr4Eem5qeRdwCQ7KQ" name="sendMessage" visibility="private" method="_Z8clAUr4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_Z8dMEEr4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z8dMEUr4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z8foUEr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" visibility="private" method="_Z8foUUr4Eem5qeRdwCQ7KQ">
          <ownedParameter xmi:id="_Z8foUkr4Eem5qeRdwCQ7KQ" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Z8g2cEr4Eem5qeRdwCQ7KQ" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Z8qncEr4Eem5qeRdwCQ7KQ" name="initForPMD" visibility="private" method="_Z8qncUr4Eem5qeRdwCQ7KQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nlBdQAgzEea_md0mpENoqg" name="Echo">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_nk_BAAgzEea_md0mpENoqg" name="Echo">
          <interfaceRealization xmi:id="_nlGVwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlD5gAgzEea_md0mpENoqg" contract="_nlD5gAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_nlZQsAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg" contract="_nlTKEAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlD5gAgzEea_md0mpENoqg" name="Echo"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlL1UAgzEea_md0mpENoqg" name="Echo~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlQGwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlL1UAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_nlR78AgzEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlTKEAgzEea_md0mpENoqg" name="EchoIO">
          <ownedOperation xmi:id="_7w0BIAgzEea_md0mpENoqg" name="Echo"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlae0AgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_7w0oMAgzEea_md0mpENoqg" operation="_7w0BIAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y1UDYAg6Eea_md0mpENoqg" name="SystemConfig">
        <ownedAttribute xmi:id="_lX6oUAg6Eea_md0mpENoqg" name="ConfigOK">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_lX6oUQg6Eea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rA4b8Ag6Eea_md0mpENoqg" name="RunningMode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_xR7jQAg6Eea_md0mpENoqg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4Gg1cAg6Eea_md0mpENoqg" name="MasterId">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_7FhkQAg6Eea_md0mpENoqg" name="MasterName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6tXsMAmpEea_md0mpENoqg" name="MasterList">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hzi4QAmqEea_md0mpENoqg" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HzxhwAmqEea_md0mpENoqg" value="2"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JwlzwAmqEea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_cYIKwAimEea_md0mpENoqg" name="loadConfig" specification="_QF0roAimEea_md0mpENoqg">
          <language>C++</language>
          <body>{
    /* UMLRTGEN-USERREGION-BEGIN platform:/resource/Replication/Replication.uml Replication::Configuration operation loadConfig */
    std::cout&lt;&lt;&quot;Config Class: load configuration from file\n&quot;;
    char result[PATH_MAX];
    readlink( &quot;/proc/self/exe&quot;, result, PATH_MAX );
    string temps=string(result);
    size_t tempP=temps.rfind('/');
    if (tempP>0)
    {
    temps=temps.substr(0,tempP);
    }
    else
    temps=&quot;&quot;;
    string MasterConfigFileName=&quot;./Master.config&quot;;
    string RunningModeConfigFileName=&quot;./RunningMode.config&quot;;
    string MasterConfigPath=temps+MasterConfigFileName;
    string RunningModeConfigPath=temps+RunningModeConfigFileName;
    cout &lt;&lt; RunningModeConfigPath &lt;&lt; endl;
    //ifstream RunningModeConfigFile(RunningModeConfigPath.c_str());
    ifstream RunningModeConfigFile(&quot;./RunningMode.config&quot;);
    string line;
    if (RunningModeConfigFile.is_open())
    {
    (getline(RunningModeConfigFile,line));
    {
    if (atoi(line.c_str())==0)
    {
    this->RunningMode=0;
    this->ConfigOK=true;
    RunningModeConfigFile.close();
    cout&lt;&lt;&quot;Configuration Loaded successfully, the running mode is active\n&quot;;
    //            			return true;
    }
    else if (atoi(line.c_str())==1)
    {
    this->RunningMode=1;
    //ifstream MasterConfigFile(MasterConfigPath.c_str());
    ifstream MasterConfigFile(&quot;Master.config&quot;);

    if (MasterConfigFile.is_open() &amp;&amp; (getline(MasterConfigFile,line)))
    if (line==&quot;server1&quot; || line==&quot;server2&quot;)
    {
    this->MasterName= new char[line.size()+1];
    strcpy(this->MasterName,line.c_str());
    cout &lt;&lt;&quot;Master Name is:&quot;&lt;&lt; this->MasterName&lt;&lt;endl;
    this->ConfigOK=true;
    cout &lt;&lt; &quot;configuration Loaded successfully, the running mode is passive|&quot;
    &lt;&lt;&quot; Master name is : &quot;&lt;&lt;this->MasterName&lt;&lt;endl;
    RunningModeConfigFile.close();
    MasterConfigFile.close();
    //           					return true;
    }
    else
    {
    cout&lt;&lt;&quot;Master Name is wrong, please fix it\n&quot;;
    this->ConfigOK=false;
    //           					return false;
    }
    else
    {
    cout&lt;&lt;&quot;Master config file(Master.config) cann't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //         				return false;
    }
    }
    else
    {
    cout&lt;&lt; &quot;The running mode value is incorrect, please fix that\n&quot;;
    this->ConfigOK=false;
    //       			return false;
    }
    }
    }
    else
    {
    cout&lt;&lt;&quot;The Running Mode config(RunningMode.config) file can't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //     	return false;
    }/* UMLRTGEN-USERREGION-END */
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QF0roAimEea_md0mpENoqg" name="loadConfig" method="_cYIKwAimEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4_QwUAnEEeaGqPUk-4V4qQ" name="Services">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_4--ccAnEEeaGqPUk-4V4qQ" name="Services">
          <interfaceRealization xmi:id="_5AwlIAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AqegAnEEeaGqPUk-4V4qQ" contract="_5AqegAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_5A8LUAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ" contract="_5A5IAAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AqegAnEEeaGqPUk-4V4qQ" name="Services">
          <ownedOperation xmi:id="_P49E4AnFEeaGqPUk-4V4qQ" name="Reply">
            <ownedParameter xmi:id="_P49E4QnFEeaGqPUk-4V4qQ" name="Result">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_P49E4gnFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AzBYAnEEeaGqPUk-4V4qQ" name="Services~">
          <ownedOperation xmi:id="_G3ENoAnFEeaGqPUk-4V4qQ" name="Request">
            <ownedParameter xmi:id="_G3ENoQnFEeaGqPUk-4V4qQ" name="ServiceID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_G3ENognFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A3S0AnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AzBYAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_5A354AnEEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5A5IAAnEEeaGqPUk-4V4qQ" name="ServicesIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A_1sAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_G3K7UAnFEeaGqPUk-4V4qQ" operation="_G3ENoAnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_P4-6EAnFEeaGqPUk-4V4qQ" operation="_P49E4AnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_f2zWUApBEeaGqPUk-4V4qQ" name="FailOver">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_f2ud0ApBEeaGqPUk-4V4qQ" name="FailOver">
          <interfaceRealization xmi:id="_f4EhoApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f39z8ApBEeaGqPUk-4V4qQ" contract="_f39z8ApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_f4O5sApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ" contract="_f4L2YApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f39z8ApBEeaGqPUk-4V4qQ" name="FailOver"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4FvwApBEeaGqPUk-4V4qQ" name="FailOver~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4KoQApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4FvwApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_f4LPUApBEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4L2YApBEeaGqPUk-4V4qQ" name="FailOverIO">
          <ownedOperation xmi:id="_xM6GgApBEeaGqPUk-4V4qQ" name="IAmAlive">
            <ownedParameter xmi:id="_xM6GgQpBEeaGqPUk-4V4qQ" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4Qu4ApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xM6tkApBEeaGqPUk-4V4qQ" operation="_xM6GgApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gDfqsAghEea_md0mpENoqg" name="Simulator">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_m1qiEAghEea_md0mpENoqg" client="_lYTBoAggEea_md0mpENoqg" supplier="_rPgFkAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_nyBcoAghEea_md0mpENoqg" client="_gDfqsAghEea_md0mpENoqg" supplier="_z1vioAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_d9MBUAgoEea_md0mpENoqg" name="Simulator" isActive="true">
        <ownedAttribute xmi:id="_ljfrYAgoEea_md0mpENoqg" name="server1" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ljjVwAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ljjVwQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_odv2AAgoEea_md0mpENoqg" name="client" visibility="protected" type="_zpdLYAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_odySQQgoEea_md0mpENoqg" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ody5UAgoEea_md0mpENoqg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_trcC4AgoEea_md0mpENoqg" name="ENV" visibility="protected" type="_sMZ5EAgoEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_trfGMAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trfGMQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6qCFoAg7Eea_md0mpENoqg" name="server2" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6qGXEAg7Eea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6qGXEQg7Eea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_O1v3cOM6EeaTpaLNj-zYpw" name="RTConnector6">
          <end xmi:id="_O1xsoOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_fL3OQAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_O1xsoeM6EeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_P9Q5IOM6EeaTpaLNj-zYpw" name="RTConnector7">
          <end xmi:id="_P9SHQOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_lRZpIAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_P9SHQeM6EeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_zuXWQONAEeaTpaLNj-zYpw" name="RTConnector8">
          <end xmi:id="_zuZygONAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_zuZygeNAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
        <ownedConnector xmi:id="_0bs9YONAEeaTpaLNj-zYpw" name="RTConnector9">
          <end xmi:id="_0buLgONAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_0buLgeNAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_stgqYErDEem2BZRQc2M93A" name="Debug__Top">
      <ownedAttribute xmi:id="_st6TAErDEem2BZRQc2M93A" name="Debug__Gateway">
        <type xmi:type="uml:Class" href="../CommGateWay/model.uml#_XIyCcAdxEeadtKuU2t6fMg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_st9WUErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_st99YErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_sufh0ErDEem2BZRQc2M93A" name="Debug__Simulator" type="_d9MBUAgoEea_md0mpENoqg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suhXAErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_suh-EErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_a6yckEr4Eem5qeRdwCQ7KQ" name="dbgAgent" type="_Wew9MEr4Eem5qeRdwCQ7KQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_a6zDoEr4Eem5qeRdwCQ7KQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_a6zDoUr4Eem5qeRdwCQ7KQ" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Wew9MEr4Eem5qeRdwCQ7KQ" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WgVDcEr4Eem5qeRdwCQ7KQ" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WgVqgEr4Eem5qeRdwCQ7KQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_WgWRkEr4Eem5qeRdwCQ7KQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_Wi-HwEr4Eem5qeRdwCQ7KQ" name="dbgPortForClient" visibility="public" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Wi-u0Er4Eem5qeRdwCQ7KQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_Wi-u0Ur4Eem5qeRdwCQ7KQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_YSNQwEr4Eem5qeRdwCQ7KQ" name="dbgPortForServer" visibility="public" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YSN30Er4Eem5qeRdwCQ7KQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_YSN30Ur4Eem5qeRdwCQ7KQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_Z8DjcEr4Eem5qeRdwCQ7KQ" name="dbgPortForEchoCapsule" visibility="public" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Z8EKgEr4Eem5qeRdwCQ7KQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_Z8EKgUr4Eem5qeRdwCQ7KQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_aBmKwEr4Eem5qeRdwCQ7KQ" name="dbgPortForENV" visibility="public" type="_WfmqsEr4Eem5qeRdwCQ7KQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aBnY4Er4Eem5qeRdwCQ7KQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_aBnY4Ur4Eem5qeRdwCQ7KQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WfShoEr4Eem5qeRdwCQ7KQ" name="dbgAgent StateMachine">
        <region xmi:id="_YRs6cEr4Eem5qeRdwCQ7KQ" name="mainRegion">
          <transition xmi:id="_YRxL4Er4Eem5qeRdwCQ7KQ" name="Trans__Init__State__11331134" source="_YRv9wEr4Eem5qeRdwCQ7KQ" target="_YRthgUr4Eem5qeRdwCQ7KQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YSC4sEr4Eem5qeRdwCQ7KQ">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1133&quot;,&quot;New__State__1132&quot;,&quot;To__New__State__1132__1137&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1133&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_YR35kEr4Eem5qeRdwCQ7KQ" name="From__New__State__1132__1135" source="_YRuIkUr4Eem5qeRdwCQ7KQ" target="_YRthgUr4Eem5qeRdwCQ7KQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_YSDfwEr4Eem5qeRdwCQ7KQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__1132&quot;,&quot;New__State__1132&quot;,&quot;To__New__State__1132__1137&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__1132&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_YR5HsEr4Eem5qeRdwCQ7KQ" name="PME_Trig1136" port="_WgVDcEr4Eem5qeRdwCQ7KQ">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_YR8LAEr4Eem5qeRdwCQ7KQ" name="To__New__State__1132__1137" guard="_YSEG0Ur4Eem5qeRdwCQ7KQ" source="_YRthgUr4Eem5qeRdwCQ7KQ" target="_YRuIkUr4Eem5qeRdwCQ7KQ">
            <ownedRule xmi:id="_YSEG0Ur4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1138">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_YSEG0Er4Eem5qeRdwCQ7KQ" name="PME_checkDecesion1138">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__1132__1137&quot;,&quot;New__State__1132&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_YRthgUr4Eem5qeRdwCQ7KQ" name="DecesionPoint__1131" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_YRuIkUr4Eem5qeRdwCQ7KQ" name="New__State__1132">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_a6040Er4Eem5qeRdwCQ7KQ" name="New__State__1132">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_YRv9wEr4Eem5qeRdwCQ7KQ" name="Init__State__1133"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YRHEkUr4Eem5qeRdwCQ7KQ" name="loadHeap" specification="_YRHEkEr4Eem5qeRdwCQ7KQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YROZUUr4Eem5qeRdwCQ7KQ" name="unLoadHeap" specification="_YROZUEr4Eem5qeRdwCQ7KQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YRRcoUr4Eem5qeRdwCQ7KQ" name="sendMessage" specification="_YRRcoEr4Eem5qeRdwCQ7KQ">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForClient&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForClient.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YRbNoUr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" specification="_YRbNoEr4Eem5qeRdwCQ7KQ">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YRmMwEr4Eem5qeRdwCQ7KQ" name="initForPMD" specification="_YRllsEr4Eem5qeRdwCQ7KQ">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_YRHEkEr4Eem5qeRdwCQ7KQ" name="loadHeap" visibility="private" method="_YRHEkUr4Eem5qeRdwCQ7KQ"/>
      <ownedOperation xmi:id="_YROZUEr4Eem5qeRdwCQ7KQ" name="unLoadHeap" visibility="private" method="_YROZUUr4Eem5qeRdwCQ7KQ"/>
      <ownedOperation xmi:id="_YRRcoEr4Eem5qeRdwCQ7KQ" name="sendMessage" visibility="private" method="_YRRcoUr4Eem5qeRdwCQ7KQ">
        <ownedParameter xmi:id="_YRSqwEr4Eem5qeRdwCQ7KQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_YRWVIEr4Eem5qeRdwCQ7KQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YRbNoEr4Eem5qeRdwCQ7KQ" name="sendInternalMessage" visibility="private" method="_YRbNoUr4Eem5qeRdwCQ7KQ">
        <ownedParameter xmi:id="_YRcbwEr4Eem5qeRdwCQ7KQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_YRgtMEr4Eem5qeRdwCQ7KQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YRllsEr4Eem5qeRdwCQ7KQ" name="initForPMD" visibility="private" method="_YRmMwEr4Eem5qeRdwCQ7KQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_WfhyMEr4Eem5qeRdwCQ7KQ" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_WfmqsEr4Eem5qeRdwCQ7KQ" name="dbgProtocol">
        <interfaceRealization xmi:id="_WgFL0Er4Eem5qeRdwCQ7KQ" client="_WfmqsEr4Eem5qeRdwCQ7KQ" supplier="_WfpuAEr4Eem5qeRdwCQ7KQ" contract="_WfpuAEr4Eem5qeRdwCQ7KQ"/>
        <interfaceRealization xmi:id="_WgGZ8Er4Eem5qeRdwCQ7KQ" client="_WfmqsEr4Eem5qeRdwCQ7KQ" supplier="_Wfv0oEr4Eem5qeRdwCQ7KQ" contract="_Wfv0oEr4Eem5qeRdwCQ7KQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_WfpuAEr4Eem5qeRdwCQ7KQ" name="dbgProtocol">
        <ownedOperation xmi:id="_WgMgkEr4Eem5qeRdwCQ7KQ" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_Wft_cEr4Eem5qeRdwCQ7KQ" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_Wfv0oEr4Eem5qeRdwCQ7KQ" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Wfxp0Er4Eem5qeRdwCQ7KQ" client="_WfmqsEr4Eem5qeRdwCQ7KQ" supplier="_Wft_cEr4Eem5qeRdwCQ7KQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_WfzfAEr4Eem5qeRdwCQ7KQ" client="_WfmqsEr4Eem5qeRdwCQ7KQ" supplier="_Wfv0oEr4Eem5qeRdwCQ7KQ"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_WgTOQEr4Eem5qeRdwCQ7KQ" operation="_WgMgkEr4Eem5qeRdwCQ7KQ"/>
    </packagedElement>
    <profileApplication xmi:id="_lcu1sAggEea_md0mpENoqg">
      <eAnnotations xmi:id="_lcwq4AggEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_0p1pUAgxEea_md0mpENoqg">
      <eAnnotations xmi:id="_0p1pUQgxEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_iMahwAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMbv4AifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_iMeMIAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMgBUAifEea_md0mpENoqg" source="PapyrusVersion">
        <details xmi:id="_iMgBUQifEea_md0mpENoqg" key="Version" value="0.0.11"/>
        <details xmi:id="_iMgBUgifEea_md0mpENoqg" key="Comment" value=""/>
        <details xmi:id="_iMgBUwifEea_md0mpENoqg" key="Copyright" value=""/>
        <details xmi:id="_iMgBVAifEea_md0mpENoqg" key="Date" value="2015-12-10"/>
        <details xmi:id="_iMgBVQifEea_md0mpENoqg" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_iMeMIQifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_5AGSMAghEea_md0mpENoqg" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_xCrWYAgmEea_md0mpENoqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_zp7FcAgmEea_md0mpENoqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_d9rwkAgoEea_md0mpENoqg" base_Class="_d9MBUAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_ljiusAgoEea_md0mpENoqg" base_Property="_ljfrYAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_odySQAgoEea_md0mpENoqg" base_Property="_odv2AAgoEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_sM-g0AgoEea_md0mpENoqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_trefIAgoEea_md0mpENoqg" base_Property="_trcC4AgoEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_v05s8AgsEea_md0mpENoqg" base_Package="_v04e0AgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v09-YAgsEea_md0mpENoqg" base_Interface="_v09XUAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1KLoAgsEea_md0mpENoqg" base_Interface="_v1I9gAgsEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1Q5UAgsEea_md0mpENoqg" base_Interface="_v1PrMAgsEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_v1T8oAgsEea_md0mpENoqg" base_Collaboration="_v000cAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_GXxLAAgvEea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_GXsSgAgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_g3oVAAgvEea_md0mpENoqg" isWired="false" base_Port="_g3nG4AgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_-3NuMAgvEea_md0mpENoqg" isWired="false" base_Port="_-3KD0AgvEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_RMf8EAgzEea_md0mpENoqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_nlCrYAgzEea_md0mpENoqg" base_Package="_nlBdQAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlFHoAgzEea_md0mpENoqg" base_Interface="_nlD5gAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlO4oAgzEea_md0mpENoqg" base_Interface="_nlL1UAgzEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlW0cAgzEea_md0mpENoqg" base_Interface="_nlTKEAgzEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_nlbF4AgzEea_md0mpENoqg" base_Collaboration="_nk_BAAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_PdauoAg0Eea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_PdYSYAg0Eea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_6qFwAAg7Eea_md0mpENoqg" base_Property="_6qCFoAg7Eea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_l72A4AifEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include&lt;iostream>" base_Class="_sMZ5EAgoEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ZYVLEAihEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>" base_Class="_RLyKYAgzEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qp8qkAimEea_md0mpENoqg" implementationPreface="#include &lt;iostream>&#xA;#include &lt;fstream>&#xA;#include &lt;limits.h>&#xA;#include &lt;unistd.h>&#xA;using namespace std;" base_Class="_Y1UDYAg6Eea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_b2D_sAjLEea_md0mpENoqg" isWired="false" base_Port="_b1NrIAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_wQWSkAjLEea_md0mpENoqg" isWired="false" base_Port="_wQHCAAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_X4gvkAjMEea_md0mpENoqg" isWired="false" base_Port="_X4ceIAjMEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6nxNAAkFEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" implementationEnding="" base_Class="_xCGHkAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_skTr8AlKEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" base_Class="_zpdLYAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_iLgtsAmuEea_md0mpENoqg" isWired="false" base_Port="_iLeRcAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_oWjToAmuEea_md0mpENoqg" isWired="false" base_Port="_oWg3YAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_tQAV4AmuEea_md0mpENoqg" isWired="false" base_Port="_tP9SkAmuEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_5AbN8AnEEeaGqPUk-4V4qQ" base_Package="_4_QwUAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5AuI4AnEEeaGqPUk-4V4qQ" base_Interface="_5AqegAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A1doAnEEeaGqPUk-4V4qQ" base_Interface="_5AzBYAnEEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A69MAnEEeaGqPUk-4V4qQ" base_Interface="_5A5IAAnEEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_5BBq4AnEEeaGqPUk-4V4qQ" base_Collaboration="_4--ccAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_fMA_QAnFEeaGqPUk-4V4qQ" base_Port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lRkBMAnFEeaGqPUk-4V4qQ" base_Port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_pQ9x0AnMEeaGqPUk-4V4qQ" base_Port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8sLrYAovEeaGqPUk-4V4qQ" isWired="false" base_Port="_8sGy4AovEeaGqPUk-4V4qQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_f22ZoApBEeaGqPUk-4V4qQ" base_Package="_f2zWUApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4CscApBEeaGqPUk-4V4qQ" base_Interface="_f39z8ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4IMAApBEeaGqPUk-4V4qQ" base_Interface="_f4FvwApBEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4NrkApBEeaGqPUk-4V4qQ" base_Interface="_f4L2YApBEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_f4R9AApBEeaGqPUk-4V4qQ" base_Collaboration="_f2ud0ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_HIz9IApCEeaGqPUk-4V4qQ" base_Port="_HIvrsApCEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_ZDu1IApDEeaGqPUk-4V4qQ" isWired="false" base_Port="_ZDrx0ApDEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_Vj4_QApFEeaGqPUk-4V4qQ" isWired="false" base_Port="_Vj1U4ApFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lxxyEApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_lxs5kApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_rXbzAApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_rXZWwApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8587kAs1EeaGqPUk-4V4qQ" isWired="false" base_Port="_855RMAs1EeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_mKiJYOM2EeaTpaLNj-zYpw" isWired="false" base_Port="_mKfGEOM2EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_O1yTsOM6EeaTpaLNj-zYpw" base_Connector="_O1v3cOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_P9SuUOM6EeaTpaLNj-zYpw" base_Connector="_P9Q5IOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTPort xmi:id="_rmqMIOM8EeaTpaLNj-zYpw" base_Port="_rmnI0OM8EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_zuZyguNAEeaTpaLNj-zYpw" base_Connector="_zuXWQONAEeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_0bvZoONAEeaTpaLNj-zYpw" base_Connector="_0bs9YONAEeaTpaLNj-zYpw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_71nSEPMWEeauO5SNGpOV7w" headerPreface="#include &lt;fstream>" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <RTCppProperties:AttributeProperties xmi:id="_gvmcIPMYEeauO5SNGpOV7w" type="std::ofstream" base_Property="_dCa_wPMYEeauO5SNGpOV7w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_b45wYKozEeiNHY6qjNhZ4w" base_Region="_lvCAwAlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fAFjwKozEeiNHY6qjNhZ4w" base_Pseudostate="_hY-7oAlNEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_gOt6EKozEeiNHY6qjNhZ4w" base_State="_jLPjcAlNEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_hsv-UKozEeiNHY6qjNhZ4w" base_State="_UrcckAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_i6NP8KozEeiNHY6qjNhZ4w" base_State="_hgSoEAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_kA2H4KozEeiNHY6qjNhZ4w" base_Pseudostate="_Rrrc0AlvEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_lJDGEKozEeiNHY6qjNhZ4w" base_Pseudostate="_Pyhf8Ap5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mRbDYKozEeiNHY6qjNhZ4w" base_Pseudostate="_kLngAAp5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_nsAyEKozEeiNHY6qjNhZ4w" base_State="_2g5S0ONBEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_o4vD4KozEeiNHY6qjNhZ4w" base_Pseudostate="_M8iZcONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTRegion xmi:id="_rpSf8KozEeiNHY6qjNhZ4w" base_Region="_ThAzEONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTState xmi:id="_tdqAkKozEeiNHY6qjNhZ4w" base_State="_Px2BIAqSEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ud1rMKozEeiNHY6qjNhZ4w" base_Pseudostate="_NU8OsAszEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_veq2EKozEeiNHY6qjNhZ4w" base_State="_ZaK1gAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wg0PkKozEeiNHY6qjNhZ4w" base_Pseudostate="_5yefMAszEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xiP3YKozEeiNHY6qjNhZ4w" base_Pseudostate="_8WMAUONDEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_0dGe8KozEeiNHY6qjNhZ4w" base_StateMachine="_lT4V0AlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_880dQKozEeiNHY6qjNhZ4w" base_Pseudostate="_88oQAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_88_cYKozEeiNHY6qjNhZ4w" base_Pseudostate="_887yAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_Y4mLoKo0EeiNHY6qjNhZ4w" base_Region="_Bk0GwAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_bQ-_UKo0EeiNHY6qjNhZ4w" base_Pseudostate="_Oll1cAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_cpwwIKo0EeiNHY6qjNhZ4w" base_State="_Q5-S4AlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_du4lIKo0EeiNHY6qjNhZ4w" base_State="_IjppsAlhEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_eug2IKo0EeiNHY6qjNhZ4w" base_State="_aVMuMAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_f8K8EKo0EeiNHY6qjNhZ4w" base_State="_fO-gkAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_g871gKo0EeiNHY6qjNhZ4w" base_State="_uScfwAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_h7dTQKo0EeiNHY6qjNhZ4w" base_Pseudostate="_qr_J4AnCEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_jFMigKo0EeiNHY6qjNhZ4w" base_State="_KwFHIAo0EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_k5P6EKo0EeiNHY6qjNhZ4w" base_StateMachine="_BKT8EAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_Rg85wKpiEeiNHY6qjNhZ4w" base_State="_cfbzcAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SuGpYKpiEeiNHY6qjNhZ4w" base_Pseudostate="_bHyrEAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ZzTxgKpiEeiNHY6qjNhZ4w" base_Region="_abLcsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_bJC1YKpiEeiNHY6qjNhZ4w" base_StateMachine="_WlNQsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1LnmcKpiEeiNHY6qjNhZ4w" base_Pseudostate="_npsCMAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_2O6PcKpiEeiNHY6qjNhZ4w" base_State="_sdehUAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_3WYN0KpiEeiNHY6qjNhZ4w" base_State="__kywcAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_4kr0AKpiEeiNHY6qjNhZ4w" base_State="_NvBagAgxEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uXY4KpiEeiNHY6qjNhZ4w" base_Pseudostate="_dWznsAgxEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_8Lil8KpiEeiNHY6qjNhZ4w" base_Region="_jSIzIAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_BsmawKpjEeiNHY6qjNhZ4w" base_StateMachine="_gU8CMAgwEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_stxwIErDEem2BZRQc2M93A" base_Class="_stgqYErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_st8vQErDEem2BZRQc2M93A" base_Property="_st6TAErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_sugv8ErDEem2BZRQc2M93A" base_Property="_sufh0ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svEJkErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svHM4ErDEem2BZRQc2M93A" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sviqsErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_svhckErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_svluAErDEem2BZRQc2M93A" type="SROManager" base_Property="_svkf4ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_svoKQErDEem2BZRQc2M93A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_svu38ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_svrNkUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_svyiUErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_svwtIErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv0-kErDEem2BZRQc2M93A" type="const char *" base_Parameter="_svzJYErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv3a0ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv2MsErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv5QAErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv4B4ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swFdQErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swHScErDEem2BZRQc2M93A" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swWjAErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_swUt0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swYYMErDEem2BZRQc2M93A" type="SROManager" base_Property="_swXKEErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_swbbgErDEem2BZRQc2M93A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_swee0ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_swd3wErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swg7EErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_swee0UrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swiJMErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swg7EUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swjXUErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swiwQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swklcErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swj-YErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swxZwErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sw1EIErDEem2BZRQc2M93A" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxJNMErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sxH_EErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxLCYErDEem2BZRQc2M93A" type="SROManager" base_Property="_sxJNMUrDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sxM3kErDEem2BZRQc2M93A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxP64ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sxPT0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxRwEErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sxQh8ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxS-MErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxRwEUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxUzYErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxTlQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxWBgErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxUzYUrDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxhAoErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxjc4ErDEem2BZRQc2M93A" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx1wwErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sx1JsErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx2-4ErDEem2BZRQc2M93A" type="SROManager" base_Property="_sx2X0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sx40EErDEem2BZRQc2M93A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx8ecErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sx7QUErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx9FgErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sx8ecUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx-ToErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx9skErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx_hwErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx-6sErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_syAv4ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_syAI0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syTDwErDEem2BZRQc2M93A" base_Pseudostate="_syROkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_syVgAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syXVMErDEem2BZRQc2M93A" base_Pseudostate="_syVgAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syYjUErDEem2BZRQc2M93A" base_Pseudostate="_syX8QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_szFG4ErDEem2BZRQc2M93A" base_Region="_syTq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szGVAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szRUIErDEem2BZRQc2M93A" base_State="_szG8EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szU-gErDEem2BZRQc2M93A" base_State="_szJYUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szXawErDEem2BZRQc2M93A" base_State="_szMboErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szk2IErDEem2BZRQc2M93A" base_Pseudostate="_szkPEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szmrUErDEem2BZRQc2M93A" base_State="_szldMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sznSYErDEem2BZRQc2M93A" base_Pseudostate="_szmrUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szpuoErDEem2BZRQc2M93A" base_Pseudostate="_sznSYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sz93sErDEem2BZRQc2M93A" base_Region="_szldMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0KE8ErDEem2BZRQc2M93A" base_State="_sz-ewErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0NIQErDEem2BZRQc2M93A" base_State="_sz_s4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0PkgErDEem2BZRQc2M93A" base_State="_s0BiEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0T18ErDEem2BZRQc2M93A" base_State="_s0DXQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0fcIErDEem2BZRQc2M93A" base_Pseudostate="_s0e1EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0gqQErDEem2BZRQc2M93A" base_State="_s0fcIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0hRUErDEem2BZRQc2M93A" base_Pseudostate="_s0gqQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0h4YErDEem2BZRQc2M93A" base_Pseudostate="_s0hRUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s00zUErDEem2BZRQc2M93A" base_Region="_s0fcIkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0_LYErDEem2BZRQc2M93A" base_State="_s01aYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1COsErDEem2BZRQc2M93A" base_State="_s02BcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1GgIErDEem2BZRQc2M93A" base_State="_s032oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1L_sErDEem2BZRQc2M93A" base_State="_s05EwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ZbEErDEem2BZRQc2M93A" base_Pseudostate="_s1Y0AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1apMErDEem2BZRQc2M93A" base_State="_s1ZbEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ceYErDEem2BZRQc2M93A" base_Pseudostate="_s1apMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1dFcErDEem2BZRQc2M93A" base_Pseudostate="_s1ceYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s1uLMErDEem2BZRQc2M93A" base_Region="_s1ZbEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s11f8ErDEem2BZRQc2M93A" base_State="_s1uLMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s14jQErDEem2BZRQc2M93A" base_State="_s1uyQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s18NoErDEem2BZRQc2M93A" base_State="_s1wAYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2Ia4ErDEem2BZRQc2M93A" base_Pseudostate="_s2HMwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2JpAErDEem2BZRQc2M93A" base_State="_s2JB8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2K3IErDEem2BZRQc2M93A" base_Pseudostate="_s2KQEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2LeMErDEem2BZRQc2M93A" base_Pseudostate="_s2K3IUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s2eZIErDEem2BZRQc2M93A" base_Region="_s2JB8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2pYQErDEem2BZRQc2M93A" base_State="_s2eZIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2r0gErDEem2BZRQc2M93A" base_State="_s2gOUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2wF8ErDEem2BZRQc2M93A" base_State="_s2iDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s22zoErDEem2BZRQc2M93A" base_State="_s2j4sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3IgcErDEem2BZRQc2M93A" base_Pseudostate="_s3GEMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3JukErDEem2BZRQc2M93A" base_State="_s3JHgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3MK0ErDEem2BZRQc2M93A" base_Pseudostate="_s3KVoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3Mx4ErDEem2BZRQc2M93A" base_Pseudostate="_s3MK0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s3bbYErDEem2BZRQc2M93A" base_Region="_s3JHgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3hiAErDEem2BZRQc2M93A" base_State="_s3bbYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3klUErDEem2BZRQc2M93A" base_State="_s3cpgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3nooErDEem2BZRQc2M93A" base_State="_s3d3oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s31rEErDEem2BZRQc2M93A" base_Pseudostate="_s31EAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s32SIErDEem2BZRQc2M93A" base_State="_s31rEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s325MErDEem2BZRQc2M93A" base_Pseudostate="_s32SIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s34HUErDEem2BZRQc2M93A" base_Pseudostate="_s33gQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s4H-8ErDEem2BZRQc2M93A" base_Region="_s31rEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4P6wErDEem2BZRQc2M93A" base_State="_s4ImAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4SXAErDEem2BZRQc2M93A" base_State="_s4J0IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4WocErDEem2BZRQc2M93A" base_State="_s4LCQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4iOoErDEem2BZRQc2M93A" base_Pseudostate="_s4hAgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4i1sErDEem2BZRQc2M93A" base_State="_s4iOoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4kq4ErDEem2BZRQc2M93A" base_Pseudostate="_s4jcwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4lR8ErDEem2BZRQc2M93A" base_Pseudostate="_s4kq4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s40igErDEem2BZRQc2M93A" base_Region="_s4iOokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5DzEErDEem2BZRQc2M93A" base_State="_s40igUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5GPUErDEem2BZRQc2M93A" base_State="_s41woErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5JSoErDEem2BZRQc2M93A" base_State="_s46CEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5NkEErDEem2BZRQc2M93A" base_State="_s49scErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5ZKQErDEem2BZRQc2M93A" base_Pseudostate="_s5YjMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5ZxUErDEem2BZRQc2M93A" base_State="_s5ZKQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5a_cErDEem2BZRQc2M93A" base_Pseudostate="_s5aYYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5bmgErDEem2BZRQc2M93A" base_Pseudostate="_s5a_cUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s5qQAErDEem2BZRQc2M93A" base_Region="_s5ZKQkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5yL0ErDEem2BZRQc2M93A" base_State="_s5q3EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s512MErDEem2BZRQc2M93A" base_State="_s5sFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s545gErDEem2BZRQc2M93A" base_State="_s5ssQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s59K8ErDEem2BZRQc2M93A" base_State="_s5t6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s6Z24ErDEem2BZRQc2M93A" base_State="_s6YowErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s60GkErDEem2BZRQc2M93A" base_Pseudostate="_s6zfgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s61UsErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s617wErDEem2BZRQc2M93A" base_Pseudostate="_s61UsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s62i0ErDEem2BZRQc2M93A" base_Pseudostate="_s617wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7GacErDEem2BZRQc2M93A" base_Region="_s60GkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7IPoErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7NvMErDEem2BZRQc2M93A" base_State="_s7IPoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7QygErDEem2BZRQc2M93A" base_State="_s7JdwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7SnsErDEem2BZRQc2M93A" base_State="_s7Kr4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7dm0ErDEem2BZRQc2M93A" base_Pseudostate="_s7c_wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7eN4ErDEem2BZRQc2M93A" base_State="_s7dm0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7e08ErDEem2BZRQc2M93A" base_Pseudostate="_s7eN4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7fcAErDEem2BZRQc2M93A" base_Pseudostate="_s7e08UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7yW8ErDEem2BZRQc2M93A" base_Region="_s7dm0krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s78vAErDEem2BZRQc2M93A" base_State="_s7y-AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7_yUErDEem2BZRQc2M93A" base_State="_s70MIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8C1oErDEem2BZRQc2M93A" base_State="_s71aQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8IVMErDEem2BZRQc2M93A" base_State="_s73PcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8T7YErDEem2BZRQc2M93A" base_Pseudostate="_s8TUUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8VwkErDEem2BZRQc2M93A" base_State="_s8T7YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8WXoErDEem2BZRQc2M93A" base_Pseudostate="_s8VwkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8W-sErDEem2BZRQc2M93A" base_Pseudostate="_s8WXoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s8ndYErDEem2BZRQc2M93A" base_Region="_s8T7YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8x1cErDEem2BZRQc2M93A" base_State="_s8ndYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s804wErDEem2BZRQc2M93A" base_State="_s8pSkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s84jIErDEem2BZRQc2M93A" base_State="_s8qgsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s89boErDEem2BZRQc2M93A" base_State="_s8s88ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9K3AErDEem2BZRQc2M93A" base_Pseudostate="_s9KP8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9LeEErDEem2BZRQc2M93A" base_State="_s9K3AUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9MsMErDEem2BZRQc2M93A" base_Pseudostate="_s9MFIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9NTQErDEem2BZRQc2M93A" base_Pseudostate="_s9MsMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s9dK4ErDEem2BZRQc2M93A" base_Region="_s9K3AkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9ltwErDEem2BZRQc2M93A" base_State="_s9dx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9oxEErDEem2BZRQc2M93A" base_State="_s9fAEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9rNUErDEem2BZRQc2M93A" base_State="_s9gOMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9wF0ErDEem2BZRQc2M93A" base_State="_s9g1QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s97sAErDEem2BZRQc2M93A" base_Pseudostate="_s97E8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s986IErDEem2BZRQc2M93A" base_State="_s97sAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s99hMErDEem2BZRQc2M93A" base_Pseudostate="_s986IUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9-IQErDEem2BZRQc2M93A" base_Pseudostate="_s99hMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-NY0ErDEem2BZRQc2M93A" base_Region="_s98TEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-TfcErDEem2BZRQc2M93A" base_State="_s-N_4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-WiwErDEem2BZRQc2M93A" base_State="_s-POAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-a0MErDEem2BZRQc2M93A" base_State="_s-QcIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-pdsErDEem2BZRQc2M93A" base_Pseudostate="_s-oPkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-qr0ErDEem2BZRQc2M93A" base_State="_s-pdsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-rS4ErDEem2BZRQc2M93A" base_Pseudostate="_s-qr0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-r58ErDEem2BZRQc2M93A" base_Pseudostate="_s-rS4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-4uQErDEem2BZRQc2M93A" base_Region="_s-pdskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_B4MErDEem2BZRQc2M93A" base_State="_s-5VUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_E7gErDEem2BZRQc2M93A" base_State="_s-58YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_HXwErDEem2BZRQc2M93A" base_State="_s-7xkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_LpMErDEem2BZRQc2M93A" base_State="_s-8_sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_WoUErDEem2BZRQc2M93A" base_Pseudostate="_s_WBQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_X2cErDEem2BZRQc2M93A" base_State="_s_WoUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_YdgErDEem2BZRQc2M93A" base_Pseudostate="_s_X2cUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_ZEkErDEem2BZRQc2M93A" base_Pseudostate="_s_YdgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s_pjQErDEem2BZRQc2M93A" base_Region="_s_XPYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_vp4ErDEem2BZRQc2M93A" base_State="_s_pjQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_ytMErDEem2BZRQc2M93A" base_State="_s_qxYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_1JcErDEem2BZRQc2M93A" base_State="_s_r_gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s__hgErDEem2BZRQc2M93A" base_Pseudostate="_s_-6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAAvoErDEem2BZRQc2M93A" base_State="_tAAIkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tABWsErDEem2BZRQc2M93A" base_Pseudostate="_tAAvoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tACk0ErDEem2BZRQc2M93A" base_Pseudostate="_tAB9wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tASccErDEem2BZRQc2M93A" base_Region="_tAAIkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWG0ErDEem2BZRQc2M93A" base_State="_tATDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWt4ErDEem2BZRQc2M93A" base_State="_tATqkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAa_UErDEem2BZRQc2M93A" base_Pseudostate="_tAaYQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAbmYErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAc0gErDEem2BZRQc2M93A" base_Pseudostate="_tAbmYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAdbkErDEem2BZRQc2M93A" base_Pseudostate="_tAc0gUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tAssIErDEem2BZRQc2M93A" base_Region="_tAa_UkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAtTMErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAyywErDEem2BZRQc2M93A" base_State="_tAt6QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA1PAErDEem2BZRQc2M93A" base_State="_tAuhUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA45YErDEem2BZRQc2M93A" base_State="_tAvvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBFGoErDEem2BZRQc2M93A" base_Pseudostate="_tBD4gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBGUwErDEem2BZRQc2M93A" base_State="_tBFGoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIJ8ErDEem2BZRQc2M93A" base_Pseudostate="_tBG70ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIxAErDEem2BZRQc2M93A" base_Pseudostate="_tBIJ8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tBVlUErDEem2BZRQc2M93A" base_Region="_tBFGokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBbr8ErDEem2BZRQc2M93A" base_State="_tBVlUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBevQErDEem2BZRQc2M93A" base_State="_tBWzcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBhLgErDEem2BZRQc2M93A" base_State="_tBYBkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBrjkErDEem2BZRQc2M93A" base_Pseudostate="_tBq8gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBsxsErDEem2BZRQc2M93A" base_State="_tBrjkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwErDEem2BZRQc2M93A" base_Pseudostate="_tBsxsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwkrDEem2BZRQc2M93A" base_Pseudostate="_tBtYwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tB8CQErDEem2BZRQc2M93A" base_Region="_tBrjkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCFzQErDEem2BZRQc2M93A" base_State="_tB8pUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCI2kErDEem2BZRQc2M93A" base_State="_tB9QYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCL54ErDEem2BZRQc2M93A" base_State="_tB-egErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCRZcErDEem2BZRQc2M93A" base_State="_tCATsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCdmsErDEem2BZRQc2M93A" base_Pseudostate="_tCc_oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCe00ErDEem2BZRQc2M93A" base_State="_tCdmsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgC8ErDEem2BZRQc2M93A" base_Pseudostate="_tCe00UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgqAErDEem2BZRQc2M93A" base_Pseudostate="_tCgC8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tCwhoErDEem2BZRQc2M93A" base_Region="_tCdmskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCzk8ErDEem2BZRQc2M93A" base_State="_tCwhoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC0zEErDEem2BZRQc2M93A" base_State="_tCxIsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC6SoErDEem2BZRQc2M93A" base_Pseudostate="_tC5EgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC65sErDEem2BZRQc2M93A" base_State="_tC6SoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC8u4ErDEem2BZRQc2M93A" base_Pseudostate="_tC7gwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC9V8ErDEem2BZRQc2M93A" base_Pseudostate="_tC8u4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tDN0oErDEem2BZRQc2M93A" base_Region="_tC6SokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDTUMErDEem2BZRQc2M93A" base_State="_tDN0oUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDVJYErDEem2BZRQc2M93A" base_State="_tDPCwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDW-kErDEem2BZRQc2M93A" base_State="_tDQQ4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDjy4ErDEem2BZRQc2M93A" base_Pseudostate="_tDikwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDkZ8ErDEem2BZRQc2M93A" base_State="_tDjy4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDloEErDEem2BZRQc2M93A" base_Pseudostate="_tDlBAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDmPIErDEem2BZRQc2M93A" base_Pseudostate="_tDloEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tD378ErDEem2BZRQc2M93A" base_Region="_tDjy4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD7mUErDEem2BZRQc2M93A" base_State="_tD378UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD8NYErDEem2BZRQc2M93A" base_State="_tD5KEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEBF4ErDEem2BZRQc2M93A" base_Pseudostate="_tEAe0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tECUAErDEem2BZRQc2M93A" base_State="_tEBF4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEC7EErDEem2BZRQc2M93A" base_Pseudostate="_tECUAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEDiIErDEem2BZRQc2M93A" base_Pseudostate="_tEC7EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tEQWcErDEem2BZRQc2M93A" base_Region="_tEBs8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEXEIErDEem2BZRQc2M93A" base_State="_tEQWcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEaHcErDEem2BZRQc2M93A" base_State="_tERkkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEb8oErDEem2BZRQc2M93A" base_State="_tESysErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEgOEErDEem2BZRQc2M93A" base_State="_tEUA0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEqmIErDEem2BZRQc2M93A" base_Pseudostate="_tEp_EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEr0QErDEem2BZRQc2M93A" base_State="_tEqmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEsbUErDEem2BZRQc2M93A" base_Pseudostate="_tEr0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEtCYErDEem2BZRQc2M93A" base_Pseudostate="_tEsbUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tE8S8ErDEem2BZRQc2M93A" base_Region="_tErNMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tE_WQErDEem2BZRQc2M93A" base_State="_tE86AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFAkYErDEem2BZRQc2M93A" base_State="_tE9hEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFE10ErDEem2BZRQc2M93A" base_Pseudostate="_tFEOwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFGD8ErDEem2BZRQc2M93A" base_State="_tFE10UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFIgMErDEem2BZRQc2M93A" base_Pseudostate="_tFGrAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFJHQErDEem2BZRQc2M93A" base_Pseudostate="_tFIgMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFVUgErDEem2BZRQc2M93A" base_Region="_tFE10krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFXwwErDEem2BZRQc2M93A" base_State="_tFVUgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFYX0ErDEem2BZRQc2M93A" base_State="_tFWioErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFd3YErDEem2BZRQc2M93A" base_Pseudostate="_tFdQUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFeecErDEem2BZRQc2M93A" base_State="_tFd3YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfFgErDEem2BZRQc2M93A" base_Pseudostate="_tFeecUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfskErDEem2BZRQc2M93A" base_Pseudostate="_tFfFgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFu9IErDEem2BZRQc2M93A" base_Region="_tFd3YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFyngErDEem2BZRQc2M93A" base_State="_tFvkMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFz1oErDEem2BZRQc2M93A" base_State="_tFwyUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF4uIErDEem2BZRQc2M93A" base_Pseudostate="_tF4HEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tF7KYErDEem2BZRQc2M93A" base_State="_tF58QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF7xcErDEem2BZRQc2M93A" base_Pseudostate="_tF7KYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF8_kErDEem2BZRQc2M93A" base_Pseudostate="_tF7xcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tGLCAErDEem2BZRQc2M93A" base_Region="_tF58QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGa5oErDEem2BZRQc2M93A" base_State="_tGLCAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGdV4ErDEem2BZRQc2M93A" base_State="_tGMQIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGgZMErDEem2BZRQc2M93A" base_State="_tGPTcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGl4wErDEem2BZRQc2M93A" base_State="_tGQhkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGw34ErDEem2BZRQc2M93A" base_Pseudostate="_tGwQ0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGxe8ErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGyGAUrDEem2BZRQc2M93A" base_Pseudostate="_tGyGAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGzUIErDEem2BZRQc2M93A" base_Pseudostate="_tGyGAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHCksErDEem2BZRQc2M93A" base_Region="_tGw34krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHDLwErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHHdMErDEem2BZRQc2M93A" base_State="_tHDLwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHMVsErDEem2BZRQc2M93A" base_State="_tHDy0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHOx8ErDEem2BZRQc2M93A" base_State="_tHFA8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHWtwErDEem2BZRQc2M93A" base_Pseudostate="_tHWGsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHX74ErDEem2BZRQc2M93A" base_State="_tHWtwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHYi8ErDEem2BZRQc2M93A" base_Pseudostate="_tHX74UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHZxEErDEem2BZRQc2M93A" base_Pseudostate="_tHYi8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHposErDEem2BZRQc2M93A" base_Region="_tHWtwkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHyLkErDEem2BZRQc2M93A" base_State="_tHqPwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH1O4ErDEem2BZRQc2M93A" base_State="_tHq20ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH3rIErDEem2BZRQc2M93A" base_State="_tHsE8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH78kErDEem2BZRQc2M93A" base_State="_tHt6IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIIw4ErDEem2BZRQc2M93A" base_Pseudostate="_tIHiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIJX8ErDEem2BZRQc2M93A" base_State="_tIIw4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIKmEErDEem2BZRQc2M93A" base_Pseudostate="_tIJ_AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tILNIErDEem2BZRQc2M93A" base_Pseudostate="_tIKmEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tIbEwErDEem2BZRQc2M93A" base_Region="_tIIw4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIhLYErDEem2BZRQc2M93A" base_State="_tIbEwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIjAkErDEem2BZRQc2M93A" base_State="_tIbr0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tImD4ErDEem2BZRQc2M93A" base_State="_tIc58ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJHoUErDEem2BZRQc2M93A" base_State="_tJHBQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJv6cErDEem2BZRQc2M93A" base_Pseudostate="_tJvTYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJxIkErDEem2BZRQc2M93A" base_State="_tJwhgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJxvoErDEem2BZRQc2M93A" base_Pseudostate="_tJxIkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJyWsErDEem2BZRQc2M93A" base_Pseudostate="_tJxvoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tJ_yEErDEem2BZRQc2M93A" base_Region="_tJwhgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKIU8ErDEem2BZRQc2M93A" base_State="_tKAZIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKKxMErDEem2BZRQc2M93A" base_State="_tKBnQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKNNcErDEem2BZRQc2M93A" base_State="_tKC1YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKRe4ErDEem2BZRQc2M93A" base_State="_tKEDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKh9kErDEem2BZRQc2M93A" base_Pseudostate="_tKgvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKjLsErDEem2BZRQc2M93A" base_State="_tKh9kUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKkZ0ErDEem2BZRQc2M93A" base_Pseudostate="_tKjLsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKlA4ErDEem2BZRQc2M93A" base_Pseudostate="_tKkZ0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tKzDUErDEem2BZRQc2M93A" base_Region="_tKh9kkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK6YEErDEem2BZRQc2M93A" base_State="_tKzDUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK9bYErDEem2BZRQc2M93A" base_State="_tK0RcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLAesErDEem2BZRQc2M93A" base_State="_tK1fkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLMr8ErDEem2BZRQc2M93A" base_State="_tLME4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tLzv8ErDEem2BZRQc2M93A" base_Pseudostate="_tLzI4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tL0-EErDEem2BZRQc2M93A" base_State="_tLzv8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL1lIErDEem2BZRQc2M93A" base_Pseudostate="_tL0-EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL2zQErDEem2BZRQc2M93A" base_Pseudostate="_tL1lIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMFcwErDEem2BZRQc2M93A" base_Region="_tLzv8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMLjYErDEem2BZRQc2M93A" base_State="_tMFcwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMN_oErDEem2BZRQc2M93A" base_State="_tMGq4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMRC8ErDEem2BZRQc2M93A" base_State="_tMH5AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMZl0ErDEem2BZRQc2M93A" base_Pseudostate="_tMY-wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMaz8ErDEem2BZRQc2M93A" base_State="_tMaM4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMbbAErDEem2BZRQc2M93A" base_Pseudostate="_tMaz8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMcCEErDEem2BZRQc2M93A" base_Pseudostate="_tMbbAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMsgwErDEem2BZRQc2M93A" base_Region="_tMaM4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM0ckErDEem2BZRQc2M93A" base_State="_tMtH0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM3f4ErDEem2BZRQc2M93A" base_State="_tMuV8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM58IErDEem2BZRQc2M93A" base_State="_tMwLIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM-NkErDEem2BZRQc2M93A" base_State="_tMxZQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNMQAErDEem2BZRQc2M93A" base_Pseudostate="_tNLo8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNNeIErDEem2BZRQc2M93A" base_State="_tNMQAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNOsQErDEem2BZRQc2M93A" base_Pseudostate="_tNOFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNP6YErDEem2BZRQc2M93A" base_Pseudostate="_tNOsQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tNiOQErDEem2BZRQc2M93A" base_Region="_tNMQAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNtNYErDEem2BZRQc2M93A" base_State="_tNiOQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNw3wErDEem2BZRQc2M93A" base_State="_tNjcYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN0iIErDEem2BZRQc2M93A" base_State="_tNkqgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN5aoErDEem2BZRQc2M93A" base_State="_tNmfsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOWtoErDEem2BZRQc2M93A" base_Pseudostate="_tOHdEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tObmIErDEem2BZRQc2M93A" base_State="_tOXUsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOc0QErDEem2BZRQc2M93A" base_Pseudostate="_tObmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOeCYErDEem2BZRQc2M93A" base_Pseudostate="_tOc0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tO110ErDEem2BZRQc2M93A" base_Region="_tOXUsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO6uUErDEem2BZRQc2M93A" base_State="_tO2c4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO9xoErDEem2BZRQc2M93A" base_State="_tO3D8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPAN4ErDEem2BZRQc2M93A" base_State="_tO4SEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPKl8ErDEem2BZRQc2M93A" base_Pseudostate="_tPJ-4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPLNAErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPL0EErDEem2BZRQc2M93A" base_Pseudostate="_tPLNAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPMbIUrDEem2BZRQc2M93A" base_Pseudostate="_tPMbIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tPbrsErDEem2BZRQc2M93A" base_Region="_tPKl8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPc50ErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPiZYErDEem2BZRQc2M93A" base_State="_tPc50UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPk1oErDEem2BZRQc2M93A" base_State="_tPeH8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPmq0ErDEem2BZRQc2M93A" base_State="_tPfWEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPyRAErDEem2BZRQc2M93A" base_Pseudostate="_tPxp8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPzfIErDEem2BZRQc2M93A" base_State="_tPy4EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP1UUErDEem2BZRQc2M93A" base_Pseudostate="_tPzfIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP17YErDEem2BZRQc2M93A" base_Pseudostate="_tP1UUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQDWwErDEem2BZRQc2M93A" base_Region="_tPy4EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQI2UErDEem2BZRQc2M93A" base_State="_tQDWwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQLSkErDEem2BZRQc2M93A" base_State="_tQD90ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQNu0ErDEem2BZRQc2M93A" base_State="_tQFzAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQW4wErDEem2BZRQc2M93A" base_Pseudostate="_tQWRsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQXf0ErDEem2BZRQc2M93A" base_State="_tQW4wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQYG4UrDEem2BZRQc2M93A" base_Pseudostate="_tQYG4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQZVAErDEem2BZRQc2M93A" base_Pseudostate="_tQYt8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQvTQErDEem2BZRQc2M93A" base_Region="_tQW4wkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ32IErDEem2BZRQc2M93A" base_State="_tQvTQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ-j0ErDEem2BZRQc2M93A" base_State="_tQwhYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRBAEErDEem2BZRQc2M93A" base_State="_tQxvgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tREDYErDEem2BZRQc2M93A" base_State="_tQy9oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRUiEErDEem2BZRQc2M93A" base_Pseudostate="_tRT7AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRVwMErDEem2BZRQc2M93A" base_State="_tRUiEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRW-UErDEem2BZRQc2M93A" base_Pseudostate="_tRVwMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRYMcUrDEem2BZRQc2M93A" base_Pseudostate="_tRYMcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tRxOAErDEem2BZRQc2M93A" base_Region="_tRUiEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR6_AErDEem2BZRQc2M93A" base_State="_tRx1EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR-CUErDEem2BZRQc2M93A" base_State="_tRycIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSBssErDEem2BZRQc2M93A" base_State="_tR04YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSF-IErDEem2BZRQc2M93A" base_State="_tR2GgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSRkUErDEem2BZRQc2M93A" base_Pseudostate="_tSQ9QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSSycErDEem2BZRQc2M93A" base_State="_tSRkUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSTZgErDEem2BZRQc2M93A" base_Pseudostate="_tSSycUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSUnoErDEem2BZRQc2M93A" base_Pseudostate="_tSUAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tSpXwErDEem2BZRQc2M93A" base_Region="_tSRkUkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSxTkErDEem2BZRQc2M93A" base_State="_tSpXwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSzIwErDEem2BZRQc2M93A" base_State="_tSql4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS098ErDEem2BZRQc2M93A" base_State="_tSr0AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS4oUErDEem2BZRQc2M93A" base_State="_tStCIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTEOgErDEem2BZRQc2M93A" base_Pseudostate="_tTDncErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTFcoErDEem2BZRQc2M93A" base_State="_tTEOgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTGDsErDEem2BZRQc2M93A" base_Pseudostate="_tTFcoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTHR0ErDEem2BZRQc2M93A" base_Pseudostate="_tTGqwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tTS4AErDEem2BZRQc2M93A" base_Region="_tTEOgkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTY-oErDEem2BZRQc2M93A" base_State="_tTTfEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTaz0ErDEem2BZRQc2M93A" base_State="_tTUGIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTcpAErDEem2BZRQc2M93A" base_State="_tTUtMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTfsUErDEem2BZRQc2M93A" base_State="_tTV7UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tUACoErDEem2BZRQc2M93A" base_State="_tT_bkErDEem2BZRQc2M93A"/>
  <UMLRealTime:Capsule xmi:id="_WfR6kEr4Eem5qeRdwCQ7KQ" base_Class="_Wew9MEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_Wfeu4Er4Eem5qeRdwCQ7KQ" base_StateMachine="_WfShoEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_Wfk1gEr4Eem5qeRdwCQ7KQ" base_Package="_WfhyMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:Protocol xmi:id="_WfpG8Er4Eem5qeRdwCQ7KQ" base_Collaboration="_WfmqsEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_Wf4-kEr4Eem5qeRdwCQ7KQ" base_Interface="_WfpuAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_Wf_sQEr4Eem5qeRdwCQ7KQ" base_Interface="_Wft_cEr4Eem5qeRdwCQ7KQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_WgCvkEr4Eem5qeRdwCQ7KQ" base_Interface="_Wfv0oEr4Eem5qeRdwCQ7KQ" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_WgZ78Er4Eem5qeRdwCQ7KQ" base_Port="_WgVDcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_Wi52UEr4Eem5qeRdwCQ7KQ" isWired="false" base_Port="_Wi0WwEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_WjCZMEr4Eem5qeRdwCQ7KQ" isPublish="true" isWired="false" base_Port="_Wi-HwEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_WlyyQEr4Eem5qeRdwCQ7KQ" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_Wl_mkEr4Eem5qeRdwCQ7KQ" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_WoeS0Er4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_WoZaUEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_WoruMEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_WomOoEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Wq3fgEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Wqx_8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_W91e0Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_W9ybgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_W97lcEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_W96-YEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_W-CTIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_W99aoEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_W-HysEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_W-FWcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XHnF4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_XHme0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XHr-YEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XHo7EEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XHysEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XHtMgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XH5ZwEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XH1vYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XUAjIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XT7qoEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XUBxQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XUBKMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XUE0kEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XUDmcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XUVTQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XUMJUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Xjo6kEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XjnFYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Xjw2YEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XjtMAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Xj4yMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XjyEgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Xj8ckEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Xj7OcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XsqTsEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XsoegEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XssI4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Xsq6wEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XsulIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Xssv8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Xs1S0Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Xs0rwEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Xya9cEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XyaWYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XyeAwEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XybkgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XyjgUEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Xyi5QEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_XykucEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_XykHYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X2WbMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_X2UmAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X2XpUUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_X2XpUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X2Y3cEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_X2YQYUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X2dI4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_X2aFkEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X8jw4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_X8jJ0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X8lmEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_X8k_AEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X8th4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_X8oCUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_X8xMQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_X8v-IEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YCG_QEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YCEjAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YCJbgEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YCI0cEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YCPiIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YCLQsEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YCTMgEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YCSlcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YHZu8Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_YHZH4Ur4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YHbkIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YHaWAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YHf1kEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YHeAYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YHhDsUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YHhDsEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_YRCzIEr4Eem5qeRdwCQ7KQ" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_Wew9MEr4Eem5qeRdwCQ7KQ" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_YRF2cEr4Eem5qeRdwCQ7KQ" base_Class="_Wew9MEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_YRZ_gEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_YRWVIEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_YRjJcEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_YRgtMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTRegion xmi:id="_YRthgEr4Eem5qeRdwCQ7KQ" base_Region="_YRs6cEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YRuIkEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YRthgUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTState xmi:id="_YRuvoEr4Eem5qeRdwCQ7KQ" base_State="_YRuIkUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YRv9wUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YRv9wEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_YSMpsEr4Eem5qeRdwCQ7KQ" isWired="false" base_Port="_YSLbkEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_YSOe4Er4Eem5qeRdwCQ7KQ" isPublish="true" isWired="false" base_Port="_YSNQwEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_YVdZEEr4Eem5qeRdwCQ7KQ" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_YVkGwEr4Eem5qeRdwCQ7KQ" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_YWLKwEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_YWKjsUr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_YWO1IEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_YWM_8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YWxAoEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YWwZkEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YbLmkEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YbKYcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YbPQ8Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_YbOp4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YbQfEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YbP4AEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YbRGIUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YbRGIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Yf_1IEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Yf_OEEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YgC4cEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YgBqUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YgI_EEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YgHw8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YgN3kEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YgLbUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YmFPAEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YmEn8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YmHEMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YmGdIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YmNx4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_YmNK0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YmPnEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YmPAAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YqNhEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YqM6AUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YqOIIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YqNhEkr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YqPWQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YqOvMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YqRLcUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YqRLcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YtI5QEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YtHrIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YtJgUUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YtJgUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YtKucEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YtKHYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YtO_4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_YtMjoEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YwOCcEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YwNbYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YwPQkEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YwOpgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YwQesEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YwP3oEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YyZzwEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YyZMsUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YybB4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Yyaa0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YyeFMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_YycQAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_YyghcEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Yyf6YEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y1KM0Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y1JlwUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y1Kz4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y1KM0kr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y1La8Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y1Kz4kr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y1MCAUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y1MCAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y5esIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y5cP4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y5mA4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y5hIYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y5n2EUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y5n2EEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y5pEMUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y5pEMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y9JEIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y9IdEUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y9KSQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y9JrMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y9NVkEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y9K5UEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Y9Q_8Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Y9QY4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZBs0AEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZBq-0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZBxFcEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZBv3UEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZBy6oEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZBxsgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZB4aMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZB1W4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZG3n4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZG3A0Ur4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZG5dEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZG42AEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZG6EIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZG5dEkr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZG7SQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZG6rMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZKMosUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZKMosEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZKOd4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZKNPwUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZKPsAEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZKPE8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZKQ6IEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZKQTEEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZNmiAEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZNl68Ur4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZNnJEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZNmiAkr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZNplUEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZNoXMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZNsBkEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZNragEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZSykAEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZSu5oEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZSzLEUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZSzLEEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZS3cgEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZS1AQEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZS8VAEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZS7t8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZWh0gEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZWf_UEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZWk30Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZWkQwEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZWle4Ur4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZWle4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZWmtAUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZWmtAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZaknAEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zaj_8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZanDQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZalOEEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZaqtoEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zao4cEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Zau_EEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZauYAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZdzhMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zdy6IEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Zd0IQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZdzhMkr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Zd0vUUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zd0vUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Zd2kgEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zd19cEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZgBuwEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zf_5kUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZgC84Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZgCV0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZgHOUEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZgFZIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZgIccEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZgH1YEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZkmswEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZkjCYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZkzhEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZkuBgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZlJfUEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZlDYsEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZlVFgEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZlOX0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZrW1AEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZrVm4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZrafYEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZrYqMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZreJwEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zrc7oEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZrhNEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZrfX4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZwAEcEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Zv6k4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZwGLEUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZwGLEEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZwJ1cEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZwHZMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZwNf0Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZwMRsEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZyCEwEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZyAPkEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZyFIEEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZyEhAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZyGWMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZyFvIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ZyHkUEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ZyG9QEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_Z8CVUEr4Eem5qeRdwCQ7KQ" isWired="false" base_Port="_Z8AgIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_Z8FYoEr4Eem5qeRdwCQ7KQ" isPublish="true" isWired="false" base_Port="_Z8DjcEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_Z8QXwEr4Eem5qeRdwCQ7KQ" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_Z8Rl4Er4Eem5qeRdwCQ7KQ" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_Z8fBQEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_Z8dMEUr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_Z8jSsEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_Z8g2cEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z8vf8Ur4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z8vf8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z9dRoEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z9cqkUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z9d4sEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z9dRokr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z9fG0Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z9d4skr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z9jYQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z9ixMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z-sAsUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z-sAsEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z-t14Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z-tO0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z-wSIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z-vEAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_Z-yuYEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_Z-yHUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_aBjugEr4Eem5qeRdwCQ7KQ" isWired="false" base_Port="_aBigYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:RTPort xmi:id="_aBpOEEr4Eem5qeRdwCQ7KQ" isPublish="true" isWired="false" base_Port="_aBmKwEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_aDavsEr4Eem5qeRdwCQ7KQ" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_aDirgEr4Eem5qeRdwCQ7KQ" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_aEj_MEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_aEjYIEr4Eem5qeRdwCQ7KQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_aEtJIEr4Eem5qeRdwCQ7KQ" type="pmd::Message" base_Parameter="_aEr7AEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aGD0AEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aGB-0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aMYecEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aMXQUUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aMaToEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aMZFgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aMd-AEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aMcI0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aMfzMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aMfMIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aRaIYEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aRXsIEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aRb9kEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aRbWgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aRfA4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_aRdLsEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aRlHgEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aRkgcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aXMnUEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aXLZMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aXRf0Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_aXOcgEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aXSt8Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_aXSG4Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aXTVAUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aXTVAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aafL4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_aaek0Ur4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aafy8Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_aafL4kr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aagaAUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aagaAEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aaiPMEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aahBEEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ad99sUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ad99sEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ad-kwUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_ad-kwEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ad_y4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_ad_L0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aeAZ8Ur4Eem5qeRdwCQ7KQ" base_Pseudostate="_aeAZ8Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_agtvsEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_agtIoUr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aguWwUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aguWwEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_agwzAEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_agu90Er4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ag1EcEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_agz2UEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aj3KUUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aj3KUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aj3xYUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aj3xYEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aj4_gEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aj4YcEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aj60sEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_aj5mkEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_anE2YUr4Eem5qeRdwCQ7KQ" base_Pseudostate="_anE2YEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_anMLIEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_anHSoEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_anNZQEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_anMyMEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_anOnYEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_anOAUEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aphGYEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_apf4QEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_apkJsEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_api7kEr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_apkwwEr4Eem5qeRdwCQ7KQ" base_Pseudostate="_apkJskr4Eem5qeRdwCQ7KQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_apl-4Er4Eem5qeRdwCQ7KQ" base_Pseudostate="_aplX0Er4Eem5qeRdwCQ7KQ"/>
  <UMLRealTime:CapsulePart xmi:id="_a6yckUr4Eem5qeRdwCQ7KQ" base_Property="_a6yckEr4Eem5qeRdwCQ7KQ"/>
</xmi:XMI>

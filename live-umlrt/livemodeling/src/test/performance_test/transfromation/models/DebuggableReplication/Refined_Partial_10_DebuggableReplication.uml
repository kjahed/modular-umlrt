<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_lYTBoAggEea_md0mpENoqg" name="Replication">
    <eAnnotations xmi:id="_4HZrcAgoEea_md0mpENoqg" source="UMLRT_Default_top">
      <details xmi:id="_4Ha5kAgoEea_md0mpENoqg" key="top_name" value="Debug__Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_Lcp5MKpbEeiNHY6qjNhZ4w" source="http://www.eclipse.org/papyrus-rt/language/1.0.0">
      <details xmi:id="_LcruYKpbEeiNHY6qjNhZ4w" key="language" value="umlrt-cpp"/>
    </eAnnotations>
    <eAnnotations xmi:id="_688SAEsaEem6FeE2i8K5Ew" source="dummy"/>
    <eAnnotations xmi:id="_Jsc4sEvyEem6uYRWubCFQw" source="dummy"/>
    <eAnnotations xmi:id="_J_XVMEwUEem-5uVfuLAPLQ" source="dummy"/>
    <eAnnotations xmi:id="_HO8gkExXEem4-8UCL0LiWQ" source="dummy"/>
    <eAnnotations xmi:id="_1Kn7gEyCEemsbOjG0_6n-g" source="dummy"/>
    <packageImport xmi:id="_st0MYErDEem2BZRQc2M93A">
      <importedPackage xmi:type="uml:Model" href="../CommGateWay/model.uml#_MZw7AAdxEeadtKuU2t6fMg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rPgFkAggEea_md0mpENoqg" name="ENV">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_vj5dgAghEea_md0mpENoqg" client="_rPgFkAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sMZ5EAgoEea_md0mpENoqg" name="ENV" visibility="public" classifierBehavior="_gU8CMAgwEea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_GXsSgAgvEea_md0mpENoqg" name="ConfigComm" visibility="public" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NBhGMAgvEea_md0mpENoqg" value="7"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NBssYAgvEea_md0mpENoqg" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_b1NrIAjLEea_md0mpENoqg" name="FailureTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wQHCAAjLEea_md0mpENoqg" name="BITTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_X4ceIAjMEea_md0mpENoqg" name="GeneralTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lxs5kApkEeaGqPUk-4V4qQ" name="AnnouncmentServer1" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rXZWwApkEeaGqPUk-4V4qQ" name="AnnouncmentServer2" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Iq9iAApmEeaGqPUk-4V4qQ" name="AnnouncementServer1Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_UZHLMApmEeaGqPUk-4V4qQ" name="AnnouncmentServerTimeout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_UZHLMQpmEeaGqPUk-4V4qQ" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_bmibMApmEeaGqPUk-4V4qQ" name="AnnouncementServer2Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fXb_wAxwEeaB2MeL96fedA" name="systemConfig" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_fXXuUAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mKfGEOM2EeaTpaLNj-zYpw" name="configTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_svBtUErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoErDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoUrDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svgOcErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svg1gErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svhckErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svkf4ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_g4qJMEr4EemAZaGjK5Aj8g" name="dbgPortForENV" visibility="protected" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_g4qJMUr4EemAZaGjK5Aj8g" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_g4qwQEr4EemAZaGjK5Aj8g" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_gU8CMAgwEea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_jSIzIAgwEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_3Cms8AgwEea_md0mpENoqg" name="Init__ReadConfig__1" source="_s31EAErDEem2BZRQc2M93A" target="_sdehUAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_B6hioAg6Eea_md0mpENoqg" name="ENVInit">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Init__ReadConfig__1&quot;,(char *)&quot;Debug__Path__Init__ReadConfig__1&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_su1hoAgxEea_md0mpENoqg" name="configLoaded" source="_syROkErDEem2BZRQc2M93A" target="_dWznsAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rKgosAigEea_md0mpENoqg" name="LogTransition">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The transition from ReadConfig -> Config was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::configLoaded&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;Config&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_zlOKoAgxEea_md0mpENoqg" name="configOK" source="_s1Y0AErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Sw7kAAjHEea_md0mpENoqg" name="configCheckL">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The configuration is OK, the transition config-> Running was taken, sending signal to servers and clients \n&quot;;
    ConfigComm.StartUp(this->systemConfig).send();
    std::cout&lt;&lt;&quot;ENV: ENV is in  Running State\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::configOK&quot;,(char *)&quot;Debug__Path__configOK&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_32w4UAgxEea_md0mpENoqg" name="ConfigNOK" source="_s3GEMErDEem2BZRQc2M93A" target="_NvBagAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r3tJQAjJEea_md0mpENoqg" name="LogFailure">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The configuration is not OK, the transition configCheck-> ConfigFailure was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigNOK&quot;,(char *)&quot;Debug__Path__ConfigNOK&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_BiTZIAmpEea_md0mpENoqg" name="MasterAnnouncment" source="_szkPEErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2u7rQAmqEea_md0mpENoqg" name="RegisterMaster">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Master Annoucment from &quot;&lt;&lt; MasterName&lt;&lt;&quot;\n&quot;;
    if (strcmp((char *)MasterName,&quot;server1&quot;)==0)
    {
    systemConfig.MasterList[0]=true;
    if (AnnouncementServer1Id.isValid())
    AnnouncmentServer1.cancelTimer(AnnouncementServer1Id);
    AnnouncementServer1Id=AnnouncmentServer1.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    else if (strcmp((char *)MasterName,&quot;server2&quot;)==0)
    {
    systemConfig.MasterList[1]=true;
    if (AnnouncementServer2Id.isValid())
    AnnouncmentServer2.cancelTimer(AnnouncementServer2Id);
    AnnouncementServer2Id=AnnouncmentServer2.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    // the following code has been generated
    if ((systemConfig.RunningMode==1)&amp;&amp; (systemConfig.MasterList[0] ) &amp;&amp; (systemConfig.MasterList[1]))
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Violation, there are 2 master in passive mode\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::MasterAnnouncment&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_WsCs0AnGEeaGqPUk-4V4qQ" name="QueryConfig" source="_s5YjMErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_488xQAnGEeaGqPUk-4V4qQ" name="configReply">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The Config request replied at index&quot; &lt;&lt; msg->sapIndex0_&lt;&lt; &quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ConfigComm.ReplyConfig(systemConfig).sendAt(tempid);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::QueryConfig&quot;,(char *)&quot;Debug__Path__QueryConfig&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_J02wAAprEeaGqPUk-4V4qQ" name="Server1Failure" source="_s2HMwErDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_jzDXYAprEeaGqPUk-4V4qQ" name="Server1failure">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server1, remove server1 from masters list\n&quot;;
    systemConfig.MasterList[0]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Server1Failure&quot;,(char *)&quot;Debug__Path__Server1Failure&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syYjUUrDEem2BZRQc2M93A" name="Debug__configLoaded" source="_sdehUAgwEea_md0mpENoqg" target="_syROkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syZxcErDEem2BZRQc2M93A" name="Debug__configLoaded__3">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_AvcsEAg5Eea_md0mpENoqg" name="configLoaded" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_syfRAErDEem2BZRQc2M93A" name="Debug__configLoaded__S" guard="_syhtQUrDEem2BZRQc2M93A" source="_syROkErDEem2BZRQc2M93A" target="_syVgAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_syhtQUrDEem2BZRQc2M93A" name="Debug__GuardconfigLoaded">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_syhtQErDEem2BZRQc2M93A" name="Debug__GuardconfigLoaded">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ReadConfig&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syjicErDEem2BZRQc2M93A" name="Debug__configLoaded__S__5">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded__S&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syoa8ErDEem2BZRQc2M93A" name="Debug__configLoaded__E" source="_syX8QErDEem2BZRQc2M93A" target="_dWznsAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sypCAErDEem2BZRQc2M93A" name="Debug__configLoaded__E__6">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Config&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syuhkErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syvvsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange__8">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_syvIoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_syyL8ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syzaEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint__9">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_syyzAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy2dYErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy3rgErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint__10">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy3EcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy5gsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy6u0ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints__11">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy6HwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy7V4ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy788UrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode__12">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sy788ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy9LEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy9yIUrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg__13">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy9yIErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_szqVsErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment" source="__kywcAgwEea_md0mpENoqg" target="_szkPEErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szq8wErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__24">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment&quot;,(char *)&quot;Running&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_UGqsMAmpEea_md0mpENoqg" name="MasterAnnouncment" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_szsx8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S" guard="_sztZAUrDEem2BZRQc2M93A" source="_szkPEErDEem2BZRQc2M93A" target="_szmrUUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_sztZAUrDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sztZAErDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szuAEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S__26">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment__S&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_szv1QErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__E" source="_sznSYUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szwcUErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__E__27">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_szyRgErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szy4kUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange__29">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_szy4kErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_szzfoErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz0GsUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint__30">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0GsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz0twErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz1U0ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint__31">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0twUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz2i8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz3KAErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints__32">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz2i8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz3xEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz4YIUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode__33">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sz4YIErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz4_MErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz5mQUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg__34">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz5mQErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0nX8ErDEem2BZRQc2M93A" name="Debug__server2Failure__E" source="_s0hRUUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0n_AErDEem2BZRQc2M93A" name="Debug__server2Failure__E__52">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__server2Failure__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s0p0MErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qbQErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange__54">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s0p0MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rCUErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rCUkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint__55">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rCUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rpYErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rpYkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint__56">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rpYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0sQcErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0s3gUrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints__57">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0s3gErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0tekErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0tekkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode__58">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s0tekUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0uFoErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0v60ErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg__59">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0ussErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1dFcUrDEem2BZRQc2M93A" name="Debug__configOK" guard="_24BOUAjEEea_md0mpENoqg" source="_dWznsAgxEea_md0mpENoqg" target="_s1Y0AErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_24BOUAjEEea_md0mpENoqg" name="checkConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0dZMAjGEea_md0mpENoqg" name="checkConfig">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  <language>C++</language>
                  <body>    return systemConfig.ConfigOK;
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1dsgErDEem2BZRQc2M93A" name="Debug__configOK__74">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configOK&quot;,(char *)&quot;Config&quot;,(char *)&quot;Debug__Path__configOK&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s1fhsErDEem2BZRQc2M93A" name="Debug__configOK__S" guard="_s1gIwUrDEem2BZRQc2M93A" source="_s1Y0AErDEem2BZRQc2M93A" target="_s1apMUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s1gIwUrDEem2BZRQc2M93A" name="Debug__GuardconfigOK">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s1gIwErDEem2BZRQc2M93A" name="Debug__GuardconfigOK">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Config&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1gv0ErDEem2BZRQc2M93A" name="Debug__configOK__S__76">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configOK__S&quot;,(char *)&quot;Debug__Path__configOK&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s1jMEErDEem2BZRQc2M93A" name="Debug__configOK__E" source="_s1ceYUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1jMEUrDEem2BZRQc2M93A" name="Debug__configOK__E__77">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configOK__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s1lBQErDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1loUUrDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange__79">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s1loUErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1mPYErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1m2cErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint__80">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1mPYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1ndgErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1oEkErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint__81">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1ndgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1oroErDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1orokrDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints__82">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1oroUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1p5wErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1qg0ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode__83">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s1p5wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1rH4ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1rH4krDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg__84">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1rH4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2LeMUrDEem2BZRQc2M93A" name="Debug__Server1Failure" source="__kywcAgwEea_md0mpENoqg" target="_s2HMwErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2MFQErDEem2BZRQc2M93A" name="Debug__Server1Failure__96">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Server1Failure&quot;,(char *)&quot;Running&quot;,(char *)&quot;Debug__Path__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_X5K_UAprEeaGqPUk-4V4qQ" name="Server1Failure" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_lxs5kApkEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_s2NTYErDEem2BZRQc2M93A" name="Debug__Server1Failure__S" guard="_s2N6cUrDEem2BZRQc2M93A" source="_s2HMwErDEem2BZRQc2M93A" target="_s2KQEErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s2N6cUrDEem2BZRQc2M93A" name="Debug__GuardServer1Failure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s2N6cErDEem2BZRQc2M93A" name="Debug__GuardServer1Failure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2OhgErDEem2BZRQc2M93A" name="Debug__Server1Failure__S__98">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Server1Failure__S&quot;,(char *)&quot;Debug__Path__Server1Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s2QWsErDEem2BZRQc2M93A" name="Debug__Server1Failure__E" source="_s2K3IUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2QWsUrDEem2BZRQc2M93A" name="Debug__Server1Failure__E__99">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Server1Failure__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s2SL4ErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2Sy8UrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange__101">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s2Sy8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2UBEErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2UBEkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint__102">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2UBEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2VPMErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2V2QErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint__103">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2VPMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2XEYErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2YSgErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints__104">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2XEYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2ZgoErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2aHsErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode__105">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s2ZgoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2auwErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2auwkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg__106">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2auwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3Mx4UrDEem2BZRQc2M93A" name="Debug__ConfigNOK" source="_dWznsAgxEea_md0mpENoqg" target="_s3GEMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3NY8ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__121">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__ConfigNOK&quot;,(char *)&quot;Config&quot;,(char *)&quot;Debug__Path__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s3RDUErDEem2BZRQc2M93A" name="Debug__ConfigNOK__E" source="_s3MK0UrDEem2BZRQc2M93A" target="_NvBagAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3RDUUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__E__124">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__ConfigNOK__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s3S4gErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3S4gkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange__126">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s3S4gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3TfkErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3UGoUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint__127">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3UGoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3UtsErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3VUwUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint__128">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3VUwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3Wi4ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3Wi4krDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints__129">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3Wi4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3XJ8ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3XxAUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode__130">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s3XxAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3YYEErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3YYEkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg__131">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3YYEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s34HUUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1" source="_s6YowErDEem2BZRQc2M93A" target="_s31EAErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s34uYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__143">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_s6bFAErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_s37xsErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S" guard="_s38YwUrDEem2BZRQc2M93A" source="_s31EAErDEem2BZRQc2M93A" target="_s32SIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s38YwUrDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s38YwErDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s38_0ErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S__145">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Init__ReadConfig__1__S&quot;,(char *)&quot;Debug__Path__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4ADIErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4AqMUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange__148">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4AqMErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4BRQErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4BRQkrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint__149">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4BRQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4B4UErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4CfYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint__150">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4B4UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4CfYUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4DGcUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints__151">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4DGcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4DtgErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4E7oErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode__152">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4EUkErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4FisErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4FiskrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg__153">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4FisUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4qxgErDEem2BZRQc2M93A" name="Debug__RetryConfig__E" source="_s4kq4UrDEem2BZRQc2M93A" target="_sdehUAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4qxgUrDEem2BZRQc2M93A" name="Debug__RetryConfig__E__168">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__RetryConfig__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ReadConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4r_oErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4smsUrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange__170">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4smsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4tNwErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4t00UrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint__171">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4t00ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4ub4ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vC8ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint__172">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4ub4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4vqAErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vqAkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints__173">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4vqAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4wREErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4wREkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode__174">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4wREUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4w4IErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4xfMErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg__175">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4w4IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5bmgUrDEem2BZRQc2M93A" name="Debug__QueryConfig" source="__kywcAgwEea_md0mpENoqg" target="_s5YjMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5bmgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__190">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__QueryConfig&quot;,(char *)&quot;Running&quot;,(char *)&quot;Debug__Path__QueryConfig&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_nF2QAAnKEeaGqPUk-4V4qQ" name="QueryConfig" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_s5dbsErDEem2BZRQc2M93A" name="Debug__QueryConfig__S" guard="_s5eCwUrDEem2BZRQc2M93A" source="_s5YjMErDEem2BZRQc2M93A" target="_s5aYYErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s5eCwUrDEem2BZRQc2M93A" name="Debug__GuardQueryConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s5eCwErDEem2BZRQc2M93A" name="Debug__GuardQueryConfig">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5ep0ErDEem2BZRQc2M93A" name="Debug__QueryConfig__S__192">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__QueryConfig__S&quot;,(char *)&quot;Debug__Path__QueryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s5htIErDEem2BZRQc2M93A" name="Debug__QueryConfig__E" source="_s5a_cUrDEem2BZRQc2M93A" target="__kywcAgwEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5iUMErDEem2BZRQc2M93A" name="Debug__QueryConfig__E__193">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__QueryConfig__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Running&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s5kJYErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5kwcErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange__195">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s5kJYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5lXgErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5lXgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint__196">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5lXgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5l-kErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5mloErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint__197">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5l-kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5mloUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nMsUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints__198">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5nMsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nMskrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nzwUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode__199">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s5nzwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nzwkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5oa0UrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg__200">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5oa0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s6Z24UrDEem2BZRQc2M93A" name="Debug__InitDebug" source="_npsCMAgwEea_md0mpENoqg" target="_s6YowErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6ad8ErDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7YGAEr4EemAZaGjK5Aj8g" name="3044" source="_s1Y0AErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hjsqQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7ZUIEr4EemAZaGjK5Aj8g" name="3045" source="_s31EAErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hiP4wEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7aiQEr4EemAZaGjK5Aj8g" name="3046" source="_s3GEMErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hjPXQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7bwYEr4EemAZaGjK5Aj8g" name="3047" source="_syROkErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hiUKMEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7c-gEr4EemAZaGjK5Aj8g" name="3048" source="_dWznsAgxEea_md0mpENoqg" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hiw2IEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Config&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7dlkEr4EemAZaGjK5Aj8g" name="3049" source="_s5YjMErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hh23MEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7dlkUr4EemAZaGjK5Aj8g" name="3050" source="_s2HMwErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hjDKAEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7eMoEr4EemAZaGjK5Aj8g" name="3051" source="_szkPEErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hkFr0Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g7gB0Er4EemAZaGjK5Aj8g" name="From__Debug__InitState__3052" source="_s6YowErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hkZN0Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_g7h3AEr4EemAZaGjK5Aj8g" name="PME_Trig3053" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g7ieEEr4EemAZaGjK5Aj8g" name="PME_Trig3054" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g7jFIEr4EemAZaGjK5Aj8g" name="PME_Trig3055" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g7kTQEr4EemAZaGjK5Aj8g" name="PME_Trig3056" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g7mvgEr4EemAZaGjK5Aj8g" name="PME_Trig3057" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g7pLwEr4EemAZaGjK5Aj8g" name="PME_Trig3058" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g7roAEr4EemAZaGjK5Aj8g" name="PME_Trig3059" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g7sPEEr4EemAZaGjK5Aj8g" name="PME_Trig3060" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g7s2IEr4EemAZaGjK5Aj8g" name="PME_Trig3061" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g7uEQEr4EemAZaGjK5Aj8g" name="PME_Trig3062" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g7zj0Er4EemAZaGjK5Aj8g" name="PME_Trig3063" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_g72AEEr4EemAZaGjK5Aj8g" name="PME_Trig3064" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g74cUEr4EemAZaGjK5Aj8g" name="PME_Trig3065" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g77foEr4EemAZaGjK5Aj8g" name="PME_Trig3066" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_g78twEr4EemAZaGjK5Aj8g" name="PME_Trig3067" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_g7-i8Er4EemAZaGjK5Aj8g" name="PME_Trig3068" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g7_KAEr4EemAZaGjK5Aj8g" name="PME_Trig3069" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_g7_xEEr4EemAZaGjK5Aj8g" name="PME_Trig3070" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8CNUEr4EemAZaGjK5Aj8g" name="PME_Trig3071" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
            </transition>
            <transition xmi:id="_g8FQoEr4EemAZaGjK5Aj8g" name="From__ReadConfig__3072" source="_sdehUAgwEea_md0mpENoqg" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hi4x8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ReadConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_g8GewEr4EemAZaGjK5Aj8g" name="PME_Trig3073" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8I7AEr4EemAZaGjK5Aj8g" name="PME_Trig3074" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g8UhMEr4EemAZaGjK5Aj8g" name="PME_Trig3075" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g8WWYEr4EemAZaGjK5Aj8g" name="PME_Trig3076" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g8ZZsEr4EemAZaGjK5Aj8g" name="PME_Trig3077" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8bO4Er4EemAZaGjK5Aj8g" name="PME_Trig3078" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g8dEEEr4EemAZaGjK5Aj8g" name="PME_Trig3079" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g8eSMEr4EemAZaGjK5Aj8g" name="PME_Trig3080" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g8e5QEr4EemAZaGjK5Aj8g" name="PME_Trig3081" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8fgUEr4EemAZaGjK5Aj8g" name="PME_Trig3082" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8gucEr4EemAZaGjK5Aj8g" name="PME_Trig3083" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_g8hVgEr4EemAZaGjK5Aj8g" name="PME_Trig3084" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g8kY0Er4EemAZaGjK5Aj8g" name="PME_Trig3085" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_g8oDMEr4EemAZaGjK5Aj8g" name="PME_Trig3086" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_g8pRUEr4EemAZaGjK5Aj8g" name="PME_Trig3087" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g8p4YEr4EemAZaGjK5Aj8g" name="PME_Trig3088" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_g8qfcEr4EemAZaGjK5Aj8g" name="PME_Trig3089" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8s7sEr4EemAZaGjK5Aj8g" name="PME_Trig3090" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
            </transition>
            <transition xmi:id="_g8v_AEr4EemAZaGjK5Aj8g" name="From__ConfigFailure__3091" source="_NvBagAgxEea_md0mpENoqg" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hiE5oEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_g8ybQEr4EemAZaGjK5Aj8g" name="PME_Trig3092" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8zpYEr4EemAZaGjK5Aj8g" name="PME_Trig3093" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g80QcEr4EemAZaGjK5Aj8g" name="PME_Trig3094" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g8360Er4EemAZaGjK5Aj8g" name="PME_Trig3095" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g85wAEr4EemAZaGjK5Aj8g" name="PME_Trig3096" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g86XEEr4EemAZaGjK5Aj8g" name="PME_Trig3097" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g87lMEr4EemAZaGjK5Aj8g" name="PME_Trig3098" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g88zUEr4EemAZaGjK5Aj8g" name="PME_Trig3099" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g89aYEr4EemAZaGjK5Aj8g" name="PME_Trig3100" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8-ogEr4EemAZaGjK5Aj8g" name="PME_Trig3101" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g8_PkEr4EemAZaGjK5Aj8g" name="PME_Trig3102" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_g8_2oEr4EemAZaGjK5Aj8g" name="PME_Trig3103" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g9DhAEr4EemAZaGjK5Aj8g" name="PME_Trig3104" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9FWMEr4EemAZaGjK5Aj8g" name="PME_Trig3105" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_g9HLYEr4EemAZaGjK5Aj8g" name="PME_Trig3106" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_g9HycEr4EemAZaGjK5Aj8g" name="PME_Trig3107" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9JAkEr4EemAZaGjK5Aj8g" name="PME_Trig3108" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_g9NSAEr4EemAZaGjK5Aj8g" name="PME_Trig3109" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g9OgIEr4EemAZaGjK5Aj8g" name="PME_Trig3110" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
            </transition>
            <transition xmi:id="_g9PHMEr4EemAZaGjK5Aj8g" name="From__Running__3111" source="__kywcAgwEea_md0mpENoqg" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hh890Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Running&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_g9SKgEr4EemAZaGjK5Aj8g" name="PME_Trig3112" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9SxkEr4EemAZaGjK5Aj8g" name="PME_Trig3113" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9Wb8Er4EemAZaGjK5Aj8g" name="PME_Trig3114" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g9YRIEr4EemAZaGjK5Aj8g" name="PME_Trig3115" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g9Y4MEr4EemAZaGjK5Aj8g" name="PME_Trig3116" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g9bUcEr4EemAZaGjK5Aj8g" name="PME_Trig3117" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9b7gEr4EemAZaGjK5Aj8g" name="PME_Trig3118" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9cikEr4EemAZaGjK5Aj8g" name="PME_Trig3119" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g9dwsEr4EemAZaGjK5Aj8g" name="PME_Trig3120" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_g9eXwEr4EemAZaGjK5Aj8g" name="PME_Trig3121" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_g9ipMEr4EemAZaGjK5Aj8g" name="PME_Trig3122" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_g9lFcEr4EemAZaGjK5Aj8g" name="PME_Trig3123" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9lsgEr4EemAZaGjK5Aj8g" name="PME_Trig3124" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_g9m6oEr4EemAZaGjK5Aj8g" name="PME_Trig3125" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_g9ov0Er4EemAZaGjK5Aj8g" name="PME_Trig3126" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_g9rzIEr4EemAZaGjK5Aj8g" name="PME_Trig3127" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_g9saMEr4EemAZaGjK5Aj8g" name="PME_Trig3128" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
            </transition>
            <transition xmi:id="_g9u2cEr4EemAZaGjK5Aj8g" name="To__Debug__InitState__3129" guard="_hkqTkUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_s6YowErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_hkqTkUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3859">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkqTkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3859">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__3129&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_g9wEkEr4EemAZaGjK5Aj8g" name="To__ReadConfig__3130" guard="_hkwaMUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_sdehUAgwEea_md0mpENoqg">
              <ownedRule xmi:id="_hkwaMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3862">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkwaMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3862">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ReadConfig__3130&quot;,&quot;ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_g9wEkUr4EemAZaGjK5Aj8g" name="To__ConfigFailure__3131" guard="_hkvMEUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_NvBagAgxEea_md0mpENoqg">
              <ownedRule xmi:id="_hkvMEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3861">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkvMEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3861">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ConfigFailure__3131&quot;,&quot;ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_g9wroEr4EemAZaGjK5Aj8g" name="To__Running__3132" guard="_hkjl4Ur4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="__kywcAgwEea_md0mpENoqg">
              <ownedRule xmi:id="_hkjl4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3854">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkjl4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3854">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Running__3132&quot;,&quot;Running&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_g909EEr4EemAZaGjK5Aj8g" name="Trans__ex3133" source="_s4kq4UrDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hiIkAEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g92LMUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__RetryConfig__3135" guard="_hkhwsUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_g91kIEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hkhwsUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3852">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkhwsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3852">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_g92yQkr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__RetryConfig__3137" source="_g92yQEr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hj0mEEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hARNEEr4EemAZaGjK5Aj8g" name="Trans__ex3188" source="_syX8QErDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hjhEEEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hATCQUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__configLoaded__3190" guard="_hkpFcUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hASbMEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hkpFcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3857">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkpFcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3857">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configLoaded__3190&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hAUQYUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__configLoaded__3192" source="_hATpUEr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hifJUEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hEYRAEr4EemAZaGjK5Aj8g" name="Trans__ex3263" source="_s5a_cUrDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hi8cUEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hEaGMEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__QueryConfig__3265" guard="_hkn3UEr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hEYRAUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hkn3UEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3855">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hknQQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3855">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hEb7YUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__QueryConfig__3267" source="_hEbUUEr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hjl8kEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hISgoEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__Init__ReadConfig__1__3340" guard="_hki-0Ur4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hIQrcEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hki-0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3853">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hki-0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3853">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hIWyEUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__Init__ReadConfig__1__3342" source="_hIWLAEr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hia34Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hLCSoEr4EemAZaGjK5Aj8g" name="Trans__ex3413" source="_s3MK0UrDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hil3AEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hLDgwUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ConfigNOK__3415" guard="_hkoeYUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hLC5sEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hkoeYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3856">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkoeYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3856">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hLEH0Ur4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ConfigNOK__3417" source="_hLDgwkr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hkU8YEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hNKZkEr4EemAZaGjK5Aj8g" name="Trans__ex3488" source="_s2K3IUrDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hitLwEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hNLAokr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__Server1Failure__3490" guard="_hktW4Ur4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hNLAoEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hktW4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3860">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hktW4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3860">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hNM10Er4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__Server1Failure__3492" source="_hNLnsEr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hkfUcEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hP-dAEr4EemAZaGjK5Aj8g" name="Trans__ex3584" source="_s1ceYUrDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hjJQoEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hP_EEUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__configOK__3586" guard="_hkxoUUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hP-dAUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hkxoUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3863">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkxoUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3863">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configOK__3586&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hQA5QEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__configOK__3588" source="_hP_rIEr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hj6FoEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hS2K0Er4EemAZaGjK5Aj8g" name="Trans__ex3659" source="_sznSYUrDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hjX6IEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hS3Y8Ur4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__MasterAnnouncment__3661" guard="_hkhJoUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hS2x4Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hkhJoUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3851">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkhJoEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3851">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hS5OIUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__MasterAnnouncment__3663" source="_hS4nEEr4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhylwEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hZBEQEr4EemAZaGjK5Aj8g" name="Trans__ex3755" source="_s0hRUUrDEem2BZRQc2M93A" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hkBaYEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_hZFVsUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__server2Failure__3757" guard="_hkpsgUr4EemAZaGjK5Aj8g" source="_g6t-sEr4EemAZaGjK5Aj8g" target="_hZC5cEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_hkpsgUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3858">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkpsgEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3858">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__server2Failure__3757&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_hZHx8Ur4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__server2Failure__3759" source="_hZGj0Er4EemAZaGjK5Aj8g" target="_g6t-sEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hkNAkEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__3661&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__3135&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__3340&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Running&quot;,&quot;To__Running__3132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__3265&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__3415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__3190&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__3757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__3129&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__3490&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__3131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ReadConfig&quot;,&quot;To__ReadConfig__3130&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__3586&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_npsCMAgwEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:State" xmi:id="_sdehUAgwEea_md0mpENoqg" name="ReadConfig">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_EE4RAAigEea_md0mpENoqg" name="ReadConfig">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ReadConfig&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6ldEErDEem2BZRQc2M93A" name="ReadConfig__215">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="__kywcAgwEea_md0mpENoqg" name="Running">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_BfusgAjIEea_md0mpENoqg" name="runningEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6jn4ErDEem2BZRQc2M93A" name="Running__214">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_NvBagAgxEea_md0mpENoqg" name="ConfigFailure">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_TasAwAjJEea_md0mpENoqg" name="failurEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;&quot;ENV: The system is in Failure State, try to reload the config after 10 second\n&quot;;
    FailureTimer.informIn(UMLRTTimespec(10,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6n5UErDEem2BZRQc2M93A" name="ConfigFailure__216">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_dWznsAgxEea_md0mpENoqg" name="Config" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_syROkErDEem2BZRQc2M93A" name="Debug__Path__configLoaded" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_syTDwUrDEem2BZRQc2M93A" name="Debug__C__configLoaded">
              <connectionPoint xmi:id="_syVgAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_syX8QErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_hASbMEr4EemAZaGjK5Aj8g" name="From__Parent__3189" kind="entryPoint"/>
              <connectionPoint xmi:id="_hATpUEr4EemAZaGjK5Aj8g" name="To__Parent__3191" kind="exitPoint"/>
              <region xmi:id="_syTq0ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_szNpwErDEem2BZRQc2M93A" name="Debug__init__trans__configLoaded" source="_syVgAUrDEem2BZRQc2M93A" target="_szG8EErDEem2BZRQc2M93A"/>
                <transition xmi:id="_szNpwUrDEem2BZRQc2M93A" name="Debug__Ex__ReadConfig" source="_szG8EErDEem2BZRQc2M93A" target="_szJYUErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szZ3AErDEem2BZRQc2M93A" name="Debug__Ex__ReadConfig__18">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__Ex__ReadConfig&quot;,(char *)&quot;Debug__B__Ex__ReadConfig&quot;,(char *)&quot;Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szOQ0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_szO34ErDEem2BZRQc2M93A" name="Debug__AC__configLoaded" source="_szJYUErDEem2BZRQc2M93A" target="_szMboErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szPe8ErDEem2BZRQc2M93A" name="LogTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The transition from ReadConfig -> Config was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__AC__configLoaded&quot;,(char *)&quot;Debug__B__Ac__configLoaded&quot;,(char *)&quot;Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szO34UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_szQGAErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded" source="_szMboErDEem2BZRQc2M93A" target="_syX8QErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szeIcErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded__21">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__end__trans__configLoaded&quot;,(char *)&quot;Debug__A__Ac__configLoaded&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szQGAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hAhrwEr4EemAZaGjK5Aj8g" name="Trans__ex3195" source="_syX8QErDEem2BZRQc2M93A" target="_hAXTsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hEHyUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3254&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hAjg8Er4EemAZaGjK5Aj8g" name="Trans__Init__State__31943196" source="_hAa-EEr4EemAZaGjK5Aj8g" target="_hAXTsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hEAdkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3194&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3254&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3194&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hAoZcEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__configLoaded__3197" source="_szMboErDEem2BZRQc2M93A" target="_hAXTsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hEMDwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3254&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hAsD0Er4EemAZaGjK5Aj8g" name="PME_Trig3198" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hA0msEr4EemAZaGjK5Aj8g" name="PME_Trig3199" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hA2b4Er4EemAZaGjK5Aj8g" name="PME_Trig3200" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hA44IEr4EemAZaGjK5Aj8g" name="PME_Trig3201" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hA77cEr4EemAZaGjK5Aj8g" name="PME_Trig3202" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hBAz8Er4EemAZaGjK5Aj8g" name="PME_Trig3203" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hBD3QEr4EemAZaGjK5Aj8g" name="PME_Trig3204" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hBG6kEr4EemAZaGjK5Aj8g" name="PME_Trig3205" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hBMaIEr4EemAZaGjK5Aj8g" name="PME_Trig3206" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hBPdcEr4EemAZaGjK5Aj8g" name="PME_Trig3207" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hBRSoEr4EemAZaGjK5Aj8g" name="PME_Trig3208" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hBZOcEr4EemAZaGjK5Aj8g" name="PME_Trig3209" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hBbqsEr4EemAZaGjK5Aj8g" name="PME_Trig3210" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hBhKQEr4EemAZaGjK5Aj8g" name="PME_Trig3211" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hBlbsEr4EemAZaGjK5Aj8g" name="PME_Trig3212" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hBnQ4Er4EemAZaGjK5Aj8g" name="PME_Trig3213" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hBtXgEr4EemAZaGjK5Aj8g" name="PME_Trig3214" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hBvzwEr4EemAZaGjK5Aj8g" name="PME_Trig3215" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hBzeIEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__ReadConfig__3216" source="_szG8EErDEem2BZRQc2M93A" target="_hAXTsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hD8zMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3254&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hB2hcEr4EemAZaGjK5Aj8g" name="PME_Trig3217" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hB49sEr4EemAZaGjK5Aj8g" name="PME_Trig3218" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hB-dQEr4EemAZaGjK5Aj8g" name="PME_Trig3219" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hCAScEr4EemAZaGjK5Aj8g" name="PME_Trig3220" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hCGZEEr4EemAZaGjK5Aj8g" name="PME_Trig3221" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hCJcYEr4EemAZaGjK5Aj8g" name="PME_Trig3222" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hCMfsEr4EemAZaGjK5Aj8g" name="PME_Trig3223" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hCOU4Er4EemAZaGjK5Aj8g" name="PME_Trig3224" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hCTNYEr4EemAZaGjK5Aj8g" name="PME_Trig3225" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hCVCkEr4EemAZaGjK5Aj8g" name="PME_Trig3226" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hCXe0Er4EemAZaGjK5Aj8g" name="PME_Trig3227" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hCaiIEr4EemAZaGjK5Aj8g" name="PME_Trig3228" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hCezkEr4EemAZaGjK5Aj8g" name="PME_Trig3229" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hCh24Er4EemAZaGjK5Aj8g" name="PME_Trig3230" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hCmIUEr4EemAZaGjK5Aj8g" name="PME_Trig3231" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hCn9gEr4EemAZaGjK5Aj8g" name="PME_Trig3232" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hCpysEr4EemAZaGjK5Aj8g" name="PME_Trig3233" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hCs2AEr4EemAZaGjK5Aj8g" name="PME_Trig3234" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hCuEIEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__configLoaded__3235" source="_szJYUErDEem2BZRQc2M93A" target="_hAXTsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hD6W8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3254&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hCzjsEr4EemAZaGjK5Aj8g" name="PME_Trig3236" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hC1_8Er4EemAZaGjK5Aj8g" name="PME_Trig3237" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hC7fgEr4EemAZaGjK5Aj8g" name="PME_Trig3238" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hC8toEr4EemAZaGjK5Aj8g" name="PME_Trig3239" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hC_w8Er4EemAZaGjK5Aj8g" name="PME_Trig3240" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hDBmIEr4EemAZaGjK5Aj8g" name="PME_Trig3241" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hDGeoEr4EemAZaGjK5Aj8g" name="PME_Trig3242" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hDI64Er4EemAZaGjK5Aj8g" name="PME_Trig3243" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hDKwEEr4EemAZaGjK5Aj8g" name="PME_Trig3244" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hDMlQEr4EemAZaGjK5Aj8g" name="PME_Trig3245" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hDSr4Er4EemAZaGjK5Aj8g" name="PME_Trig3246" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hDUhEEr4EemAZaGjK5Aj8g" name="PME_Trig3247" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hDe5IEr4EemAZaGjK5Aj8g" name="PME_Trig3248" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hDijgEr4EemAZaGjK5Aj8g" name="PME_Trig3249" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hDmN4Er4EemAZaGjK5Aj8g" name="PME_Trig3250" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hDpRMEr4EemAZaGjK5Aj8g" name="PME_Trig3251" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hDs7kEr4EemAZaGjK5Aj8g" name="PME_Trig3252" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hDwl8Er4EemAZaGjK5Aj8g" name="PME_Trig3253" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hDzCMEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__configLoaded__3254" guard="_hESxcUr4EemAZaGjK5Aj8g" source="_hAXTsEr4EemAZaGjK5Aj8g" target="_szMboErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hESxcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3262">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hESxcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3262">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configLoaded__3254&quot;,&quot;Debug__A__Ac__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hDzpQEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__ReadConfig__3255" guard="_hERjU0r4EemAZaGjK5Aj8g" source="_hAXTsEr4EemAZaGjK5Aj8g" target="_szG8EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hERjU0r4EemAZaGjK5Aj8g" name="PME_checkDecesion3261">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hERjUkr4EemAZaGjK5Aj8g" name="PME_checkDecesion3261">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ReadConfig__3255&quot;,&quot;Debug__B__Ex__ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hDzpQUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__configLoaded__3256" guard="_hERjUUr4EemAZaGjK5Aj8g" source="_hAXTsEr4EemAZaGjK5Aj8g" target="_szJYUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hERjUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3260">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hERjUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3260">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__configLoaded__3256&quot;,&quot;Debug__B__Ac__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hD2skEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3257" source="_hASbMEr4EemAZaGjK5Aj8g" target="_hAXTsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hEEH8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__3258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__3256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__3255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__3254&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hD36sEr4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3258" guard="_hEQ8QUr4EemAZaGjK5Aj8g" source="_hAXTsEr4EemAZaGjK5Aj8g" target="_hATpUEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hEQ8QUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3259">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hEQ8QEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3259">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3258&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_szG8EErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szHjIErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szRUIUrDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig__14">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_szJYUErDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szJ_YErDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;configLoaded&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szU-gUrDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded__15">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_szMboErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szMboUrDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configLoaded&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szYB0ErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded__16">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hAXTsEr4EemAZaGjK5Aj8g" name="DecesionPoint__3193" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hAa-EEr4EemAZaGjK5Aj8g" name="Init__State__3194"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_szkPEErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnouncment" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_szldMErDEem2BZRQc2M93A" name="Debug__C__MasterAnnouncment">
              <connectionPoint xmi:id="_szmrUUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_sznSYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_hS2x4Er4EemAZaGjK5Aj8g" name="From__Parent__3660" kind="entryPoint"/>
              <connectionPoint xmi:id="_hS4nEEr4EemAZaGjK5Aj8g" name="To__Parent__3662" kind="exitPoint"/>
              <region xmi:id="_szldMUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0ElYErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment" source="_szmrUUrDEem2BZRQc2M93A" target="_sz-ewErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0VEEErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment__40">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__init__trans__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0ElYUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_sz-ewErDEem2BZRQc2M93A" target="_sz_s4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0WSMErDEem2BZRQc2M93A" name="Debug__Ex__Running__42">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0ElYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0GakErDEem2BZRQc2M93A" name="Debug__AC__MasterAnnouncment" source="_sz_s4ErDEem2BZRQc2M93A" target="_s0BiEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0HBoErDEem2BZRQc2M93A" name="RegisterMaster" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Master Annoucment from &quot;&lt;&lt; MasterName&lt;&lt;&quot;\n&quot;;
    if (strcmp((char *)MasterName,&quot;server1&quot;)==0)
    {
    systemConfig.MasterList[0]=true;
    if (AnnouncementServer1Id.isValid())
    AnnouncmentServer1.cancelTimer(AnnouncementServer1Id);
    AnnouncementServer1Id=AnnouncmentServer1.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    else if (strcmp((char *)MasterName,&quot;server2&quot;)==0)
    {
    systemConfig.MasterList[1]=true;
    if (AnnouncementServer2Id.isValid())
    AnnouncmentServer2.cancelTimer(AnnouncementServer2Id);
    AnnouncementServer2Id=AnnouncmentServer2.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    // the following code has been generated
    if ((systemConfig.RunningMode==1)&amp;&amp; (systemConfig.MasterList[0] ) &amp;&amp; (systemConfig.MasterList[1]))
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Violation, there are 2 master in passive mode\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__AC__MasterAnnouncment&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0GakUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0HosErDEem2BZRQc2M93A" name="Debug__En__Running" source="_s0BiEErDEem2BZRQc2M93A" target="_s0DXQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0HoskrDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0HosUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0IPwErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnouncment" source="_s0DXQErDEem2BZRQc2M93A" target="_sznSYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0Z8kErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnouncment__46">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__end__trans__MasterAnnouncment&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0IPwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hS9fkEr4EemAZaGjK5Aj8g" name="Trans__Init__State__36653666" source="_hS6cQEr4EemAZaGjK5Aj8g" target="_hS51MEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hYp34Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3665&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3745&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3665&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3665&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3665&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3665&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3665&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hS-tsEr4EemAZaGjK5Aj8g" name="Trans__ex3667" source="_sznSYUrDEem2BZRQc2M93A" target="_hS51MEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hYVu0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3745&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hTDmMEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__MasterAnnouncment__3668" source="_sz_s4ErDEem2BZRQc2M93A" target="_hS51MEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hYgt8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3745&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hTE0UEr4EemAZaGjK5Aj8g" name="PME_Trig3669" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hTKT4Er4EemAZaGjK5Aj8g" name="PME_Trig3670" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hTLiAEr4EemAZaGjK5Aj8g" name="PME_Trig3671" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hTN-QEr4EemAZaGjK5Aj8g" name="PME_Trig3672" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hTPzcEr4EemAZaGjK5Aj8g" name="PME_Trig3673" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hTUE4Er4EemAZaGjK5Aj8g" name="PME_Trig3674" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hTVTAEr4EemAZaGjK5Aj8g" name="PME_Trig3675" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hTXIMEr4EemAZaGjK5Aj8g" name="PME_Trig3676" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hTZkcEr4EemAZaGjK5Aj8g" name="PME_Trig3677" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hTd14Er4EemAZaGjK5Aj8g" name="PME_Trig3678" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hTec8Er4EemAZaGjK5Aj8g" name="PME_Trig3679" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hTfrEEr4EemAZaGjK5Aj8g" name="PME_Trig3680" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hTiHUEr4EemAZaGjK5Aj8g" name="PME_Trig3681" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hTjVcEr4EemAZaGjK5Aj8g" name="PME_Trig3682" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hTmYwEr4EemAZaGjK5Aj8g" name="PME_Trig3683" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hTo1AEr4EemAZaGjK5Aj8g" name="PME_Trig3684" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hTqqMEr4EemAZaGjK5Aj8g" name="PME_Trig3685" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hTsfYEr4EemAZaGjK5Aj8g" name="PME_Trig3686" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hTttgEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Running__3687" source="_s0DXQErDEem2BZRQc2M93A" target="_hS51MEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hYyawEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3745&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hTuUkEr4EemAZaGjK5Aj8g" name="PME_Trig3688" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hTww0Er4EemAZaGjK5Aj8g" name="PME_Trig3689" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hTzNEEr4EemAZaGjK5Aj8g" name="PME_Trig3690" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hT0bMEr4EemAZaGjK5Aj8g" name="PME_Trig3691" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hT2QYEr4EemAZaGjK5Aj8g" name="PME_Trig3692" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hT4FkEr4EemAZaGjK5Aj8g" name="PME_Trig3693" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hT7v8Er4EemAZaGjK5Aj8g" name="PME_Trig3694" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hT8-EEr4EemAZaGjK5Aj8g" name="PME_Trig3695" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hT9lIEr4EemAZaGjK5Aj8g" name="PME_Trig3696" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hT-zQEr4EemAZaGjK5Aj8g" name="PME_Trig3697" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hUAocEr4EemAZaGjK5Aj8g" name="PME_Trig3698" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hUB2kEr4EemAZaGjK5Aj8g" name="PME_Trig3699" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hUDEsEr4EemAZaGjK5Aj8g" name="PME_Trig3700" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hUGvEEr4EemAZaGjK5Aj8g" name="PME_Trig3701" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hUOD0Er4EemAZaGjK5Aj8g" name="PME_Trig3702" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hUUKcEr4EemAZaGjK5Aj8g" name="PME_Trig3703" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hUbfMEr4EemAZaGjK5Aj8g" name="PME_Trig3704" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hUkCEEr4EemAZaGjK5Aj8g" name="PME_Trig3705" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hUqIsEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__Running__3706" source="_sz-ewErDEem2BZRQc2M93A" target="_hS51MEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hYCz4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3745&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hUr94Er4EemAZaGjK5Aj8g" name="PME_Trig3707" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hUzSoEr4EemAZaGjK5Aj8g" name="PME_Trig3708" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hU29AEr4EemAZaGjK5Aj8g" name="PME_Trig3709" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hU9DoEr4EemAZaGjK5Aj8g" name="PME_Trig3710" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hU_f4Er4EemAZaGjK5Aj8g" name="PME_Trig3711" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hVGNkEr4EemAZaGjK5Aj8g" name="PME_Trig3712" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hVJQ4Er4EemAZaGjK5Aj8g" name="PME_Trig3713" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hVMUMEr4EemAZaGjK5Aj8g" name="PME_Trig3714" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hVRzwEr4EemAZaGjK5Aj8g" name="PME_Trig3715" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hVWsQEr4EemAZaGjK5Aj8g" name="PME_Trig3716" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hVcy4Er4EemAZaGjK5Aj8g" name="PME_Trig3717" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hVgdQEr4EemAZaGjK5Aj8g" name="PME_Trig3718" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hVmj4Er4EemAZaGjK5Aj8g" name="PME_Trig3719" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hVoZEEr4EemAZaGjK5Aj8g" name="PME_Trig3720" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hVufsEr4EemAZaGjK5Aj8g" name="PME_Trig3721" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hVw78Er4EemAZaGjK5Aj8g" name="PME_Trig3722" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hVz_QEr4EemAZaGjK5Aj8g" name="PME_Trig3723" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hV77EEr4EemAZaGjK5Aj8g" name="PME_Trig3724" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hV9JMEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__MasterAnnouncment__3725" source="_s0BiEErDEem2BZRQc2M93A" target="_hS51MEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hYLWwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3745&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hWEd8Er4EemAZaGjK5Aj8g" name="PME_Trig3726" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hWLLoEr4EemAZaGjK5Aj8g" name="PME_Trig3727" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hWPdEEr4EemAZaGjK5Aj8g" name="PME_Trig3728" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hWSgYEr4EemAZaGjK5Aj8g" name="PME_Trig3729" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hWbqUEr4EemAZaGjK5Aj8g" name="PME_Trig3730" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hWk0QEr4EemAZaGjK5Aj8g" name="PME_Trig3731" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hWpswEr4EemAZaGjK5Aj8g" name="PME_Trig3732" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hWwacEr4EemAZaGjK5Aj8g" name="PME_Trig3733" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hW3vMEr4EemAZaGjK5Aj8g" name="PME_Trig3734" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hW7ZkEr4EemAZaGjK5Aj8g" name="PME_Trig3735" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hXA5IEr4EemAZaGjK5Aj8g" name="PME_Trig3736" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hXCuUEr4EemAZaGjK5Aj8g" name="PME_Trig3737" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hXFxoEr4EemAZaGjK5Aj8g" name="PME_Trig3738" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hXMfUEr4EemAZaGjK5Aj8g" name="PME_Trig3739" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hXPioEr4EemAZaGjK5Aj8g" name="PME_Trig3740" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hXXecEr4EemAZaGjK5Aj8g" name="PME_Trig3741" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hXbI0Er4EemAZaGjK5Aj8g" name="PME_Trig3742" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hXhPcEr4EemAZaGjK5Aj8g" name="PME_Trig3743" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hXpLQEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__MasterAnnouncment__3744" guard="_hY8LwUr4EemAZaGjK5Aj8g" source="_hS51MEr4EemAZaGjK5Aj8g" target="_sz_s4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hY8LwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3754">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hY8LwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3754">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hXpyUEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__Running__3745" guard="_hYzo4Ur4EemAZaGjK5Aj8g" source="_hS51MEr4EemAZaGjK5Aj8g" target="_s0DXQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hYzo4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3750">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hYzo4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3750">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__3745&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hXrAcEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__Running__3746" guard="_hY03AUr4EemAZaGjK5Aj8g" source="_hS51MEr4EemAZaGjK5Aj8g" target="_sz-ewErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hY03AUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3751">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hY03AEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3751">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__3746&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hXrngEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__MasterAnnouncment__3747" guard="_hY3TQUr4EemAZaGjK5Aj8g" source="_hS51MEr4EemAZaGjK5Aj8g" target="_s0BiEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hY3TQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3752">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hY3TQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3752">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hXwgAEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3748" source="_hS2x4Er4EemAZaGjK5Aj8g" target="_hS51MEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hX6RAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3745&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3746&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__3747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__3749&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__3744&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hXy8QEr4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3749" guard="_hY69oEr4EemAZaGjK5Aj8g" source="_hS51MEr4EemAZaGjK5Aj8g" target="_hS4nEEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hY69oEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3753">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hY6WkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3753">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3749&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_sz-ewErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz-ewUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0KE8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Running__35">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_sz_s4ErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz_s4UrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0NIQUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment__36">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s0BiEErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s0BiEUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0PkgUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment__37">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s0DXQErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s0DXQUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0SAwErDEem2BZRQc2M93A" name="Debug__A__En__Running__38">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hS51MEr4EemAZaGjK5Aj8g" name="DecesionPoint__3664" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hS6cQEr4EemAZaGjK5Aj8g" name="Init__State__3665"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s0fcIUrDEem2BZRQc2M93A" name="Debug__C__server2Failure">
              <connectionPoint xmi:id="_s0gqQUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s0hRUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_hZC5cEr4EemAZaGjK5Aj8g" name="From__Parent__3756" kind="entryPoint"/>
              <connectionPoint xmi:id="_hZGj0Er4EemAZaGjK5Aj8g" name="To__Parent__3758" kind="exitPoint"/>
              <region xmi:id="_s0fcIkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0658ErDEem2BZRQc2M93A" name="Debug__init__trans__server2Failure" source="_s0gqQUrDEem2BZRQc2M93A" target="_s01aYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1MmwErDEem2BZRQc2M93A" name="Debug__init__trans__server2Failure__65">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__init__trans__server2Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0658UrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s01aYErDEem2BZRQc2M93A" target="_s02BcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1N04ErDEem2BZRQc2M93A" name="Debug__Ex__Running__67">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0658krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s07hAErDEem2BZRQc2M93A" name="Debug__AC__server2Failure" source="_s02BcErDEem2BZRQc2M93A" target="_s032oErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s08IEErDEem2BZRQc2M93A" name="Server2Failure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server2, remove Server2 from masters list\n&quot;;
    systemConfig.MasterList[1]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__AC__server2Failure&quot;,(char *)&quot;Debug__B__Ac__server2Failure&quot;,(char *)&quot;Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s07hAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s08vIErDEem2BZRQc2M93A" name="Debug__En__Running" source="_s032oErDEem2BZRQc2M93A" target="_s05EwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s099QErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__server2Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s08vIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s099QUrDEem2BZRQc2M93A" name="Debug__end__trans__server2Failure" source="_s05EwErDEem2BZRQc2M93A" target="_s0hRUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1TUcErDEem2BZRQc2M93A" name="Debug__end__trans__server2Failure__71">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__end__trans__server2Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0-kUErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hZYQoEr4EemAZaGjK5Aj8g" name="Trans__ex3762" source="_s0hRUUrDEem2BZRQc2M93A" target="_hZJnIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhayUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3841&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3842&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3843&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3845&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3840&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hZZewEr4EemAZaGjK5Aj8g" name="Trans__Init__State__37613763" source="_hZRi8Er4EemAZaGjK5Aj8g" target="_hZJnIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhg48Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3761&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3841&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3761&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3842&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3761&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3843&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3761&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3845&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3761&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3840&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3761&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hZmTEEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Running__3764" source="_s05EwErDEem2BZRQc2M93A" target="_hZJnIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhnmoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3841&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3842&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3843&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3845&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3840&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hZrLkEr4EemAZaGjK5Aj8g" name="PME_Trig3765" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hZvdAEr4EemAZaGjK5Aj8g" name="PME_Trig3766" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hZzHYEr4EemAZaGjK5Aj8g" name="PME_Trig3767" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hZ3_4Er4EemAZaGjK5Aj8g" name="PME_Trig3768" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hZ6cIEr4EemAZaGjK5Aj8g" name="PME_Trig3769" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_haBw4Er4EemAZaGjK5Aj8g" name="PME_Trig3770" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_haE0MEr4EemAZaGjK5Aj8g" name="PME_Trig3771" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_haHQcEr4EemAZaGjK5Aj8g" name="PME_Trig3772" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_haN-IEr4EemAZaGjK5Aj8g" name="PME_Trig3773" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_haSPkEr4EemAZaGjK5Aj8g" name="PME_Trig3774" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_haXvIEr4EemAZaGjK5Aj8g" name="PME_Trig3775" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_haZkUEr4EemAZaGjK5Aj8g" name="PME_Trig3776" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hag5EEr4EemAZaGjK5Aj8g" name="PME_Trig3777" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_haiuQEr4EemAZaGjK5Aj8g" name="PME_Trig3778" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_haqqEEr4EemAZaGjK5Aj8g" name="PME_Trig3779" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hasfQEr4EemAZaGjK5Aj8g" name="PME_Trig3780" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hattYEr4EemAZaGjK5Aj8g" name="PME_Trig3781" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ha1CIEr4EemAZaGjK5Aj8g" name="PME_Trig3782" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_ha3eYEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__server2Failure__3783" source="_s02BcErDEem2BZRQc2M93A" target="_hZJnIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhiHEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3841&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3842&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3843&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3845&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3840&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ha7IwEr4EemAZaGjK5Aj8g" name="PME_Trig3784" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hbBPYEr4EemAZaGjK5Aj8g" name="PME_Trig3785" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hbESsEr4EemAZaGjK5Aj8g" name="PME_Trig3786" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hbM1kEr4EemAZaGjK5Aj8g" name="PME_Trig3787" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hbVYcEr4EemAZaGjK5Aj8g" name="PME_Trig3788" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hbeiYEr4EemAZaGjK5Aj8g" name="PME_Trig3789" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hbkB8Er4EemAZaGjK5Aj8g" name="PME_Trig3790" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hbqIkEr4EemAZaGjK5Aj8g" name="PME_Trig3791" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hbuaAEr4EemAZaGjK5Aj8g" name="PME_Trig3792" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hbz5kEr4EemAZaGjK5Aj8g" name="PME_Trig3793" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hb2V0Er4EemAZaGjK5Aj8g" name="PME_Trig3794" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hb9qkEr4EemAZaGjK5Aj8g" name="PME_Trig3795" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hcE_UEr4EemAZaGjK5Aj8g" name="PME_Trig3796" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hcICoEr4EemAZaGjK5Aj8g" name="PME_Trig3797" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hcMUEEr4EemAZaGjK5Aj8g" name="PME_Trig3798" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hcSasEr4EemAZaGjK5Aj8g" name="PME_Trig3799" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hcZIYEr4EemAZaGjK5Aj8g" name="PME_Trig3800" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hccLsEr4EemAZaGjK5Aj8g" name="PME_Trig3801" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hchrQEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__Running__3802" source="_s01aYErDEem2BZRQc2M93A" target="_hZJnIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhd1oEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3841&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3842&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3843&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3845&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3840&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hckukEr4EemAZaGjK5Aj8g" name="PME_Trig3803" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hcmjwEr4EemAZaGjK5Aj8g" name="PME_Trig3804" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hcnx4Er4EemAZaGjK5Aj8g" name="PME_Trig3805" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hcpAAEr4EemAZaGjK5Aj8g" name="PME_Trig3806" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hcvtsEr4EemAZaGjK5Aj8g" name="PME_Trig3807" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hcyxAEr4EemAZaGjK5Aj8g" name="PME_Trig3808" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hc6s0Er4EemAZaGjK5Aj8g" name="PME_Trig3809" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hc_lUEr4EemAZaGjK5Aj8g" name="PME_Trig3810" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hdFr8Er4EemAZaGjK5Aj8g" name="PME_Trig3811" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hdKkcEr4EemAZaGjK5Aj8g" name="PME_Trig3812" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hdPc8Er4EemAZaGjK5Aj8g" name="PME_Trig3813" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hdTuYEr4EemAZaGjK5Aj8g" name="PME_Trig3814" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hdZN8Er4EemAZaGjK5Aj8g" name="PME_Trig3815" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hdcRQEr4EemAZaGjK5Aj8g" name="PME_Trig3816" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hdi-8Er4EemAZaGjK5Aj8g" name="PME_Trig3817" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hdkNEEr4EemAZaGjK5Aj8g" name="PME_Trig3818" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_he_wcEr4EemAZaGjK5Aj8g" name="PME_Trig3819" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hfQPIEr4EemAZaGjK5Aj8g" name="PME_Trig3820" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hfanMEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__server2Failure__3821" source="_s032oErDEem2BZRQc2M93A" target="_hZJnIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhm_kEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3841&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3842&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3843&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3845&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3840&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hfdDcEr4EemAZaGjK5Aj8g" name="PME_Trig3822" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hfjKEEr4EemAZaGjK5Aj8g" name="PME_Trig3823" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hfk_QEr4EemAZaGjK5Aj8g" name="PME_Trig3824" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hfm0cEr4EemAZaGjK5Aj8g" name="PME_Trig3825" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hfyaoEr4EemAZaGjK5Aj8g" name="PME_Trig3826" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hf5IUEr4EemAZaGjK5Aj8g" name="PME_Trig3827" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hgC5UEr4EemAZaGjK5Aj8g" name="PME_Trig3828" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hgMqUEr4EemAZaGjK5Aj8g" name="PME_Trig3829" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hgQ7wEr4EemAZaGjK5Aj8g" name="PME_Trig3830" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hge-MEr4EemAZaGjK5Aj8g" name="PME_Trig3831" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hgoIIEr4EemAZaGjK5Aj8g" name="PME_Trig3832" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hgu10Er4EemAZaGjK5Aj8g" name="PME_Trig3833" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hg2xoEr4EemAZaGjK5Aj8g" name="PME_Trig3834" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hg7DEEr4EemAZaGjK5Aj8g" name="PME_Trig3835" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hhAioEr4EemAZaGjK5Aj8g" name="PME_Trig3836" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hhDl8Er4EemAZaGjK5Aj8g" name="PME_Trig3837" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hhJskEr4EemAZaGjK5Aj8g" name="PME_Trig3838" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hhMv4Er4EemAZaGjK5Aj8g" name="PME_Trig3839" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hhS2gEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__Running__3840" guard="_hhrRAUr4EemAZaGjK5Aj8g" source="_hZJnIEr4EemAZaGjK5Aj8g" target="_s05EwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hhrRAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3850">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhrRAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3850">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__3840&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hhTdkEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__server2Failure__3841" guard="_hhoNsUr4EemAZaGjK5Aj8g" source="_hZJnIEr4EemAZaGjK5Aj8g" target="_s02BcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hhoNsUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3846">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhoNsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3846">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__server2Failure__3841&quot;,&quot;Debug__B__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hhTdkUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__Running__3842" guard="_hho0wUr4EemAZaGjK5Aj8g" source="_hZJnIEr4EemAZaGjK5Aj8g" target="_s01aYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hho0wUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3847">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hho0wEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3847">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__3842&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hhTdkkr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__server2Failure__3843" guard="_hhpb0Ur4EemAZaGjK5Aj8g" source="_hZJnIEr4EemAZaGjK5Aj8g" target="_s032oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hhpb0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3848">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhpb0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3848">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__server2Failure__3843&quot;,&quot;Debug__A__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hhVSwEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3844" source="_hZC5cEr4EemAZaGjK5Aj8g" target="_hZJnIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hhfDwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__3841&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3842&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__Ac__server2Failure&quot;,&quot;To__Debug__A__Ac__server2Failure__3843&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__3845&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3840&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hhV50Er4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3845" guard="_hhqp8Ur4EemAZaGjK5Aj8g" source="_hZJnIEr4EemAZaGjK5Aj8g" target="_hZGj0Er4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hhqp8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3849">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhqp8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3849">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3845&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s01aYErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s01aYUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0_ycErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__60">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s02BcErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s02BcUrDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1C1wErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure__61">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s032oErDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s032oUrDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1HHMErDEem2BZRQc2M93A" name="Debug__A__Ac__server2Failure__62">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s05EwErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s05EwUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1JjcErDEem2BZRQc2M93A" name="Debug__A__En__Running__63">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hZJnIEr4EemAZaGjK5Aj8g" name="DecesionPoint__3760" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hZRi8Er4EemAZaGjK5Aj8g" name="Init__State__3761"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s1Y0AErDEem2BZRQc2M93A" name="Debug__Path__configOK" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s1ZbEUrDEem2BZRQc2M93A" name="Debug__C__configOK">
              <connectionPoint xmi:id="_s1apMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s1ceYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_hP-dAUr4EemAZaGjK5Aj8g" name="From__Parent__3585" kind="entryPoint"/>
              <connectionPoint xmi:id="_hP_rIEr4EemAZaGjK5Aj8g" name="To__Parent__3587" kind="exitPoint"/>
              <region xmi:id="_s1ZbEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s1xOgErDEem2BZRQc2M93A" name="Debug__init__trans__configOK" source="_s1apMUrDEem2BZRQc2M93A" target="_s1uLMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1-C0ErDEem2BZRQc2M93A" name="Debug__init__trans__configOK__89">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__init__trans__configOK&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s1x1kErDEem2BZRQc2M93A" name="Debug__Ac__configOK" source="_s1uLMUrDEem2BZRQc2M93A" target="_s1uyQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1ycoErDEem2BZRQc2M93A" name="configCheckL" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The configuration is OK, the transition config-> Running was taken, sending signal to servers and clients \n&quot;;
    ConfigComm.StartUp(this->systemConfig).send();
    std::cout&lt;&lt;&quot;ENV: ENV is in  Running State\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__Ac__configOK&quot;,(char *)&quot;Debug__B__Ac__configOK&quot;,(char *)&quot;Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s1x1kUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s1ycoUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s1uyQErDEem2BZRQc2M93A" target="_s1wAYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1zqwErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__configOK&quot;,(char *)&quot;Debug__A__En__configOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s1zDsErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s1zqwUrDEem2BZRQc2M93A" name="Debug__end__trans__configOK" source="_s1wAYErDEem2BZRQc2M93A" target="_s1ceYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2CUQErDEem2BZRQc2M93A" name="Debug__end__trans__configOK__93">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__end__trans__configOK&quot;,(char *)&quot;Debug__A__En__configOK&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s10R0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hQDVgEr4EemAZaGjK5Aj8g" name="Trans__Init__State__35903591" source="_hQCHYEr4EemAZaGjK5Aj8g" target="_hQBgUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hShasEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3590&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__3651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3590&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__3652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3590&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__3650&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3590&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__3654&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3590&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hQD8kEr4EemAZaGjK5Aj8g" name="Trans__ex3592" source="_s1ceYUrDEem2BZRQc2M93A" target="_hQBgUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hSjP4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__3651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__3652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__3650&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__3654&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hQIOAEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__configOK__3593" source="_s1uLMUrDEem2BZRQc2M93A" target="_hQBgUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hSnhUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__3651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__3652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__3650&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__3654&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hQJcIEr4EemAZaGjK5Aj8g" name="PME_Trig3594" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hQKDMEr4EemAZaGjK5Aj8g" name="PME_Trig3595" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQMfcEr4EemAZaGjK5Aj8g" name="PME_Trig3596" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQNGgEr4EemAZaGjK5Aj8g" name="PME_Trig3597" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hQRX8Er4EemAZaGjK5Aj8g" name="PME_Trig3598" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hQSmEEr4EemAZaGjK5Aj8g" name="PME_Trig3599" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hQT0MEr4EemAZaGjK5Aj8g" name="PME_Trig3600" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQWQcEr4EemAZaGjK5Aj8g" name="PME_Trig3601" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQW3gEr4EemAZaGjK5Aj8g" name="PME_Trig3602" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hQbI8Er4EemAZaGjK5Aj8g" name="PME_Trig3603" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hQc-IEr4EemAZaGjK5Aj8g" name="PME_Trig3604" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hQeMQEr4EemAZaGjK5Aj8g" name="PME_Trig3605" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hQhPkEr4EemAZaGjK5Aj8g" name="PME_Trig3606" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQh2oEr4EemAZaGjK5Aj8g" name="PME_Trig3607" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hQn9QEr4EemAZaGjK5Aj8g" name="PME_Trig3608" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQpLYEr4EemAZaGjK5Aj8g" name="PME_Trig3609" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hQrAkEr4EemAZaGjK5Aj8g" name="PME_Trig3610" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hQsOsEr4EemAZaGjK5Aj8g" name="PME_Trig3611" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hQs1wEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__configOK__3612" source="_s1wAYErDEem2BZRQc2M93A" target="_hQBgUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hSrLsEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__3651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__3652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__3650&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__3654&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hQuq8Er4EemAZaGjK5Aj8g" name="PME_Trig3613" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hQ0KgEr4EemAZaGjK5Aj8g" name="PME_Trig3614" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQ1_sEr4EemAZaGjK5Aj8g" name="PME_Trig3615" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hQ64MEr4EemAZaGjK5Aj8g" name="PME_Trig3616" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hQ8GUEr4EemAZaGjK5Aj8g" name="PME_Trig3617" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hQ-ikEr4EemAZaGjK5Aj8g" name="PME_Trig3618" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hRCM8Er4EemAZaGjK5Aj8g" name="PME_Trig3619" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRFQQEr4EemAZaGjK5Aj8g" name="PME_Trig3620" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRF3UEr4EemAZaGjK5Aj8g" name="PME_Trig3621" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hRHFcEr4EemAZaGjK5Aj8g" name="PME_Trig3622" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hRJhsEr4EemAZaGjK5Aj8g" name="PME_Trig3623" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hRPBQEr4EemAZaGjK5Aj8g" name="PME_Trig3624" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hRQPYEr4EemAZaGjK5Aj8g" name="PME_Trig3625" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRSEkEr4EemAZaGjK5Aj8g" name="PME_Trig3626" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hRUg0Er4EemAZaGjK5Aj8g" name="PME_Trig3627" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRZZUEr4EemAZaGjK5Aj8g" name="PME_Trig3628" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hRancEr4EemAZaGjK5Aj8g" name="PME_Trig3629" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hRccoEr4EemAZaGjK5Aj8g" name="PME_Trig3630" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hReR0Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__configOK__3631" source="_s1uyQErDEem2BZRQc2M93A" target="_hQBgUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hSsZ0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__3651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__3652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__3650&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__3654&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hRe44Er4EemAZaGjK5Aj8g" name="PME_Trig3632" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hRguEEr4EemAZaGjK5Aj8g" name="PME_Trig3633" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRk_gEr4EemAZaGjK5Aj8g" name="PME_Trig3634" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRmNoEr4EemAZaGjK5Aj8g" name="PME_Trig3635" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hRqfEEr4EemAZaGjK5Aj8g" name="PME_Trig3636" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hRvXkEr4EemAZaGjK5Aj8g" name="PME_Trig3637" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hRxz0Er4EemAZaGjK5Aj8g" name="PME_Trig3638" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRya4Er4EemAZaGjK5Aj8g" name="PME_Trig3639" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hRzpAEr4EemAZaGjK5Aj8g" name="PME_Trig3640" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hR5IkEr4EemAZaGjK5Aj8g" name="PME_Trig3641" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hR69wEr4EemAZaGjK5Aj8g" name="PME_Trig3642" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hR8y8Er4EemAZaGjK5Aj8g" name="PME_Trig3643" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hR-BEEr4EemAZaGjK5Aj8g" name="PME_Trig3644" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hSBEYEr4EemAZaGjK5Aj8g" name="PME_Trig3645" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hSEHsEr4EemAZaGjK5Aj8g" name="PME_Trig3646" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hSHLAEr4EemAZaGjK5Aj8g" name="PME_Trig3647" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hSJAMEr4EemAZaGjK5Aj8g" name="PME_Trig3648" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hSQU8Er4EemAZaGjK5Aj8g" name="PME_Trig3649" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hSWbkEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__configOK__3650" guard="_hSx5YUr4EemAZaGjK5Aj8g" source="_hQBgUEr4EemAZaGjK5Aj8g" target="_s1uLMUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hSx5YUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3657">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hSx5YEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3657">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__configOK__3650&quot;,&quot;Debug__B__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hSXCoEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__configOK__3651" guard="_hSwEMUr4EemAZaGjK5Aj8g" source="_hQBgUEr4EemAZaGjK5Aj8g" target="_s1wAYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hSwEMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3655">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hSwEMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3655">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__configOK__3651&quot;,&quot;Debug__A__En__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hSXpsEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__configOK__3652" guard="_hSwrQUr4EemAZaGjK5Aj8g" source="_hQBgUEr4EemAZaGjK5Aj8g" target="_s1uyQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hSwrQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3656">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hSwrQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3656">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configOK__3652&quot;,&quot;Debug__A__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hSZe4Er4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3653" source="_hP-dAUr4EemAZaGjK5Aj8g" target="_hQBgUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hSu2EEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__3651&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__Ac__configOK&quot;,&quot;To__Debug__A__Ac__configOK__3652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__3650&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__3654&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hSaF8Er4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3654" guard="_hS1jwUr4EemAZaGjK5Aj8g" source="_hQBgUEr4EemAZaGjK5Aj8g" target="_hP_rIEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hS1jwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3658">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hS1jwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3658">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3654&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s1uLMUrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uLMkrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s11f8UrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK__85">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s1uyQErDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uyQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s14jQUrDEem2BZRQc2M93A" name="Debug__A__Ac__configOK__86">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s1wAYErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1wncErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s18NoUrDEem2BZRQc2M93A" name="Debug__A__En__configOK__87">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hQBgUEr4EemAZaGjK5Aj8g" name="DecesionPoint__3589" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hQCHYEr4EemAZaGjK5Aj8g" name="Init__State__3590"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s2HMwErDEem2BZRQc2M93A" name="Debug__Path__Server1Failure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s2JB8ErDEem2BZRQc2M93A" name="Debug__C__Server1Failure">
              <connectionPoint xmi:id="_s2KQEErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s2K3IUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_hNLAoEr4EemAZaGjK5Aj8g" name="From__Parent__3489" kind="entryPoint"/>
              <connectionPoint xmi:id="_hNLnsEr4EemAZaGjK5Aj8g" name="To__Parent__3491" kind="exitPoint"/>
              <region xmi:id="_s2JB8UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s2lt4ErDEem2BZRQc2M93A" name="Debug__init__trans__Server1Failure" source="_s2KQEErDEem2BZRQc2M93A" target="_s2eZIUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s24o0ErDEem2BZRQc2M93A" name="Debug__init__trans__Server1Failure__112">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__init__trans__Server1Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s2lt4UrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s2eZIUrDEem2BZRQc2M93A" target="_s2gOUErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s27FEErDEem2BZRQc2M93A" name="Debug__Ex__Running__114">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2lt4krDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2mU8ErDEem2BZRQc2M93A" name="Debug__AC__Server1Failure" source="_s2gOUErDEem2BZRQc2M93A" target="_s2iDgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2m8AErDEem2BZRQc2M93A" name="Server1failure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: No announcment from server1, remove server1 from masters list\n&quot;;
    systemConfig.MasterList[0]=false;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__AC__Server1Failure&quot;,(char *)&quot;Debug__B__Ac__Server1Failure&quot;,(char *)&quot;Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2mU8UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2m8AUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s2iDgErDEem2BZRQc2M93A" target="_s2j4sErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2njEUrDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__Server1Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2njEErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s2oKIErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure" source="_s2j4sErDEem2BZRQc2M93A" target="_s2K3IUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2_9kErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure__118">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__end__trans__Server1Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2oKIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hNSVYEr4EemAZaGjK5Aj8g" name="Trans__Init__State__34943495" source="_hNRHQEr4EemAZaGjK5Aj8g" target="_hNOD8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hPxBoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3494&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3494&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3494&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3576&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3494&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3494&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3494&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hNS8cEr4EemAZaGjK5Aj8g" name="Trans__ex3496" source="_s2K3IUrDEem2BZRQc2M93A" target="_hNOD8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hPvMcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3576&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hNX08Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__Server1Failure__3497" source="_s2iDgErDEem2BZRQc2M93A" target="_hNOD8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hPswMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3576&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hNaRMEr4EemAZaGjK5Aj8g" name="PME_Trig3498" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hNbfUEr4EemAZaGjK5Aj8g" name="PME_Trig3499" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hNctcEr4EemAZaGjK5Aj8g" name="PME_Trig3500" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hNfJsEr4EemAZaGjK5Aj8g" name="PME_Trig3501" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hNfwwEr4EemAZaGjK5Aj8g" name="PME_Trig3502" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hNiNAEr4EemAZaGjK5Aj8g" name="PME_Trig3503" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hNlQUEr4EemAZaGjK5Aj8g" name="PME_Trig3504" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hNmecEr4EemAZaGjK5Aj8g" name="PME_Trig3505" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hNnFgEr4EemAZaGjK5Aj8g" name="PME_Trig3506" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hNphwEr4EemAZaGjK5Aj8g" name="PME_Trig3507" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hNqv4Er4EemAZaGjK5Aj8g" name="PME_Trig3508" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hNrW8Er4EemAZaGjK5Aj8g" name="PME_Trig3509" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hNslEEr4EemAZaGjK5Aj8g" name="PME_Trig3510" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hNw2gEr4EemAZaGjK5Aj8g" name="PME_Trig3511" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hNyrsEr4EemAZaGjK5Aj8g" name="PME_Trig3512" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hNz50Er4EemAZaGjK5Aj8g" name="PME_Trig3513" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hN1H8Er4EemAZaGjK5Aj8g" name="PME_Trig3514" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hN2WEEr4EemAZaGjK5Aj8g" name="PME_Trig3515" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hN8csEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__Running__3516" source="_s2eZIUrDEem2BZRQc2M93A" target="_hNOD8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hPt-UEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3576&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hN9q0Er4EemAZaGjK5Aj8g" name="PME_Trig3517" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hN_gAEr4EemAZaGjK5Aj8g" name="PME_Trig3518" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hODKYEr4EemAZaGjK5Aj8g" name="PME_Trig3519" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOEYgEr4EemAZaGjK5Aj8g" name="PME_Trig3520" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hOFmoEr4EemAZaGjK5Aj8g" name="PME_Trig3521" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOHb0Er4EemAZaGjK5Aj8g" name="PME_Trig3522" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hOIp8Er4EemAZaGjK5Aj8g" name="PME_Trig3523" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOJRAEr4EemAZaGjK5Aj8g" name="PME_Trig3524" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOJ4EEr4EemAZaGjK5Aj8g" name="PME_Trig3525" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOOJgEr4EemAZaGjK5Aj8g" name="PME_Trig3526" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOPXoEr4EemAZaGjK5Aj8g" name="PME_Trig3527" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hOQlwEr4EemAZaGjK5Aj8g" name="PME_Trig3528" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hOTCAEr4EemAZaGjK5Aj8g" name="PME_Trig3529" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOTpEEr4EemAZaGjK5Aj8g" name="PME_Trig3530" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hOWsYEr4EemAZaGjK5Aj8g" name="PME_Trig3531" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOZIoEr4EemAZaGjK5Aj8g" name="PME_Trig3532" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hObk4Er4EemAZaGjK5Aj8g" name="PME_Trig3533" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOcL8Er4EemAZaGjK5Aj8g" name="PME_Trig3534" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hOdaEEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__Server1Failure__3535" source="_s2gOUErDEem2BZRQc2M93A" target="_hNOD8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hPq7AEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3576&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hOeBIEr4EemAZaGjK5Aj8g" name="PME_Trig3536" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOhEcEr4EemAZaGjK5Aj8g" name="PME_Trig3537" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOi5oEr4EemAZaGjK5Aj8g" name="PME_Trig3538" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOkHwEr4EemAZaGjK5Aj8g" name="PME_Trig3539" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hOmkAEr4EemAZaGjK5Aj8g" name="PME_Trig3540" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOoZMEr4EemAZaGjK5Aj8g" name="PME_Trig3541" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hOsDkEr4EemAZaGjK5Aj8g" name="PME_Trig3542" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOsqoEr4EemAZaGjK5Aj8g" name="PME_Trig3543" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hOt4wEr4EemAZaGjK5Aj8g" name="PME_Trig3544" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOvt8Er4EemAZaGjK5Aj8g" name="PME_Trig3545" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hOxjIEr4EemAZaGjK5Aj8g" name="PME_Trig3546" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hO0mcEr4EemAZaGjK5Aj8g" name="PME_Trig3547" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hO3CsEr4EemAZaGjK5Aj8g" name="PME_Trig3548" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hO4Q0Er4EemAZaGjK5Aj8g" name="PME_Trig3549" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hO6tEEr4EemAZaGjK5Aj8g" name="PME_Trig3550" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hO7UIEr4EemAZaGjK5Aj8g" name="PME_Trig3551" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hO8iQEr4EemAZaGjK5Aj8g" name="PME_Trig3552" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hO-XcEr4EemAZaGjK5Aj8g" name="PME_Trig3553" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hPBawEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Running__3554" source="_s2j4sErDEem2BZRQc2M93A" target="_hNOD8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hP1TEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3576&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hPCB0Er4EemAZaGjK5Aj8g" name="PME_Trig3555" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hPEeEEr4EemAZaGjK5Aj8g" name="PME_Trig3556" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hPFsMEr4EemAZaGjK5Aj8g" name="PME_Trig3557" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hPGTQEr4EemAZaGjK5Aj8g" name="PME_Trig3558" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hPJWkEr4EemAZaGjK5Aj8g" name="PME_Trig3559" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hPLy0Er4EemAZaGjK5Aj8g" name="PME_Trig3560" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hPNA8Er4EemAZaGjK5Aj8g" name="PME_Trig3561" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hPO2IEr4EemAZaGjK5Aj8g" name="PME_Trig3562" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hPPdMEr4EemAZaGjK5Aj8g" name="PME_Trig3563" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hPRSYEr4EemAZaGjK5Aj8g" name="PME_Trig3564" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hPU8wEr4EemAZaGjK5Aj8g" name="PME_Trig3565" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hPWK4Er4EemAZaGjK5Aj8g" name="PME_Trig3566" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hPXZAEr4EemAZaGjK5Aj8g" name="PME_Trig3567" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hPZOMEr4EemAZaGjK5Aj8g" name="PME_Trig3568" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hPacUEr4EemAZaGjK5Aj8g" name="PME_Trig3569" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hPetwEr4EemAZaGjK5Aj8g" name="PME_Trig3570" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hPf74Er4EemAZaGjK5Aj8g" name="PME_Trig3571" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hPhKAEr4EemAZaGjK5Aj8g" name="PME_Trig3572" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hPjmQEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__Server1Failure__3573" guard="_hP918Ur4EemAZaGjK5Aj8g" source="_hNOD8Er4EemAZaGjK5Aj8g" target="_s2iDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hP918Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3583">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hP918Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3583">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,&quot;Debug__A__Ac__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hPkNUEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__Running__3574" guard="_hP4WYUr4EemAZaGjK5Aj8g" source="_hNOD8Er4EemAZaGjK5Aj8g" target="_s2eZIUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hP4WYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3579">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hP4WYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3579">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__3574&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hPkNUUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__Server1Failure__3575" guard="_hP49cUr4EemAZaGjK5Aj8g" source="_hNOD8Er4EemAZaGjK5Aj8g" target="_s2gOUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hP49cUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3580">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hP49cEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3580">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,&quot;Debug__B__Ac__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hPk0YEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__Running__3576" guard="_hP6yoEr4EemAZaGjK5Aj8g" source="_hNOD8Er4EemAZaGjK5Aj8g" target="_s2j4sErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hP6yoEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3581">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hP6LkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3581">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__3576&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hPpF0Er4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3577" source="_hNLAoEr4EemAZaGjK5Aj8g" target="_hNOD8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hP3IQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3574&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__3575&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3576&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__3578&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__Ac__Server1Failure&quot;,&quot;To__Debug__A__Ac__Server1Failure__3573&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hPps4Er4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3578" guard="_hP9O4Ur4EemAZaGjK5Aj8g" source="_hNOD8Er4EemAZaGjK5Aj8g" target="_hNLnsEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hP9O4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3582">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hP9O4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3582">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3578&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s2eZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2fAMErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2p_UErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__107">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2gOUErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2gOUUrDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Server1Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2tCoErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure__108">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2iDgErDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2iDgUrDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Server1Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2wtAErDEem2BZRQc2M93A" name="Debug__A__Ac__Server1Failure__109">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2j4sErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2j4sUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2zJQErDEem2BZRQc2M93A" name="Debug__A__En__Running__110">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hNOD8Er4EemAZaGjK5Aj8g" name="DecesionPoint__3493" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hNRHQEr4EemAZaGjK5Aj8g" name="Init__State__3494"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s3GEMErDEem2BZRQc2M93A" name="Debug__Path__ConfigNOK" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s3JHgErDEem2BZRQc2M93A" name="Debug__C__ConfigNOK">
              <connectionPoint xmi:id="_s3MK0UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_hLC5sEr4EemAZaGjK5Aj8g" name="From__Parent__3414" kind="entryPoint"/>
              <connectionPoint xmi:id="_hLDgwkr4EemAZaGjK5Aj8g" name="To__Parent__3416" kind="exitPoint"/>
              <region xmi:id="_s3JHgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s3eesUrDEem2BZRQc2M93A" name="Debug__Ac__ConfigNOK" source="_s3bbYUrDEem2BZRQc2M93A" target="_s3cpgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3fFwUrDEem2BZRQc2M93A" name="LogFailure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The configuration is not OK, the transition configCheck-> ConfigFailure was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__Ac__ConfigNOK&quot;,(char *)&quot;Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s3fFwErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s3fs0ErDEem2BZRQc2M93A" name="Debug__En__ConfigFailure" source="_s3cpgErDEem2BZRQc2M93A" target="_s3d3oErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3fs0krDEem2BZRQc2M93A" name="failurEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: The system is in Failure State, try to reload the config after 10 second\n&quot;;
    FailureTimer.informIn(UMLRTTimespec(10,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__En__ConfigFailure&quot;,(char *)&quot;Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s3fs0UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s3gT4ErDEem2BZRQc2M93A" name="Debug__end__trans__ConfigNOK" source="_s3d3oErDEem2BZRQc2M93A" target="_s3MK0UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3u9YErDEem2BZRQc2M93A" name="Debug__end__trans__ConfigNOK__140">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__end__trans__ConfigNOK&quot;,(char *)&quot;Debug__A__En__ConfigNOK&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s3gT4UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hLKOcEr4EemAZaGjK5Aj8g" name="Trans__Init__State__34193420" source="_hLHLIEr4EemAZaGjK5Aj8g" target="_hLF9AEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hM23kEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3419&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3419&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3483&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3419&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3481&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3419&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3419&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hLLckEr4EemAZaGjK5Aj8g" name="Trans__ex3421" source="_s3MK0UrDEem2BZRQc2M93A" target="_hLF9AEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hM-zYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3483&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3481&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hLN40Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__ConfigNOK__3422" source="_s3cpgErDEem2BZRQc2M93A" target="_hLF9AEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hM4FsEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3483&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3481&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hLOf4Er4EemAZaGjK5Aj8g" name="PME_Trig3423" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hLQ8IEr4EemAZaGjK5Aj8g" name="PME_Trig3424" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hLRjMEr4EemAZaGjK5Aj8g" name="PME_Trig3425" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hLSKQEr4EemAZaGjK5Aj8g" name="PME_Trig3426" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hLT_cEr4EemAZaGjK5Aj8g" name="PME_Trig3427" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hLYQ4Er4EemAZaGjK5Aj8g" name="PME_Trig3428" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hLaGEEr4EemAZaGjK5Aj8g" name="PME_Trig3429" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hLbUMEr4EemAZaGjK5Aj8g" name="PME_Trig3430" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hLciUEr4EemAZaGjK5Aj8g" name="PME_Trig3431" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hLgzwEr4EemAZaGjK5Aj8g" name="PME_Trig3432" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hLha0Er4EemAZaGjK5Aj8g" name="PME_Trig3433" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hLio8Er4EemAZaGjK5Aj8g" name="PME_Trig3434" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hLlFMEr4EemAZaGjK5Aj8g" name="PME_Trig3435" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hLlsQEr4EemAZaGjK5Aj8g" name="PME_Trig3436" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hLoIgEr4EemAZaGjK5Aj8g" name="PME_Trig3437" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hLrL0Er4EemAZaGjK5Aj8g" name="PME_Trig3438" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hLry4Er4EemAZaGjK5Aj8g" name="PME_Trig3439" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hLtBAEr4EemAZaGjK5Aj8g" name="PME_Trig3440" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hLu2MEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__ConfigNOK__3441" source="_s3bbYUrDEem2BZRQc2M93A" target="_hLF9AEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hNGvMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3483&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3481&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hLvdQEr4EemAZaGjK5Aj8g" name="PME_Trig3442" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hLwrYEr4EemAZaGjK5Aj8g" name="PME_Trig3443" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hL0VwEr4EemAZaGjK5Aj8g" name="PME_Trig3444" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hL1j4Er4EemAZaGjK5Aj8g" name="PME_Trig3445" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hL2yAEr4EemAZaGjK5Aj8g" name="PME_Trig3446" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hL5OQEr4EemAZaGjK5Aj8g" name="PME_Trig3447" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hL7DcEr4EemAZaGjK5Aj8g" name="PME_Trig3448" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hL-t0Er4EemAZaGjK5Aj8g" name="PME_Trig3449" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hL_78Er4EemAZaGjK5Aj8g" name="PME_Trig3450" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMAjAEr4EemAZaGjK5Aj8g" name="PME_Trig3451" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMCYMEr4EemAZaGjK5Aj8g" name="PME_Trig3452" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hMENYEr4EemAZaGjK5Aj8g" name="PME_Trig3453" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hMH3wEr4EemAZaGjK5Aj8g" name="PME_Trig3454" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMJF4Er4EemAZaGjK5Aj8g" name="PME_Trig3455" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hMKUAEr4EemAZaGjK5Aj8g" name="PME_Trig3456" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMK7EEr4EemAZaGjK5Aj8g" name="PME_Trig3457" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hMMJMEr4EemAZaGjK5Aj8g" name="PME_Trig3458" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMOlcEr4EemAZaGjK5Aj8g" name="PME_Trig3459" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hMSP0Er4EemAZaGjK5Aj8g" name="From__Debug__A__En__ConfigNOK__3460" source="_s3d3oErDEem2BZRQc2M93A" target="_hLF9AEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hNAokEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3483&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3481&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hMTd8Er4EemAZaGjK5Aj8g" name="PME_Trig3461" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMUFAEr4EemAZaGjK5Aj8g" name="PME_Trig3462" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMVTIEr4EemAZaGjK5Aj8g" name="PME_Trig3463" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMV6MEr4EemAZaGjK5Aj8g" name="PME_Trig3464" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hMXvYEr4EemAZaGjK5Aj8g" name="PME_Trig3465" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMY9gEr4EemAZaGjK5Aj8g" name="PME_Trig3466" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hMZkkEr4EemAZaGjK5Aj8g" name="PME_Trig3467" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMcA0Er4EemAZaGjK5Aj8g" name="PME_Trig3468" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMfEIEr4EemAZaGjK5Aj8g" name="PME_Trig3469" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMhgYEr4EemAZaGjK5Aj8g" name="PME_Trig3470" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMiugEr4EemAZaGjK5Aj8g" name="PME_Trig3471" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hMkjsEr4EemAZaGjK5Aj8g" name="PME_Trig3472" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hMoOEEr4EemAZaGjK5Aj8g" name="PME_Trig3473" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMo1IEr4EemAZaGjK5Aj8g" name="PME_Trig3474" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hMqDQEr4EemAZaGjK5Aj8g" name="PME_Trig3475" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hMqqUEr4EemAZaGjK5Aj8g" name="PME_Trig3476" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hMtGkEr4EemAZaGjK5Aj8g" name="PME_Trig3477" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hMwJ4Er4EemAZaGjK5Aj8g" name="PME_Trig3478" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hMymIEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__ConfigNOK__3479" guard="_hNIkY0r4EemAZaGjK5Aj8g" source="_hLF9AEr4EemAZaGjK5Aj8g" target="_s3cpgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hNIkY0r4EemAZaGjK5Aj8g" name="PME_checkDecesion3487">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hNIkYkr4EemAZaGjK5Aj8g" name="PME_checkDecesion3487">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ConfigNOK__3479&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hMymIUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__ConfigNOK__3480" guard="_hNHWQUr4EemAZaGjK5Aj8g" source="_hLF9AEr4EemAZaGjK5Aj8g" target="_s3bbYUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hNHWQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3484">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hNHWQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3484">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ConfigNOK__3480&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hMzNMEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__ConfigNOK__3481" guard="_hNIkYUr4EemAZaGjK5Aj8g" source="_hLF9AEr4EemAZaGjK5Aj8g" target="_s3d3oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hNIkYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3486">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hNIkYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3486">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ConfigNOK__3481&quot;,&quot;Debug__A__En__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hMz0QEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3482" source="_hLC5sEr4EemAZaGjK5Aj8g" target="_hLF9AEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hNB2sEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__3480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__3483&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__3481&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__Ac__ConfigNOK&quot;,&quot;To__Debug__A__Ac__ConfigNOK__3479&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hMz0QUr4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3483" guard="_hNH9UUr4EemAZaGjK5Aj8g" source="_hLF9AEr4EemAZaGjK5Aj8g" target="_hLDgwkr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hNH9UUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3485">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hNH9UEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3485">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3483&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s3bbYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3bbYkrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigNOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3hiAUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK__132">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s3cpgErDEem2BZRQc2M93A" name="Debug__A__Ac__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3cpgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigNOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3klUUrDEem2BZRQc2M93A" name="Debug__A__Ac__ConfigNOK__133">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s3d3oErDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3d3oUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3nooUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK__134">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hLF9AEr4EemAZaGjK5Aj8g" name="DecesionPoint__3418" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hLHLIEr4EemAZaGjK5Aj8g" name="Init__State__3419"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s31EAErDEem2BZRQc2M93A" name="Debug__Path__Init__ReadConfig__1" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s31rEUrDEem2BZRQc2M93A" name="Debug__C__Init__ReadConfig__1">
              <connectionPoint xmi:id="_s32SIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_hIQrcEr4EemAZaGjK5Aj8g" name="From__Parent__3339" kind="entryPoint"/>
              <connectionPoint xmi:id="_hIWLAEr4EemAZaGjK5Aj8g" name="To__Parent__3341" kind="exitPoint"/>
              <region xmi:id="_s31rEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4LpUErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1" source="_s32SIUrDEem2BZRQc2M93A" target="_s4ImAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4ZEsErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1__158">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__init__trans__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s4MQYErDEem2BZRQc2M93A" name="Debug__Ac__Init__ReadConfig__1" source="_s4ImAErDEem2BZRQc2M93A" target="_s4J0IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4MQYkrDEem2BZRQc2M93A" name="ENVInit" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4MQYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4M3cErDEem2BZRQc2M93A" name="Debug__En__ReadConfig" source="_s4J0IErDEem2BZRQc2M93A" target="_s4LCQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4NegErDEem2BZRQc2M93A" name="ReadConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__En__ReadConfig&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4M3cUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hIeG0Er4EemAZaGjK5Aj8g" name="Trans__Init__State__33443345" source="_hIaccEr4EemAZaGjK5Aj8g" target="_hIYAMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hK6W0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3344&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3405&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3344&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3344&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3408&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3344&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3404&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3344&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hIkNcEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__Init__ReadConfig__1__3346" source="_s4ImAErDEem2BZRQc2M93A" target="_hIYAMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hK2scEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3405&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3408&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3404&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hIk0gEr4EemAZaGjK5Aj8g" name="PME_Trig3347" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hIoe4Er4EemAZaGjK5Aj8g" name="PME_Trig3348" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hIsJQEr4EemAZaGjK5Aj8g" name="PME_Trig3349" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hIulgEr4EemAZaGjK5Aj8g" name="PME_Trig3350" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hIyP4Er4EemAZaGjK5Aj8g" name="PME_Trig3351" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hI1TMEr4EemAZaGjK5Aj8g" name="PME_Trig3352" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hI4WgEr4EemAZaGjK5Aj8g" name="PME_Trig3353" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hI5koEr4EemAZaGjK5Aj8g" name="PME_Trig3354" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hI7Z0Er4EemAZaGjK5Aj8g" name="PME_Trig3355" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hJBgcEr4EemAZaGjK5Aj8g" name="PME_Trig3356" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hJD8sEr4EemAZaGjK5Aj8g" name="PME_Trig3357" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hJI1MEr4EemAZaGjK5Aj8g" name="PME_Trig3358" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hJLRcEr4EemAZaGjK5Aj8g" name="PME_Trig3359" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hJgooEr4EemAZaGjK5Aj8g" name="PME_Trig3360" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hJh2wEr4EemAZaGjK5Aj8g" name="PME_Trig3361" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hJkTAEr4EemAZaGjK5Aj8g" name="PME_Trig3362" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hJnWUEr4EemAZaGjK5Aj8g" name="PME_Trig3363" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hJokcEr4EemAZaGjK5Aj8g" name="PME_Trig3364" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hJqZoEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__Init__ReadConfig__1__3365" source="_s4J0IErDEem2BZRQc2M93A" target="_hIYAMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hKzCEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3405&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3408&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3404&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hJrAsEr4EemAZaGjK5Aj8g" name="PME_Trig3366" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hJsO0Er4EemAZaGjK5Aj8g" name="PME_Trig3367" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hJxHUEr4EemAZaGjK5Aj8g" name="PME_Trig3368" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hJyVcEr4EemAZaGjK5Aj8g" name="PME_Trig3369" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hJ0xsEr4EemAZaGjK5Aj8g" name="PME_Trig3370" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hJ1_0Er4EemAZaGjK5Aj8g" name="PME_Trig3371" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hJ5qMEr4EemAZaGjK5Aj8g" name="PME_Trig3372" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hJ7fYEr4EemAZaGjK5Aj8g" name="PME_Trig3373" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hJ8GcEr4EemAZaGjK5Aj8g" name="PME_Trig3374" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hJ97oEr4EemAZaGjK5Aj8g" name="PME_Trig3375" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hJ_w0Er4EemAZaGjK5Aj8g" name="PME_Trig3376" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hKAX4Er4EemAZaGjK5Aj8g" name="PME_Trig3377" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hKDbMEr4EemAZaGjK5Aj8g" name="PME_Trig3378" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKF3cEr4EemAZaGjK5Aj8g" name="PME_Trig3379" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hKGegEr4EemAZaGjK5Aj8g" name="PME_Trig3380" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKHsoEr4EemAZaGjK5Aj8g" name="PME_Trig3381" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hKJh0Er4EemAZaGjK5Aj8g" name="PME_Trig3382" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hKL-EEr4EemAZaGjK5Aj8g" name="PME_Trig3383" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hKPBYEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Init__ReadConfig__1__3384" source="_s4LCQErDEem2BZRQc2M93A" target="_hIYAMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hK8zEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3405&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3408&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3404&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hKPocEr4EemAZaGjK5Aj8g" name="PME_Trig3385" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hKQ2kEr4EemAZaGjK5Aj8g" name="PME_Trig3386" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKSEsEr4EemAZaGjK5Aj8g" name="PME_Trig3387" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKT54Er4EemAZaGjK5Aj8g" name="PME_Trig3388" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hKUg8Er4EemAZaGjK5Aj8g" name="PME_Trig3389" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hKYLUEr4EemAZaGjK5Aj8g" name="PME_Trig3390" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hKaAgEr4EemAZaGjK5Aj8g" name="PME_Trig3391" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKankEr4EemAZaGjK5Aj8g" name="PME_Trig3392" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKb1sEr4EemAZaGjK5Aj8g" name="PME_Trig3393" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hKdD0Er4EemAZaGjK5Aj8g" name="PME_Trig3394" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hKe5AEr4EemAZaGjK5Aj8g" name="PME_Trig3395" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hKguMEr4EemAZaGjK5Aj8g" name="PME_Trig3396" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hKkYkEr4EemAZaGjK5Aj8g" name="PME_Trig3397" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKk_oEr4EemAZaGjK5Aj8g" name="PME_Trig3398" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hKnb4Er4EemAZaGjK5Aj8g" name="PME_Trig3399" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_hKoC8Er4EemAZaGjK5Aj8g" name="PME_Trig3400" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hKpREEr4EemAZaGjK5Aj8g" name="PME_Trig3401" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hKsUYEr4EemAZaGjK5Aj8g" name="PME_Trig3402" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hKuJkEr4EemAZaGjK5Aj8g" name="PME_Trig3403" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hKvXsEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__Init__ReadConfig__1__3404" guard="_hLAdcUr4EemAZaGjK5Aj8g" source="_hIYAMEr4EemAZaGjK5Aj8g" target="_s4ImAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hLAdcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3412">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hLAdcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3412">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__ReadConfig__1__3404&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hKv-wEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__Init__ReadConfig__1__3405" guard="_hK9aIUr4EemAZaGjK5Aj8g" source="_hIYAMEr4EemAZaGjK5Aj8g" target="_s4J0IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hK9aIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3409">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hK9aIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3409">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__ReadConfig__1__3405&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hKv-wUr4EemAZaGjK5Aj8g" name="To__Debug__A__En__Init__ReadConfig__1__3406" guard="_hK9aI0r4EemAZaGjK5Aj8g" source="_hIYAMEr4EemAZaGjK5Aj8g" target="_s4LCQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hK9aI0r4EemAZaGjK5Aj8g" name="PME_checkDecesion3410">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hK9aIkr4EemAZaGjK5Aj8g" name="PME_checkDecesion3410">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Init__ReadConfig__1__3406&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hKxz8Er4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3407" source="_hIQrcEr4EemAZaGjK5Aj8g" target="_hIYAMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hK5IsEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__3405&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__3406&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__3408&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__3404&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hKxz8Ur4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3408" guard="_hK_PUUr4EemAZaGjK5Aj8g" source="_hIYAMEr4EemAZaGjK5Aj8g" target="_hIWLAEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hK_PUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3411">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hK_PUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3411">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3408&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s4ImAErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4ImAUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4P6wUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1__154">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4J0IErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4J0IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4S-EErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1__155">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4LCQErDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4LCQUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4WocUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1__156">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hIYAMEr4EemAZaGjK5Aj8g" name="DecesionPoint__3343" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hIaccEr4EemAZaGjK5Aj8g" name="Init__State__3344"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s4iOoUrDEem2BZRQc2M93A" name="Debug__C__RetryConfig">
              <connectionPoint xmi:id="_s4jcwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s4kq4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_g91kIEr4EemAZaGjK5Aj8g" name="From__Parent__3134" kind="entryPoint"/>
              <connectionPoint xmi:id="_g92yQEr4EemAZaGjK5Aj8g" name="To__Parent__3136" kind="exitPoint"/>
              <region xmi:id="_s4iOokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4-6kErDEem2BZRQc2M93A" name="Debug__init__trans__RetryConfig" source="_s4jcwErDEem2BZRQc2M93A" target="_s40igUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5OLIErDEem2BZRQc2M93A" name="Debug__init__trans__RetryConfig__181">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__init__trans__RetryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s4-6kUrDEem2BZRQc2M93A" name="Debug__Ex__ConfigFailure" source="_s40igUrDEem2BZRQc2M93A" target="_s41woErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5PZQErDEem2BZRQc2M93A" name="Debug__Ex__ConfigFailure__183">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__Ex__ConfigFailure&quot;,(char *)&quot;Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4-6kkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_g96coEr4EemAZaGjK5Aj8g" name="Trans__ex3140" source="_s4kq4UrDEem2BZRQc2M93A" target="_g93ZUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g_-5MEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_g96coUr4EemAZaGjK5Aj8g" name="Trans__Init__State__31393141" source="_g95OgEr4EemAZaGjK5Aj8g" target="_g93ZUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g_2WUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3139&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3139&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3139&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3139&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_g97qwEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__RetryConfig__3142" source="_s41woErDEem2BZRQc2M93A" target="_g93ZUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hAIqMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_g98R0Er4EemAZaGjK5Aj8g" name="PME_Trig3143" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g99f8Er4EemAZaGjK5Aj8g" name="PME_Trig3144" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g-BxYEr4EemAZaGjK5Aj8g" name="PME_Trig3145" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g-DmkEr4EemAZaGjK5Aj8g" name="PME_Trig3146" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g-E0sEr4EemAZaGjK5Aj8g" name="PME_Trig3147" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g-FbwEr4EemAZaGjK5Aj8g" name="PME_Trig3148" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g-HQ8Er4EemAZaGjK5Aj8g" name="PME_Trig3149" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g-MJcEr4EemAZaGjK5Aj8g" name="PME_Trig3150" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g-OlsEr4EemAZaGjK5Aj8g" name="PME_Trig3151" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g-SQEEr4EemAZaGjK5Aj8g" name="PME_Trig3152" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g-VTYEr4EemAZaGjK5Aj8g" name="PME_Trig3153" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_g-YWsEr4EemAZaGjK5Aj8g" name="PME_Trig3154" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g-aL4Er4EemAZaGjK5Aj8g" name="PME_Trig3155" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g-baAEr4EemAZaGjK5Aj8g" name="PME_Trig3156" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_g-hgoEr4EemAZaGjK5Aj8g" name="PME_Trig3157" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_g-j84Er4EemAZaGjK5Aj8g" name="PME_Trig3158" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g-lLAEr4EemAZaGjK5Aj8g" name="PME_Trig3159" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_g-tG0Er4EemAZaGjK5Aj8g" name="PME_Trig3160" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g-u8AEr4EemAZaGjK5Aj8g" name="PME_Trig3161" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_g-x_UEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__ConfigFailure__3162" source="_s40igUrDEem2BZRQc2M93A" target="_g93ZUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g_714Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_g-1psEr4EemAZaGjK5Aj8g" name="PME_Trig3163" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g-4F8Er4EemAZaGjK5Aj8g" name="PME_Trig3164" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g-8-cEr4EemAZaGjK5Aj8g" name="PME_Trig3165" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g--zoEr4EemAZaGjK5Aj8g" name="PME_Trig3166" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g_BP4Er4EemAZaGjK5Aj8g" name="PME_Trig3167" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g_ETMEr4EemAZaGjK5Aj8g" name="PME_Trig3168" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g_IkoEr4EemAZaGjK5Aj8g" name="PME_Trig3169" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g_Ln8Er4EemAZaGjK5Aj8g" name="PME_Trig3170" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g_NdIEr4EemAZaGjK5Aj8g" name="PME_Trig3171" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g_SVoEr4EemAZaGjK5Aj8g" name="PME_Trig3172" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g_VY8Er4EemAZaGjK5Aj8g" name="PME_Trig3173" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_g_XOIEr4EemAZaGjK5Aj8g" name="PME_Trig3174" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g_ctsEr4EemAZaGjK5Aj8g" name="PME_Trig3175" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g_fJ8Er4EemAZaGjK5Aj8g" name="PME_Trig3176" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_g_hmMEr4EemAZaGjK5Aj8g" name="PME_Trig3177" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_g_nFwEr4EemAZaGjK5Aj8g" name="PME_Trig3178" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_g_piAEr4EemAZaGjK5Aj8g" name="PME_Trig3179" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_g_rXMEr4EemAZaGjK5Aj8g" name="PME_Trig3180" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_g_w2wEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__RetryConfig__3181" guard="_hALGcUr4EemAZaGjK5Aj8g" source="_g93ZUEr4EemAZaGjK5Aj8g" target="_s41woErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hALGcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3186">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hALGcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3186">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__RetryConfig__3181&quot;,&quot;Debug__B__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g_xd0Er4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__ConfigFailure__3182" guard="_hAOw0Ur4EemAZaGjK5Aj8g" source="_g93ZUEr4EemAZaGjK5Aj8g" target="_s40igUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hAOw0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3187">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hAOw0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3187">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ConfigFailure__3182&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g_z6EEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3183" source="_g91kIEr4EemAZaGjK5Aj8g" target="_g93ZUEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hAE_0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__3184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__3181&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__3182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_g_z6EUr4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3184" guard="_hAJ4UUr4EemAZaGjK5Aj8g" source="_g93ZUEr4EemAZaGjK5Aj8g" target="_g92yQEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hAJ4UUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3185">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hAJ4UEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3185">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3184&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s40igUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s40igkrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5DzEUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure__176">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s41woErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s41woUrDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5G2YErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig__177">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_g93ZUEr4EemAZaGjK5Aj8g" name="DecesionPoint__3138" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_g95OgEr4EemAZaGjK5Aj8g" name="Init__State__3139"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s5YjMErDEem2BZRQc2M93A" name="Debug__Path__QueryConfig" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s5ZKQUrDEem2BZRQc2M93A" name="Debug__C__QueryConfig">
              <connectionPoint xmi:id="_s5aYYErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s5a_cUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_hEYRAUr4EemAZaGjK5Aj8g" name="From__Parent__3264" kind="entryPoint"/>
              <connectionPoint xmi:id="_hEbUUEr4EemAZaGjK5Aj8g" name="To__Parent__3266" kind="exitPoint"/>
              <region xmi:id="_s5ZKQkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s5vIgErDEem2BZRQc2M93A" name="Debug__init__trans__QueryConfig" source="_s5aYYErDEem2BZRQc2M93A" target="_s5q3EErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5-ZEErDEem2BZRQc2M93A" name="Debug__init__trans__QueryConfig__206">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__init__trans__QueryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s5wWoUrDEem2BZRQc2M93A" name="Debug__En__Running" source="_s5ssQErDEem2BZRQc2M93A" target="_s5t6YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5w9sErDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__QueryConfig&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5wWokrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5w9sUrDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig" source="_s5t6YErDEem2BZRQc2M93A" target="_s5a_cUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6EfsErDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig__212">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__end__trans__QueryConfig&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5w9skrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_hElsYEr4EemAZaGjK5Aj8g" name="Trans__Init__State__32693270" source="_hEiCAEr4EemAZaGjK5Aj8g" target="_hEcicEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hIBa4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3269&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3269&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3331&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3269&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3330&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__3269&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3269&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hEmTcEr4EemAZaGjK5Aj8g" name="Trans__ex3271" source="_s5a_cUrDEem2BZRQc2M93A" target="_hEcicEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hIFFQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3331&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3330&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hEtoMEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__Running__3272" source="_s5q3EErDEem2BZRQc2M93A" target="_hEcicEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hH2bwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3331&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3330&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hEygsEr4EemAZaGjK5Aj8g" name="PME_Trig3273" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hE0V4Er4EemAZaGjK5Aj8g" name="PME_Trig3274" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hE2LEEr4EemAZaGjK5Aj8g" name="PME_Trig3275" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hE3ZMEr4EemAZaGjK5Aj8g" name="PME_Trig3276" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hE6cgEr4EemAZaGjK5Aj8g" name="PME_Trig3277" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hE9f0Er4EemAZaGjK5Aj8g" name="PME_Trig3278" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hFBKMEr4EemAZaGjK5Aj8g" name="PME_Trig3279" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hFCYUEr4EemAZaGjK5Aj8g" name="PME_Trig3280" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hFFboEr4EemAZaGjK5Aj8g" name="PME_Trig3281" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hFKUIEr4EemAZaGjK5Aj8g" name="PME_Trig3282" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hFMJUEr4EemAZaGjK5Aj8g" name="PME_Trig3283" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hFOlkEr4EemAZaGjK5Aj8g" name="PME_Trig3284" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hFRB0Er4EemAZaGjK5Aj8g" name="PME_Trig3285" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hFVTQEr4EemAZaGjK5Aj8g" name="PME_Trig3286" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hFYWkEr4EemAZaGjK5Aj8g" name="PME_Trig3287" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_hFay0Er4EemAZaGjK5Aj8g" name="PME_Trig3288" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hFfEQEr4EemAZaGjK5Aj8g" name="PME_Trig3289" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hFhggEr4EemAZaGjK5Aj8g" name="PME_Trig3290" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hFj8wEr4EemAZaGjK5Aj8g" name="PME_Trig3291" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hFo1QEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Running__3292" source="_s5t6YErDEem2BZRQc2M93A" target="_hEcicEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hH4Q8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3331&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3330&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hFqDYEr4EemAZaGjK5Aj8g" name="PME_Trig3293" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hFsfoEr4EemAZaGjK5Aj8g" name="PME_Trig3294" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hFuU0Er4EemAZaGjK5Aj8g" name="PME_Trig3295" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hFz0YEr4EemAZaGjK5Aj8g" name="PME_Trig3296" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hF23sEr4EemAZaGjK5Aj8g" name="PME_Trig3297" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hF6iEEr4EemAZaGjK5Aj8g" name="PME_Trig3298" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hF-McEr4EemAZaGjK5Aj8g" name="PME_Trig3299" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hGAosEr4EemAZaGjK5Aj8g" name="PME_Trig3300" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hGCd4Er4EemAZaGjK5Aj8g" name="PME_Trig3301" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hGFhMEr4EemAZaGjK5Aj8g" name="PME_Trig3302" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hGIkgEr4EemAZaGjK5Aj8g" name="PME_Trig3303" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hGLn0Er4EemAZaGjK5Aj8g" name="PME_Trig3304" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hGQgUEr4EemAZaGjK5Aj8g" name="PME_Trig3305" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hGS8kEr4EemAZaGjK5Aj8g" name="PME_Trig3306" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hGV_4Er4EemAZaGjK5Aj8g" name="PME_Trig3307" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hGZqQEr4EemAZaGjK5Aj8g" name="PME_Trig3308" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hGctkEr4EemAZaGjK5Aj8g" name="PME_Trig3309" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hGfJ0Er4EemAZaGjK5Aj8g" name="PME_Trig3310" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hGg_AEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__QueryConfig__3311" source="_s5ssQErDEem2BZRQc2M93A" target="_hEcicEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hH8iYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3331&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3330&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_hGhmEEr4EemAZaGjK5Aj8g" name="PME_Trig3312" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hGoTwEr4EemAZaGjK5Aj8g" name="PME_Trig3313" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hGqI8Er4EemAZaGjK5Aj8g" name="PME_Trig3314" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hGrXEEr4EemAZaGjK5Aj8g" name="PME_Trig3315" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hGvogEr4EemAZaGjK5Aj8g" name="PME_Trig3316" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hGzS4Er4EemAZaGjK5Aj8g" name="PME_Trig3317" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hG1vIEr4EemAZaGjK5Aj8g" name="PME_Trig3318" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hG6noEr4EemAZaGjK5Aj8g" name="PME_Trig3319" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hG9D4Er4EemAZaGjK5Aj8g" name="PME_Trig3320" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hG-5EEr4EemAZaGjK5Aj8g" name="PME_Trig3321" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hHEYoEr4EemAZaGjK5Aj8g" name="PME_Trig3322" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_hHGN0Er4EemAZaGjK5Aj8g" name="PME_Trig3323" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_hHJRIEr4EemAZaGjK5Aj8g" name="PME_Trig3324" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hHPXwEr4EemAZaGjK5Aj8g" name="PME_Trig3325" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_hHSbEEr4EemAZaGjK5Aj8g" name="PME_Trig3326" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_hHWFcEr4EemAZaGjK5Aj8g" name="PME_Trig3327" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_hHZv0Er4EemAZaGjK5Aj8g" name="PME_Trig3328" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_hHdaMEr4EemAZaGjK5Aj8g" name="PME_Trig3329" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_g4qJMEr4EemAZaGjK5Aj8g"/>
                </transition>
                <transition xmi:id="_hHkH4Er4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__Running__3330" guard="_hINBEUr4EemAZaGjK5Aj8g" source="_hEcicEr4EemAZaGjK5Aj8g" target="_s5q3EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hINBEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3337">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hINBEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3337">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__3330&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hHkH4Ur4EemAZaGjK5Aj8g" name="To__Debug__A__En__Running__3331" guard="_hIGTYUr4EemAZaGjK5Aj8g" source="_hEcicEr4EemAZaGjK5Aj8g" target="_s5t6YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hIGTYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3336">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hIGTYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3336">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__3331&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hHlWAEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__QueryConfig__3332" guard="_hIFsUUr4EemAZaGjK5Aj8g" source="_hEcicEr4EemAZaGjK5Aj8g" target="_s5ssQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_hIFsUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3335">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hIFsUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3335">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__QueryConfig__3332&quot;,&quot;Debug__A__Ac__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_hHq1kEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3333" source="_hEYRAUr4EemAZaGjK5Aj8g" target="_hEcicEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_hHxjQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__Ac__QueryConfig&quot;,&quot;To__Debug__A__Ac__QueryConfig__3332&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__3331&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__3330&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__3334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_hHtR0Er4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3334" guard="_hIPdUUr4EemAZaGjK5Aj8g" source="_hEcicEr4EemAZaGjK5Aj8g" target="_hEbUUEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_hIPdUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3338">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_hIPdUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3338">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3334&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s5q3EErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5q3EUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5yy4ErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__201">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5ssQErDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5ssQUrDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;QueryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s55gkErDEem2BZRQc2M93A" name="Debug__A__Ac__QueryConfig__203">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5t6YErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5t6YUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s57VwErDEem2BZRQc2M93A" name="Debug__A__En__Running__204">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hEcicEr4EemAZaGjK5Aj8g" name="DecesionPoint__3268" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_hEiCAEr4EemAZaGjK5Aj8g" name="Init__State__3269"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s6YowErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_g6t-sEr4EemAZaGjK5Aj8g" name="DecesionPoint__3043" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_su-C8ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_su9b4ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>ConfigComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svWdcUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_svWdcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;AnnouncmentServerTimeout,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncmentServerTimeout!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncmentServerTimeout);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svdyMErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_svaH0ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;AnnouncmentServerTimeout&quot;==tempVarName){
    AnnouncmentServerTimeout=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sv86YErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_svrNkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g5t5IUr4EemAZaGjK5Aj8g" name="loadHeap" specification="_g5t5IEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.AnnouncmentServerTimeout&quot;,this->AnnouncmentServerTimeout);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g5vHQUr4EemAZaGjK5Aj8g" name="unLoadHeap" specification="_g5vHQEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.AnnouncmentServerTimeout&quot;,&amp;this->AnnouncmentServerTimeout);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g6G6sUr4EemAZaGjK5Aj8g" name="sendMessage" specification="_g6G6sEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;ReplyReplicationMode&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyReplicationMode( boost::any_cast&lt;int>(message.payload[&quot;RunningMode&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyServerRole( boost::any_cast&lt;int>(message.payload[&quot;ServerRole&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;Shutdown&quot;) {
   if(message.payload.size()==0){
    ConfigComm.Shutdown().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;StartUp&quot;) {
   if(message.payload.size()==1){
    ConfigComm.StartUp( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyConfig&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyConfig( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyMasterId&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyMasterId( boost::any_cast&lt;int>(message.payload[&quot;MasterId&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;BIT&quot;) {
   if(message.payload.size()==0){
    ConfigComm.BIT().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g6JW8Ur4EemAZaGjK5Aj8g" name="sendInternalMessage" specification="_g6JW8Er4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g6kNsUr4EemAZaGjK5Aj8g" name="initForPMD" specification="_g6kNsEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ENV::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ENV::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;FailureTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;BITTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;GeneralTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer1&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer2&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;configTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_su9b4ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_su-C8ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svWdcErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_svWdcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svaH0ErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_svdyMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svb9AErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svckEErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svdLIErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_svrNkErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sv86YErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svrNkUrDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svwtIErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svzJYErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv1loErDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv2MsErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv4B4ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv5QAUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv53EErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv7sQErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv8TUErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_g5t5IEr4EemAZaGjK5Aj8g" name="loadHeap" visibility="private" method="_g5t5IUr4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_g5vHQEr4EemAZaGjK5Aj8g" name="unLoadHeap" visibility="private" method="_g5vHQUr4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_g6G6sEr4EemAZaGjK5Aj8g" name="sendMessage" visibility="private" method="_g6G6sUr4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_g6HhwEr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_g6II0Ur4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_g6JW8Er4EemAZaGjK5Aj8g" name="sendInternalMessage" visibility="private" method="_g6JW8Ur4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_g6MaQEr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_g6OPcEr4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_g6kNsEr4EemAZaGjK5Aj8g" name="initForPMD" visibility="private" method="_g6kNsUr4EemAZaGjK5Aj8g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Y0NjUAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_nk_BAAgzEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_aaXBwAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_v000cAgsEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_fXXuUAxwEeaB2MeL96fedA" memberEnd="_fXb_wAxwEeaB2MeL96fedA _fXcm0AxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_fXaKkAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_fXaxoAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_fXcm0AxwEeaB2MeL96fedA" name="env" type="_sMZ5EAgoEea_md0mpENoqg" association="_fXXuUAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_z1vioAggEea_md0mpENoqg" name="Hosts">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_wVFC0AghEea_md0mpENoqg" client="_z1vioAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4_oYIAghEea_md0mpENoqg" name="Host" isActive="true">
        <ownedAttribute xmi:id="_qKL_IAgnEea_md0mpENoqg" name="hostInfo" type="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_wp2QEAltEea_md0mpENoqg" name="hostConfig" type="_Y1UDYAg6Eea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_MFku4Ao-EeaGqPUk-4V4qQ" name="TimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_yqPtMgxwEeaB2MeL96fedA" name="hostinfo" type="_JesyoAgiEea_md0mpENoqg" aggregation="composite" association="_yqOfEAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_z8hNYQxwEeaB2MeL96fedA" name="configuration" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_z8f_QAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_dCa_wPMYEeauO5SNGpOV7w" name="logfile"/>
        <ownedAttribute xmi:id="_nU84IPMbEeauO5SNGpOV7w" name="ts">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IWYV4G6NEeSyDdTKostG4Q"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_G0bAoPMlEeauO5SNGpOV7w" name="messageID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
          <defaultValue xmi:type="uml:LiteralReal" xmi:id="_G0bAofMlEeauO5SNGpOV7w"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_xCGHkAgmEea_md0mpENoqg" name="Server" classifierBehavior="_lT4V0AlLEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_6zESYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-3KD0AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xByucAlLEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xB_iwAlLEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pQ6HcAnMEeaGqPUk-4V4qQ" name="ServerComm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etWXMAnOEeaGqPUk-4V4qQ" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_euWcwAnOEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_HIvrsApCEeaGqPUk-4V4qQ" name="Master" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_ZDrx0ApDEeaGqPUk-4V4qQ" name="KeepAliveTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Vj1U4ApFEeaGqPUk-4V4qQ" name="MasterAnnounceTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6YR3oApGEeaGqPUk-4V4qQ" name="KeepAliveTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ceg-8ApHEeaGqPUk-4V4qQ" name="KeepAliveTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Ceg-8QpHEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_N795sApHEeaGqPUk-4V4qQ" name="AnnouncementTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_YVMXUApHEeaGqPUk-4V4qQ" name="AnnouncementTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_YVMXUQpHEeaGqPUk-4V4qQ" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_855RMAs1EeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rmnI0OM8EeaTpaLNj-zYpw" name="Slave" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sxfygErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxhAoUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sxhnsErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxz7kErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx0ioErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx1JsErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx2X0ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_dbzn0Er4EemAZaGjK5Aj8g" name="dbgPortForServer" visibility="protected" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_db1dAEr4EemAZaGjK5Aj8g" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_db2EEEr4EemAZaGjK5Aj8g" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_lT4V0AlLEea_md0mpENoqg" name="ServerStateMachine">
          <region xmi:id="_lvCAwAlLEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_myR7kAlNEea_md0mpENoqg" name="Init__StandBy__3" source="_tC5EgErDEem2BZRQc2M93A" target="_jLPjcAlNEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vR0TsAlNEea_md0mpENoqg" name="InitLog">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Init__StandBy__3&quot;,(char *)&quot;Debug__Path__Init__StandBy__3&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_pku_oAlOEea_md0mpENoqg" name="Recover" source="_tAaYQErDEem2BZRQc2M93A" target="_Pyhf8Ap5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yH_CUAp7EeaGqPUk-4V4qQ" name="Recover">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: is recovering\n&quot;;
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Recover&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_iM5MYAlvEea_md0mpENoqg" name="initTimer" source="_s97E8ErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nB58AApKEeaGqPUk-4V4qQ" name="InitTimer">
                <language>C++</language>
                <body>logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;    
//UMLRTTimespec ts;
    //ts.getclock(ts);
    //this->setTimePointSecond();
    logfile.open(this->getName());
    //if (logfile.is_open())
    //	logfile&lt;&lt;ts.tv_sec&lt;&lt;&quot;:&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.close();
    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(r,0),4);
   TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::initTimer&quot;,(char *)&quot;Debug__Path__initTimer&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_kdt_gAlvEea_md0mpENoqg" name="BeSlave" source="_tFEOwErDEem2BZRQc2M93A" target="_88oQAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFaNAErDEem2BZRQc2M93A" name="BeSlave__571">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::BeSlave&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;Pseudo5&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_aRWloAnREeaGqPUk-4V4qQ" name="ServiceRequest" source="_tF4HEErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_jf2tMAosEeaGqPUk-4V4qQ" name="ReplyRequest">
                <language>C++</language>
                <body>   //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ClientRequest,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Message from client replied at index &quot;&lt;&lt;msg->sapIndex0_&lt;&lt;&quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ServerComm.Reply(0).sendAt(tempid);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;
    //ts.getclock(ts);
    //if (logfile.is_open())
    //logfile&lt;&lt;&quot;CleintReply,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ServiceRequest&quot;,(char *)&quot;Debug__Path__ServiceRequest&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_2jFDsApyEeaGqPUk-4V4qQ" name="MasterAnnounce" source="_tEAe0ErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1qc9IApzEeaGqPUk-4V4qQ" name="MasterAnnounce">
                <language>C++</language>
                <body>    //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;&quot;keepAliveStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::MasterAnnounce&quot;,(char *)&quot;Debug__Path__MasterAnnounce&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_ElyUAAp0EeaGqPUk-4V4qQ" name="KeepAlive" source="_tHWGsErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9ovXcAp1EeaGqPUk-4V4qQ" name="SendKeepAlive">
                <language>C++</language>
                <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    if (hostConfig.RunningMode==1)
    Master.IAmAlive((char *)this->getName()).send();
    std::cout&lt;&lt;&quot;Master: Keep Alive is sent\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::KeepAlive&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_i_dO4Ap5EeaGqPUk-4V4qQ" name="ActiveMode" source="_s_-6cErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAX8AErDEem2BZRQc2M93A" name="ActiveMode__400">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ActiveMode&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_QEtu0AsLEeaGqPUk-4V4qQ" name="purgeotherMessage" source="_s9KP8ErDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s94osErDEem2BZRQc2M93A" name="purgeotherMessage__315">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::purgeotherMessage&quot;,(char *)&quot;Debug__Path__purgeotherMessage&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_bHEIAONOEeaTpaLNj-zYpw" name="ExitPoint1__BeMaster__4" source="_tEp_EErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFBLcErDEem2BZRQc2M93A" name="ExitPoint1__BeMaster__4__557">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ExitPoint1__BeMaster__4&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7k7kErDEem2BZRQc2M93A" name="Debug__ServerFaliure__E" source="_s7e08UrDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7k7kUrDEem2BZRQc2M93A" name="Debug__ServerFaliure__E__244">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServerFaliure__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7mwwErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7nX0ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange__246">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s7mwwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7ol8ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7p0EErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint__247">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7pNAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7rCMErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7rCMkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint__248">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7rCMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7sQUErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7sQUkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints__249">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7sQUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7s3YErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7s3YkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode__250">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s7s3YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7tecErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7vToErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg__251">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7tecUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uskErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9NTQUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage" source="_hgSoEAlOEea_md0mpENoqg" target="_s9KP8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9N6UErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__290">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__purgeotherMessage&quot;,(char *)&quot;Failure&quot;,(char *)&quot;Debug__Path__purgeotherMessage&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_WQkXoAsMEeaGqPUk-4V4qQ" name="purge" event="_f4LPUApBEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ _HIvrsApCEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_s9PvgErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__S" guard="_s9PvgkrDEem2BZRQc2M93A" source="_s9KP8ErDEem2BZRQc2M93A" target="_s9MFIErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s9PvgkrDEem2BZRQc2M93A" name="Debug__GuardpurgeotherMessage">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s9PvgUrDEem2BZRQc2M93A" name="Debug__GuardpurgeotherMessage">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9Q9oErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__S__292">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__purgeotherMessage__S&quot;,(char *)&quot;Debug__Path__purgeotherMessage&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s9SLwErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__E" source="_s9MsMUrDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9SLwUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__E__293">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__purgeotherMessage__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s9UA8ErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9UoAErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange__295">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s9UA8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9VPEErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9VPEkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint__296">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9VPEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9V2IErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9WdMErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint__297">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9V2IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9YSYErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9YSYkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints__298">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9YSYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9Y5cErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ZggErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode__299">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s9Y5cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9ZggUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9auoUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg__300">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9aHkErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9auoErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9_9cErDEem2BZRQc2M93A" name="Debug__initTimer__S" guard="_s9_9ckrDEem2BZRQc2M93A" source="_s97E8ErDEem2BZRQc2M93A" target="_s986IUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s9_9ckrDEem2BZRQc2M93A" name="Debug__GuardinitTimer">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s9_9cUrDEem2BZRQc2M93A" name="Debug__GuardinitTimer">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;CheckConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-AkgErDEem2BZRQc2M93A" name="Debug__initTimer__S__319">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__initTimer__S&quot;,(char *)&quot;Debug__Path__initTimer&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s-CZsErDEem2BZRQc2M93A" name="Debug__initTimer__E" source="_s99hMUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-CZsUrDEem2BZRQc2M93A" name="Debug__initTimer__E__320">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__initTimer__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s-EO4ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-E18ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange__322">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s-EO4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-FdAErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-FdAkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint__323">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-FdAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-GrIErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-GrIkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint__324">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-GrIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-HSMErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-H5QErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints__325">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-HSMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-IgUErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-IgUkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode__326">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s-IgUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-JHYErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-KVgErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg__327">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-JHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JuckrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tACk0UrDEem2BZRQc2M93A" name="Debug__ActiveMode" guard="_OyNyIAp8EeaGqPUk-4V4qQ" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_s_-6cErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_OyNyIAp8EeaGqPUk-4V4qQ" name="checkConfig">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_OyOZMAp8EeaGqPUk-4V4qQ" name="checkConfig">
                  <language>C++</language>
                  <body>    if (hostConfig.RunningMode==0)
    return true;
    else return false;
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tACk0krDEem2BZRQc2M93A" name="Debug__ActiveMode__388">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ActiveMode&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAIEYErDEem2BZRQc2M93A" name="Debug__ActiveMode__E" source="_tAB9wErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAIEYUrDEem2BZRQc2M93A" name="Debug__ActiveMode__E__391">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ActiveMode__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAJ5kErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAJ5kkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange__393">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAJ5kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAKgoErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tALHsUrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint__394">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tALHsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAMV0ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAMV0krDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint__395">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAMV0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAM84ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tANj8UrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints__396">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tANj8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOLAErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAOLAkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode__397">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAOLAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOyEErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAQnQErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg__398">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAPZIErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAPZIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAeCoErDEem2BZRQc2M93A" name="Debug__Recover" source="_hgSoEAlOEea_md0mpENoqg" target="_tAaYQErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAeCoUrDEem2BZRQc2M93A" name="Debug__Recover__402">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover&quot;,(char *)&quot;Failure&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_uSw5sAp6EeaGqPUk-4V4qQ" name="Timeout" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAge4ErDEem2BZRQc2M93A" name="Debug__Recover__S" guard="_tAhF8UrDEem2BZRQc2M93A" source="_tAaYQErDEem2BZRQc2M93A" target="_tAbmYUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tAhF8UrDEem2BZRQc2M93A" name="Debug__GuardRecover">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tAhF8ErDEem2BZRQc2M93A" name="Debug__GuardRecover">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAhtAErDEem2BZRQc2M93A" name="Debug__Recover__S__404">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover__S&quot;,(char *)&quot;Debug__Path__Recover&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAjiMErDEem2BZRQc2M93A" name="Debug__Recover__E" source="_tAc0gUrDEem2BZRQc2M93A" target="_Pyhf8Ap5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAkJQErDEem2BZRQc2M93A" name="Debug__Recover__E__405">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Recover__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tAlXYErDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAlXYkrDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange__407">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAlXYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAl-cErDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAl-ckrDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint__408">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAl-cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAmlgErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnMkErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint__409">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAmlgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAnzoErDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnzokrDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints__410">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAnzoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAoasErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAoaskrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode__411">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAoasUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tApBwErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAqP4UrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg__412">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tApBwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAqP4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBMbYErDEem2BZRQc2M93A" name="Debug__BeingMaster__E" source="_tBIJ8UrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBNCcErDEem2BZRQc2M93A" name="Debug__BeingMaster__E__426">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeingMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tBOQkErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBO3oUrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange__428">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tBO3oErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBPesErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBPeskrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint__429">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBPesUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQFwErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBQFwkrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint__430">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQFwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQs0ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBRT4ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints__431">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQs0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBRT4UrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBR68ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode__432">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tBRT4krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBSiAErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBTwIErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg__433">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBSiAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCmwoErDEem2BZRQc2M93A" name="Debug__PassiveMode__E" source="_tCgC8UrDEem2BZRQc2M93A" target="_887yAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCmwoUrDEem2BZRQc2M93A" name="Debug__PassiveMode__E__473">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__PassiveMode__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Pseudo2&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tCol0ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpM4UrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange__475">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tCpM4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCpz8ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpz8krDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint__476">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCpz8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCqbAErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCqbAkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint__477">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCqbAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrCEErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCrpIErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints__478">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCrCEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrpIUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCsQMUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode__479">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tCsQMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCs3QErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCteUkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg__480">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCs3QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCs3QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tC9V8UrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3" source="_tJHBQErDEem2BZRQc2M93A" target="_tC5EgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tC99AErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__484">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tJI2cErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tC_yMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S" guard="_tDAZQUrDEem2BZRQc2M93A" source="_tC5EgErDEem2BZRQc2M93A" target="_tC7gwErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tDAZQUrDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDAZQErDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDBAUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S__486">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Init__StandBy__3__S&quot;,(char *)&quot;Debug__Path__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tDEDoErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDEqsErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange__489">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tDEDoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDFRwErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDF40ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint__490">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDFRwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDGf4ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHG8ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint__491">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDGf4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDHuAErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHuAkrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints__492">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDHuAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDIVEErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDI8IUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode__493">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tDI8IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDJjMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDKxUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg__494">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDJjMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDJjMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEEJMErDEem2BZRQc2M93A" name="Debug__MasterAnnounce" source="_UrcckAlOEea_md0mpENoqg" target="_tEAe0ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEEJMUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__521">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__MasterAnnounce&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_8oV_gAp3EeaGqPUk-4V4qQ" name="MasterAnnouncment" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEFXUErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__S" guard="_tEF-YUrDEem2BZRQc2M93A" source="_tEAe0ErDEem2BZRQc2M93A" target="_tECUAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tEF-YUrDEem2BZRQc2M93A" name="Debug__GuardMasterAnnounce">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tEF-YErDEem2BZRQc2M93A" name="Debug__GuardMasterAnnounce">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEGlcErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__S__523">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__MasterAnnounce__S&quot;,(char *)&quot;Debug__Path__MasterAnnounce&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEHMgErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__E" source="_tEC7EUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEHzkErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__E__524">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__MasterAnnounce__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEIaoErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEJBsUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange__526">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEJBsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEJowErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEKP0ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint__527">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEJowUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEKP0UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEK24ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint__528">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEKP0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEK24UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tELd8ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints__529">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEK24krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tELd8UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEMFAUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode__530">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tEMFAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEMsEErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEN6MErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg__531">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEMsEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tEMsEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEtpcErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4" source="_M8iZcONCEeaTpaLNj-zYpw" target="_tEp_EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEtpcUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__545">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEu3kErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__S" guard="_tEveoUrDEem2BZRQc2M93A" source="_tEp_EErDEem2BZRQc2M93A" target="_tEr0QUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tEveoUrDEem2BZRQc2M93A" name="Debug__GuardExitPoint1__BeMaster__4">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tEveoErDEem2BZRQc2M93A" name="Debug__GuardExitPoint1__BeMaster__4">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEwFsErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__S__547">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4__S&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tExT0ErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__E" source="_tEsbUUrDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEx64ErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__E__548">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEzJAErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEzwEUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange__550">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEzwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE0XIErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE0-MUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint__551">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE0-MErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE1lQErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2MUErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint__552">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE1lQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE2zYErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2zYkrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints__553">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE2zYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE3acErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE4BgUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode__554">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tE4BgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE4okErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE52sUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg__555">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE4okUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE52sErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFKVYErDEem2BZRQc2M93A" name="Debug__BeSlave__S" guard="_tFK8cUrDEem2BZRQc2M93A" source="_tFEOwErDEem2BZRQc2M93A" target="_tFGrAErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tFK8cUrDEem2BZRQc2M93A" name="Debug__GuardBeSlave">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tFK8cErDEem2BZRQc2M93A" name="Debug__GuardBeSlave">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;CheckConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFLjgErDEem2BZRQc2M93A" name="Debug__BeSlave__S__561">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave__S&quot;,(char *)&quot;Debug__Path__BeSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFMxoErDEem2BZRQc2M93A" name="Debug__BeSlave__E" source="_tFIgMUrDEem2BZRQc2M93A" target="_88oQAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFMxoUrDEem2BZRQc2M93A" name="Debug__BeSlave__E__562">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeSlave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Pseudo5&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tFOm0ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFPN4ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange__564">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tFOm0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFP08ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFP08krDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint__565">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFP08UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFQcAErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRDEErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint__566">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFQcAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRDEUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRqIUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints__567">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFRqIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRqIkrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFSRMErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode__568">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tFRqI0rDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFSRMUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFS4Q0rDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg__569">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFSRMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tF8_kUrDEem2BZRQc2M93A" name="Debug__ServiceRequest" source="_UrcckAlOEea_md0mpENoqg" target="_tF4HEErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tF9moErDEem2BZRQc2M93A" name="Debug__ServiceRequest__587">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_2NJiIAnREeaGqPUk-4V4qQ" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_tF_b0ErDEem2BZRQc2M93A" name="Debug__ServiceRequest__S" guard="_tF_b0krDEem2BZRQc2M93A" source="_tF4HEErDEem2BZRQc2M93A" target="_tF7KYUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tF_b0krDEem2BZRQc2M93A" name="Debug__GuardServiceRequest">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tF_b0UrDEem2BZRQc2M93A" name="Debug__GuardServiceRequest">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGAp8ErDEem2BZRQc2M93A" name="Debug__ServiceRequest__S__589">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest__S&quot;,(char *)&quot;Debug__Path__ServiceRequest&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tGB4EErDEem2BZRQc2M93A" name="Debug__ServiceRequest__E" source="_tF7xcUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGB4EUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__E__590">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tGDtQErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGDtQkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange__592">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tGDtQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGE7YErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGE7YkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint__593">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGE7YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGFicErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGFickrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint__594">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGFicUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJgErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGJgkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints__595">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGGJgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJg0rDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGwkUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode__596">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tGGwkErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGHXoErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGIlwErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg__597">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGHXoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGHXokrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGzUIUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6" source="_jLPjcAlNEea_md0mpENoqg" target="_tGwQ0ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGzUIkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__611">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__StandBy__CheckConfig__6&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;Debug__Path__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_aihU8AlfEea_md0mpENoqg" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tG1JUErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__S" guard="_tG1wYUrDEem2BZRQc2M93A" source="_tGwQ0ErDEem2BZRQc2M93A" target="_tGyGAErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tG1wYUrDEem2BZRQc2M93A" name="Debug__GuardStandBy__CheckConfig__6">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tG1wYErDEem2BZRQc2M93A" name="Debug__GuardStandBy__CheckConfig__6">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;StandBy&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG2XcErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__S__613">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__StandBy__CheckConfig__6__S&quot;,(char *)&quot;Debug__Path__StandBy__CheckConfig__6&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tG6B0ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG6B0krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange__616">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tG6B0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG7P8ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG7P8krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint__617">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG7P8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG8eEErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG8eEkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint__618">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG8eEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9FIErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG9sMErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints__619">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG9FIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9sMUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG-TQErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode__620">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tG9sMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG-TQUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG_hYUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg__621">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG-6UErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG_hYErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHZxEUrDEem2BZRQc2M93A" name="Debug__KeepAlive" source="_UrcckAlOEea_md0mpENoqg" target="_tHWGsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHaYIErDEem2BZRQc2M93A" name="Debug__KeepAlive__632">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_RAsgEAp1EeaGqPUk-4V4qQ" name="KeppAlive" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHbmQErDEem2BZRQc2M93A" name="Debug__KeepAlive__S" guard="_tHcNUUrDEem2BZRQc2M93A" source="_tHWGsErDEem2BZRQc2M93A" target="_tHX74UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tHcNUUrDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tHcNUErDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHc0YErDEem2BZRQc2M93A" name="Debug__KeepAlive__S__634">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive__S&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tHdbcErDEem2BZRQc2M93A" name="Debug__KeepAlive__E" source="_tHYi8UrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHeCgErDEem2BZRQc2M93A" name="Debug__KeepAlive__E__635">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tHfQoErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHf3sUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange__637">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tHf3sErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhF0ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHhF0krDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint__638">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHhF0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhs4ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHiT8UrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint__639">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHiT8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHi7AErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHjiEErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints__640">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHi7AUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHjiEUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHkJIErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode__641">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tHjiEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHkwMErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHl-UUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg__642">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHkwMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHkwMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHlXQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHl-UErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJIPYErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_hY-7oAlNEea_md0mpENoqg" target="_tJHBQErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJIPYUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_dwCLYEr4EemAZaGjK5Aj8g" name="Trans__BeMaster2" source="_kLngAAp5EeaGqPUk-4V4qQ" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f3fAEEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;BeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dywvQEr4EemAZaGjK5Aj8g" name="3" source="_s97E8ErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f4BLkEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dy6gQEr4EemAZaGjK5Aj8g" name="4" source="_tFEOwErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f3tCgEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dy7uYEr4EemAZaGjK5Aj8g" name="5" source="_s9KP8ErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f5fLMEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dy8VcEr4EemAZaGjK5Aj8g" name="6" source="_s_-6cErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fyiOoEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dy-xsEr4EemAZaGjK5Aj8g" name="7" source="_tHWGsErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f1hRMEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dy__0Er4EemAZaGjK5Aj8g" name="8" source="_Pyhf8Ap5EeaGqPUk-4V4qQ" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fyZrwEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Choice1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dzBN8Er4EemAZaGjK5Aj8g" name="9" source="_tAaYQErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f27mcEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dzCcEEr4EemAZaGjK5Aj8g" name="10" source="_tEAe0ErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fxrTAEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dzHUkEr4EemAZaGjK5Aj8g" name="11" source="_tF4HEErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f3SLwEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dzM0IEr4EemAZaGjK5Aj8g" name="12" source="_tC5EgErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f2HHEEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dzOpUEr4EemAZaGjK5Aj8g" name="13" source="_tEp_EErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f5OsgEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dzP3cEr4EemAZaGjK5Aj8g" name="14" source="_tGwQ0ErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fy7QMEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_dza2kEr4EemAZaGjK5Aj8g" name="From__RunAsMaster__15" source="_UrcckAlOEea_md0mpENoqg" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f1T10Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_dzuYkEr4EemAZaGjK5Aj8g" name="PME_Trig16" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_dz3igEr4EemAZaGjK5Aj8g" name="PME_Trig17" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_dz-QMEr4EemAZaGjK5Aj8g" name="PME_Trig18" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d0HaIEr4EemAZaGjK5Aj8g" name="PME_Trig19" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d0OH0Er4EemAZaGjK5Aj8g" name="PME_Trig20" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d0WqsEr4EemAZaGjK5Aj8g" name="PME_Trig21" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_d0cKQEr4EemAZaGjK5Aj8g" name="PME_Trig22" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d0emgEr4EemAZaGjK5Aj8g" name="PME_Trig23" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d0qzwEr4EemAZaGjK5Aj8g" name="PME_Trig24" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_d0z9sEr4EemAZaGjK5Aj8g" name="PME_Trig25" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d03BAEr4EemAZaGjK5Aj8g" name="PME_Trig26" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_d075gEr4EemAZaGjK5Aj8g" name="PME_Trig27" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_d1GRkEr4EemAZaGjK5Aj8g" name="PME_Trig28" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d1R3wEr4EemAZaGjK5Aj8g" name="PME_Trig29" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d1X-YEr4EemAZaGjK5Aj8g" name="PME_Trig30" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_d1eFAEr4EemAZaGjK5Aj8g" name="PME_Trig31" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_d1n2AEr4EemAZaGjK5Aj8g" name="PME_Trig32" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d1prMEr4EemAZaGjK5Aj8g" name="PME_Trig33" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_d1xnAEr4EemAZaGjK5Aj8g" name="From__Failure__34" source="_hgSoEAlOEea_md0mpENoqg" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fywREEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_d2D64Er4EemAZaGjK5Aj8g" name="PME_Trig35" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d2HlQEr4EemAZaGjK5Aj8g" name="PME_Trig36" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d2PhEEr4EemAZaGjK5Aj8g" name="PME_Trig37" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d2RWQEr4EemAZaGjK5Aj8g" name="PME_Trig38" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d2W10Er4EemAZaGjK5Aj8g" name="PME_Trig39" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d2f_wEr4EemAZaGjK5Aj8g" name="PME_Trig40" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_d2kRMEr4EemAZaGjK5Aj8g" name="PME_Trig41" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d2qX0Er4EemAZaGjK5Aj8g" name="PME_Trig42" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_d2tbIEr4EemAZaGjK5Aj8g" name="PME_Trig43" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d21W8Er4EemAZaGjK5Aj8g" name="PME_Trig44" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_d3CLQEr4EemAZaGjK5Aj8g" name="PME_Trig45" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_d3FOkEr4EemAZaGjK5Aj8g" name="PME_Trig46" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d3LVMEr4EemAZaGjK5Aj8g" name="PME_Trig47" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d3VtQEr4EemAZaGjK5Aj8g" name="PME_Trig48" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d3eQIEr4EemAZaGjK5Aj8g" name="PME_Trig49" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d3kWwEr4EemAZaGjK5Aj8g" name="PME_Trig50" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_d3pPQEr4EemAZaGjK5Aj8g" name="PME_Trig51" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_d3rrgEr4EemAZaGjK5Aj8g" name="PME_Trig52" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d3znUEr4EemAZaGjK5Aj8g" name="PME_Trig53" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_d3_NgEr4EemAZaGjK5Aj8g" name="PME_Trig54" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_d4BpwEr4EemAZaGjK5Aj8g" name="From__Debug__InitState__55" source="_tJHBQErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fzGPUEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_d4PFIEr4EemAZaGjK5Aj8g" name="PME_Trig56" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d4VLwEr4EemAZaGjK5Aj8g" name="PME_Trig57" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d4ZdMEr4EemAZaGjK5Aj8g" name="PME_Trig58" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d4b5cEr4EemAZaGjK5Aj8g" name="PME_Trig59" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d4lDYEr4EemAZaGjK5Aj8g" name="PME_Trig60" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d4s_MEr4EemAZaGjK5Aj8g" name="PME_Trig61" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_d4wpkEr4EemAZaGjK5Aj8g" name="PME_Trig62" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d4-E8Er4EemAZaGjK5Aj8g" name="PME_Trig63" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d5BvUEr4EemAZaGjK5Aj8g" name="PME_Trig64" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_d5ELkEr4EemAZaGjK5Aj8g" name="PME_Trig65" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d5Q_4Er4EemAZaGjK5Aj8g" name="PME_Trig66" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_d5UDMEr4EemAZaGjK5Aj8g" name="PME_Trig67" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_d5XGgEr4EemAZaGjK5Aj8g" name="PME_Trig68" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d5Y7sEr4EemAZaGjK5Aj8g" name="PME_Trig69" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d5ebQEr4EemAZaGjK5Aj8g" name="PME_Trig70" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d5jTwEr4EemAZaGjK5Aj8g" name="PME_Trig71" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d5ozUEr4EemAZaGjK5Aj8g" name="PME_Trig72" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_d5x9QEr4EemAZaGjK5Aj8g" name="PME_Trig73" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_d56gIEr4EemAZaGjK5Aj8g" name="PME_Trig74" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d588YEr4EemAZaGjK5Aj8g" name="PME_Trig75" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_d6GGUEr4EemAZaGjK5Aj8g" name="PME_Trig76" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_d6OpMEr4EemAZaGjK5Aj8g" name="From__StandBy__77" source="_jLPjcAlNEea_md0mpENoqg" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f1xv4Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_d6dSsEr4EemAZaGjK5Aj8g" name="PME_Trig78" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d6kAYEr4EemAZaGjK5Aj8g" name="PME_Trig79" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d6r8MEr4EemAZaGjK5Aj8g" name="PME_Trig80" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d6u_gEr4EemAZaGjK5Aj8g" name="PME_Trig81" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d63iYEr4EemAZaGjK5Aj8g" name="PME_Trig82" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d66lsEr4EemAZaGjK5Aj8g" name="PME_Trig83" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_d6-QEEr4EemAZaGjK5Aj8g" name="PME_Trig84" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d7HaAEr4EemAZaGjK5Aj8g" name="PME_Trig85" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d7M5kEr4EemAZaGjK5Aj8g" name="PME_Trig86" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_d7UOUEr4EemAZaGjK5Aj8g" name="PME_Trig87" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d7gbkEr4EemAZaGjK5Aj8g" name="PME_Trig88" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_d7miMEr4EemAZaGjK5Aj8g" name="PME_Trig89" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_d7rasEr4EemAZaGjK5Aj8g" name="PME_Trig90" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_d70koEr4EemAZaGjK5Aj8g" name="PME_Trig91" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d73A4Er4EemAZaGjK5Aj8g" name="PME_Trig92" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_d76rQEr4EemAZaGjK5Aj8g" name="PME_Trig93" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_d8AK0Er4EemAZaGjK5Aj8g" name="PME_Trig94" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_d8JUwEr4EemAZaGjK5Aj8g" name="PME_Trig95" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_d8NmMEr4EemAZaGjK5Aj8g" name="PME_Trig96" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_d8PbYEr4EemAZaGjK5Aj8g" name="PME_Trig97" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_d8bBkEr4EemAZaGjK5Aj8g" name="To__RunAsMaster__98" guard="_f54z0Ur4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_UrcckAlOEea_md0mpENoqg">
              <ownedRule xmi:id="_f54z0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1826">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f54z0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1826">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__RunAsMaster__98&quot;,&quot;RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_d8cPsEr4EemAZaGjK5Aj8g" name="To__Failure__99" guard="_f6FoIUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_hgSoEAlOEea_md0mpENoqg">
              <ownedRule xmi:id="_f6FoIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1837">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6FoIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1837">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Failure__99&quot;,&quot;Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_d8kLgEr4EemAZaGjK5Aj8g" name="To__Debug__InitState__100" guard="_f6DL4Ur4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_tJHBQErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_f6DL4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1834">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6DL4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1834">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__100&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_d8n14Er4EemAZaGjK5Aj8g" name="To__StandBy__101" guard="_f6GPM0r4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_jLPjcAlNEea_md0mpENoqg">
              <ownedRule xmi:id="_f6GPM0r4EemAZaGjK5Aj8g" name="PME_checkDecesion1839">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6GPMkr4EemAZaGjK5Aj8g" name="PME_checkDecesion1839">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBy__101&quot;,&quot;StandBy&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_d83GcEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__Init__StandBy__3__103" guard="_f6LuwUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_d8y1AEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6LuwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1842">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6LuwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1842">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_d87-8Er4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__Init__StandBy__3__105" source="_d86w0Er4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f0iZwEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_eKPbIEr4EemAZaGjK5Aj8g" name="Trans__ex159" source="_s7e08UrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f1AT0Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_eKRQUUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ServerFaliure__161" guard="_f6HdUUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_eKQCMEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6HdUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1840">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6HdUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1840">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_eKiWEUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ServerFaliure__163" source="_eKddkEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f5xfEEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_eVisMEr4EemAZaGjK5Aj8g" name="Trans__ex263" source="_tAB9wErDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fxXJ8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_eVsdMEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ActiveMode__265" guard="_f6PZIUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_eVnksEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6PZIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1844">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6PZIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1844">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ActiveMode__265&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_eVu5cUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ActiveMode__267" source="_eVuSYEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f4V7sEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_eae2kEr4EemAZaGjK5Aj8g" name="Trans__ex321" source="_tEC7EUrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f2b3MEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_eak9MEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__MasterAnnounce__323" guard="_f6OLAUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_eaig8Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6OLAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1843">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6OLAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1843">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_eamyYUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__MasterAnnounce__325" source="_eamLUEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f2m2UEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_egxr0Er4EemAZaGjK5Aj8g" name="Trans__ex425" source="_tBIJ8UrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fw4BwEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_egy58Ur4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__BeingMaster__427" guard="_f6EaAUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_egyS4Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6EaAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1835">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6EaAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1835">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeingMaster__427&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_eg4ZgEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__BeingMaster__429" source="_eg0IEEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f3KP8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_elZtIEr4EemAZaGjK5Aj8g" name="Trans__ex506" source="_tEsbUUrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fxNY8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_eleloEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ExitPoint1__BeMaster__4__508" guard="_f5-TYUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_elZtIUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f5-TYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1832">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f5-TYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1832">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_elga0Ur4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ExitPoint1__BeMaster__4__510" source="_elfzwEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f0t_8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_enUYsEr4EemAZaGjK5Aj8g" name="Trans__ex542" source="_tCgC8UrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fz5gkEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_enZRMEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__PassiveMode__544" guard="_f6AvoUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_enVm0Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6AvoUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1833">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6AvoEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1833">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__PassiveMode__544&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_enafUUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__PassiveMode__546" source="_enZ4QEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f2xOYEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_erOBQEr4EemAZaGjK5Aj8g" name="Trans__ExitPoint1600" source="_M8iZcONCEeaTpaLNj-zYpw" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fzR1gEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_erPPYEr4EemAZaGjK5Aj8g" name="To__Substates__Backup__602" guard="_f57QEUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_erOBQUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f57QEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1829">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f57QEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1829">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Backup__602&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_erRroEr4EemAZaGjK5Aj8g" name="From__Substates__Backup__604" source="_erP2cEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fyJ0IEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_feRO0Er4EemAZaGjK5Aj8g" name="Trans__ex1279" source="_s99hMUrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f0Pe0Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_feR14Ur4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__initTimer__1281" guard="_f58eMUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_feRO0Ur4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f58eMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1831">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f58eMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1831">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__initTimer__1281&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_feTEAEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__initTimer__1283" source="_feSc8Er4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fwuQwEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fgy-YEr4EemAZaGjK5Aj8g" name="Trans__ex1360" source="_s9MsMUrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f4o2oEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fgzlckr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__purgeotherMessage__1362" guard="_f6IrcEr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_fgzlcEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6IrcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1841">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6IEYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1841">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_fg0zkUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__purgeotherMessage__1364" source="_fg0MgEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fxDA4Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fi1lwEr4EemAZaGjK5Aj8g" name="Trans__ex1420" source="_tAc0gUrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f18H8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fi3a8Ur4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__Recover__1422" guard="_f6FBEUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_fi2z4Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6FBEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1836">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6FBEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1836">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Recover__1422&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_fi4CAkr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__Recover__1424" source="_fi4CAEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fxhiAEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fli7gEr4EemAZaGjK5Aj8g" name="Trans__ex1501" source="_tFIgMUrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f2RfIEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_flkwsUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__BeSlave__1503" guard="_f6GPMUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_flkJoEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f6GPMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1838">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f6GPMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1838">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeSlave__1503&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_fll-0Er4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__BeSlave__1505" source="_fllXwEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fzbmgEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fm_tAEr4EemAZaGjK5Aj8g" name="Trans__ex1537" source="_tF7xcUrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f0DRkEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fnAUEUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ServiceRequest__1539" guard="_f573IUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_fm_tAUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f573IUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1830">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f573IEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1830">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_fnA7Ikr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ServiceRequest__1541" source="_fnA7IEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fzvIgEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fqXKEEr4EemAZaGjK5Aj8g" name="Trans__ex1641" source="_tHYi8UrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fzlXgEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_fqXxIUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__KeepAlive__1643" guard="_f56B8Ur4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_fqXKEUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f56B8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1827">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f56B8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1827">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_fqY_QEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__KeepAlive__1645" source="_fqYYMEr4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_f44uQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ftrj0Er4EemAZaGjK5Aj8g" name="Trans__ex1745" source="_tGyGAkrDEem2BZRQc2M93A" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fx_cEEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_ftsK4kr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__StandBy__CheckConfig__6__1747" guard="_f56pAUr4EemAZaGjK5Aj8g" source="_dt1zAEr4EemAZaGjK5Aj8g" target="_ftsK4Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_f56pAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1828">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_f56pAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1828">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_fttZAUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__StandBy__CheckConfig__6__1749" source="_ftsx8Er4EemAZaGjK5Aj8g" target="_dt1zAEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fx1EAEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__98&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1643&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1747&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__602&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1281&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__508&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__544&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__100&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Failure&quot;,&quot;To__Failure__99&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1503&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__101&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1362&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__103&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__265&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_hY-7oAlNEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:State" xmi:id="_jLPjcAlNEea_md0mpENoqg" name="StandBy">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0ErDEem2BZRQc2M93A" name="StandBy__679">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0UrDEem2BZRQc2M93A" name="StandBy__680">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_UrcckAlOEea_md0mpENoqg" name="RunAsMaster">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_YzyAkAlyEea_md0mpENoqg" name="RunAsMasterEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_cjKg0PMsEeauO5SNGpOV7w" name="startTransition">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_hgSoEAlOEea_md0mpENoqg" name="Failure">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_GNo-cAp7EeaGqPUk-4V4qQ" name="SetTimer">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    //------

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJrB8ErDEem2BZRQc2M93A" name="Failure__685">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Pyhf8Ap5EeaGqPUk-4V4qQ" name="Choice1" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_kLngAAp5EeaGqPUk-4V4qQ" name="BeMaster" kind="junction"/>
            <subvertex xmi:type="uml:State" xmi:id="_2g5S0ONBEeaTpaLNj-zYpw" name="Backup">
              <connectionPoint xmi:id="_M8iZcONCEeaTpaLNj-zYpw" name="ExitPoint1" kind="exitPoint"/>
              <connectionPoint xmi:id="_88oQAKozEeiNHY6qjNhZ4w" name="Pseudo5" kind="entryPoint"/>
              <connectionPoint xmi:id="_887yAKozEeiNHY6qjNhZ4w" name="Pseudo2" kind="entryPoint"/>
              <connectionPoint xmi:id="_erOBQUr4EemAZaGjK5Aj8g" name="From__Parent__601" kind="entryPoint"/>
              <connectionPoint xmi:id="_erP2cEr4EemAZaGjK5Aj8g" name="To__Parent__603" kind="exitPoint"/>
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJjtMErDEem2BZRQc2M93A" name="Backup__681">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJkUQErDEem2BZRQc2M93A" name="Backup__682">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
              <region xmi:id="_ThAzEONCEeaTpaLNj-zYpw" name="Region1">
                <transition xmi:id="_LmVmEONDEeaTpaLNj-zYpw" name="NokeepAlive" source="_s-oPkErDEem2BZRQc2M93A" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_LmWNIONDEeaTpaLNj-zYpw" name="CancellTimer">
                    <language>C++</language>
                    <body>    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No keep Alive message from Master, Try to be Master-------\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(2,0),4);
    ConfigComm.QueryConfig().send();
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to be Master\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::NokeepAlive&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_R_7lYONDEeaTpaLNj-zYpw" name="BackToSlave" source="_s8TUUErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_R_7lYeNDEeaTpaLNj-zYpw" name="MasterRecovered">
                    <language>C++</language>
                    <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: The Master recovered itself, backing to slave mode\n&quot;;
    //if (TimerId.isValid())
    //	Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::BackToSlave&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_XafJkONDEeaTpaLNj-zYpw" name="ReplyConfig" source="_s6zfgErDEem2BZRQc2M93A" target="_NU8OsAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7Z8cErDEem2BZRQc2M93A" name="ReplyConfig__239">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::ReplyConfig&quot;,(char *)&quot;Debug__Path__ReplyConfig&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_dg_NwONDEeaTpaLNj-zYpw" name="backtoslave1" source="_tDikwErDEem2BZRQc2M93A" target="_5yefMAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD9bgErDEem2BZRQc2M93A" name="backtoslave1__519">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::backtoslave1&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;Slave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_mHBPcONDEeaTpaLNj-zYpw" name="KeepAliveMsg" source="_tBq8gErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mHBPceNDEeaTpaLNj-zYpw" name="ProcessKeppAlive">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Keep Alive Message from &quot;&lt;&lt; ServerName&lt;&lt;&quot;\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    //KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::KeepAliveMsg&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_-mdZ0ONDEeaTpaLNj-zYpw" name="Initial1__RunAsSlave__7" source="_tIHiwErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIv04ErDEem2BZRQc2M93A" name="Initial1__RunAsSlave__7__678">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_CPd8UONOEeaTpaLNj-zYpw" name="CheckNoMaster" source="_tFdQUErDEem2BZRQc2M93A" target="_M8iZcONCEeaTpaLNj-zYpw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tF0csErDEem2BZRQc2M93A" name="CheckNoMaster__585">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::CheckNoMaster&quot;,(char *)&quot;Debug__Path__CheckNoMaster&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s63J4ErDEem2BZRQc2M93A" name="Debug__ReplyConfig" source="_Px2BIAqSEeaGqPUk-4V4qQ" target="_s6zfgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s63J4UrDEem2BZRQc2M93A" name="Debug__ReplyConfig__218">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__ReplyConfig&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;Debug__Path__ReplyConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_XafJkeNDEeaTpaLNj-zYpw" name="ConfigReply" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_s64YAErDEem2BZRQc2M93A" name="Debug__ReplyConfig__S" guard="_s64_EUrDEem2BZRQc2M93A" source="_s6zfgErDEem2BZRQc2M93A" target="_s61UsUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s64_EUrDEem2BZRQc2M93A" name="Debug__GuardReplyConfig">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s64_EErDEem2BZRQc2M93A" name="Debug__GuardReplyConfig">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s65mIErDEem2BZRQc2M93A" name="Debug__ReplyConfig__S__220">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__ReplyConfig__S&quot;,(char *)&quot;Debug__Path__ReplyConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s660QErDEem2BZRQc2M93A" name="Debug__ReplyConfig__E" source="_s617wUrDEem2BZRQc2M93A" target="_NU8OsAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s660QUrDEem2BZRQc2M93A" name="Debug__ReplyConfig__E__221">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__ReplyConfig__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s68pcErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s69QgUrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange__223">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s69QgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s693kErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s693kkrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint__224">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s693kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6-eoErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6_FsErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint__225">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6-eoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6_swErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7AT0ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints__226">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6_swUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7A64ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7Bh8ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode__227">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s7A64UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7Bh8UrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7DXIErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg__228">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s7CJAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CJAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8W-sUrDEem2BZRQc2M93A" name="Debug__BackToSlave" guard="_feG2wUr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_s8TUUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_feG2wUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1271">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feG2wEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1271">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;Debug__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8XlwErDEem2BZRQc2M93A" name="Debug__BackToSlave__265">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_R_7lYuNDEeaTpaLNj-zYpw" name="BackToSlave" event="_xM6tkApBEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_s8Yz4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__S" guard="_s8Za8UrDEem2BZRQc2M93A" source="_s8TUUErDEem2BZRQc2M93A" target="_s8VwkUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s8Za8UrDEem2BZRQc2M93A" name="Debug__GuardBackToSlave">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s8Za8ErDEem2BZRQc2M93A" name="Debug__GuardBackToSlave">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8aCAErDEem2BZRQc2M93A" name="Debug__BackToSlave__S__267">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave__S&quot;,(char *)&quot;Debug__Path__BackToSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s8ceQErDEem2BZRQc2M93A" name="Debug__BackToSlave__E" source="_s8WXoUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8ceQUrDEem2BZRQc2M93A" name="Debug__BackToSlave__E__268">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s8dsYErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8eTcErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange__270">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s8dsYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8eTcUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8e6gUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint__271">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8e6gErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8fhkErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gIoErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint__272">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8fhkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8gvsErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gvskrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints__273">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8gvsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8hWwErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8h90ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode__274">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s8hWwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8ik4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8jzAErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg__275">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8ik4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik40rDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8jL8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-r58UrDEem2BZRQc2M93A" name="Debug__NokeepAlive" source="_ZaK1gAlOEea_md0mpENoqg" target="_s-oPkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-shAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__339">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_LmWNIeNDEeaTpaLNj-zYpw" name="KeepAliveTimer" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-tIEErDEem2BZRQc2M93A" name="Debug__NokeepAlive__S" guard="_s-tvIUrDEem2BZRQc2M93A" source="_s-oPkErDEem2BZRQc2M93A" target="_s-qr0UrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s-tvIUrDEem2BZRQc2M93A" name="Debug__GuardNokeepAlive">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s-tvIErDEem2BZRQc2M93A" name="Debug__GuardNokeepAlive">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-uWMErDEem2BZRQc2M93A" name="Debug__NokeepAlive__S__341">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive__S&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-vkUErDEem2BZRQc2M93A" name="Debug__NokeepAlive__E" source="_s-rS4UrDEem2BZRQc2M93A" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-vkUUrDEem2BZRQc2M93A" name="Debug__NokeepAlive__E__342">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-xZgErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-yAkErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange__344">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s-xZgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-ynoErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-ynokrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint__345">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-ynoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-zOsErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-zOskrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint__346">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-zOsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-z1wErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-0c0ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints__347">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-z1wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-0c0UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-1D4ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode__348">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s-0c0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-1D4UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-2SAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg__349">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-1D4krDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8krDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_ekIErDEem2BZRQc2M93A" name="Debug__backtoslave__E" source="_s_YdgUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_ekIUrDEem2BZRQc2M93A" name="Debug__backtoslave__E__367">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s_gZUErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hAYErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange__369">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s_gZUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_hncErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hnckrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint__370">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_hncUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_i1kErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_kDsErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint__371">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_i1kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_kqwErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_lR0ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints__372">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_kqwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_l44ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_mf8ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode__373">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s_l44UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_mf8UrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_nuEkrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg__374">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_nHAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nHAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBtYw0rDEem2BZRQc2M93A" name="Debug__KeepAliveMsg" source="_ZaK1gAlOEea_md0mpENoqg" target="_tBq8gErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBt_0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__445">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_mHBPcuNDEeaTpaLNj-zYpw" name="IAmlive" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                </transition>
                <transition xmi:id="_tBvN8ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S" guard="_tBv1AUrDEem2BZRQc2M93A" source="_tBq8gErDEem2BZRQc2M93A" target="_tBsxsUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tBv1AUrDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tBv1AErDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBxDIErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S__447">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__S&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tByRQErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E" source="_tBtYwUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBy4UErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E__448">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tB0GcErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB0GckrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange__450">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tB0GcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB0tgErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB1UkErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint__451">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB0tgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB17oErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB17okrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint__452">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB17oUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB2isErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB2iskrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints__453">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB2isUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB3JwErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB3w0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode__454">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tB3JwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB4X4ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB5mAErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg__455">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB4X4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4X4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDmPIUrDEem2BZRQc2M93A" name="Debug__backtoslave1" source="_NU8OsAszEeaGqPUk-4V4qQ" target="_tDikwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDm2MErDEem2BZRQc2M93A" name="Debug__backtoslave1__507">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDorYErDEem2BZRQc2M93A" name="Debug__backtoslave1__S" guard="_tDpScUrDEem2BZRQc2M93A" source="_tDikwErDEem2BZRQc2M93A" target="_tDlBAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tDpScUrDEem2BZRQc2M93A" name="Debug__Guardbacktoslave1">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDpScErDEem2BZRQc2M93A" name="Debug__Guardbacktoslave1">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Choice2&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDp5gErDEem2BZRQc2M93A" name="Debug__backtoslave1__S__509">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1__S&quot;,(char *)&quot;Debug__Path__backtoslave1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDsVwErDEem2BZRQc2M93A" name="Debug__backtoslave1__E" source="_tDloEUrDEem2BZRQc2M93A" target="_5yefMAszEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDs80ErDEem2BZRQc2M93A" name="Debug__backtoslave1__E__510">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__backtoslave1__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Slave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDuyAErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDuyAkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange__512">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tDuyAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDvZEErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDwAIUrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint__513">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwAIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDwnMErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDxOQErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint__514">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwnMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDx1UErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDx1UkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints__515">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDx1UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDycYErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDycYkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode__516">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tDycYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDzDcErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD04oErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg__517">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDzqgErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tDzqgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFfskUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster" guard="_CPd8UeNOEeaTpaLNj-zYpw" source="_NU8OsAszEeaGqPUk-4V4qQ" target="_tFdQUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_CPd8UeNOEeaTpaLNj-zYpw" name="CheckNoServer">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_CPd8UuNOEeaTpaLNj-zYpw" name="checkNoServer">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                      <language>C++</language>
                      <body>    std::cout&lt;&lt;&quot;00000----------------------------------------------------000000\n&quot;;
    this->hostConfig=config;
    if (!(this->hostConfig.MasterList[0] || this->hostConfig.MasterList[1]))
    {
    //Echo.Echo().send();
    //Timer.cancelTimer(TimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No one is Master, I am going to Be master\n&quot;;
    return true;
    }
    else if ((strcmp((char*)this->getName(),&quot;server1&quot;)==0) &amp;&amp; (config.MasterList[1]==false))
    {
    //Echo.Echo().send();
    //Timer.cancelTimer(TimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No one is Master, I am going to Be master\n&quot;;
    return true;
    }
    else if ((strcmp((char *)this->getName(),&quot;server2&quot;))==0 &amp;&amp; (config.MasterList[0]==false))
    {
    //Echo.Echo().send();
    //Timer.cancelTimer(TimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No one is Master, I am going to Be master\n&quot;;
    return true;
    }
    std::cout&lt;&lt;&quot;11111111-----------------------------------------111111111111\n&quot;;
    return false;
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFgToErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__573">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster&quot;,(char *)&quot;Choice2&quot;,(char *)&quot;Debug__Path__CheckNoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFhhwErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__S" guard="_tFiI0UrDEem2BZRQc2M93A" source="_tFdQUErDEem2BZRQc2M93A" target="_tFeecUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tFiI0UrDEem2BZRQc2M93A" name="Debug__GuardCheckNoMaster">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tFiI0ErDEem2BZRQc2M93A" name="Debug__GuardCheckNoMaster">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Choice2&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFiv4ErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__S__575">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster__S&quot;,(char *)&quot;Debug__Path__CheckNoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFj-AErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E" source="_tFfFgUrDEem2BZRQc2M93A" target="_M8iZcONCEeaTpaLNj-zYpw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFklEErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E__576">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFmaQErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFnBUUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange__578">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tFnBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFnoYErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFoPcErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint__579">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFnoYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFo2gErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFpdkErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint__580">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFo2gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqEoErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFqrsErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints__581">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFqEoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqrsUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFrSwErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode__582">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tFqrskrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFrSwUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFsg4ErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg__583">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFr50ErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50UrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50krDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr500rDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tILNIUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7" source="_8WMAUONDEeaTpaLNj-zYpw" target="_tIHiwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIL0MErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__656">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7&quot;,(char *)&quot;Initial1&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tINCUErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__S" guard="_tINpYUrDEem2BZRQc2M93A" source="_tIHiwErDEem2BZRQc2M93A" target="_tIJ_AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tINpYUrDEem2BZRQc2M93A" name="Debug__GuardInitial1__RunAsSlave__7">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tINpYErDEem2BZRQc2M93A" name="Debug__GuardInitial1__RunAsSlave__7">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;Initial1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIOQcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__S__658">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7__S&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIO3gErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E" source="_tIKmEUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIO3gUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E__659">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIQFoErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIQssUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange__661">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tIQssErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIRTwErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIR60UrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint__662">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIR60ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tITI8ErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tITwAUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint__663">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tITwAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIUXEErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIU-IUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints__664">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIU-IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIU-IkrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIVlMUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode__665">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tIVlMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIWMQErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIYBcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg__666">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIWzUErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIWzUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_er8aAEr4EemAZaGjK5Aj8g" name="Trans__Pseudo5606" source="_88oQAKozEeiNHY6qjNhZ4w" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcDoUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_er9BEEr4EemAZaGjK5Aj8g" name="Trans__Pseudo2607" source="_887yAKozEeiNHY6qjNhZ4w" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbGmEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_er-2QEr4EemAZaGjK5Aj8g" name="Trans__ExitPoint1608" source="_M8iZcONCEeaTpaLNj-zYpw" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fdKbkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_esAEYEr4EemAZaGjK5Aj8g" name="Trans__Slave609" source="_5yefMAszEeaGqPUk-4V4qQ" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbOh4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Slave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Slave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_esvrQEr4EemAZaGjK5Aj8g" name="610" source="_tBq8gErDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbsb8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_esvrQUr4EemAZaGjK5Aj8g" name="611" source="_tFdQUErDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fdw4gEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_esw5YEr4EemAZaGjK5Aj8g" name="612" source="_tIHiwErDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcz2QEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_esz8sEr4EemAZaGjK5Aj8g" name="613" source="_s-oPkErDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcgUQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_es1K0Er4EemAZaGjK5Aj8g" name="614" source="_tDikwErDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fdB4sEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_es1x4Er4EemAZaGjK5Aj8g" name="615" source="_s8TUUErDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fdVasEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_es3AAEr4EemAZaGjK5Aj8g" name="616" source="_NU8OsAszEeaGqPUk-4V4qQ" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbTaYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice2&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Choice2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_es3nEEr4EemAZaGjK5Aj8g" name="617" source="_s6zfgErDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fd0i4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_es9GoEr4EemAZaGjK5Aj8g" name="From__RunAsSlave__618" source="_ZaK1gAlOEea_md0mpENoqg" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fddWgEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_es-70Er4EemAZaGjK5Aj8g" name="PME_Trig619" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_etB_IEr4EemAZaGjK5Aj8g" name="PME_Trig620" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_etD0UEr4EemAZaGjK5Aj8g" name="PME_Trig621" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_etJ68Er4EemAZaGjK5Aj8g" name="PME_Trig622" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_etNlUEr4EemAZaGjK5Aj8g" name="PME_Trig623" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_etTr8Er4EemAZaGjK5Aj8g" name="PME_Trig624" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_etWIMEr4EemAZaGjK5Aj8g" name="PME_Trig625" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_etXWUEr4EemAZaGjK5Aj8g" name="PME_Trig626" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_etZLgEr4EemAZaGjK5Aj8g" name="PME_Trig627" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eteEAEr4EemAZaGjK5Aj8g" name="PME_Trig628" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ethHUEr4EemAZaGjK5Aj8g" name="PME_Trig629" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_etjjkEr4EemAZaGjK5Aj8g" name="PME_Trig630" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_etn1AEr4EemAZaGjK5Aj8g" name="PME_Trig631" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_etrfYEr4EemAZaGjK5Aj8g" name="PME_Trig632" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_etw-8Er4EemAZaGjK5Aj8g" name="PME_Trig633" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_etzbMEr4EemAZaGjK5Aj8g" name="PME_Trig634" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_et7XAEr4EemAZaGjK5Aj8g" name="PME_Trig635" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_et9MMEr4EemAZaGjK5Aj8g" name="PME_Trig636" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_euFIAEr4EemAZaGjK5Aj8g" name="PME_Trig637" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_euHkQEr4EemAZaGjK5Aj8g" name="From__TryBeMaster__638" source="_Px2BIAqSEeaGqPUk-4V4qQ" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbZhAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_euPgEEr4EemAZaGjK5Aj8g" name="PME_Trig639" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_euQuMEr4EemAZaGjK5Aj8g" name="PME_Trig640" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_euTxgEr4EemAZaGjK5Aj8g" name="PME_Trig641" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_euU_oEr4EemAZaGjK5Aj8g" name="PME_Trig642" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_euWNwEr4EemAZaGjK5Aj8g" name="PME_Trig643" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eudigEr4EemAZaGjK5Aj8g" name="PME_Trig644" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eujpIEr4EemAZaGjK5Aj8g" name="PME_Trig645" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_euleUEr4EemAZaGjK5Aj8g" name="PME_Trig646" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eun6kEr4EemAZaGjK5Aj8g" name="PME_Trig647" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_euuoQEr4EemAZaGjK5Aj8g" name="PME_Trig648" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_euxrkEr4EemAZaGjK5Aj8g" name="PME_Trig649" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_euzgwEr4EemAZaGjK5Aj8g" name="PME_Trig650" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eu5AUEr4EemAZaGjK5Aj8g" name="PME_Trig651" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eu8DoEr4EemAZaGjK5Aj8g" name="PME_Trig652" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eu-f4Er4EemAZaGjK5Aj8g" name="PME_Trig653" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_evDYYEr4EemAZaGjK5Aj8g" name="PME_Trig654" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_evGbsEr4EemAZaGjK5Aj8g" name="PME_Trig655" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_evHp0Er4EemAZaGjK5Aj8g" name="PME_Trig656" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_evNJYEr4EemAZaGjK5Aj8g" name="PME_Trig657" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_evO-kEr4EemAZaGjK5Aj8g" name="PME_Trig658" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_evYvkEr4EemAZaGjK5Aj8g" name="To__RunAsSlave__659" guard="_feFoo0r4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_ZaK1gAlOEea_md0mpENoqg">
                  <ownedRule xmi:id="_feFoo0r4EemAZaGjK5Aj8g" name="PME_checkDecesion1269">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feFookr4EemAZaGjK5Aj8g" name="PME_checkDecesion1269">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__RunAsSlave__659&quot;,&quot;RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_evakwEr4EemAZaGjK5Aj8g" name="To__TryBeMaster__660" guard="_feJTAUr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <ownedRule xmi:id="_feJTAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1275">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feJTAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1275">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__TryBeMaster__660&quot;,&quot;TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_evigkEr4EemAZaGjK5Aj8g" name="Trans__ex661" source="_s617wUrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fd73oEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_evlj4Ur4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ReplyConfig__663" guard="_feIE4Ur4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_evjusEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feIE4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1274">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feIE4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1274">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_evqcYUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ReplyConfig__665" source="_evmyAEr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_feAwIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ezKcUEr4EemAZaGjK5Aj8g" name="Trans__ex720" source="_s_YdgUrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbwGUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ezLqcEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__backtoslave__722" guard="_feFooUr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_ezLDYEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feFooUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1268">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feFooEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1268">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave__722&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ezMRgUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__backtoslave__724" source="_ezLqcUr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcma4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_e4b94Er4EemAZaGjK5Aj8g" name="Trans__ex801" source="_tBtYwUrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fb_W4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_e4eaIEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__KeepAliveMsg__803" guard="_feQnwUr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_e4ck8Er4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feQnwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1278">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feQnwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1278">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_e4g2YEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__KeepAliveMsg__805" source="_e4fBMEr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fdSXYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_e_PwgEr4EemAZaGjK5Aj8g" name="Trans__ex905" source="_s8WXoUrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcP1kEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_e_Q-oUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__BackToSlave__907" guard="_feFBkUr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_e_QXkEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feFBkUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1267">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feFBkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1267">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BackToSlave__907&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_e_SMwUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__BackToSlave__909" source="_e_Q-okr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fc-1YEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fE_zMEr4EemAZaGjK5Aj8g" name="Trans__ex1009" source="_tIKmEUrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fdhA4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fFAaQUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__Initial1__RunAsSlave__7__1011" guard="_feHd0Ur4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_fE_zMUr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feHd0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1273">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feHd0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1273">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fFBoYUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__Initial1__RunAsSlave__7__1013" source="_fFAaQkr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcLkIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fG0_MEr4EemAZaGjK5Aj8g" name="Trans__ex1045" source="_tFfFgUrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fc25kEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fG3bcEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__CheckNoMaster__1047" guard="_feLvQEr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_fG1mQEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feLvQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1276">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feLIMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1276">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fG7s4Ur4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__CheckNoMaster__1049" source="_fG5QoEr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fb4CIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fSutMEr4EemAZaGjK5Aj8g" name="Trans__ex1103" source="_s-rS4UrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbeZgEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fS0MwUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__NokeepAlive__1105" guard="_feG2w0r4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_fSxJcEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feG2w0r4EemAZaGjK5Aj8g" name="PME_checkDecesion1272">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feG2wkr4EemAZaGjK5Aj8g" name="PME_checkDecesion1272">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fS2B8Ur4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__NokeepAlive__1107" source="_fS0z0Er4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcr6cEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fYwcsEr4EemAZaGjK5Aj8g" name="Trans__ex1207" source="_tDloEUrDEem2BZRQc2M93A" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fdo8sEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fYzgAEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__backtoslave1__1209" guard="_feOykUr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_fYxDwEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feOykUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1277">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feOykEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1277">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fY18QEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__backtoslave1__1211" source="_fY0uIEr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fbkgIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fa_RUEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1265" source="_erOBQUr4EemAZaGjK5Aj8g" target="_erS5wEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fcYYcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__722&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__659&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1266&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__Path__BackToSlave&quot;,&quot;Debug__BackToSlave&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__660&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1047&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__1209&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__803&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fa_4YEr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1266" guard="_feGPsUr4EemAZaGjK5Aj8g" source="_erS5wEr4EemAZaGjK5Aj8g" target="_erP2cEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_feGPsUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1270">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_feGPsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1270">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1266&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_Px2BIAqSEeaGqPUk-4V4qQ" name="TryBeMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_6FKVcAqVEeaGqPUk-4V4qQ" name="trytobemasterinit">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to Be Master ------------\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJolsErDEem2BZRQc2M93A" name="TryBeMaster__684">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_NU8OsAszEeaGqPUk-4V4qQ" name="Choice2" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_ZaK1gAlOEea_md0mpENoqg" name="RunAsSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_JeHBoAlzEea_md0mpENoqg" name="RunAsSlaveEntry">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJmJcErDEem2BZRQc2M93A" name="RunAsSlave__683">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_5yefMAszEeaGqPUk-4V4qQ" name="Slave" kind="junction"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_8WMAUONDEeaTpaLNj-zYpw" name="Initial1"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s6zfgErDEem2BZRQc2M93A" name="Debug__Path__ReplyConfig" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s60GkUrDEem2BZRQc2M93A" name="Debug__C__ReplyConfig">
                  <connectionPoint xmi:id="_s61UsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s617wUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_evjusEr4EemAZaGjK5Aj8g" name="From__Parent__662" kind="entryPoint"/>
                  <connectionPoint xmi:id="_evmyAEr4EemAZaGjK5Aj8g" name="To__Parent__664" kind="exitPoint"/>
                  <region xmi:id="_s60GkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s7LS8ErDEem2BZRQc2M93A" name="Debug__init__trans__ReplyConfig" source="_s61UsUrDEem2BZRQc2M93A" target="_s7IPoUrDEem2BZRQc2M93A"/>
                    <transition xmi:id="_s7L6AErDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster" source="_s7IPoUrDEem2BZRQc2M93A" target="_s7JdwErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7VrAErDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster__233">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s7L6AUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_ev00cEr4EemAZaGjK5Aj8g" name="Trans__Init__State__667668" source="_evs4oEr4EemAZaGjK5Aj8g" target="_evrDcEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eywMoEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__667&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__667&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__667&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__713&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__667&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ev00cUr4EemAZaGjK5Aj8g" name="Trans__ex669" source="_s617wUrDEem2BZRQc2M93A" target="_evrDcEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ey1sMEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__713&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ev3QsEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__TryBeMaster__670" source="_s7IPoUrDEem2BZRQc2M93A" target="_evrDcEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ezCggEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__713&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ev5s8Er4EemAZaGjK5Aj8g" name="PME_Trig671" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ev67EEr4EemAZaGjK5Aj8g" name="PME_Trig672" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ewBBsEr4EemAZaGjK5Aj8g" name="PME_Trig673" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ewEsEEr4EemAZaGjK5Aj8g" name="PME_Trig674" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ewHIUEr4EemAZaGjK5Aj8g" name="PME_Trig675" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ewN2AEr4EemAZaGjK5Aj8g" name="PME_Trig676" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ewTVkEr4EemAZaGjK5Aj8g" name="PME_Trig677" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ewVKwEr4EemAZaGjK5Aj8g" name="PME_Trig678" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ewY1IEr4EemAZaGjK5Aj8g" name="PME_Trig679" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ewe7wEr4EemAZaGjK5Aj8g" name="PME_Trig680" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ewimIEr4EemAZaGjK5Aj8g" name="PME_Trig681" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ewpT0Er4EemAZaGjK5Aj8g" name="PME_Trig682" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_ews-MEr4EemAZaGjK5Aj8g" name="PME_Trig683" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ewzE0Er4EemAZaGjK5Aj8g" name="PME_Trig684" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ew2IIEr4EemAZaGjK5Aj8g" name="PME_Trig685" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ew810Er4EemAZaGjK5Aj8g" name="PME_Trig686" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ew_5IEr4EemAZaGjK5Aj8g" name="PME_Trig687" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_exF_wEr4EemAZaGjK5Aj8g" name="PME_Trig688" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_exH08Er4EemAZaGjK5Aj8g" name="PME_Trig689" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_exK4QEr4EemAZaGjK5Aj8g" name="PME_Trig690" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_exQ-4Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__ReplyConfig__691" source="_s7JdwErDEem2BZRQc2M93A" target="_evrDcEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ey3hYEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__713&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_exRl8Er4EemAZaGjK5Aj8g" name="PME_Trig692" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_exUpQEr4EemAZaGjK5Aj8g" name="PME_Trig693" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_exXFgEr4EemAZaGjK5Aj8g" name="PME_Trig694" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_exdMIEr4EemAZaGjK5Aj8g" name="PME_Trig695" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_exiEoEr4EemAZaGjK5Aj8g" name="PME_Trig696" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_exm9IEr4EemAZaGjK5Aj8g" name="PME_Trig697" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_exu48Er4EemAZaGjK5Aj8g" name="PME_Trig698" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_exwuIEr4EemAZaGjK5Aj8g" name="PME_Trig699" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_exzxcEr4EemAZaGjK5Aj8g" name="PME_Trig700" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ex5RAEr4EemAZaGjK5Aj8g" name="PME_Trig701" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ex6fIEr4EemAZaGjK5Aj8g" name="PME_Trig702" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_ex-JgEr4EemAZaGjK5Aj8g" name="PME_Trig703" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_eyDCAEr4EemAZaGjK5Aj8g" name="PME_Trig704" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_eyFeQEr4EemAZaGjK5Aj8g" name="PME_Trig705" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_eyMzAEr4EemAZaGjK5Aj8g" name="PME_Trig706" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_eyPPQEr4EemAZaGjK5Aj8g" name="PME_Trig707" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_eyUHwEr4EemAZaGjK5Aj8g" name="PME_Trig708" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_eyYZMEr4EemAZaGjK5Aj8g" name="PME_Trig709" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_eyZnUEr4EemAZaGjK5Aj8g" name="PME_Trig710" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_eyhjIEr4EemAZaGjK5Aj8g" name="PME_Trig711" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_eyjYUEr4EemAZaGjK5Aj8g" name="PME_Trig712" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_eynpwEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__TryBeMaster__713" guard="_ezInIUr4EemAZaGjK5Aj8g" source="_evrDcEr4EemAZaGjK5Aj8g" target="_s7IPoUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ezInIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion719">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezInIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion719">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__TryBeMaster__713&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_eype8Er4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__ReplyConfig__714" guard="_ezDHkUr4EemAZaGjK5Aj8g" source="_evrDcEr4EemAZaGjK5Aj8g" target="_s7JdwErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_ezDHkUr4EemAZaGjK5Aj8g" name="PME_checkDecesion717">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezDHkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion717">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ReplyConfig__714&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_eysiQEr4EemAZaGjK5Aj8g" name="From__Parnet__Backup__715" source="_evjusEr4EemAZaGjK5Aj8g" target="_evrDcEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ey7y0Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ac__ReplyConfig&quot;,&quot;To__Debug__B__Ac__ReplyConfig__714&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__713&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_eytJUEr4EemAZaGjK5Aj8g" name="To__Parent__Backup__716" guard="_ezGK4Ur4EemAZaGjK5Aj8g" source="_evrDcEr4EemAZaGjK5Aj8g" target="_evmyAEr4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_ezGK4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion718">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezGK4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion718">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__716&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s7IPoUrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7IPokrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s7OWQErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster__229">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s7JdwErDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7JdwUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReplyConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s7QygUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReplyConfig__230">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ac__ReplyConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_evrDcEr4EemAZaGjK5Aj8g" name="DecesionPoint__666" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_evs4oEr4EemAZaGjK5Aj8g" name="Init__State__667"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s8TUUErDEem2BZRQc2M93A" name="Debug__Path__BackToSlave" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s8T7YUrDEem2BZRQc2M93A" name="Debug__C__BackToSlave">
                  <connectionPoint xmi:id="_s8VwkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s8WXoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_e_QXkEr4EemAZaGjK5Aj8g" name="From__Parent__906" kind="entryPoint"/>
                  <connectionPoint xmi:id="_e_Q-okr4EemAZaGjK5Aj8g" name="To__Parent__908" kind="exitPoint"/>
                  <region xmi:id="_s8T7YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s8uLEErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave" source="_s8VwkUrDEem2BZRQc2M93A" target="_s8ndYUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8-CsErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave__281">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__init__trans__BackToSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s8uLEUrDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster" source="_s8ndYUrDEem2BZRQc2M93A" target="_s8pSkErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8_34ErDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster__283">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8uyIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s8uyIUrDEem2BZRQc2M93A" name="Debug__AC__BackToSlave" source="_s8pSkErDEem2BZRQc2M93A" target="_s8qgsErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8vZMUrDEem2BZRQc2M93A" name="MasterRecovered" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: The Master recovered itself, backing to slave mode\n&quot;;
    //if (TimerId.isValid())
    //	Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__AC__BackToSlave&quot;,(char *)&quot;Debug__B__Ac__BackToSlave&quot;,(char *)&quot;Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8vZMErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s8wAQErDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_s8qgsErDEem2BZRQc2M93A" target="_s8s88ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8wnUErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__BackToSlave&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8wAQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s8xOYErDEem2BZRQc2M93A" name="Debug__end__trans__BackToSlave" source="_s8s88ErDEem2BZRQc2M93A" target="_s8WXoUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9FXcErDEem2BZRQc2M93A" name="Debug__end__trans__BackToSlave__287">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__end__trans__BackToSlave&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8xOYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_e_kgoEr4EemAZaGjK5Aj8g" name="Trans__Init__State__911912" source="_e_bWsEr4EemAZaGjK5Aj8g" target="_e_Sz0Er4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fEigMEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__911&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__911&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__911&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__911&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__911&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__911&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_e_lHsEr4EemAZaGjK5Aj8g" name="Trans__ex913" source="_s8WXoUrDEem2BZRQc2M93A" target="_e_Sz0Er4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fEy-4Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_e_vfwEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__BackToSlave__914" source="_s8pSkErDEem2BZRQc2M93A" target="_e_Sz0Er4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fEk8cEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_e_zKIEr4EemAZaGjK5Aj8g" name="PME_Trig915" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e_5QwEr4EemAZaGjK5Aj8g" name="PME_Trig916" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e_6e4Er4EemAZaGjK5Aj8g" name="PME_Trig917" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e_7tAEr4EemAZaGjK5Aj8g" name="PME_Trig918" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fAMywEr4EemAZaGjK5Aj8g" name="PME_Trig919" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fAOA4Er4EemAZaGjK5Aj8g" name="PME_Trig920" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fAOn8Er4EemAZaGjK5Aj8g" name="PME_Trig921" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fARrQEr4EemAZaGjK5Aj8g" name="PME_Trig922" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fAV8sEr4EemAZaGjK5Aj8g" name="PME_Trig923" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fAXK0Er4EemAZaGjK5Aj8g" name="PME_Trig924" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fAXx4Er4EemAZaGjK5Aj8g" name="PME_Trig925" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fAZAAEr4EemAZaGjK5Aj8g" name="PME_Trig926" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fAcDUEr4EemAZaGjK5Aj8g" name="PME_Trig927" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fAfGoEr4EemAZaGjK5Aj8g" name="PME_Trig928" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fAiJ8Er4EemAZaGjK5Aj8g" name="PME_Trig929" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fAixAEr4EemAZaGjK5Aj8g" name="PME_Trig930" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fAmbYEr4EemAZaGjK5Aj8g" name="PME_Trig931" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fArT4Er4EemAZaGjK5Aj8g" name="PME_Trig932" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fAsiAEr4EemAZaGjK5Aj8g" name="PME_Trig933" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fAtwIEr4EemAZaGjK5Aj8g" name="PME_Trig934" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fAwzcEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__RunAsSlave__935" source="_s8s88ErDEem2BZRQc2M93A" target="_e_Sz0Er4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fErDEEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fA1E4Er4EemAZaGjK5Aj8g" name="PME_Trig936" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fA4vQEr4EemAZaGjK5Aj8g" name="PME_Trig937" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fA_c8Er4EemAZaGjK5Aj8g" name="PME_Trig938" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fBB5MEr4EemAZaGjK5Aj8g" name="PME_Trig939" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fBHYwEr4EemAZaGjK5Aj8g" name="PME_Trig940" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fBOtgEr4EemAZaGjK5Aj8g" name="PME_Trig941" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fBU0IEr4EemAZaGjK5Aj8g" name="PME_Trig942" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fBWCQEr4EemAZaGjK5Aj8g" name="PME_Trig943" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fBZsoEr4EemAZaGjK5Aj8g" name="PME_Trig944" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fBgaUEr4EemAZaGjK5Aj8g" name="PME_Trig945" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fBmg8Er4EemAZaGjK5Aj8g" name="PME_Trig946" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fBqLUEr4EemAZaGjK5Aj8g" name="PME_Trig947" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fBwR8Er4EemAZaGjK5Aj8g" name="PME_Trig948" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fBzVQEr4EemAZaGjK5Aj8g" name="PME_Trig949" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fB1KcEr4EemAZaGjK5Aj8g" name="PME_Trig950" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fB6C8Er4EemAZaGjK5Aj8g" name="PME_Trig951" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fB-UYEr4EemAZaGjK5Aj8g" name="PME_Trig952" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fCCl0Er4EemAZaGjK5Aj8g" name="PME_Trig953" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fCHeUEr4EemAZaGjK5Aj8g" name="PME_Trig954" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fCJTgEr4EemAZaGjK5Aj8g" name="PME_Trig955" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fCNk8Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__BackToSlave__956" source="_s8qgsErDEem2BZRQc2M93A" target="_e_Sz0Er4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fEs4QEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fCRPUEr4EemAZaGjK5Aj8g" name="PME_Trig957" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fCTEgEr4EemAZaGjK5Aj8g" name="PME_Trig958" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fCXV8Er4EemAZaGjK5Aj8g" name="PME_Trig959" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fCc1gEr4EemAZaGjK5Aj8g" name="PME_Trig960" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fCjjMEr4EemAZaGjK5Aj8g" name="PME_Trig961" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fCn0oEr4EemAZaGjK5Aj8g" name="PME_Trig962" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fCuiUEr4EemAZaGjK5Aj8g" name="PME_Trig963" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fCyMsEr4EemAZaGjK5Aj8g" name="PME_Trig964" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fC5hcEr4EemAZaGjK5Aj8g" name="PME_Trig965" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fC6vkEr4EemAZaGjK5Aj8g" name="PME_Trig966" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fC79sEr4EemAZaGjK5Aj8g" name="PME_Trig967" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fC9L0Er4EemAZaGjK5Aj8g" name="PME_Trig968" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fDD5gEr4EemAZaGjK5Aj8g" name="PME_Trig969" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fDFHoEr4EemAZaGjK5Aj8g" name="PME_Trig970" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fDIyAEr4EemAZaGjK5Aj8g" name="PME_Trig971" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fDO4oEr4EemAZaGjK5Aj8g" name="PME_Trig972" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fDPfsEr4EemAZaGjK5Aj8g" name="PME_Trig973" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fDTxIEr4EemAZaGjK5Aj8g" name="PME_Trig974" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fDZ3wEr4EemAZaGjK5Aj8g" name="PME_Trig975" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fDbs8Er4EemAZaGjK5Aj8g" name="PME_Trig976" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fDewQEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__TryBeMaster__977" source="_s8ndYUrDEem2BZRQc2M93A" target="_e_Sz0Er4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fEpN4Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fDkP0Er4EemAZaGjK5Aj8g" name="PME_Trig978" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fDmFAEr4EemAZaGjK5Aj8g" name="PME_Trig979" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fDrkkEr4EemAZaGjK5Aj8g" name="PME_Trig980" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fDun4Er4EemAZaGjK5Aj8g" name="PME_Trig981" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fD1VkEr4EemAZaGjK5Aj8g" name="PME_Trig982" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fD3KwEr4EemAZaGjK5Aj8g" name="PME_Trig983" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fD4Y4Er4EemAZaGjK5Aj8g" name="PME_Trig984" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fD4_8Er4EemAZaGjK5Aj8g" name="PME_Trig985" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fD8DQEr4EemAZaGjK5Aj8g" name="PME_Trig986" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fEAUsEr4EemAZaGjK5Aj8g" name="PME_Trig987" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fEBi0Er4EemAZaGjK5Aj8g" name="PME_Trig988" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fEDYAEr4EemAZaGjK5Aj8g" name="PME_Trig989" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fEJeoEr4EemAZaGjK5Aj8g" name="PME_Trig990" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fEMh8Er4EemAZaGjK5Aj8g" name="PME_Trig991" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fENwEEr4EemAZaGjK5Aj8g" name="PME_Trig992" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fEQMUEr4EemAZaGjK5Aj8g" name="PME_Trig993" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fERacEr4EemAZaGjK5Aj8g" name="PME_Trig994" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fEWS8Er4EemAZaGjK5Aj8g" name="PME_Trig995" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fEXhEEr4EemAZaGjK5Aj8g" name="PME_Trig996" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fEYIIEr4EemAZaGjK5Aj8g" name="PME_Trig997" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fEcZkEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__BackToSlave__998" guard="_fE2pQUr4EemAZaGjK5Aj8g" source="_e_Sz0Er4EemAZaGjK5Aj8g" target="_s8pSkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fE2pQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1005">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fE2pQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1005">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BackToSlave__998&quot;,&quot;Debug__B__Ac__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fEeOwEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__RunAsSlave__999" guard="_fE2CMUr4EemAZaGjK5Aj8g" source="_e_Sz0Er4EemAZaGjK5Aj8g" target="_s8s88ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fE2CMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1004">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fE2CMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1004">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsSlave__999&quot;,&quot;Debug__A__En__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fEe10Er4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__BackToSlave__1000" guard="_fE-lE0r4EemAZaGjK5Aj8g" source="_e_Sz0Er4EemAZaGjK5Aj8g" target="_s8qgsErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fE-lE0r4EemAZaGjK5Aj8g" name="PME_checkDecesion1008">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fE-lEkr4EemAZaGjK5Aj8g" name="PME_checkDecesion1008">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,&quot;Debug__A__Ac__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fEfc4Er4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__TryBeMaster__1001" guard="_fE-lEUr4EemAZaGjK5Aj8g" source="_e_Sz0Er4EemAZaGjK5Aj8g" target="_s8ndYUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fE-lEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1007">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fE-lEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1007">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fEgD8Er4EemAZaGjK5Aj8g" name="From__Parnet__Backup__1002" source="_e_QXkEr4EemAZaGjK5Aj8g" target="_e_Sz0Er4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fE1bIEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__999&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__1003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__1001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fEgrAEr4EemAZaGjK5Aj8g" name="To__Parent__Backup__1003" guard="_fE9W8Ur4EemAZaGjK5Aj8g" source="_e_Sz0Er4EemAZaGjK5Aj8g" target="_e_Q-okr4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_fE9W8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1006">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fE9W8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1006">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1003&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s8ndYUrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8oEcErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8ycgErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster__276">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8pSkErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8pSkUrDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;BackToSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s81f0ErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave__277">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8qgsErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8rHwErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;BackToSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s85KMErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave__278">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8s88ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8s88UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s86_YErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave__279">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_e_Sz0Er4EemAZaGjK5Aj8g" name="DecesionPoint__910" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_e_bWsEr4EemAZaGjK5Aj8g" name="Init__State__911"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s-oPkErDEem2BZRQc2M93A" name="Debug__Path__NokeepAlive" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s-pdsUrDEem2BZRQc2M93A" name="Debug__C__NokeepAlive">
                  <connectionPoint xmi:id="_s-qr0UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s-rS4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_fSxJcEr4EemAZaGjK5Aj8g" name="From__Parent__1104" kind="entryPoint"/>
                  <connectionPoint xmi:id="_fS0z0Er4EemAZaGjK5Aj8g" name="To__Parent__1106" kind="exitPoint"/>
                  <region xmi:id="_s-pdskrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s--N0ErDEem2BZRQc2M93A" name="Debug__init__trans__NokeepAlive" source="_s-qr0UrDEem2BZRQc2M93A" target="_s-5VUErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_MQQErDEem2BZRQc2M93A" name="Debug__init__trans__NokeepAlive__355">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__init__trans__NokeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s--N0UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave" source="_s-5VUErDEem2BZRQc2M93A" target="_s-58YErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_OFcErDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave__357">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s--04ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s--04UrDEem2BZRQc2M93A" name="Debug__AC__NokeepAlive" source="_s-58YErDEem2BZRQc2M93A" target="_s-7xkErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-_b8UrDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No keep Alive message from Master, Try to be Master-------\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(2,0),4);
    ConfigComm.QueryConfig().send();
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to be Master\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__AC__NokeepAlive&quot;,(char *)&quot;Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s-_b8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_ADAErDEem2BZRQc2M93A" name="Debug__En__TryBeMaster" source="_s-7xkErDEem2BZRQc2M93A" target="_s-8_sErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_AqEErDEem2BZRQc2M93A" name="trytobemasterinit" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to Be Master ------------\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__En__TryBeMaster&quot;,(char *)&quot;Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_ADAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_AqEUrDEem2BZRQc2M93A" name="Debug__end__trans__NokeepAlive" source="_s-8_sErDEem2BZRQc2M93A" target="_s-rS4UrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_Rv0ErDEem2BZRQc2M93A" name="Debug__end__trans__NokeepAlive__361">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__end__trans__NokeepAlive&quot;,(char *)&quot;Debug__A__En__TryBeMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_AqEkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_fTIV0Er4EemAZaGjK5Aj8g" name="Trans__Init__State__11091110" source="_fS-k0Er4EemAZaGjK5Aj8g" target="_fS33IEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fYhMIEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1109&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1109&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1109&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1109&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1109&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1109&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fTI84Er4EemAZaGjK5Aj8g" name="Trans__ex1111" source="_s-rS4UrDEem2BZRQc2M93A" target="_fS33IEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fYjBUEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fToFEEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__NokeepAlive__1112" source="_s-58YErDEem2BZRQc2M93A" target="_fS33IEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fYR7kEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fTrIYEr4EemAZaGjK5Aj8g" name="PME_Trig1113" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fTydIEr4EemAZaGjK5Aj8g" name="PME_Trig1114" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fT7nEEr4EemAZaGjK5Aj8g" name="PME_Trig1115" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fT-DUEr4EemAZaGjK5Aj8g" name="PME_Trig1116" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fUBtsEr4EemAZaGjK5Aj8g" name="PME_Trig1117" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fUQXMEr4EemAZaGjK5Aj8g" name="PME_Trig1118" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fUaIMEr4EemAZaGjK5Aj8g" name="PME_Trig1119" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fUbWUEr4EemAZaGjK5Aj8g" name="PME_Trig1120" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fUj5MEr4EemAZaGjK5Aj8g" name="PME_Trig1121" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fUoxsEr4EemAZaGjK5Aj8g" name="PME_Trig1122" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fUvfYEr4EemAZaGjK5Aj8g" name="PME_Trig1123" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fU2NEEr4EemAZaGjK5Aj8g" name="PME_Trig1124" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fU5QYEr4EemAZaGjK5Aj8g" name="PME_Trig1125" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fU6egEr4EemAZaGjK5Aj8g" name="PME_Trig1126" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fU_XAEr4EemAZaGjK5Aj8g" name="PME_Trig1127" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fVCaUEr4EemAZaGjK5Aj8g" name="PME_Trig1128" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fVDBYEr4EemAZaGjK5Aj8g" name="PME_Trig1129" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fVEPgEr4EemAZaGjK5Aj8g" name="PME_Trig1130" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fVHS0Er4EemAZaGjK5Aj8g" name="PME_Trig1131" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fVMyYEr4EemAZaGjK5Aj8g" name="PME_Trig1132" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fVPOoEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__NokeepAlive__1133" source="_s-7xkErDEem2BZRQc2M93A" target="_fS33IEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fYrkMEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fVV8UEr4EemAZaGjK5Aj8g" name="PME_Trig1134" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fVXKcEr4EemAZaGjK5Aj8g" name="PME_Trig1135" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fVY_oEr4EemAZaGjK5Aj8g" name="PME_Trig1136" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fVg7cEr4EemAZaGjK5Aj8g" name="PME_Trig1137" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fViwoEr4EemAZaGjK5Aj8g" name="PME_Trig1138" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fVnCEEr4EemAZaGjK5Aj8g" name="PME_Trig1139" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fVuW0Er4EemAZaGjK5Aj8g" name="PME_Trig1140" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fV1EgEr4EemAZaGjK5Aj8g" name="PME_Trig1141" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fV3gwEr4EemAZaGjK5Aj8g" name="PME_Trig1142" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fV_ckEr4EemAZaGjK5Aj8g" name="PME_Trig1143" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fWBRwEr4EemAZaGjK5Aj8g" name="PME_Trig1144" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fWJNkEr4EemAZaGjK5Aj8g" name="PME_Trig1145" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fWLCwEr4EemAZaGjK5Aj8g" name="PME_Trig1146" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fWQiUEr4EemAZaGjK5Aj8g" name="PME_Trig1147" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fWUzwEr4EemAZaGjK5Aj8g" name="PME_Trig1148" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fWWB4Er4EemAZaGjK5Aj8g" name="PME_Trig1149" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fWYeIEr4EemAZaGjK5Aj8g" name="PME_Trig1150" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fWd9sEr4EemAZaGjK5Aj8g" name="PME_Trig1151" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fWfL0Er4EemAZaGjK5Aj8g" name="PME_Trig1152" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fWgZ8Er4EemAZaGjK5Aj8g" name="PME_Trig1153" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fWkrYEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__TryBeMaster__1154" source="_s-8_sErDEem2BZRQc2M93A" target="_fS33IEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fYsyUEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fWnHoEr4EemAZaGjK5Aj8g" name="PME_Trig1155" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fWoVwEr4EemAZaGjK5Aj8g" name="PME_Trig1156" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fWpj4Er4EemAZaGjK5Aj8g" name="PME_Trig1157" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fWucYEr4EemAZaGjK5Aj8g" name="PME_Trig1158" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fWyGwEr4EemAZaGjK5Aj8g" name="PME_Trig1159" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fWzU4Er4EemAZaGjK5Aj8g" name="PME_Trig1160" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fW0jAEr4EemAZaGjK5Aj8g" name="PME_Trig1161" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fW4NYEr4EemAZaGjK5Aj8g" name="PME_Trig1162" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fW9F4Er4EemAZaGjK5Aj8g" name="PME_Trig1163" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fW-UAEr4EemAZaGjK5Aj8g" name="PME_Trig1164" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fXDMgEr4EemAZaGjK5Aj8g" name="PME_Trig1165" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fXG24Er4EemAZaGjK5Aj8g" name="PME_Trig1166" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fXIFAEr4EemAZaGjK5Aj8g" name="PME_Trig1167" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fXNkkEr4EemAZaGjK5Aj8g" name="PME_Trig1168" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fXRO8Er4EemAZaGjK5Aj8g" name="PME_Trig1169" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fXSdEEr4EemAZaGjK5Aj8g" name="PME_Trig1170" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fXU5UEr4EemAZaGjK5Aj8g" name="PME_Trig1171" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fXZKwEr4EemAZaGjK5Aj8g" name="PME_Trig1172" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fXa_8Er4EemAZaGjK5Aj8g" name="PME_Trig1173" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fXbnAEr4EemAZaGjK5Aj8g" name="PME_Trig1174" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fXc1IEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__RunAsSlave__1175" source="_s-5VUErDEem2BZRQc2M93A" target="_fS33IEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fYldkEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fXfRYEr4EemAZaGjK5Aj8g" name="PME_Trig1176" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fXkJ4Er4EemAZaGjK5Aj8g" name="PME_Trig1177" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fXlYAEr4EemAZaGjK5Aj8g" name="PME_Trig1178" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fXmmIEr4EemAZaGjK5Aj8g" name="PME_Trig1179" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fXobUEr4EemAZaGjK5Aj8g" name="PME_Trig1180" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fXt64Er4EemAZaGjK5Aj8g" name="PME_Trig1181" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fXvJAEr4EemAZaGjK5Aj8g" name="PME_Trig1182" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fXvwEEr4EemAZaGjK5Aj8g" name="PME_Trig1183" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fXw-MEr4EemAZaGjK5Aj8g" name="PME_Trig1184" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fXzacEr4EemAZaGjK5Aj8g" name="PME_Trig1185" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fX3E0Er4EemAZaGjK5Aj8g" name="PME_Trig1186" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fX46AEr4EemAZaGjK5Aj8g" name="PME_Trig1187" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fX5hEEr4EemAZaGjK5Aj8g" name="PME_Trig1188" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fX6vMEr4EemAZaGjK5Aj8g" name="PME_Trig1189" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fX8kYEr4EemAZaGjK5Aj8g" name="PME_Trig1190" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fX-ZkEr4EemAZaGjK5Aj8g" name="PME_Trig1191" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fX_nsEr4EemAZaGjK5Aj8g" name="PME_Trig1192" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fYD5IEr4EemAZaGjK5Aj8g" name="PME_Trig1193" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fYFHQEr4EemAZaGjK5Aj8g" name="PME_Trig1194" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fYIKkEr4EemAZaGjK5Aj8g" name="PME_Trig1195" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fYNDEEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__NokeepAlive__1196" guard="_fYtZYUr4EemAZaGjK5Aj8g" source="_fS33IEr4EemAZaGjK5Aj8g" target="_s-58YErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fYtZYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1203">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fYtZYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1203">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fYNDEUr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__NokeepAlive__1197" guard="_fYsyUkr4EemAZaGjK5Aj8g" source="_fS33IEr4EemAZaGjK5Aj8g" target="_s-7xkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fYsyUkr4EemAZaGjK5Aj8g" name="PME_checkDecesion1202">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fYsyUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1202">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fYNqIEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__TryBeMaster__1198" guard="_fYuAc0r4EemAZaGjK5Aj8g" source="_fS33IEr4EemAZaGjK5Aj8g" target="_s-8_sErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fYuAc0r4EemAZaGjK5Aj8g" name="PME_checkDecesion1205">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fYuAckr4EemAZaGjK5Aj8g" name="PME_checkDecesion1205">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__TryBeMaster__1198&quot;,&quot;Debug__A__En__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fYNqIUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__RunAsSlave__1199" guard="_fYuAcUr4EemAZaGjK5Aj8g" source="_fS33IEr4EemAZaGjK5Aj8g" target="_s-5VUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fYuAcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1204">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fYuAcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1204">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fYO4QEr4EemAZaGjK5Aj8g" name="From__Parnet__Backup__1200" source="_fSxJcEr4EemAZaGjK5Aj8g" target="_fS33IEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fYZQUEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1197&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ac__NokeepAlive&quot;,&quot;To__Debug__B__Ac__NokeepAlive__1196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1199&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1198&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1201&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fYO4QUr4EemAZaGjK5Aj8g" name="To__Parent__Backup__1201" guard="_fYungUr4EemAZaGjK5Aj8g" source="_fS33IEr4EemAZaGjK5Aj8g" target="_fS0z0Er4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_fYungUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1206">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fYungEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1206">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1201&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s-5VUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-5VUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_CfQErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__350">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-58YErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-6jcErDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_E7gUrDEem2BZRQc2M93A" name="Debug__B__Ac__NokeepAlive__351">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-7xkErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-7xkUrDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_H-0ErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive__352">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-8_sErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-9mwErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_J0AErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster__353">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fS33IEr4EemAZaGjK5Aj8g" name="DecesionPoint__1108" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fS-k0Er4EemAZaGjK5Aj8g" name="Init__State__1109"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s_WoUUrDEem2BZRQc2M93A" name="Debug__C__backtoslave">
                  <connectionPoint xmi:id="_s_X2cUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s_YdgUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_ezLDYEr4EemAZaGjK5Aj8g" name="From__Parent__721" kind="entryPoint"/>
                  <connectionPoint xmi:id="_ezLqcUr4EemAZaGjK5Aj8g" name="To__Parent__723" kind="exitPoint"/>
                  <region xmi:id="_s_XPYErDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s_tNoErDEem2BZRQc2M93A" name="Debug__init__trans__backtoslave" source="_s_X2cUrDEem2BZRQc2M93A" target="_s_pjQUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_3lsErDEem2BZRQc2M93A" name="Debug__init__trans__backtoslave__379">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__init__trans__backtoslave&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s_tNoUrDEem2BZRQc2M93A" name="Debug__Ac__backtoslave" source="_s_pjQUrDEem2BZRQc2M93A" target="_s_qxYErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_5a4ErDEem2BZRQc2M93A" name="Debug__Ac__backtoslave__381">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__Ac__backtoslave&quot;,(char *)&quot;Debug__B__Ac__backtoslave&quot;,(char *)&quot;Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_tNokrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_t0sErDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_s_qxYErDEem2BZRQc2M93A" target="_s_r_gErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_ubwErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__backtoslave&quot;,(char *)&quot;Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_t0sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s_ubwUrDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave" source="_s_r_gErDEem2BZRQc2M93A" target="_s_YdgUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_73IErDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave__384">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__end__trans__backtoslave&quot;,(char *)&quot;Debug__A__En__backtoslave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_ubwkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_ezWCgEr4EemAZaGjK5Aj8g" name="Trans__ex727" source="_s_YdgUrDEem2BZRQc2M93A" target="_ezM4kEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e381sEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__796&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__794&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__793&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ezWpkEr4EemAZaGjK5Aj8g" name="Trans__Init__State__726728" source="_ezSYIEr4EemAZaGjK5Aj8g" target="_ezM4kEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e33WIEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__726&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__796&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__726&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__726&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__794&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__726&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__793&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__726&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_ezfMcEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__backtoslave__729" source="_s_r_gErDEem2BZRQc2M93A" target="_ezM4kEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e4GmsEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__796&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__794&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__793&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_ezgakEr4EemAZaGjK5Aj8g" name="PME_Trig730" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ezkE8Er4EemAZaGjK5Aj8g" name="PME_Trig731" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ezqyoEr4EemAZaGjK5Aj8g" name="PME_Trig732" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ezt18Er4EemAZaGjK5Aj8g" name="PME_Trig733" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ezz8kEr4EemAZaGjK5Aj8g" name="PME_Trig734" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ez1xwEr4EemAZaGjK5Aj8g" name="PME_Trig735" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_ez9tkEr4EemAZaGjK5Aj8g" name="PME_Trig736" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e0AJ0Er4EemAZaGjK5Aj8g" name="PME_Trig737" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e0DNIEr4EemAZaGjK5Aj8g" name="PME_Trig738" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_e0JTwEr4EemAZaGjK5Aj8g" name="PME_Trig739" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e0M-IEr4EemAZaGjK5Aj8g" name="PME_Trig740" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_e0NlMEr4EemAZaGjK5Aj8g" name="PME_Trig741" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_e0XWMEr4EemAZaGjK5Aj8g" name="PME_Trig742" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e0dc0Er4EemAZaGjK5Aj8g" name="PME_Trig743" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e0hHMEr4EemAZaGjK5Aj8g" name="PME_Trig744" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e0mmwEr4EemAZaGjK5Aj8g" name="PME_Trig745" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e0pDAEr4EemAZaGjK5Aj8g" name="PME_Trig746" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_e0vwsEr4EemAZaGjK5Aj8g" name="PME_Trig747" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e0yM8Er4EemAZaGjK5Aj8g" name="PME_Trig748" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_e04TkEr4EemAZaGjK5Aj8g" name="PME_Trig749" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_e06v0Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__backtoslave__750" source="_s_pjQUrDEem2BZRQc2M93A" target="_ezM4kEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e4QXsEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__796&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__794&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__793&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_e0798Er4EemAZaGjK5Aj8g" name="PME_Trig751" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e1A2cEr4EemAZaGjK5Aj8g" name="PME_Trig752" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e1Fu8Er4EemAZaGjK5Aj8g" name="PME_Trig753" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e1G9EEr4EemAZaGjK5Aj8g" name="PME_Trig754" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e1KAYEr4EemAZaGjK5Aj8g" name="PME_Trig755" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e1NqwEr4EemAZaGjK5Aj8g" name="PME_Trig756" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_e1RVIEr4EemAZaGjK5Aj8g" name="PME_Trig757" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e1ZQ8Er4EemAZaGjK5Aj8g" name="PME_Trig758" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e1c7UEr4EemAZaGjK5Aj8g" name="PME_Trig759" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_e1jB8Er4EemAZaGjK5Aj8g" name="PME_Trig760" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e1k3IEr4EemAZaGjK5Aj8g" name="PME_Trig761" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_e1uBEEr4EemAZaGjK5Aj8g" name="PME_Trig762" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_e1v2QEr4EemAZaGjK5Aj8g" name="PME_Trig763" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e12j8Er4EemAZaGjK5Aj8g" name="PME_Trig764" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e14ZIEr4EemAZaGjK5Aj8g" name="PME_Trig765" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e18qkEr4EemAZaGjK5Aj8g" name="PME_Trig766" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e2CKIEr4EemAZaGjK5Aj8g" name="PME_Trig767" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_e2DYQEr4EemAZaGjK5Aj8g" name="PME_Trig768" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e2IQwEr4EemAZaGjK5Aj8g" name="PME_Trig769" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_e2L7IEr4EemAZaGjK5Aj8g" name="PME_Trig770" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_e2NwUEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__backtoslave__771" source="_s_qxYErDEem2BZRQc2M93A" target="_ezM4kEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e4JC8Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__796&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__794&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__793&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_e2QzoEr4EemAZaGjK5Aj8g" name="PME_Trig772" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e2XhUEr4EemAZaGjK5Aj8g" name="PME_Trig773" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e2akoEr4EemAZaGjK5Aj8g" name="PME_Trig774" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e2hSUEr4EemAZaGjK5Aj8g" name="PME_Trig775" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e2k8sEr4EemAZaGjK5Aj8g" name="PME_Trig776" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e2rDUEr4EemAZaGjK5Aj8g" name="PME_Trig777" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_e2s4gEr4EemAZaGjK5Aj8g" name="PME_Trig778" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e2y_IEr4EemAZaGjK5Aj8g" name="PME_Trig779" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e22pgEr4EemAZaGjK5Aj8g" name="PME_Trig780" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_e28JEEr4EemAZaGjK5Aj8g" name="PME_Trig781" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e2_MYEr4EemAZaGjK5Aj8g" name="PME_Trig782" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_e3BBkEr4EemAZaGjK5Aj8g" name="PME_Trig783" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_e3GhIEr4EemAZaGjK5Aj8g" name="PME_Trig784" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e3JkcEr4EemAZaGjK5Aj8g" name="PME_Trig785" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e3MAsEr4EemAZaGjK5Aj8g" name="PME_Trig786" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e3RgQEr4EemAZaGjK5Aj8g" name="PME_Trig787" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e3VKoEr4EemAZaGjK5Aj8g" name="PME_Trig788" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_e3bRQEr4EemAZaGjK5Aj8g" name="PME_Trig789" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e3eUkEr4EemAZaGjK5Aj8g" name="PME_Trig790" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_e3imAEr4EemAZaGjK5Aj8g" name="PME_Trig791" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_e3pTsEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__backtoslave__792" guard="_e4Sz8Ur4EemAZaGjK5Aj8g" source="_ezM4kEr4EemAZaGjK5Aj8g" target="_s_r_gErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_e4Sz8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion798">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e4Sz8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion798">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__backtoslave__792&quot;,&quot;Debug__A__En__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_e3qh0Er4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__backtoslave__793" guard="_e4aIsUr4EemAZaGjK5Aj8g" source="_ezM4kEr4EemAZaGjK5Aj8g" target="_s_pjQUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_e4aIsUr4EemAZaGjK5Aj8g" name="PME_checkDecesion800">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e4aIsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion800">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave__793&quot;,&quot;Debug__B__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_e3rv8Er4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__backtoslave__794" guard="_e4WeUUr4EemAZaGjK5Aj8g" source="_ezM4kEr4EemAZaGjK5Aj8g" target="_s_qxYErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_e4WeUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion799">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e4WeUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion799">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave__794&quot;,&quot;Debug__A__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_e3wBYEr4EemAZaGjK5Aj8g" name="From__Parnet__Backup__795" source="_ezLDYEr4EemAZaGjK5Aj8g" target="_ezM4kEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e4BHIEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__796&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__Ac__backtoslave&quot;,&quot;To__Debug__A__Ac__backtoslave__794&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__793&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_e3ydoEr4EemAZaGjK5Aj8g" name="To__Parent__Backup__796" guard="_e4Rl0Ur4EemAZaGjK5Aj8g" source="_ezM4kEr4EemAZaGjK5Aj8g" target="_ezLqcUr4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_e4Rl0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion797">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e4Rl0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion797">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__796&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s_pjQUrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qKUErDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_vp4UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave__375">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s_qxYErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qxYUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_ytMUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave__376">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s_r_gErDEem2BZRQc2M93A" name="Debug__A__En__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_r_gUrDEem2BZRQc2M93A" name="Debug__A__En__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_1wgErDEem2BZRQc2M93A" name="Debug__A__En__backtoslave__377">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ezM4kEr4EemAZaGjK5Aj8g" name="DecesionPoint__725" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_ezSYIEr4EemAZaGjK5Aj8g" name="Init__State__726"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tBq8gErDEem2BZRQc2M93A" name="Debug__Path__KeepAliveMsg" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tBrjkUrDEem2BZRQc2M93A" name="Debug__C__KeepAliveMsg">
                  <connectionPoint xmi:id="_tBsxsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tBtYwUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_e4ck8Er4EemAZaGjK5Aj8g" name="From__Parent__802" kind="entryPoint"/>
                  <connectionPoint xmi:id="_e4fBMEr4EemAZaGjK5Aj8g" name="To__Parent__804" kind="exitPoint"/>
                  <region xmi:id="_tBrjkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tCBh0ErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAliveMsg" source="_tBsxsUrDEem2BZRQc2M93A" target="_tB8pUErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCSnkErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAliveMsg__461">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__init__trans__KeepAliveMsg&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_tCBh0UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave" source="_tB8pUErDEem2BZRQc2M93A" target="_tB9QYErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCVD0ErDEem2BZRQc2M93A" name="Debug__Ex__RunAsSlave__463">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCBh0krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCCI4ErDEem2BZRQc2M93A" name="Debug__AC__KeepAliveMsg" source="_tB9QYErDEem2BZRQc2M93A" target="_tB-egErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCCv8ErDEem2BZRQc2M93A" name="ProcessKeppAlive" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Keep Alive Message from &quot;&lt;&lt; ServerName&lt;&lt;&quot;\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    //KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__AC__KeepAliveMsg&quot;,(char *)&quot;Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCCI4UrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCCv8UrDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_tB-egErDEem2BZRQc2M93A" target="_tCATsErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCDXAErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCCv8krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCD-EErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg" source="_tCATsErDEem2BZRQc2M93A" target="_tBtYwUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCZVQErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg__467">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__end__trans__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCD-EUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_e4vf4Er4EemAZaGjK5Aj8g" name="Trans__Init__State__807808" source="_e4m9AEr4EemAZaGjK5Aj8g" target="_e4j5sEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e-zEkEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__807&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__807&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__807&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__807&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__894&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__807&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__807&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_e4wG8Er4EemAZaGjK5Aj8g" name="Trans__ex809" source="_tBtYwUrDEem2BZRQc2M93A" target="_e4j5sEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e-gJoEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__894&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_e44CwEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__RunAsSlave__810" source="_tCATsErDEem2BZRQc2M93A" target="_e4j5sEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e--DsEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__894&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_e4538Er4EemAZaGjK5Aj8g" name="PME_Trig811" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e487QEr4EemAZaGjK5Aj8g" name="PME_Trig812" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e5EQAEr4EemAZaGjK5Aj8g" name="PME_Trig813" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e5JvkEr4EemAZaGjK5Aj8g" name="PME_Trig814" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e5OoEEr4EemAZaGjK5Aj8g" name="PME_Trig815" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e5VVwEr4EemAZaGjK5Aj8g" name="PME_Trig816" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_e5ZAIEr4EemAZaGjK5Aj8g" name="PME_Trig817" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e5dRkEr4EemAZaGjK5Aj8g" name="PME_Trig818" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e5ixIEr4EemAZaGjK5Aj8g" name="PME_Trig819" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_e5kmUEr4EemAZaGjK5Aj8g" name="PME_Trig820" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e5qF4Er4EemAZaGjK5Aj8g" name="PME_Trig821" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_e5twQEr4EemAZaGjK5Aj8g" name="PME_Trig822" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_e51sEEr4EemAZaGjK5Aj8g" name="PME_Trig823" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e526MEr4EemAZaGjK5Aj8g" name="PME_Trig824" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e57ysEr4EemAZaGjK5Aj8g" name="PME_Trig825" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e6AEIEr4EemAZaGjK5Aj8g" name="PME_Trig826" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e6E8oEr4EemAZaGjK5Aj8g" name="PME_Trig827" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_e6LDQEr4EemAZaGjK5Aj8g" name="PME_Trig828" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e6NfgEr4EemAZaGjK5Aj8g" name="PME_Trig829" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_e6VbUEr4EemAZaGjK5Aj8g" name="PME_Trig830" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_e6WpcEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__RunAsSlave__831" source="_tB8pUErDEem2BZRQc2M93A" target="_e4j5sEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e-8OgEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__894&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_e6X3kEr4EemAZaGjK5Aj8g" name="PME_Trig832" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e6fMUEr4EemAZaGjK5Aj8g" name="PME_Trig833" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e6hokEr4EemAZaGjK5Aj8g" name="PME_Trig834" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e6pkYEr4EemAZaGjK5Aj8g" name="PME_Trig835" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e6rZkEr4EemAZaGjK5Aj8g" name="PME_Trig836" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e6zVYEr4EemAZaGjK5Aj8g" name="PME_Trig837" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_e61KkEr4EemAZaGjK5Aj8g" name="PME_Trig838" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e64N4Er4EemAZaGjK5Aj8g" name="PME_Trig839" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e6-UgEr4EemAZaGjK5Aj8g" name="PME_Trig840" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_e6_ioEr4EemAZaGjK5Aj8g" name="PME_Trig841" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e7Cl8Er4EemAZaGjK5Aj8g" name="PME_Trig842" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_e7IskEr4EemAZaGjK5Aj8g" name="PME_Trig843" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_e7Lv4Er4EemAZaGjK5Aj8g" name="PME_Trig844" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e7R2gEr4EemAZaGjK5Aj8g" name="PME_Trig845" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e7U50Er4EemAZaGjK5Aj8g" name="PME_Trig846" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e7bngEr4EemAZaGjK5Aj8g" name="PME_Trig847" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e7dcsEr4EemAZaGjK5Aj8g" name="PME_Trig848" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_e7iVMEr4EemAZaGjK5Aj8g" name="PME_Trig849" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e7nNsEr4EemAZaGjK5Aj8g" name="PME_Trig850" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_e7pC4Er4EemAZaGjK5Aj8g" name="PME_Trig851" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_e7vJgEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__KeepAliveMsg__852" source="_tB-egErDEem2BZRQc2M93A" target="_e4j5sEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e-oFcEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__894&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_e7wXoEr4EemAZaGjK5Aj8g" name="PME_Trig853" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e7xlwEr4EemAZaGjK5Aj8g" name="PME_Trig854" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e7za8Er4EemAZaGjK5Aj8g" name="PME_Trig855" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e75hkEr4EemAZaGjK5Aj8g" name="PME_Trig856" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e76vsEr4EemAZaGjK5Aj8g" name="PME_Trig857" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e7790Er4EemAZaGjK5Aj8g" name="PME_Trig858" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_e8BdYEr4EemAZaGjK5Aj8g" name="PME_Trig859" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e8GV4Er4EemAZaGjK5Aj8g" name="PME_Trig860" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e8KnUEr4EemAZaGjK5Aj8g" name="PME_Trig861" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_e8QG4Er4EemAZaGjK5Aj8g" name="PME_Trig862" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e8TxQEr4EemAZaGjK5Aj8g" name="PME_Trig863" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_e8ae8Er4EemAZaGjK5Aj8g" name="PME_Trig864" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_e8f-gEr4EemAZaGjK5Aj8g" name="PME_Trig865" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e8jB0Er4EemAZaGjK5Aj8g" name="PME_Trig866" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e8k3AEr4EemAZaGjK5Aj8g" name="PME_Trig867" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e8n6UEr4EemAZaGjK5Aj8g" name="PME_Trig868" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e8tZ4Er4EemAZaGjK5Aj8g" name="PME_Trig869" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_e8uoAEr4EemAZaGjK5Aj8g" name="PME_Trig870" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e8ySYEr4EemAZaGjK5Aj8g" name="PME_Trig871" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_e84ZAEr4EemAZaGjK5Aj8g" name="PME_Trig872" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_e85nIEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__KeepAliveMsg__873" source="_tB9QYErDEem2BZRQc2M93A" target="_e4j5sEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e-sW4Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__894&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_e87cUEr4EemAZaGjK5Aj8g" name="PME_Trig874" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e894kEr4EemAZaGjK5Aj8g" name="PME_Trig875" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e9DYIEr4EemAZaGjK5Aj8g" name="PME_Trig876" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e9IQoEr4EemAZaGjK5Aj8g" name="PME_Trig877" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e9MiEEr4EemAZaGjK5Aj8g" name="PME_Trig878" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e9OXQEr4EemAZaGjK5Aj8g" name="PME_Trig879" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_e9WTEEr4EemAZaGjK5Aj8g" name="PME_Trig880" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e9YIQEr4EemAZaGjK5Aj8g" name="PME_Trig881" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e9gEEEr4EemAZaGjK5Aj8g" name="PME_Trig882" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_e9h5QEr4EemAZaGjK5Aj8g" name="PME_Trig883" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e9k8kEr4EemAZaGjK5Aj8g" name="PME_Trig884" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_e9rDMEr4EemAZaGjK5Aj8g" name="PME_Trig885" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_e9utkEr4EemAZaGjK5Aj8g" name="PME_Trig886" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e92CUEr4EemAZaGjK5Aj8g" name="PME_Trig887" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_e98wAEr4EemAZaGjK5Aj8g" name="PME_Trig888" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e9_MQEr4EemAZaGjK5Aj8g" name="PME_Trig889" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_e-AaYEr4EemAZaGjK5Aj8g" name="PME_Trig890" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_e-FS4Er4EemAZaGjK5Aj8g" name="PME_Trig891" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_e-KLYEr4EemAZaGjK5Aj8g" name="PME_Trig892" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_e-SHMEr4EemAZaGjK5Aj8g" name="PME_Trig893" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_e-VKgEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__RunAsSlave__894" guard="_e_Jp4Ur4EemAZaGjK5Aj8g" source="_e4j5sEr4EemAZaGjK5Aj8g" target="_tCATsErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_e_Jp4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion903">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e_Jp4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion903">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsSlave__894&quot;,&quot;Debug__A__En__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_e-WYoEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__RunAsSlave__895" guard="_e_GmkUr4EemAZaGjK5Aj8g" source="_e4j5sEr4EemAZaGjK5Aj8g" target="_tB8pUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_e_GmkUr4EemAZaGjK5Aj8g" name="PME_checkDecesion900">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e_GmkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion900">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_e-XmwEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__KeepAliveMsg__896" guard="_e_K4AUr4EemAZaGjK5Aj8g" source="_e4j5sEr4EemAZaGjK5Aj8g" target="_tB-egErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_e_K4AUr4EemAZaGjK5Aj8g" name="PME_checkDecesion904">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e_K4AEr4EemAZaGjK5Aj8g" name="PME_checkDecesion904">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_e-Zb8Er4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__KeepAliveMsg__897" guard="_e_H0sUr4EemAZaGjK5Aj8g" source="_e4j5sEr4EemAZaGjK5Aj8g" target="_tB9QYErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_e_H0sUr4EemAZaGjK5Aj8g" name="PME_checkDecesion902">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e_H0sEr4EemAZaGjK5Aj8g" name="PME_checkDecesion902">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_e-dGUEr4EemAZaGjK5Aj8g" name="From__Parnet__Backup__898" source="_e4ck8Er4EemAZaGjK5Aj8g" target="_e4j5sEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_e_FYcEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__895&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__899&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__B__Ac__KeepAliveMsg&quot;,&quot;To__Debug__B__Ac__KeepAliveMsg__897&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__894&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__896&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_e-dGUUr4EemAZaGjK5Aj8g" name="To__Parent__Backup__899" guard="_e_HNoUr4EemAZaGjK5Aj8g" source="_e4j5sEr4EemAZaGjK5Aj8g" target="_e4fBMEr4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_e_HNoUr4EemAZaGjK5Aj8g" name="PME_checkDecesion901">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_e_HNoEr4EemAZaGjK5Aj8g" name="PME_checkDecesion901">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__899&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tB8pUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB8pUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCGaUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__456">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tB9QYErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB9QYUrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCJdoErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAliveMsg__457">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__B__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tB-egErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB_FkErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCL54UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg__458">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tCATsErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCATsUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCOWIErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave__459">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_e4j5sEr4EemAZaGjK5Aj8g" name="DecesionPoint__806" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_e4m9AEr4EemAZaGjK5Aj8g" name="Init__State__807"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tDikwErDEem2BZRQc2M93A" name="Debug__Path__backtoslave1" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tDjy4UrDEem2BZRQc2M93A" name="Debug__C__backtoslave1">
                  <connectionPoint xmi:id="_tDlBAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tDloEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_fYxDwEr4EemAZaGjK5Aj8g" name="From__Parent__1208" kind="entryPoint"/>
                  <connectionPoint xmi:id="_fY0uIEr4EemAZaGjK5Aj8g" name="To__Parent__1210" kind="exitPoint"/>
                  <region xmi:id="_tDjy4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tD6YMErDEem2BZRQc2M93A" name="Debug__init__trans__backtoslave1" source="_tDlBAErDEem2BZRQc2M93A" target="_tD378UrDEem2BZRQc2M93A"/>
                    <transition xmi:id="_tD6YMUrDEem2BZRQc2M93A" name="Debug__Ac__backtoslave1" source="_tD378UrDEem2BZRQc2M93A" target="_tD5KEErDEem2BZRQc2M93A">
                      <trigger xmi:id="_tD6YMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tD6_QErDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave1" source="_tD5KEErDEem2BZRQc2M93A" target="_tDloEUrDEem2BZRQc2M93A">
                      <trigger xmi:id="_tD6_QUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_fY4YgEr4EemAZaGjK5Aj8g" name="Trans__ex1214" source="_tDloEUrDEem2BZRQc2M93A" target="_fY18QUr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fawn0Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1259&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1261&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fY4YgUr4EemAZaGjK5Aj8g" name="Trans__Init__State__12131215" source="_fY2jUUr4EemAZaGjK5Aj8g" target="_fY18QUr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fa2HYEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1213&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1213&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1259&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1213&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1261&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1213&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fY9RAEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__backtoslave1__1216" source="_tD5KEErDEem2BZRQc2M93A" target="_fY18QUr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fa5xwEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1259&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1261&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fY_GMEr4EemAZaGjK5Aj8g" name="PME_Trig1217" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZAUUEr4EemAZaGjK5Aj8g" name="PME_Trig1218" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fZBicEr4EemAZaGjK5Aj8g" name="PME_Trig1219" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZFM0Er4EemAZaGjK5Aj8g" name="PME_Trig1220" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fZIQIEr4EemAZaGjK5Aj8g" name="PME_Trig1221" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZKsYEr4EemAZaGjK5Aj8g" name="PME_Trig1222" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fZLTcEr4EemAZaGjK5Aj8g" name="PME_Trig1223" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fZMhkEr4EemAZaGjK5Aj8g" name="PME_Trig1224" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZO90Er4EemAZaGjK5Aj8g" name="PME_Trig1225" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fZSoMEr4EemAZaGjK5Aj8g" name="PME_Trig1226" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZUdYEr4EemAZaGjK5Aj8g" name="PME_Trig1227" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fZVrgEr4EemAZaGjK5Aj8g" name="PME_Trig1228" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fZWSkEr4EemAZaGjK5Aj8g" name="PME_Trig1229" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZXgsEr4EemAZaGjK5Aj8g" name="PME_Trig1230" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fZdAQEr4EemAZaGjK5Aj8g" name="PME_Trig1231" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fZfcgEr4EemAZaGjK5Aj8g" name="PME_Trig1232" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fZgDkEr4EemAZaGjK5Aj8g" name="PME_Trig1233" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fZhRsEr4EemAZaGjK5Aj8g" name="PME_Trig1234" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZjt8Er4EemAZaGjK5Aj8g" name="PME_Trig1235" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fZn_YEr4EemAZaGjK5Aj8g" name="PME_Trig1236" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fZpNgEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__backtoslave1__1237" source="_tD378UrDEem2BZRQc2M93A" target="_fY18QUr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fa6_4Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1259&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1261&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fZp0kEr4EemAZaGjK5Aj8g" name="PME_Trig1238" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZrCsEr4EemAZaGjK5Aj8g" name="PME_Trig1239" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fZsQ0Er4EemAZaGjK5Aj8g" name="PME_Trig1240" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZy-gEr4EemAZaGjK5Aj8g" name="PME_Trig1241" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fZ0MoEr4EemAZaGjK5Aj8g" name="PME_Trig1242" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZ33AEr4EemAZaGjK5Aj8g" name="PME_Trig1243" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fZ8vgEr4EemAZaGjK5Aj8g" name="PME_Trig1244" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fZ99oEr4EemAZaGjK5Aj8g" name="PME_Trig1245" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fZ_y0Er4EemAZaGjK5Aj8g" name="PME_Trig1246" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_faHHkEr4EemAZaGjK5Aj8g" name="PME_Trig1247" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_faJj0Er4EemAZaGjK5Aj8g" name="PME_Trig1248" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_faN1QEr4EemAZaGjK5Aj8g" name="PME_Trig1249" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_faStwEr4EemAZaGjK5Aj8g" name="PME_Trig1250" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_faT74Er4EemAZaGjK5Aj8g" name="PME_Trig1251" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_facewEr4EemAZaGjK5Aj8g" name="PME_Trig1252" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_faeT8Er4EemAZaGjK5Aj8g" name="PME_Trig1253" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fagwMEr4EemAZaGjK5Aj8g" name="PME_Trig1254" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_falBoEr4EemAZaGjK5Aj8g" name="PME_Trig1255" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_famPwEr4EemAZaGjK5Aj8g" name="PME_Trig1256" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fand4Er4EemAZaGjK5Aj8g" name="PME_Trig1257" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fap6IEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__backtoslave1__1258" guard="_fa7m8Ur4EemAZaGjK5Aj8g" source="_fY18QUr4EemAZaGjK5Aj8g" target="_tD5KEErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fa7m8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1262">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fa7m8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1262">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave1__1258&quot;,&quot;Debug__A__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_faqhMEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__backtoslave1__1259" guard="_fa7m80r4EemAZaGjK5Aj8g" source="_fY18QUr4EemAZaGjK5Aj8g" target="_tD378UrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fa7m80r4EemAZaGjK5Aj8g" name="PME_checkDecesion1263">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fa7m8kr4EemAZaGjK5Aj8g" name="PME_checkDecesion1263">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave1__1259&quot;,&quot;Debug__B__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fatkgEr4EemAZaGjK5Aj8g" name="From__Parnet__Backup__1260" source="_fYxDwEr4EemAZaGjK5Aj8g" target="_fY18QUr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_faydAEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__1258&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__1259&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1261&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_favZsEr4EemAZaGjK5Aj8g" name="To__Parent__Backup__1261" guard="_fa8OAUr4EemAZaGjK5Aj8g" source="_fY18QUr4EemAZaGjK5Aj8g" target="_fY0uIEr4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_fa8OAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1264">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fa8OAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1264">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1261&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tD378UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD378krDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tD5KEErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD5KEUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fY18QUr4EemAZaGjK5Aj8g" name="DecesionPoint__1212" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fY2jUUr4EemAZaGjK5Aj8g" name="Init__State__1213"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFdQUErDEem2BZRQc2M93A" name="Debug__Path__CheckNoMaster" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tFd3YUrDEem2BZRQc2M93A" name="Debug__C__CheckNoMaster">
                  <connectionPoint xmi:id="_tFeecUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tFfFgUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_fG1mQEr4EemAZaGjK5Aj8g" name="From__Parent__1046" kind="entryPoint"/>
                  <connectionPoint xmi:id="_fG5QoEr4EemAZaGjK5Aj8g" name="To__Parent__1048" kind="exitPoint"/>
                  <region xmi:id="_tFd3YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tFxZYErDEem2BZRQc2M93A" name="Debug__init__trans__CheckNoMaster" source="_tFeecUrDEem2BZRQc2M93A" target="_tFvkMErDEem2BZRQc2M93A"/>
                    <transition xmi:id="_tFxZYUrDEem2BZRQc2M93A" name="Debug__Ac__CheckNoMaster" source="_tFvkMErDEem2BZRQc2M93A" target="_tFwyUErDEem2BZRQc2M93A">
                      <trigger xmi:id="_tFxZYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tFxZY0rDEem2BZRQc2M93A" name="Debug__end__trans__CheckNoMaster" source="_tFwyUErDEem2BZRQc2M93A" target="_tFfFgUrDEem2BZRQc2M93A">
                      <trigger xmi:id="_tFxZZErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_fHgUoEr4EemAZaGjK5Aj8g" name="Trans__ex1052" source="_tFfFgUrDEem2BZRQc2M93A" target="_fG9iEEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fSBikEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1097&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1099&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__1096&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fHlNIEr4EemAZaGjK5Aj8g" name="Trans__Init__State__10511053" source="_fHGsAEr4EemAZaGjK5Aj8g" target="_fG9iEEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fScZUEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1051&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1097&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1051&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1099&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1051&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__1096&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1051&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fH9AkEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__CheckNoMaster__1054" source="_tFwyUErDEem2BZRQc2M93A" target="_fG9iEEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fSh44Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1097&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1099&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__1096&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fIE8YEr4EemAZaGjK5Aj8g" name="PME_Trig1055" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fIP7gEr4EemAZaGjK5Aj8g" name="PME_Trig1056" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fIbhsEr4EemAZaGjK5Aj8g" name="PME_Trig1057" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fIoWAEr4EemAZaGjK5Aj8g" name="PME_Trig1058" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fIyuEEr4EemAZaGjK5Aj8g" name="PME_Trig1059" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fI_iYEr4EemAZaGjK5Aj8g" name="PME_Trig1060" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fJIsUEr4EemAZaGjK5Aj8g" name="PME_Trig1061" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fJSdUEr4EemAZaGjK5Aj8g" name="PME_Trig1062" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fJbAMEr4EemAZaGjK5Aj8g" name="PME_Trig1063" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fJppsEr4EemAZaGjK5Aj8g" name="PME_Trig1064" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fJ0BwEr4EemAZaGjK5Aj8g" name="PME_Trig1065" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fKCEMEr4EemAZaGjK5Aj8g" name="PME_Trig1066" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fKKAAEr4EemAZaGjK5Aj8g" name="PME_Trig1067" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fKUYEEr4EemAZaGjK5Aj8g" name="PME_Trig1068" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fKc68Er4EemAZaGjK5Aj8g" name="PME_Trig1069" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fKqWUEr4EemAZaGjK5Aj8g" name="PME_Trig1070" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fK0HUEr4EemAZaGjK5Aj8g" name="PME_Trig1071" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fK8qMEr4EemAZaGjK5Aj8g" name="PME_Trig1072" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fLNv8Er4EemAZaGjK5Aj8g" name="PME_Trig1073" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fLgq4Er4EemAZaGjK5Aj8g" name="PME_Trig1074" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fLyXsEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__CheckNoMaster__1075" source="_tFvkMErDEem2BZRQc2M93A" target="_fG9iEEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fSKsgEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1097&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1099&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__1096&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fL7hoEr4EemAZaGjK5Aj8g" name="PME_Trig1076" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fMdGEEr4EemAZaGjK5Aj8g" name="PME_Trig1077" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fMzEUEr4EemAZaGjK5Aj8g" name="PME_Trig1078" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fM-qgEr4EemAZaGjK5Aj8g" name="PME_Trig1079" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fNMF4Er4EemAZaGjK5Aj8g" name="PME_Trig1080" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fNWd8Er4EemAZaGjK5Aj8g" name="PME_Trig1081" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fNgO8Er4EemAZaGjK5Aj8g" name="PME_Trig1082" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fNr1IEr4EemAZaGjK5Aj8g" name="PME_Trig1083" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fODokEr4EemAZaGjK5Aj8g" name="PME_Trig1084" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fOK9UEr4EemAZaGjK5Aj8g" name="PME_Trig1085" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fOV8cEr4EemAZaGjK5Aj8g" name="PME_Trig1086" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fOhioEr4EemAZaGjK5Aj8g" name="PME_Trig1087" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fOshwEr4EemAZaGjK5Aj8g" name="PME_Trig1088" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fO7yUEr4EemAZaGjK5Aj8g" name="PME_Trig1089" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fPJNsEr4EemAZaGjK5Aj8g" name="PME_Trig1090" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fPUz4Er4EemAZaGjK5Aj8g" name="PME_Trig1091" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fPi2UEr4EemAZaGjK5Aj8g" name="PME_Trig1092" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fQvwMEr4EemAZaGjK5Aj8g" name="PME_Trig1093" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fRLOAEr4EemAZaGjK5Aj8g" name="PME_Trig1094" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fRQtkEr4EemAZaGjK5Aj8g" name="PME_Trig1095" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fRZQcEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__CheckNoMaster__1096" guard="_fSqbwUr4EemAZaGjK5Aj8g" source="_fG9iEEr4EemAZaGjK5Aj8g" target="_tFwyUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fSqbwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1102">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fSqbwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1102">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__CheckNoMaster__1096&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fRZ3gEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__CheckNoMaster__1097" guard="_fSjHAUr4EemAZaGjK5Aj8g" source="_fG9iEEr4EemAZaGjK5Aj8g" target="_tFvkMErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fSjHAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1100">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fSjHAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1100">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__CheckNoMaster__1097&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fRcTwEr4EemAZaGjK5Aj8g" name="From__Parnet__Backup__1098" source="_fG1mQEr4EemAZaGjK5Aj8g" target="_fG9iEEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fSVEkEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1097&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1099&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__A__Ac__CheckNoMaster&quot;,&quot;To__Debug__A__Ac__CheckNoMaster__1096&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fRc60Er4EemAZaGjK5Aj8g" name="To__Parent__Backup__1099" guard="_fSp0sUr4EemAZaGjK5Aj8g" source="_fG9iEEr4EemAZaGjK5Aj8g" target="_fG5QoEr4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_fSp0sUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1101">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fSp0sEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1101">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1099&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tFvkMErDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFvkMUrDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;CheckNoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tFwyUErDEem2BZRQc2M93A" name="Debug__A__Ac__CheckNoMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFwyUUrDEem2BZRQc2M93A" name="Debug__A__Ac__CheckNoMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;CheckNoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fG9iEEr4EemAZaGjK5Aj8g" name="DecesionPoint__1050" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fHGsAEr4EemAZaGjK5Aj8g" name="Init__State__1051"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tIHiwErDEem2BZRQc2M93A" name="Debug__Path__Initial1__RunAsSlave__7" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tIIw4UrDEem2BZRQc2M93A" name="Debug__C__Initial1__RunAsSlave__7">
                  <connectionPoint xmi:id="_tIJ_AErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tIKmEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_fE_zMUr4EemAZaGjK5Aj8g" name="From__Parent__1010" kind="entryPoint"/>
                  <connectionPoint xmi:id="_fFAaQkr4EemAZaGjK5Aj8g" name="To__Parent__1012" kind="exitPoint"/>
                  <region xmi:id="_tIIw4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tIfWMUrDEem2BZRQc2M93A" name="Debug__end__trans__Initial1__RunAsSlave__7" source="_tIc58ErDEem2BZRQc2M93A" target="_tIKmEUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIumwErDEem2BZRQc2M93A" name="Debug__end__trans__Initial1__RunAsSlave__7__676">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__end__trans__Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tIf9QErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_fFKLQEr4EemAZaGjK5Aj8g" name="Trans__en1016" source="_tIJ_AErDEem2BZRQc2M93A" target="_fFC2gEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fGtqcEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1040&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1042&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fFKyUEr4EemAZaGjK5Aj8g" name="Trans__ex1017" source="_tIKmEUrDEem2BZRQc2M93A" target="_fFC2gEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fGXsMEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1040&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1042&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fFLZYEr4EemAZaGjK5Aj8g" name="Trans__Init__State__10151018" source="_fFIWEEr4EemAZaGjK5Aj8g" target="_fFC2gEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fGdLwEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1015&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1040&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1015&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1042&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1015&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fFPq0Er4EemAZaGjK5Aj8g" name="From__Debug__A__En__Initial1__RunAsSlave__7__1019" source="_tIc58ErDEem2BZRQc2M93A" target="_fFC2gEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fGoK4Er4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1040&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1042&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_fFSuIEr4EemAZaGjK5Aj8g" name="PME_Trig1020" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fFUjUEr4EemAZaGjK5Aj8g" name="PME_Trig1021" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fFYNsEr4EemAZaGjK5Aj8g" name="PME_Trig1022" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fFdtQEr4EemAZaGjK5Aj8g" name="PME_Trig1023" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fFe7YEr4EemAZaGjK5Aj8g" name="PME_Trig1024" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fFilwEr4EemAZaGjK5Aj8g" name="PME_Trig1025" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_fFneQEr4EemAZaGjK5Aj8g" name="PME_Trig1026" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fFosYEr4EemAZaGjK5Aj8g" name="PME_Trig1027" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fFp6gEr4EemAZaGjK5Aj8g" name="PME_Trig1028" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_fFs90Er4EemAZaGjK5Aj8g" name="PME_Trig1029" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fFxPQEr4EemAZaGjK5Aj8g" name="PME_Trig1030" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_fFydYEr4EemAZaGjK5Aj8g" name="PME_Trig1031" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                      <trigger xmi:id="_fF0SkEr4EemAZaGjK5Aj8g" name="PME_Trig1032" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fF388Er4EemAZaGjK5Aj8g" name="PME_Trig1033" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_fF6ZMEr4EemAZaGjK5Aj8g" name="PME_Trig1034" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fF7nUEr4EemAZaGjK5Aj8g" name="PME_Trig1035" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_fF81cEr4EemAZaGjK5Aj8g" name="PME_Trig1036" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_fF-DkEr4EemAZaGjK5Aj8g" name="PME_Trig1037" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_fGAf0Er4EemAZaGjK5Aj8g" name="PME_Trig1038" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_fGBt8Er4EemAZaGjK5Aj8g" name="PME_Trig1039" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_fGKQ0Er4EemAZaGjK5Aj8g" name="To__Debug__A__En__Initial1__RunAsSlave__7__1040" guard="_fGvfoUr4EemAZaGjK5Aj8g" source="_fFC2gEr4EemAZaGjK5Aj8g" target="_tIc58ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_fGvfoUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1043">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fGvfoEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1043">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1040&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_fGN7MEr4EemAZaGjK5Aj8g" name="From__Parnet__Backup__1041" source="_fE_zMUr4EemAZaGjK5Aj8g" target="_fFC2gEr4EemAZaGjK5Aj8g">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fGiEQEr4EemAZaGjK5Aj8g">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1040&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1042&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_fGOiQEr4EemAZaGjK5Aj8g" name="To__Parent__Backup__1042" guard="_fGyi8Ur4EemAZaGjK5Aj8g" source="_fFC2gEr4EemAZaGjK5Aj8g" target="_fFAaQkr4EemAZaGjK5Aj8g">
                      <ownedRule xmi:id="_fGyi8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1044">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_fGyi8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1044">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1042&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tIc58ErDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIc58UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tImD4UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7__669">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fFC2gEr4EemAZaGjK5Aj8g" name="DecesionPoint__1014" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_fFIWEEr4EemAZaGjK5Aj8g" name="Init__State__1015"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_erS5wEr4EemAZaGjK5Aj8g" name="DecesionPoint__605" kind="choice"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s7dm0UrDEem2BZRQc2M93A" name="Debug__C__ServerFaliure">
              <connectionPoint xmi:id="_s7eN4UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s7e08UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_eKQCMEr4EemAZaGjK5Aj8g" name="From__Parent__160" kind="entryPoint"/>
              <connectionPoint xmi:id="_eKddkEr4EemAZaGjK5Aj8g" name="To__Parent__162" kind="exitPoint"/>
              <region xmi:id="_s7dm0krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s732gErDEem2BZRQc2M93A" name="Debug__init__trans__ServerFaliure" source="_s7eN4UrDEem2BZRQc2M93A" target="_s7y-AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8I8QErDEem2BZRQc2M93A" name="Debug__init__trans__ServerFaliure__257">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__init__trans__ServerFaliure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s74dkErDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_s7y-AErDEem2BZRQc2M93A" target="_s70MIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s75rsErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s75EoErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s75rsUrDEem2BZRQc2M93A" name="Debug__AC__ServerFaliure" source="_s70MIErDEem2BZRQc2M93A" target="_s71aQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s76SwErDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);
    int r=random()%30+5;
    Timer.informEvery(UMLRTTimespec(r,0),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Failure,  will recover after &quot; &lt;&lt; r &lt;&lt; &quot; seconds\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__AC__ServerFaliure&quot;,(char *)&quot;Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s75rskrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s76SwUrDEem2BZRQc2M93A" name="Debug__En__Failure" source="_s71aQErDEem2BZRQc2M93A" target="_s73PcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7650ErDEem2BZRQc2M93A" name="SetTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    //------

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__En__Failure&quot;,(char *)&quot;Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s76SwkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7650UrDEem2BZRQc2M93A" name="Debug__end__trans__ServerFaliure" source="_s73PcErDEem2BZRQc2M93A" target="_s7e08UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8Pp8ErDEem2BZRQc2M93A" name="Debug__end__trans__ServerFaliure__262">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__end__trans__ServerFaliure&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s7650krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_eLAQIEr4EemAZaGjK5Aj8g" name="Trans__Init__State__165166" source="_eKwYgEr4EemAZaGjK5Aj8g" target="_eKjkMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eUQSwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__165&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__165&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__165&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__165&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__165&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__257&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__165&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eLCFUEr4EemAZaGjK5Aj8g" name="Trans__ex167" source="_s7e08UrDEem2BZRQc2M93A" target="_eKjkMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eVELEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__257&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eLWOYEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Failure__168" source="_s73PcErDEem2BZRQc2M93A" target="_eKjkMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eVTboEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__257&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eLexQEr4EemAZaGjK5Aj8g" name="PME_Trig169" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eLmGAEr4EemAZaGjK5Aj8g" name="PME_Trig170" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eLq-gEr4EemAZaGjK5Aj8g" name="PME_Trig171" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eL0IcEr4EemAZaGjK5Aj8g" name="PME_Trig172" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eL8rUEr4EemAZaGjK5Aj8g" name="PME_Trig173" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eL_HkEr4EemAZaGjK5Aj8g" name="PME_Trig174" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eMLU0Er4EemAZaGjK5Aj8g" name="PME_Trig175" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eMOYIEr4EemAZaGjK5Aj8g" name="PME_Trig176" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eMYJIEr4EemAZaGjK5Aj8g" name="PME_Trig177" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eMcakEr4EemAZaGjK5Aj8g" name="PME_Trig178" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eMjvUEr4EemAZaGjK5Aj8g" name="PME_Trig179" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eMrEEEr4EemAZaGjK5Aj8g" name="PME_Trig180" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eMy_4Er4EemAZaGjK5Aj8g" name="PME_Trig181" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eM67sEr4EemAZaGjK5Aj8g" name="PME_Trig182" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eNAbQEr4EemAZaGjK5Aj8g" name="PME_Trig183" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eNFTwEr4EemAZaGjK5Aj8g" name="PME_Trig184" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eNJlMEr4EemAZaGjK5Aj8g" name="PME_Trig185" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eNSIEEr4EemAZaGjK5Aj8g" name="PME_Trig186" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eNaq8Er4EemAZaGjK5Aj8g" name="PME_Trig187" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eNjN0Er4EemAZaGjK5Aj8g" name="PME_Trig188" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eNoGUEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__ServerFaliure__189" source="_s70MIErDEem2BZRQc2M93A" target="_eKjkMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eT_0EEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__257&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eNtl4Er4EemAZaGjK5Aj8g" name="PME_Trig190" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eN1hsEr4EemAZaGjK5Aj8g" name="PME_Trig191" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eN9dgEr4EemAZaGjK5Aj8g" name="PME_Trig192" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eOBu8Er4EemAZaGjK5Aj8g" name="PME_Trig193" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eOEyQEr4EemAZaGjK5Aj8g" name="PME_Trig194" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eOS0sEr4EemAZaGjK5Aj8g" name="PME_Trig195" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eOWfEEr4EemAZaGjK5Aj8g" name="PME_Trig196" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eOaJcEr4EemAZaGjK5Aj8g" name="PME_Trig197" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eOheMEr4EemAZaGjK5Aj8g" name="PME_Trig198" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eOmWsEr4EemAZaGjK5Aj8g" name="PME_Trig199" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eOtrcEr4EemAZaGjK5Aj8g" name="PME_Trig200" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eO1AMEr4EemAZaGjK5Aj8g" name="PME_Trig201" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eO7G0Er4EemAZaGjK5Aj8g" name="PME_Trig202" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eO-xMEr4EemAZaGjK5Aj8g" name="PME_Trig203" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ePE30Er4EemAZaGjK5Aj8g" name="PME_Trig204" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ePJJQEr4EemAZaGjK5Aj8g" name="PME_Trig205" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ePP28Er4EemAZaGjK5Aj8g" name="PME_Trig206" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ePXLsEr4EemAZaGjK5Aj8g" name="PME_Trig207" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ePZn8Er4EemAZaGjK5Aj8g" name="PME_Trig208" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ePcrQEr4EemAZaGjK5Aj8g" name="PME_Trig209" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ePjY8Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__RunAsMaster__210" source="_s7y-AErDEem2BZRQc2M93A" target="_eKjkMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eUfjUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__257&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ePnDUEr4EemAZaGjK5Aj8g" name="PME_Trig211" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ePqGoEr4EemAZaGjK5Aj8g" name="PME_Trig212" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ePz3oEr4EemAZaGjK5Aj8g" name="PME_Trig213" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eP8agEr4EemAZaGjK5Aj8g" name="PME_Trig214" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eQBTAEr4EemAZaGjK5Aj8g" name="PME_Trig215" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eQInwEr4EemAZaGjK5Aj8g" name="PME_Trig216" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eQWqMEr4EemAZaGjK5Aj8g" name="PME_Trig217" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eQa7oEr4EemAZaGjK5Aj8g" name="PME_Trig218" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eQiQYEr4EemAZaGjK5Aj8g" name="PME_Trig219" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eQraUEr4EemAZaGjK5Aj8g" name="PME_Trig220" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eQvEsEr4EemAZaGjK5Aj8g" name="PME_Trig221" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eQw54Er4EemAZaGjK5Aj8g" name="PME_Trig222" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eQ41sEr4EemAZaGjK5Aj8g" name="PME_Trig223" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eQ6q4Er4EemAZaGjK5Aj8g" name="PME_Trig224" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eRDNwEr4EemAZaGjK5Aj8g" name="PME_Trig225" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eRFC8Er4EemAZaGjK5Aj8g" name="PME_Trig226" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eRMXsEr4EemAZaGjK5Aj8g" name="PME_Trig227" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eRQCEEr4EemAZaGjK5Aj8g" name="PME_Trig228" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eRcPUEr4EemAZaGjK5Aj8g" name="PME_Trig229" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eRfSoEr4EemAZaGjK5Aj8g" name="PME_Trig230" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eRnOcEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__ServerFaliure__231" source="_s71aQErDEem2BZRQc2M93A" target="_eKjkMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eU3WwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__257&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eRpDoEr4EemAZaGjK5Aj8g" name="PME_Trig232" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eRsuAEr4EemAZaGjK5Aj8g" name="PME_Trig233" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eRvKQEr4EemAZaGjK5Aj8g" name="PME_Trig234" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eR3GEEr4EemAZaGjK5Aj8g" name="PME_Trig235" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eR_B4Er4EemAZaGjK5Aj8g" name="PME_Trig236" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eSBeIEr4EemAZaGjK5Aj8g" name="PME_Trig237" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eSIL0Er4EemAZaGjK5Aj8g" name="PME_Trig238" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eSL2MEr4EemAZaGjK5Aj8g" name="PME_Trig239" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eSZ4oEr4EemAZaGjK5Aj8g" name="PME_Trig240" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eSexIEr4EemAZaGjK5Aj8g" name="PME_Trig241" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eSk3wEr4EemAZaGjK5Aj8g" name="PME_Trig242" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eSpJMEr4EemAZaGjK5Aj8g" name="PME_Trig243" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eSv24Er4EemAZaGjK5Aj8g" name="PME_Trig244" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eSzhQEr4EemAZaGjK5Aj8g" name="PME_Trig245" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eS62AEr4EemAZaGjK5Aj8g" name="PME_Trig246" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eTEnAEr4EemAZaGjK5Aj8g" name="PME_Trig247" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eTI4cEr4EemAZaGjK5Aj8g" name="PME_Trig248" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eTO_EEr4EemAZaGjK5Aj8g" name="PME_Trig249" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eTXh8Er4EemAZaGjK5Aj8g" name="PME_Trig250" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eTfdwEr4EemAZaGjK5Aj8g" name="PME_Trig251" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eTkWQEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__Failure__252" guard="_eVWe8Ur4EemAZaGjK5Aj8g" source="_eKjkMEr4EemAZaGjK5Aj8g" target="_s73PcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eVWe8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion258">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eVWe8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion258">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Failure__252&quot;,&quot;Debug__A__En__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eTlkYEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__ServerFaliure__253" guard="_eVYUIUr4EemAZaGjK5Aj8g" source="_eKjkMEr4EemAZaGjK5Aj8g" target="_s70MIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eVYUIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion259">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eVYUIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion259">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eTmLcEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__RunAsMaster__254" guard="_eVclkUr4EemAZaGjK5Aj8g" source="_eKjkMEr4EemAZaGjK5Aj8g" target="_s7y-AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eVclkUr4EemAZaGjK5Aj8g" name="PME_checkDecesion260">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eVclkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion260">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eTmygEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__ServerFaliure__255" guard="_eVfo4Ur4EemAZaGjK5Aj8g" source="_eKjkMEr4EemAZaGjK5Aj8g" target="_s71aQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eVfo4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion261">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eVfo4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion261">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eTv8cEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__256" source="_eKQCMEr4EemAZaGjK5Aj8g" target="_eKjkMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eUrJgEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__252&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ac__ServerFaliure&quot;,&quot;To__Debug__B__Ac__ServerFaliure__253&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__254&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__257&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eTwjgEr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__257" guard="_eVg3AUr4EemAZaGjK5Aj8g" source="_eKjkMEr4EemAZaGjK5Aj8g" target="_eKddkEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_eVg3AUr4EemAZaGjK5Aj8g" name="PME_checkDecesion262">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eVg3AEr4EemAZaGjK5Aj8g" name="PME_checkDecesion262">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__257&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s7y-AErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7y-AUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s79WEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__252">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s70MIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s70MIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8AZYErDEem2BZRQc2M93A" name="Debug__B__Ac__ServerFaliure__253">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s71aQErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s71aQUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8DcsErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure__254">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s73PcErDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s73PcUrDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8FR4ErDEem2BZRQc2M93A" name="Debug__A__En__Failure__255">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eKjkMEr4EemAZaGjK5Aj8g" name="DecesionPoint__164" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eKwYgEr4EemAZaGjK5Aj8g" name="Init__State__165"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s9KP8ErDEem2BZRQc2M93A" name="Debug__Path__purgeotherMessage" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s9K3AUrDEem2BZRQc2M93A" name="Debug__C__purgeotherMessage">
              <connectionPoint xmi:id="_s9MFIErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s9MsMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_fgzlcEr4EemAZaGjK5Aj8g" name="From__Parent__1361" kind="entryPoint"/>
              <connectionPoint xmi:id="_fg0MgEr4EemAZaGjK5Aj8g" name="To__Parent__1363" kind="exitPoint"/>
              <region xmi:id="_s9K3AkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s9kfoErDEem2BZRQc2M93A" name="Debug__end__trans__purgeotherMessage" source="_s9g1QErDEem2BZRQc2M93A" target="_s9MsMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s93akErDEem2BZRQc2M93A" name="Debug__end__trans__purgeotherMessage__313">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__end__trans__purgeotherMessage&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9kfoUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_fg8IUEr4EemAZaGjK5Aj8g" name="Trans__ex1367" source="_s9MsMUrDEem2BZRQc2M93A" target="_fg1aoEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fiZg4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1413&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1416&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fg8IUUr4EemAZaGjK5Aj8g" name="Trans__en1368" source="_s9MFIErDEem2BZRQc2M93A" target="_fg1aoEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fiUoYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1413&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1416&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fg8vYEr4EemAZaGjK5Aj8g" name="Trans__Init__State__13661369" source="_fg2BsEr4EemAZaGjK5Aj8g" target="_fg1aoEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fivfIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1366&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1366&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1413&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1366&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1416&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1366&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fg99gEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Failure__1370" source="_s9g1QErDEem2BZRQc2M93A" target="_fg1aoEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fiavAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1413&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1416&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fg99gUr4EemAZaGjK5Aj8g" name="PME_Trig1371" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fg_LoEr4EemAZaGjK5Aj8g" name="PME_Trig1372" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fhAZwEr4EemAZaGjK5Aj8g" name="PME_Trig1373" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhDdEEr4EemAZaGjK5Aj8g" name="PME_Trig1374" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fhHugEr4EemAZaGjK5Aj8g" name="PME_Trig1375" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhI8oEr4EemAZaGjK5Aj8g" name="PME_Trig1376" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fhJjsEr4EemAZaGjK5Aj8g" name="PME_Trig1377" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fhL_8Er4EemAZaGjK5Aj8g" name="PME_Trig1378" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhPqUEr4EemAZaGjK5Aj8g" name="PME_Trig1379" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fhRfgEr4EemAZaGjK5Aj8g" name="PME_Trig1380" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhSGkEr4EemAZaGjK5Aj8g" name="PME_Trig1381" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fhTUsEr4EemAZaGjK5Aj8g" name="PME_Trig1382" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fhUi0Er4EemAZaGjK5Aj8g" name="PME_Trig1383" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhYNMEr4EemAZaGjK5Aj8g" name="PME_Trig1384" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fhbQgEr4EemAZaGjK5Aj8g" name="PME_Trig1385" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fhb3kEr4EemAZaGjK5Aj8g" name="PME_Trig1386" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fhdFsEr4EemAZaGjK5Aj8g" name="PME_Trig1387" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fhdswEr4EemAZaGjK5Aj8g" name="PME_Trig1388" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhe64Er4EemAZaGjK5Aj8g" name="PME_Trig1389" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fhkacEr4EemAZaGjK5Aj8g" name="PME_Trig1390" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fhmPoEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__purgeotherMessage__1391" source="_s9fAEErDEem2BZRQc2M93A" target="_fg1aoEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fiuRAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1413&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1416&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fhmPoUr4EemAZaGjK5Aj8g" name="PME_Trig1392" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhndwEr4EemAZaGjK5Aj8g" name="PME_Trig1393" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fhor4Er4EemAZaGjK5Aj8g" name="PME_Trig1394" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhs9UEr4EemAZaGjK5Aj8g" name="PME_Trig1395" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fhvZkEr4EemAZaGjK5Aj8g" name="PME_Trig1396" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fhwnsEr4EemAZaGjK5Aj8g" name="PME_Trig1397" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fhxOwEr4EemAZaGjK5Aj8g" name="PME_Trig1398" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fhyc4Er4EemAZaGjK5Aj8g" name="PME_Trig1399" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fh05IEr4EemAZaGjK5Aj8g" name="PME_Trig1400" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fh5xoEr4EemAZaGjK5Aj8g" name="PME_Trig1401" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fh6_wEr4EemAZaGjK5Aj8g" name="PME_Trig1402" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fh7m0Er4EemAZaGjK5Aj8g" name="PME_Trig1403" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fh808Er4EemAZaGjK5Aj8g" name="PME_Trig1404" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fh-DEEr4EemAZaGjK5Aj8g" name="PME_Trig1405" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fiBtcEr4EemAZaGjK5Aj8g" name="PME_Trig1406" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fiEwwEr4EemAZaGjK5Aj8g" name="PME_Trig1407" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fiFX0Er4EemAZaGjK5Aj8g" name="PME_Trig1408" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fiGl8Er4EemAZaGjK5Aj8g" name="PME_Trig1409" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_fiJpQEr4EemAZaGjK5Aj8g" name="PME_Trig1410" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fiNToEr4EemAZaGjK5Aj8g" name="PME_Trig1411" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fiPI0Er4EemAZaGjK5Aj8g" name="PME_Trig1412" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fiQW8Er4EemAZaGjK5Aj8g" name="To__Debug__A__En__Failure__1413" guard="_fiwGMUr4EemAZaGjK5Aj8g" source="_fg1aoEr4EemAZaGjK5Aj8g" target="_s9g1QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fiwGMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1418">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fiwGMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1418">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Failure__1413&quot;,&quot;Debug__A__En__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fiQW8Ur4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__purgeotherMessage__1414" guard="_fivfIkr4EemAZaGjK5Aj8g" source="_fg1aoEr4EemAZaGjK5Aj8g" target="_s9fAEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fivfIkr4EemAZaGjK5Aj8g" name="PME_checkDecesion1417">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fivfIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1417">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__purgeotherMessage__1414&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fiQ-AEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1415" source="_fgzlcEr4EemAZaGjK5Aj8g" target="_fg1aoEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fiY50Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__1413&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1416&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fiRlEEr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1416" guard="_fiwtQUr4EemAZaGjK5Aj8g" source="_fg1aoEr4EemAZaGjK5Aj8g" target="_fg0MgEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_fiwtQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1419">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fiwtQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1419">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1416&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s9fAEErDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9fAEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;purgeotherMessage&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9oxEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage__302">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9g1QErDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9g1QUrDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9uQoErDEem2BZRQc2M93A" name="Debug__A__En__Failure__304">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fg1aoEr4EemAZaGjK5Aj8g" name="DecesionPoint__1365" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fg2BsEr4EemAZaGjK5Aj8g" name="Init__State__1366"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s97E8ErDEem2BZRQc2M93A" name="Debug__Path__initTimer" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s97sAUrDEem2BZRQc2M93A" name="Debug__C__initTimer">
              <connectionPoint xmi:id="_s986IUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s99hMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_feRO0Ur4EemAZaGjK5Aj8g" name="From__Parent__1280" kind="entryPoint"/>
              <connectionPoint xmi:id="_feSc8Er4EemAZaGjK5Aj8g" name="To__Parent__1282" kind="exitPoint"/>
              <region xmi:id="_s98TEErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s-RqQErDEem2BZRQc2M93A" name="Debug__init__trans__initTimer" source="_s986IUrDEem2BZRQc2M93A" target="_s-N_4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-d3gErDEem2BZRQc2M93A" name="Debug__init__trans__initTimer__332">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__init__trans__initTimer&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-RqQUrDEem2BZRQc2M93A" name="Debug__Ac__initTimer" source="_s-N_4ErDEem2BZRQc2M93A" target="_s-POAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-SRUErDEem2BZRQc2M93A" name="InitTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;    
//UMLRTTimespec ts;
    //ts.getclock(ts);
    //this->setTimePointSecond();
    logfile.open(this->getName());
    //if (logfile.is_open())
    //	logfile&lt;&lt;ts.tv_sec&lt;&lt;&quot;:&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.close();
    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(r,0),4);
   TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__Ac__initTimer&quot;,(char *)&quot;Debug__B__Ac__initTimer&quot;,(char *)&quot;Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-RqQkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-SRUUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_s-POAErDEem2BZRQc2M93A" target="_s-QcIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-S4YErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__initTimer&quot;,(char *)&quot;Debug__A__En__initTimer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-SRUkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-S4YUrDEem2BZRQc2M93A" name="Debug__end__trans__initTimer" source="_s-QcIErDEem2BZRQc2M93A" target="_s99hMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-jXEErDEem2BZRQc2M93A" name="Debug__end__trans__initTimer__336">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__end__trans__initTimer&quot;,(char *)&quot;Debug__A__En__initTimer&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-S4YkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_feaYwEr4EemAZaGjK5Aj8g" name="Trans__Init__State__12851286" source="_feYjkEr4EemAZaGjK5Aj8g" target="_feUSIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fgrCkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1285&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1355&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1285&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1352&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1285&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__1351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1285&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__1353&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1285&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fea_0Er4EemAZaGjK5Aj8g" name="Trans__ex1287" source="_s99hMUrDEem2BZRQc2M93A" target="_feUSIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fgp0cEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1355&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1352&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__1351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__1353&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fec1AEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__initTimer__1288" source="_s-N_4ErDEem2BZRQc2M93A" target="_feUSIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fgomUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1355&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1352&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__1351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__1353&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fehGcEr4EemAZaGjK5Aj8g" name="PME_Trig1289" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fel-8Er4EemAZaGjK5Aj8g" name="PME_Trig1290" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fenNEEr4EemAZaGjK5Aj8g" name="PME_Trig1291" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_feregEr4EemAZaGjK5Aj8g" name="PME_Trig1292" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_feuh0Er4EemAZaGjK5Aj8g" name="PME_Trig1293" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fevI4Er4EemAZaGjK5Aj8g" name="PME_Trig1294" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fewXAEr4EemAZaGjK5Aj8g" name="PME_Trig1295" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fexlIEr4EemAZaGjK5Aj8g" name="PME_Trig1296" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fe12kEr4EemAZaGjK5Aj8g" name="PME_Trig1297" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fe4S0Er4EemAZaGjK5Aj8g" name="PME_Trig1298" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fe454Er4EemAZaGjK5Aj8g" name="PME_Trig1299" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fe6IAEr4EemAZaGjK5Aj8g" name="PME_Trig1300" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fe6vEEr4EemAZaGjK5Aj8g" name="PME_Trig1301" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fe79MEr4EemAZaGjK5Aj8g" name="PME_Trig1302" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fe_nkEr4EemAZaGjK5Aj8g" name="PME_Trig1303" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ffDR8Er4EemAZaGjK5Aj8g" name="PME_Trig1304" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ffD5AEr4EemAZaGjK5Aj8g" name="PME_Trig1305" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ffFHIEr4EemAZaGjK5Aj8g" name="PME_Trig1306" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffFuMEr4EemAZaGjK5Aj8g" name="PME_Trig1307" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ffIKcEr4EemAZaGjK5Aj8g" name="PME_Trig1308" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ffMb4Er4EemAZaGjK5Aj8g" name="From__Debug__A__En__initTimer__1309" source="_s-QcIErDEem2BZRQc2M93A" target="_feUSIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fgh4oEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1355&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1352&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__1351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__1353&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ffNqAEr4EemAZaGjK5Aj8g" name="PME_Trig1310" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffPfMEr4EemAZaGjK5Aj8g" name="PME_Trig1311" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ffRUYEr4EemAZaGjK5Aj8g" name="PME_Trig1312" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffWM4Er4EemAZaGjK5Aj8g" name="PME_Trig1313" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ffWz8Er4EemAZaGjK5Aj8g" name="PME_Trig1314" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffYCEEr4EemAZaGjK5Aj8g" name="PME_Trig1315" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ffYpIEr4EemAZaGjK5Aj8g" name="PME_Trig1316" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ffZ3QEr4EemAZaGjK5Aj8g" name="PME_Trig1317" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffdhoEr4EemAZaGjK5Aj8g" name="PME_Trig1318" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ffhMAEr4EemAZaGjK5Aj8g" name="PME_Trig1319" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffiaIEr4EemAZaGjK5Aj8g" name="PME_Trig1320" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ffjBMEr4EemAZaGjK5Aj8g" name="PME_Trig1321" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_ffmEgEr4EemAZaGjK5Aj8g" name="PME_Trig1322" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffpu4Er4EemAZaGjK5Aj8g" name="PME_Trig1323" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ffq9AEr4EemAZaGjK5Aj8g" name="PME_Trig1324" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ffsLIEr4EemAZaGjK5Aj8g" name="PME_Trig1325" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ffsyMEr4EemAZaGjK5Aj8g" name="PME_Trig1326" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ffuAUEr4EemAZaGjK5Aj8g" name="PME_Trig1327" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ffwckEr4EemAZaGjK5Aj8g" name="PME_Trig1328" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ff0G8Er4EemAZaGjK5Aj8g" name="PME_Trig1329" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ff18IEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__initTimer__1330" source="_s-POAErDEem2BZRQc2M93A" target="_feUSIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fgmKEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1355&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1352&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__1351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__1353&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ff2jMEr4EemAZaGjK5Aj8g" name="PME_Trig1331" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ff3xUEr4EemAZaGjK5Aj8g" name="PME_Trig1332" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ff4YYEr4EemAZaGjK5Aj8g" name="PME_Trig1333" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ff60oEr4EemAZaGjK5Aj8g" name="PME_Trig1334" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ff_tIEr4EemAZaGjK5Aj8g" name="PME_Trig1335" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fgA7QEr4EemAZaGjK5Aj8g" name="PME_Trig1336" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fgBiUEr4EemAZaGjK5Aj8g" name="PME_Trig1337" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fgCwcEr4EemAZaGjK5Aj8g" name="PME_Trig1338" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fgFMsEr4EemAZaGjK5Aj8g" name="PME_Trig1339" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fgI3EEr4EemAZaGjK5Aj8g" name="PME_Trig1340" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fgKsQEr4EemAZaGjK5Aj8g" name="PME_Trig1341" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fgLTUEr4EemAZaGjK5Aj8g" name="PME_Trig1342" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fgMhcEr4EemAZaGjK5Aj8g" name="PME_Trig1343" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fgO9sEr4EemAZaGjK5Aj8g" name="PME_Trig1344" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fgSoEEr4EemAZaGjK5Aj8g" name="PME_Trig1345" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fgUdQEr4EemAZaGjK5Aj8g" name="PME_Trig1346" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fgVEUEr4EemAZaGjK5Aj8g" name="PME_Trig1347" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fgWScEr4EemAZaGjK5Aj8g" name="PME_Trig1348" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fgXgkEr4EemAZaGjK5Aj8g" name="PME_Trig1349" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fgZVwEr4EemAZaGjK5Aj8g" name="PME_Trig1350" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fge1UEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__initTimer__1351" guard="_fgyXUUr4EemAZaGjK5Aj8g" source="_feUSIEr4EemAZaGjK5Aj8g" target="_s-N_4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fgyXUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1358">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fgyXUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1358">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__initTimer__1351&quot;,&quot;Debug__B__Ac__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fge1UUr4EemAZaGjK5Aj8g" name="To__Debug__A__En__initTimer__1352" guard="_fgxJMUr4EemAZaGjK5Aj8g" source="_feUSIEr4EemAZaGjK5Aj8g" target="_s-QcIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fgxJMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1357">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fgxJMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1357">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__initTimer__1352&quot;,&quot;Debug__A__En__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fge1Ukr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__initTimer__1353" guard="_fgyXU0r4EemAZaGjK5Aj8g" source="_feUSIEr4EemAZaGjK5Aj8g" target="_s-POAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fgyXU0r4EemAZaGjK5Aj8g" name="PME_checkDecesion1359">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fgyXUkr4EemAZaGjK5Aj8g" name="PME_checkDecesion1359">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__initTimer__1353&quot;,&quot;Debug__A__Ac__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fggDcEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1354" source="_feRO0Ur4EemAZaGjK5Aj8g" target="_feUSIEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fgsQsEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1355&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1352&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__1351&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__1353&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fggDcUr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1355" guard="_fgus8Ur4EemAZaGjK5Aj8g" source="_feUSIEr4EemAZaGjK5Aj8g" target="_feSc8Er4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_fgus8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1356">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fgus8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1356">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1355&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s-N_4ErDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-N_4UrDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;initTimer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-UGgErDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer__328">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s-POAErDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-POAUrDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;initTimer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-XJ0ErDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer__329">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s-QcIErDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-QcIUrDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-bbQErDEem2BZRQc2M93A" name="Debug__A__En__initTimer__330">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_feUSIEr4EemAZaGjK5Aj8g" name="DecesionPoint__1284" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_feYjkEr4EemAZaGjK5Aj8g" name="Init__State__1285"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_-6cErDEem2BZRQc2M93A" name="Debug__Path__ActiveMode" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAAIkErDEem2BZRQc2M93A" name="Debug__C__ActiveMode">
              <connectionPoint xmi:id="_tAB9wErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_eVnksEr4EemAZaGjK5Aj8g" name="From__Parent__264" kind="entryPoint"/>
              <connectionPoint xmi:id="_eVuSYEr4EemAZaGjK5Aj8g" name="To__Parent__266" kind="exitPoint"/>
              <region xmi:id="_tAAIkUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tAU4sErDEem2BZRQc2M93A" name="Debug__Ac__ActiveMode" source="_tATDgErDEem2BZRQc2M93A" target="_tATqkErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tAU4sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tAU4skrDEem2BZRQc2M93A" name="Debug__end__trans__ActiveMode" source="_tATqkErDEem2BZRQc2M93A" target="_tAB9wErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tAU4s0rDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_eV6foEr4EemAZaGjK5Aj8g" name="Trans__ex270" source="_tAB9wErDEem2BZRQc2M93A" target="_eVwHkEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eaSpUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eV8U0Er4EemAZaGjK5Aj8g" name="Trans__Init__State__269271" source="_eVzK4Er4EemAZaGjK5Aj8g" target="_eVwHkEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eaZXAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__269&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__269&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__269&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__269&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eWFewEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__ActiveMode__272" source="_tATDgErDEem2BZRQc2M93A" target="_eVwHkEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eaNw0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eWIiEEr4EemAZaGjK5Aj8g" name="PME_Trig273" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eWP20Er4EemAZaGjK5Aj8g" name="PME_Trig274" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eWV9cEr4EemAZaGjK5Aj8g" name="PME_Trig275" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eWdSMEr4EemAZaGjK5Aj8g" name="PME_Trig276" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eWfucEr4EemAZaGjK5Aj8g" name="PME_Trig277" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eWnDMEr4EemAZaGjK5Aj8g" name="PME_Trig278" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eWpfcEr4EemAZaGjK5Aj8g" name="PME_Trig279" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eWxbQEr4EemAZaGjK5Aj8g" name="PME_Trig280" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eW1FoEr4EemAZaGjK5Aj8g" name="PME_Trig281" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eW8aYEr4EemAZaGjK5Aj8g" name="PME_Trig282" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eXDIEEr4EemAZaGjK5Aj8g" name="PME_Trig283" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eXGycEr4EemAZaGjK5Aj8g" name="PME_Trig284" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eXNgIEr4EemAZaGjK5Aj8g" name="PME_Trig285" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eXRxkEr4EemAZaGjK5Aj8g" name="PME_Trig286" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eXaUcEr4EemAZaGjK5Aj8g" name="PME_Trig287" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eXdXwEr4EemAZaGjK5Aj8g" name="PME_Trig288" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eXjeYEr4EemAZaGjK5Aj8g" name="PME_Trig289" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eXqzIEr4EemAZaGjK5Aj8g" name="PME_Trig290" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eXvroEr4EemAZaGjK5Aj8g" name="PME_Trig291" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eX2ZUEr4EemAZaGjK5Aj8g" name="PME_Trig292" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eX5coEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__ActiveMode__293" source="_tATqkErDEem2BZRQc2M93A" target="_eVwHkEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eZ-gQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eX-VIEr4EemAZaGjK5Aj8g" name="PME_Trig294" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eYB_gEr4EemAZaGjK5Aj8g" name="PME_Trig295" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eYIGIEr4EemAZaGjK5Aj8g" name="PME_Trig296" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eYJ7UEr4EemAZaGjK5Aj8g" name="PME_Trig297" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eYNlsEr4EemAZaGjK5Aj8g" name="PME_Trig298" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eYR3IEr4EemAZaGjK5Aj8g" name="PME_Trig299" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eYX9wEr4EemAZaGjK5Aj8g" name="PME_Trig300" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eYcPMEr4EemAZaGjK5Aj8g" name="PME_Trig301" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eYhuwEr4EemAZaGjK5Aj8g" name="PME_Trig302" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eYjj8Er4EemAZaGjK5Aj8g" name="PME_Trig303" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eYrfwEr4EemAZaGjK5Aj8g" name="PME_Trig304" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eYvKIEr4EemAZaGjK5Aj8g" name="PME_Trig305" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eYzbkEr4EemAZaGjK5Aj8g" name="PME_Trig306" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eY3tAEr4EemAZaGjK5Aj8g" name="PME_Trig307" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eY9MkEr4EemAZaGjK5Aj8g" name="PME_Trig308" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eY_o0Er4EemAZaGjK5Aj8g" name="PME_Trig309" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eZD6QEr4EemAZaGjK5Aj8g" name="PME_Trig310" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eZKA4Er4EemAZaGjK5Aj8g" name="PME_Trig311" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eZL2EEr4EemAZaGjK5Aj8g" name="PME_Trig312" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eZvPsEr4EemAZaGjK5Aj8g" name="PME_Trig313" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eZy6EEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__ActiveMode__314" guard="_eabMMUr4EemAZaGjK5Aj8g" source="_eVwHkEr4EemAZaGjK5Aj8g" target="_tATDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eabMMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion318">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eabMMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion318">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ActiveMode__314&quot;,&quot;Debug__B__Ac__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eZzhIEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__ActiveMode__315" guard="_eabzQUr4EemAZaGjK5Aj8g" source="_eVwHkEr4EemAZaGjK5Aj8g" target="_tATqkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eabzQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion319">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eabzQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion319">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ActiveMode__315&quot;,&quot;Debug__A__Ac__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eZ5nwEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__316" source="_eVnksEr4EemAZaGjK5Aj8g" target="_eVwHkEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eaF1AEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__A__Ac__ActiveMode&quot;,&quot;To__Debug__A__Ac__ActiveMode__315&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eZ5nwUr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__317" guard="_eacaUUr4EemAZaGjK5Aj8g" source="_eVwHkEr4EemAZaGjK5Aj8g" target="_eVuSYEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_eacaUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion320">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eacaUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion320">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__317&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tATDgErDEem2BZRQc2M93A" name="Debug__B__Ac__ActiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tATDgUrDEem2BZRQc2M93A" name="Debug__B__Ac__ActiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ActiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tATqkErDEem2BZRQc2M93A" name="Debug__A__Ac__ActiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tATqkUrDEem2BZRQc2M93A" name="Debug__A__Ac__ActiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ActiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eVwHkEr4EemAZaGjK5Aj8g" name="DecesionPoint__268" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eVzK4Er4EemAZaGjK5Aj8g" name="Init__State__269"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tAaYQErDEem2BZRQc2M93A" name="Debug__Path__Recover" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAa_UUrDEem2BZRQc2M93A" name="Debug__C__Recover">
              <connectionPoint xmi:id="_tAbmYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tAc0gUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_fi2z4Er4EemAZaGjK5Aj8g" name="From__Parent__1421" kind="entryPoint"/>
              <connectionPoint xmi:id="_fi4CAEr4EemAZaGjK5Aj8g" name="To__Parent__1423" kind="exitPoint"/>
              <region xmi:id="_tAa_UkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tAw9kErDEem2BZRQc2M93A" name="Debug__init__trans__Recover" source="_tAbmYUrDEem2BZRQc2M93A" target="_tAt6QErDEem2BZRQc2M93A"/>
                <transition xmi:id="_tAw9kUrDEem2BZRQc2M93A" name="Debug__Ex__Failure" source="_tAt6QErDEem2BZRQc2M93A" target="_tAuhUErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tA78sErDEem2BZRQc2M93A" name="Debug__Ex__Failure__417">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__Ex__Failure&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;Debug__B__Ac__Recover&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAw9kkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tAxkoErDEem2BZRQc2M93A" name="Debug__AC__Recover" source="_tAuhUErDEem2BZRQc2M93A" target="_tAvvcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAxkokrDEem2BZRQc2M93A" name="Recover" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: is recovering\n&quot;;
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__AC__Recover&quot;,(char *)&quot;Debug__B__Ac__Recover&quot;,(char *)&quot;Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAxkoUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tAxko0rDEem2BZRQc2M93A" name="Debug__end__trans__Recover" source="_tAvvcErDEem2BZRQc2M93A" target="_tAc0gUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tA_AAErDEem2BZRQc2M93A" name="Debug__end__trans__Recover__420">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__end__trans__Recover&quot;,(char *)&quot;Debug__A__Ac__Recover&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAxkpErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_fi-IoEr4EemAZaGjK5Aj8g" name="Trans__Init__State__14261427" source="_fi53MEr4EemAZaGjK5Aj8g" target="_fi4pEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_flMWMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1426&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1426&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__1493&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1426&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1492&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1426&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1494&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1426&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fi_WwEr4EemAZaGjK5Aj8g" name="Trans__ex1428" source="_tAc0gUrDEem2BZRQc2M93A" target="_fi4pEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_flVgIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__1493&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1492&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1494&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fjCaEEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__Recover__1429" source="_tAvvcErDEem2BZRQc2M93A" target="_fi4pEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fla_sEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__1493&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1492&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1494&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fjDBIEr4EemAZaGjK5Aj8g" name="PME_Trig1430" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fjEPQEr4EemAZaGjK5Aj8g" name="PME_Trig1431" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fjJHwEr4EemAZaGjK5Aj8g" name="PME_Trig1432" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fjMLEEr4EemAZaGjK5Aj8g" name="PME_Trig1433" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fjNZMEr4EemAZaGjK5Aj8g" name="PME_Trig1434" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fjOnUEr4EemAZaGjK5Aj8g" name="PME_Trig1435" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fjUt8Er4EemAZaGjK5Aj8g" name="PME_Trig1436" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fjWjIEr4EemAZaGjK5Aj8g" name="PME_Trig1437" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fjY_YEr4EemAZaGjK5Aj8g" name="PME_Trig1438" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fjfGAEr4EemAZaGjK5Aj8g" name="PME_Trig1439" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fjftEEr4EemAZaGjK5Aj8g" name="PME_Trig1440" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fjg7MEr4EemAZaGjK5Aj8g" name="PME_Trig1441" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fjiJUEr4EemAZaGjK5Aj8g" name="PME_Trig1442" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fjiwYEr4EemAZaGjK5Aj8g" name="PME_Trig1443" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fjo3AEr4EemAZaGjK5Aj8g" name="PME_Trig1444" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fjpeEEr4EemAZaGjK5Aj8g" name="PME_Trig1445" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fjqsMEr4EemAZaGjK5Aj8g" name="PME_Trig1446" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fjrTQEr4EemAZaGjK5Aj8g" name="PME_Trig1447" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fjshYEr4EemAZaGjK5Aj8g" name="PME_Trig1448" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fju9oEr4EemAZaGjK5Aj8g" name="PME_Trig1449" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fjz2IEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__Recover__1450" source="_tAuhUErDEem2BZRQc2M93A" target="_fi4pEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_flQnoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__1493&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1492&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1494&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fj0dMEr4EemAZaGjK5Aj8g" name="PME_Trig1451" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fj1EQEr4EemAZaGjK5Aj8g" name="PME_Trig1452" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fj2SYEr4EemAZaGjK5Aj8g" name="PME_Trig1453" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fj3ggEr4EemAZaGjK5Aj8g" name="PME_Trig1454" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fj7x8Er4EemAZaGjK5Aj8g" name="PME_Trig1455" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkADYEr4EemAZaGjK5Aj8g" name="PME_Trig1456" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fkBRgEr4EemAZaGjK5Aj8g" name="PME_Trig1457" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fkDGsEr4EemAZaGjK5Aj8g" name="PME_Trig1458" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkGxEEr4EemAZaGjK5Aj8g" name="PME_Trig1459" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fkImQEr4EemAZaGjK5Aj8g" name="PME_Trig1460" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkJ0YEr4EemAZaGjK5Aj8g" name="PME_Trig1461" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fkLCgEr4EemAZaGjK5Aj8g" name="PME_Trig1462" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fkM3sEr4EemAZaGjK5Aj8g" name="PME_Trig1463" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkP7AEr4EemAZaGjK5Aj8g" name="PME_Trig1464" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fkSXQEr4EemAZaGjK5Aj8g" name="PME_Trig1465" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fkTlYEr4EemAZaGjK5Aj8g" name="PME_Trig1466" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fkUMcEr4EemAZaGjK5Aj8g" name="PME_Trig1467" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fkVakEr4EemAZaGjK5Aj8g" name="PME_Trig1468" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkX20Er4EemAZaGjK5Aj8g" name="PME_Trig1469" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fkcIQEr4EemAZaGjK5Aj8g" name="PME_Trig1470" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fkdWYEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__Failure__1471" source="_tAt6QErDEem2BZRQc2M93A" target="_fi4pEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_flR1wEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__1493&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1492&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1494&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fkd9cEr4EemAZaGjK5Aj8g" name="PME_Trig1472" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkfLkEr4EemAZaGjK5Aj8g" name="PME_Trig1473" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fkfyoEr4EemAZaGjK5Aj8g" name="PME_Trig1474" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkkEEEr4EemAZaGjK5Aj8g" name="PME_Trig1475" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fknHYEr4EemAZaGjK5Aj8g" name="PME_Trig1476" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkoVgEr4EemAZaGjK5Aj8g" name="PME_Trig1477" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fko8kEr4EemAZaGjK5Aj8g" name="PME_Trig1478" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fkqKsEr4EemAZaGjK5Aj8g" name="PME_Trig1479" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkt1EEr4EemAZaGjK5Aj8g" name="PME_Trig1480" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fkw4YEr4EemAZaGjK5Aj8g" name="PME_Trig1481" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fkyGgEr4EemAZaGjK5Aj8g" name="PME_Trig1482" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fkytkEr4EemAZaGjK5Aj8g" name="PME_Trig1483" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fkz7sEr4EemAZaGjK5Aj8g" name="PME_Trig1484" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fk2_AEr4EemAZaGjK5Aj8g" name="PME_Trig1485" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fk6pYEr4EemAZaGjK5Aj8g" name="PME_Trig1486" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fk73gEr4EemAZaGjK5Aj8g" name="PME_Trig1487" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fk8ekEr4EemAZaGjK5Aj8g" name="PME_Trig1488" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fk9ssEr4EemAZaGjK5Aj8g" name="PME_Trig1489" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_flAI8Er4EemAZaGjK5Aj8g" name="PME_Trig1490" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_flFogEr4EemAZaGjK5Aj8g" name="PME_Trig1491" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_flG2oEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__Recover__1492" guard="_flc04Ur4EemAZaGjK5Aj8g" source="_fi4pEEr4EemAZaGjK5Aj8g" target="_tAvvcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_flc04Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1499">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_flc04Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1499">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Recover__1492&quot;,&quot;Debug__A__Ac__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_flG2oUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__Recover__1493" guard="_flcN0Ur4EemAZaGjK5Aj8g" source="_fi4pEEr4EemAZaGjK5Aj8g" target="_tAuhUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_flcN0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1498">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_flcN0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1498">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Recover__1493&quot;,&quot;Debug__B__Ac__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_flHdsEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__Failure__1494" guard="_flc040r4EemAZaGjK5Aj8g" source="_fi4pEEr4EemAZaGjK5Aj8g" target="_tAt6QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_flc040r4EemAZaGjK5Aj8g" name="PME_checkDecesion1500">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_flc04kr4EemAZaGjK5Aj8g" name="PME_checkDecesion1500">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__1494&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_flIEwEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1495" source="_fi2z4Er4EemAZaGjK5Aj8g" target="_fi4pEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_flPZgEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ac__Recover&quot;,&quot;To__Debug__B__Ac__Recover__1493&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1492&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1494&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_flIr0Er4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1496" guard="_flbmwUr4EemAZaGjK5Aj8g" source="_fi4pEEr4EemAZaGjK5Aj8g" target="_fi4CAEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_flbmwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1497">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_flbmwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1497">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1496&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tAt6QErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAt6QUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tAyywUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__413">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tAuhUErDEem2BZRQc2M93A" name="Debug__B__Ac__Recover">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAuhUUrDEem2BZRQc2M93A" name="Debug__B__Ac__Recover">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Recover&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tA12EErDEem2BZRQc2M93A" name="Debug__B__Ac__Recover__414">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tAvvcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAwWgErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Recover&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tA5gcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover__415">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fi4pEEr4EemAZaGjK5Aj8g" name="DecesionPoint__1425" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fi53MEr4EemAZaGjK5Aj8g" name="Init__State__1426"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tBFGoUrDEem2BZRQc2M93A" name="Debug__C__BeingMaster">
              <connectionPoint xmi:id="_tBG70ErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tBIJ8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_egyS4Er4EemAZaGjK5Aj8g" name="From__Parent__426" kind="entryPoint"/>
              <connectionPoint xmi:id="_eg0IEEr4EemAZaGjK5Aj8g" name="To__Parent__428" kind="exitPoint"/>
              <region xmi:id="_tBFGokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tBYooErDEem2BZRQc2M93A" name="Debug__init__trans__BeingMaster" source="_tBG70ErDEem2BZRQc2M93A" target="_tBVlUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBiZoErDEem2BZRQc2M93A" name="Debug__init__trans__BeingMaster__438">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__init__trans__BeingMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tBYooUrDEem2BZRQc2M93A" name="Debug__Ac__BeingMaster" source="_tBVlUUrDEem2BZRQc2M93A" target="_tBWzcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBZPsUrDEem2BZRQc2M93A" name="BeMaster" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(360000);
    TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__Ac__BeingMaster&quot;,(char *)&quot;Debug__B__Ac__BeingMaster&quot;,(char *)&quot;Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBZPsErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBZPskrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tBWzcErDEem2BZRQc2M93A" target="_tBYBkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBZ2wErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__BeingMaster&quot;,(char *)&quot;Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBZPs0rDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBZ2wUrDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster" source="_tBYBkErDEem2BZRQc2M93A" target="_tBIJ8UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBmrEErDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster__442">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__end__trans__BeingMaster&quot;,(char *)&quot;Debug__A__En__BeingMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBad0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ehEmwEr4EemAZaGjK5Aj8g" name="Trans__Init__State__431432" source="_eg_uQEr4EemAZaGjK5Aj8g" target="_eg5noEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_elHZQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__431&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__497&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__431&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__431&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__498&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__431&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__501&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__431&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ehFN0Er4EemAZaGjK5Aj8g" name="Trans__ex433" source="_tBIJ8UrDEem2BZRQc2M93A" target="_eg5noEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_elQjMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__497&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__498&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__501&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ehQM8Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__BeingMaster__434" source="_tBWzcErDEem2BZRQc2M93A" target="_eg5noEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_elB5sEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__497&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__498&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__501&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ehRbEEr4EemAZaGjK5Aj8g" name="PME_Trig435" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ehSpMEr4EemAZaGjK5Aj8g" name="PME_Trig436" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ehT3UEr4EemAZaGjK5Aj8g" name="PME_Trig437" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ehcaMEr4EemAZaGjK5Aj8g" name="PME_Trig438" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ehig0Er4EemAZaGjK5Aj8g" name="PME_Trig439" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ehmLMEr4EemAZaGjK5Aj8g" name="PME_Trig440" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ehsR0Er4EemAZaGjK5Aj8g" name="PME_Trig441" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ehuuEEr4EemAZaGjK5Aj8g" name="PME_Trig442" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ehzmkEr4EemAZaGjK5Aj8g" name="PME_Trig443" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eh2p4Er4EemAZaGjK5Aj8g" name="PME_Trig444" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eh67UEr4EemAZaGjK5Aj8g" name="PME_Trig445" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eiAa4Er4EemAZaGjK5Aj8g" name="PME_Trig446" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eiC3IEr4EemAZaGjK5Aj8g" name="PME_Trig447" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eiGhgEr4EemAZaGjK5Aj8g" name="PME_Trig448" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eiKL4Er4EemAZaGjK5Aj8g" name="PME_Trig449" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eiLaAEr4EemAZaGjK5Aj8g" name="PME_Trig450" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eiOdUEr4EemAZaGjK5Aj8g" name="PME_Trig451" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eiSuwEr4EemAZaGjK5Aj8g" name="PME_Trig452" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eiVLAEr4EemAZaGjK5Aj8g" name="PME_Trig453" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eiY1YEr4EemAZaGjK5Aj8g" name="PME_Trig454" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eieU8Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__BeingMaster__455" source="_tBVlUUrDEem2BZRQc2M93A" target="_eg5noEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_elFkEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__497&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__498&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__501&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eigKIEr4EemAZaGjK5Aj8g" name="PME_Trig456" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eikbkEr4EemAZaGjK5Aj8g" name="PME_Trig457" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eipUEEr4EemAZaGjK5Aj8g" name="PME_Trig458" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eiqiMEr4EemAZaGjK5Aj8g" name="PME_Trig459" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eiwBwEr4EemAZaGjK5Aj8g" name="PME_Trig460" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ei0TMEr4EemAZaGjK5Aj8g" name="PME_Trig461" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ei3WgEr4EemAZaGjK5Aj8g" name="PME_Trig462" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ei82EEr4EemAZaGjK5Aj8g" name="PME_Trig463" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ei-rQEr4EemAZaGjK5Aj8g" name="PME_Trig464" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ejBukEr4EemAZaGjK5Aj8g" name="PME_Trig465" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ejH1MEr4EemAZaGjK5Aj8g" name="PME_Trig466" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ejK4gEr4EemAZaGjK5Aj8g" name="PME_Trig467" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_ejN70Er4EemAZaGjK5Aj8g" name="PME_Trig468" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ejSNQEr4EemAZaGjK5Aj8g" name="PME_Trig469" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ejUpgEr4EemAZaGjK5Aj8g" name="PME_Trig470" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ejbXMEr4EemAZaGjK5Aj8g" name="PME_Trig471" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ejclUEr4EemAZaGjK5Aj8g" name="PME_Trig472" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ejgPsEr4EemAZaGjK5Aj8g" name="PME_Trig473" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ejmWUEr4EemAZaGjK5Aj8g" name="PME_Trig474" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ejqAsEr4EemAZaGjK5Aj8g" name="PME_Trig475" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ejwuYEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__BeingMaster__476" source="_tBYBkErDEem2BZRQc2M93A" target="_eg5noEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ek7zEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__497&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__498&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__501&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ejx8gEr4EemAZaGjK5Aj8g" name="PME_Trig477" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ej0YwEr4EemAZaGjK5Aj8g" name="PME_Trig478" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ej54UEr4EemAZaGjK5Aj8g" name="PME_Trig479" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ej7tgEr4EemAZaGjK5Aj8g" name="PME_Trig480" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ej-w0Er4EemAZaGjK5Aj8g" name="PME_Trig481" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ekEQYEr4EemAZaGjK5Aj8g" name="PME_Trig482" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ekFegEr4EemAZaGjK5Aj8g" name="PME_Trig483" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ekIh0Er4EemAZaGjK5Aj8g" name="PME_Trig484" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ekMzQEr4EemAZaGjK5Aj8g" name="PME_Trig485" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ekPPgEr4EemAZaGjK5Aj8g" name="PME_Trig486" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ekSS0Er4EemAZaGjK5Aj8g" name="PME_Trig487" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ekXyYEr4EemAZaGjK5Aj8g" name="PME_Trig488" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_ekZnkEr4EemAZaGjK5Aj8g" name="PME_Trig489" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ekcD0Er4EemAZaGjK5Aj8g" name="PME_Trig490" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ekdR8Er4EemAZaGjK5Aj8g" name="PME_Trig491" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ekd5AEr4EemAZaGjK5Aj8g" name="PME_Trig492" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ekfHIEr4EemAZaGjK5Aj8g" name="PME_Trig493" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ekmb4Er4EemAZaGjK5Aj8g" name="PME_Trig494" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ekr7cEr4EemAZaGjK5Aj8g" name="PME_Trig495" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ektJkEr4EemAZaGjK5Aj8g" name="PME_Trig496" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ekwz8Er4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__BeingMaster__497" guard="_elRxUUr4EemAZaGjK5Aj8g" source="_eg5noEr4EemAZaGjK5Aj8g" target="_tBWzcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_elRxUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion502">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_elRxUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion502">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeingMaster__497&quot;,&quot;Debug__A__Ac__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ekxbAEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__BeingMaster__498" guard="_elWp0Ur4EemAZaGjK5Aj8g" source="_eg5noEr4EemAZaGjK5Aj8g" target="_tBVlUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_elWp0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion504">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_elWp0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion504">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BeingMaster__498&quot;,&quot;Debug__B__Ac__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ekyCEEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__BeingMaster__499" guard="_elWCwEr4EemAZaGjK5Aj8g" source="_eg5noEr4EemAZaGjK5Aj8g" target="_tBYBkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_elWCwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion503">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_elVbsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion503">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__BeingMaster__499&quot;,&quot;Debug__A__En__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ek4vwEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__500" source="_egyS4Er4EemAZaGjK5Aj8g" target="_eg5noEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_elOuAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__497&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__B__Ac__BeingMaster&quot;,&quot;To__Debug__B__Ac__BeingMaster__498&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__501&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ek594Er4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__501" guard="_elXQ4Ur4EemAZaGjK5Aj8g" source="_eg5noEr4EemAZaGjK5Aj8g" target="_eg0IEEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_elXQ4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion505">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_elXQ4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion505">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__501&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tBVlUUrDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBWMYErDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeingMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBbr8UrDEem2BZRQc2M93A" name="Debug__B__Ac__BeingMaster__434">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__B__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBWzcErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBWzcUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeingMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBfWUErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster__435">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBYBkErDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBYBkUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBhLgUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster__436">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eg5noEr4EemAZaGjK5Aj8g" name="DecesionPoint__430" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eg_uQEr4EemAZaGjK5Aj8g" name="Init__State__431"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tCdmsUrDEem2BZRQc2M93A" name="Debug__C__PassiveMode">
              <connectionPoint xmi:id="_tCe00UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tCgC8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_enVm0Er4EemAZaGjK5Aj8g" name="From__Parent__543" kind="entryPoint"/>
              <connectionPoint xmi:id="_enZ4QEr4EemAZaGjK5Aj8g" name="To__Parent__545" kind="exitPoint"/>
              <region xmi:id="_tCdmskrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tCyW0ErDEem2BZRQc2M93A" name="Debug__init__trans__PassiveMode" source="_tCe00UrDEem2BZRQc2M93A" target="_tCwhoUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tCyW0UrDEem2BZRQc2M93A" name="Debug__Ac__PassiveMode" source="_tCwhoUrDEem2BZRQc2M93A" target="_tCxIsErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tCyW0krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tCy94ErDEem2BZRQc2M93A" name="Debug__end__trans__PassiveMode" source="_tCxIsErDEem2BZRQc2M93A" target="_tCgC8UrDEem2BZRQc2M93A">
                  <trigger xmi:id="_tCy94UrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_enkQUEr4EemAZaGjK5Aj8g" name="Trans__Init__State__548549" source="_encUgEr4EemAZaGjK5Aj8g" target="_enbGYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eqclMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__548&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__594&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__548&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__593&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__548&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__596&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__548&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_enk3YEr4EemAZaGjK5Aj8g" name="Trans__ex550" source="_tCgC8UrDEem2BZRQc2M93A" target="_enbGYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eqm9QEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__594&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__593&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__596&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_enpI0Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__PassiveMode__551" source="_tCwhoUrDEem2BZRQc2M93A" target="_enbGYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eqgPkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__594&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__593&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__596&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_entaQEr4EemAZaGjK5Aj8g" name="PME_Trig552" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_enuoYEr4EemAZaGjK5Aj8g" name="PME_Trig553" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_en4ZYEr4EemAZaGjK5Aj8g" name="PME_Trig554" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_en_HEEr4EemAZaGjK5Aj8g" name="PME_Trig555" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eoD_kEr4EemAZaGjK5Aj8g" name="PME_Trig556" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eoGb0Er4EemAZaGjK5Aj8g" name="PME_Trig557" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eoJfIEr4EemAZaGjK5Aj8g" name="PME_Trig558" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eoNJgEr4EemAZaGjK5Aj8g" name="PME_Trig559" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eoOXoEr4EemAZaGjK5Aj8g" name="PME_Trig560" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eoSpEEr4EemAZaGjK5Aj8g" name="PME_Trig561" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eoXhkEr4EemAZaGjK5Aj8g" name="PME_Trig562" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eobL8Er4EemAZaGjK5Aj8g" name="PME_Trig563" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eodoMEr4EemAZaGjK5Aj8g" name="PME_Trig564" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eojHwEr4EemAZaGjK5Aj8g" name="PME_Trig565" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eomyIEr4EemAZaGjK5Aj8g" name="PME_Trig566" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eosRsEr4EemAZaGjK5Aj8g" name="PME_Trig567" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eovVAEr4EemAZaGjK5Aj8g" name="PME_Trig568" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eoyYUEr4EemAZaGjK5Aj8g" name="PME_Trig569" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eo3Q0Er4EemAZaGjK5Aj8g" name="PME_Trig570" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eo8wYEr4EemAZaGjK5Aj8g" name="PME_Trig571" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_epBo4Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__PassiveMode__572" source="_tCxIsErDEem2BZRQc2M93A" target="_enbGYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eqqAkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__594&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__593&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__596&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_epEFIEr4EemAZaGjK5Aj8g" name="PME_Trig573" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_epJksEr4EemAZaGjK5Aj8g" name="PME_Trig574" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_epKy0Er4EemAZaGjK5Aj8g" name="PME_Trig575" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_epMA8Er4EemAZaGjK5Aj8g" name="PME_Trig576" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_epTVsEr4EemAZaGjK5Aj8g" name="PME_Trig577" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_epVK4Er4EemAZaGjK5Aj8g" name="PME_Trig578" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_epY1QEr4EemAZaGjK5Aj8g" name="PME_Trig579" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_epeU0Er4EemAZaGjK5Aj8g" name="PME_Trig580" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_epgKAEr4EemAZaGjK5Aj8g" name="PME_Trig581" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_epimQEr4EemAZaGjK5Aj8g" name="PME_Trig582" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_epoF0Er4EemAZaGjK5Aj8g" name="PME_Trig583" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eppT8Er4EemAZaGjK5Aj8g" name="PME_Trig584" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eprwMEr4EemAZaGjK5Aj8g" name="PME_Trig585" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eptlYEr4EemAZaGjK5Aj8g" name="PME_Trig586" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_epyd4Er4EemAZaGjK5Aj8g" name="PME_Trig587" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ep0TEEr4EemAZaGjK5Aj8g" name="PME_Trig588" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ep39cEr4EemAZaGjK5Aj8g" name="PME_Trig589" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ep_SMEr4EemAZaGjK5Aj8g" name="PME_Trig590" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eqEKsEr4EemAZaGjK5Aj8g" name="PME_Trig591" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eqH1EEr4EemAZaGjK5Aj8g" name="PME_Trig592" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eqMGgEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__PassiveMode__593" guard="_equ5EEr4EemAZaGjK5Aj8g" source="_enbGYEr4EemAZaGjK5Aj8g" target="_tCwhoUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_equ5EEr4EemAZaGjK5Aj8g" name="PME_checkDecesion598">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_equSAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion598">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__PassiveMode__593&quot;,&quot;Debug__B__Ac__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eqMGgUr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__PassiveMode__594" guard="_eqrOsEr4EemAZaGjK5Aj8g" source="_enbGYEr4EemAZaGjK5Aj8g" target="_tCxIsErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eqrOsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion597">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eqqnoEr4EemAZaGjK5Aj8g" name="PME_checkDecesion597">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__PassiveMode__594&quot;,&quot;Debug__A__Ac__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eqS0MEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__595" source="_enVm0Er4EemAZaGjK5Aj8g" target="_enbGYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eqWekEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__A__Ac__PassiveMode&quot;,&quot;To__Debug__A__Ac__PassiveMode__594&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__593&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__596&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eqS0MUr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__596" guard="_eqxVUUr4EemAZaGjK5Aj8g" source="_enbGYEr4EemAZaGjK5Aj8g" target="_enZ4QEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_eqxVUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion599">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eqxVUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion599">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__596&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tCwhoUrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCwhokrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tCxIsErDEem2BZRQc2M93A" name="Debug__A__Ac__PassiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCxIsUrDEem2BZRQc2M93A" name="Debug__A__Ac__PassiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_enbGYEr4EemAZaGjK5Aj8g" name="DecesionPoint__547" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_encUgEr4EemAZaGjK5Aj8g" name="Init__State__548"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tC5EgErDEem2BZRQc2M93A" name="Debug__Path__Init__StandBy__3" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tC6SoUrDEem2BZRQc2M93A" name="Debug__C__Init__StandBy__3">
              <connectionPoint xmi:id="_tC7gwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_d8y1AEr4EemAZaGjK5Aj8g" name="From__Parent__102" kind="entryPoint"/>
              <connectionPoint xmi:id="_d86w0Er4EemAZaGjK5Aj8g" name="To__Parent__104" kind="exitPoint"/>
              <region xmi:id="_tC6SokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tDQ38ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3" source="_tC7gwErDEem2BZRQc2M93A" target="_tDN0oUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDZa0ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3__499">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__init__trans__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tDQ38UrDEem2BZRQc2M93A" name="Debug__Ac__Init__StandBy__3" source="_tDN0oUrDEem2BZRQc2M93A" target="_tDPCwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDRfAUrDEem2BZRQc2M93A" name="InitLog" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tDRfAErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_d9KBYEr4EemAZaGjK5Aj8g" name="Trans__Init__State__107108" source="_d9FI4Er4EemAZaGjK5Aj8g" target="_d89NEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eJHZwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__107&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__152&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__107&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__107&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__155&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__107&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_d9SkQEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__Init__StandBy__3__109" source="_tDN0oUrDEem2BZRQc2M93A" target="_d89NEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eJo-MEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__152&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__155&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_d9VnkEr4EemAZaGjK5Aj8g" name="PME_Trig110" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_d9YD0Er4EemAZaGjK5Aj8g" name="PME_Trig111" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_d9jC8Er4EemAZaGjK5Aj8g" name="PME_Trig112" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_d9qXsEr4EemAZaGjK5Aj8g" name="PME_Trig113" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_d9xFYEr4EemAZaGjK5Aj8g" name="PME_Trig114" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_d90vwEr4EemAZaGjK5Aj8g" name="PME_Trig115" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_d97dcEr4EemAZaGjK5Aj8g" name="PME_Trig116" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_d9_H0Er4EemAZaGjK5Aj8g" name="PME_Trig117" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_d-L8IEr4EemAZaGjK5Aj8g" name="PME_Trig118" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_d-NxUEr4EemAZaGjK5Aj8g" name="PME_Trig119" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_d-WUMEr4EemAZaGjK5Aj8g" name="PME_Trig120" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_d-YwcEr4EemAZaGjK5Aj8g" name="PME_Trig121" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_d-hTUEr4EemAZaGjK5Aj8g" name="PME_Trig122" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_d-lkwEr4EemAZaGjK5Aj8g" name="PME_Trig123" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_d-pPIEr4EemAZaGjK5Aj8g" name="PME_Trig124" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_d-znMEr4EemAZaGjK5Aj8g" name="PME_Trig125" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_d-2qgEr4EemAZaGjK5Aj8g" name="PME_Trig126" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_d_CQsEr4EemAZaGjK5Aj8g" name="PME_Trig127" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_d_VLoEr4EemAZaGjK5Aj8g" name="PME_Trig128" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_d_wCYEr4EemAZaGjK5Aj8g" name="PME_Trig129" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eAIc4Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__Init__StandBy__3__130" source="_tDPCwErDEem2BZRQc2M93A" target="_d89NEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eI9owEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__152&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__155&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eAaJsEr4EemAZaGjK5Aj8g" name="PME_Trig131" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eAzyUEr4EemAZaGjK5Aj8g" name="PME_Trig132" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eBP3MEr4EemAZaGjK5Aj8g" name="PME_Trig133" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eBrVAEr4EemAZaGjK5Aj8g" name="PME_Trig134" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eB_eEEr4EemAZaGjK5Aj8g" name="PME_Trig135" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eCRK4Er4EemAZaGjK5Aj8g" name="PME_Trig136" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eClT8Er4EemAZaGjK5Aj8g" name="PME_Trig137" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eC9ucEr4EemAZaGjK5Aj8g" name="PME_Trig138" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eDUTwEr4EemAZaGjK5Aj8g" name="PME_Trig139" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eDpq8Er4EemAZaGjK5Aj8g" name="PME_Trig140" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eED6oEr4EemAZaGjK5Aj8g" name="PME_Trig141" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eEbuEEr4EemAZaGjK5Aj8g" name="PME_Trig142" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eE_uwEr4EemAZaGjK5Aj8g" name="PME_Trig143" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eFSCoEr4EemAZaGjK5Aj8g" name="PME_Trig144" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eFon8Er4EemAZaGjK5Aj8g" name="PME_Trig145" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eF2DUEr4EemAZaGjK5Aj8g" name="PME_Trig146" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eGT9YEr4EemAZaGjK5Aj8g" name="PME_Trig147" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eGxQYEr4EemAZaGjK5Aj8g" name="PME_Trig148" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_eHMuMEr4EemAZaGjK5Aj8g" name="PME_Trig149" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eHnk8Er4EemAZaGjK5Aj8g" name="PME_Trig150" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eH-xUEr4EemAZaGjK5Aj8g" name="PME_Trig151" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eIdScEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__Init__StandBy__3__152" guard="_eJ7SEEr4EemAZaGjK5Aj8g" source="_d89NEEr4EemAZaGjK5Aj8g" target="_tDN0oUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eJ7SEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion156">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eJzWQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion156">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__StandBy__3__152&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eIiK8Er4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__Init__StandBy__3__153" guard="_eKEcAUr4EemAZaGjK5Aj8g" source="_d89NEEr4EemAZaGjK5Aj8g" target="_tDPCwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eKEcAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion157">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eKEcAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion157">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__StandBy__3__153&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_eI27EEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__154" source="_d8y1AEr4EemAZaGjK5Aj8g" target="_d89NEEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eJjeoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__152&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__153&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__155&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_eI4JMEr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__155" guard="_eKLwwUr4EemAZaGjK5Aj8g" source="_d89NEEr4EemAZaGjK5Aj8g" target="_d86w0Er4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_eKLwwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion158">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_eKLwwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion158">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__155&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tDN0oUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDObsErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDTUMUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3__495">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tDPCwErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDPCwUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDVJYUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3__496">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_d89NEEr4EemAZaGjK5Aj8g" name="DecesionPoint__106" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_d9FI4Er4EemAZaGjK5Aj8g" name="Init__State__107"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tEAe0ErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnounce" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tEBF4UrDEem2BZRQc2M93A" name="Debug__C__MasterAnnounce">
              <connectionPoint xmi:id="_tECUAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tEC7EUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_eaig8Er4EemAZaGjK5Aj8g" name="From__Parent__322" kind="entryPoint"/>
              <connectionPoint xmi:id="_eamLUEr4EemAZaGjK5Aj8g" name="To__Parent__324" kind="exitPoint"/>
              <region xmi:id="_tEBs8ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tEUn4ErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnounce" source="_tECUAUrDEem2BZRQc2M93A" target="_tEQWcUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEg1IErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnounce__537">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__init__trans__MasterAnnounce&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tEUn4UrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tEQWcUrDEem2BZRQc2M93A" target="_tERkkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEVO8ErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEUn4krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEVO8UrDEem2BZRQc2M93A" name="Debug__AC__MasterAnnounce" source="_tERkkErDEem2BZRQc2M93A" target="_tESysErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEV2AErDEem2BZRQc2M93A" name="MasterAnnounce" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;&quot;keepAliveStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__AC__MasterAnnounce&quot;,(char *)&quot;Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEVO8krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEV2AUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tESysErDEem2BZRQc2M93A" target="_tEUA0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEWdEErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEV2AkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tEWdEUrDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnounce" source="_tEUA0ErDEem2BZRQc2M93A" target="_tEC7EUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEmUsErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnounce__542">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__end__trans__MasterAnnounce&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEWdEkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ea1b4Er4EemAZaGjK5Aj8g" name="Trans__ex328" source="_tEC7EUrDEem2BZRQc2M93A" target="_eanZcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_egVm8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__419&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ea2C8Er4EemAZaGjK5Aj8g" name="Trans__Init__State__327329" source="_eap1sEr4EemAZaGjK5Aj8g" target="_eanZcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_egIyoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__327&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__327&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__419&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__327&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__327&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__327&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__327&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ebCQMEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__RunAsMaster__330" source="_tEUA0ErDEem2BZRQc2M93A" target="_eanZcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_egbtkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__419&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ebFTgEr4EemAZaGjK5Aj8g" name="PME_Trig331" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ebMBMEr4EemAZaGjK5Aj8g" name="PME_Trig332" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ebQ5sEr4EemAZaGjK5Aj8g" name="PME_Trig333" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ebXAUEr4EemAZaGjK5Aj8g" name="PME_Trig334" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ebb40Er4EemAZaGjK5Aj8g" name="PME_Trig335" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ebfjMEr4EemAZaGjK5Aj8g" name="PME_Trig336" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ebh_cEr4EemAZaGjK5Aj8g" name="PME_Trig337" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ebj0oEr4EemAZaGjK5Aj8g" name="PME_Trig338" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eblp0Er4EemAZaGjK5Aj8g" name="PME_Trig339" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ebs-kEr4EemAZaGjK5Aj8g" name="PME_Trig340" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ebuzwEr4EemAZaGjK5Aj8g" name="PME_Trig341" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eb2IgEr4EemAZaGjK5Aj8g" name="PME_Trig342" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eb39sEr4EemAZaGjK5Aj8g" name="PME_Trig343" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eb-EUEr4EemAZaGjK5Aj8g" name="PME_Trig344" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ecBHoEr4EemAZaGjK5Aj8g" name="PME_Trig345" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ecC80Er4EemAZaGjK5Aj8g" name="PME_Trig346" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ecHOQEr4EemAZaGjK5Aj8g" name="PME_Trig347" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ecLfsEr4EemAZaGjK5Aj8g" name="PME_Trig348" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ecRmUEr4EemAZaGjK5Aj8g" name="PME_Trig349" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ecTbgEr4EemAZaGjK5Aj8g" name="PME_Trig350" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ecYUAEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__MasterAnnounce__351" source="_tERkkErDEem2BZRQc2M93A" target="_eanZcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_egLO4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__419&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ecclcEr4EemAZaGjK5Aj8g" name="PME_Trig352" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ecgP0Er4EemAZaGjK5Aj8g" name="PME_Trig353" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eciFAEr4EemAZaGjK5Aj8g" name="PME_Trig354" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ecqA0Er4EemAZaGjK5Aj8g" name="PME_Trig355" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ecvgYEr4EemAZaGjK5Aj8g" name="PME_Trig356" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ecxVkEr4EemAZaGjK5Aj8g" name="PME_Trig357" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ec0_8Er4EemAZaGjK5Aj8g" name="PME_Trig358" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ec7GkEr4EemAZaGjK5Aj8g" name="PME_Trig359" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ec-w8Er4EemAZaGjK5Aj8g" name="PME_Trig360" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_ec__EEr4EemAZaGjK5Aj8g" name="PME_Trig361" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_edGFsEr4EemAZaGjK5Aj8g" name="PME_Trig362" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_edIh8Er4EemAZaGjK5Aj8g" name="PME_Trig363" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_edJwEEr4EemAZaGjK5Aj8g" name="PME_Trig364" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_edOokEr4EemAZaGjK5Aj8g" name="PME_Trig365" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_edQdwEr4EemAZaGjK5Aj8g" name="PME_Trig366" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_edS6AEr4EemAZaGjK5Aj8g" name="PME_Trig367" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_edVWQEr4EemAZaGjK5Aj8g" name="PME_Trig368" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eddSEEr4EemAZaGjK5Aj8g" name="PME_Trig369" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_edjYsEr4EemAZaGjK5Aj8g" name="PME_Trig370" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_edr7kEr4EemAZaGjK5Aj8g" name="PME_Trig371" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_eduX0Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__MasterAnnounce__372" source="_tESysErDEem2BZRQc2M93A" target="_eanZcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_egmFoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__419&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_edw0EEr4EemAZaGjK5Aj8g" name="PME_Trig373" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_edypQEr4EemAZaGjK5Aj8g" name="PME_Trig374" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ed4v4Er4EemAZaGjK5Aj8g" name="PME_Trig375" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ed8aQEr4EemAZaGjK5Aj8g" name="PME_Trig376" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eeEWEEr4EemAZaGjK5Aj8g" name="PME_Trig377" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eeLDwEr4EemAZaGjK5Aj8g" name="PME_Trig378" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_eeNgAEr4EemAZaGjK5Aj8g" name="PME_Trig379" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eeP8QEr4EemAZaGjK5Aj8g" name="PME_Trig380" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eeRKYEr4EemAZaGjK5Aj8g" name="PME_Trig381" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_eeWp8Er4EemAZaGjK5Aj8g" name="PME_Trig382" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eeaUUEr4EemAZaGjK5Aj8g" name="PME_Trig383" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eed-sEr4EemAZaGjK5Aj8g" name="PME_Trig384" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_eehCAEr4EemAZaGjK5Aj8g" name="PME_Trig385" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eekFUEr4EemAZaGjK5Aj8g" name="PME_Trig386" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_eelTcEr4EemAZaGjK5Aj8g" name="PME_Trig387" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eeqL8Er4EemAZaGjK5Aj8g" name="PME_Trig388" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_eesoMEr4EemAZaGjK5Aj8g" name="PME_Trig389" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_eeudYEr4EemAZaGjK5Aj8g" name="PME_Trig390" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_eevrgEr4EemAZaGjK5Aj8g" name="PME_Trig391" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_eez88Er4EemAZaGjK5Aj8g" name="PME_Trig392" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ee1yIEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__RunAsMaster__393" source="_tEQWcUrDEem2BZRQc2M93A" target="_eanZcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_egRVgEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__419&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ee41cEr4EemAZaGjK5Aj8g" name="PME_Trig394" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ee9G4Er4EemAZaGjK5Aj8g" name="PME_Trig395" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_efB_YEr4EemAZaGjK5Aj8g" name="PME_Trig396" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_efItEEr4EemAZaGjK5Aj8g" name="PME_Trig397" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_efKiQEr4EemAZaGjK5Aj8g" name="PME_Trig398" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_efM-gEr4EemAZaGjK5Aj8g" name="PME_Trig399" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_efOMoEr4EemAZaGjK5Aj8g" name="PME_Trig400" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_efQB0Er4EemAZaGjK5Aj8g" name="PME_Trig401" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_efU6UEr4EemAZaGjK5Aj8g" name="PME_Trig402" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_efX9oEr4EemAZaGjK5Aj8g" name="PME_Trig403" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_efc2IEr4EemAZaGjK5Aj8g" name="PME_Trig404" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_eferUEr4EemAZaGjK5Aj8g" name="PME_Trig405" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_efhHkEr4EemAZaGjK5Aj8g" name="PME_Trig406" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_efiVsEr4EemAZaGjK5Aj8g" name="PME_Trig407" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_efnOMEr4EemAZaGjK5Aj8g" name="PME_Trig408" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_efpDYEr4EemAZaGjK5Aj8g" name="PME_Trig409" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_efrfoEr4EemAZaGjK5Aj8g" name="PME_Trig410" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_efstwEr4EemAZaGjK5Aj8g" name="PME_Trig411" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_efui8Er4EemAZaGjK5Aj8g" name="PME_Trig412" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ef13sEr4EemAZaGjK5Aj8g" name="PME_Trig413" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ef9McEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__RunAsMaster__414" guard="_egn60Ur4EemAZaGjK5Aj8g" source="_eanZcEr4EemAZaGjK5Aj8g" target="_tEUA0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_egn60Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion420">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_egn60Er4EemAZaGjK5Aj8g" name="PME_checkDecesion420">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__414&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ef9zgEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__MasterAnnounce__415" guard="_eguBcEr4EemAZaGjK5Aj8g" source="_eanZcEr4EemAZaGjK5Aj8g" target="_tERkkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_eguBcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion423">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_egtaYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion423">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ef_BoEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__MasterAnnounce__416" guard="_egqXEUr4EemAZaGjK5Aj8g" source="_eanZcEr4EemAZaGjK5Aj8g" target="_tESysErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_egqXEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion422">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_egqXEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion422">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ef_osEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__RunAsMaster__417" guard="_egvPkUr4EemAZaGjK5Aj8g" source="_eanZcEr4EemAZaGjK5Aj8g" target="_tEQWcUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_egvPkUr4EemAZaGjK5Aj8g" name="PME_checkDecesion424">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_egvPkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion424">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_egBd4Er4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__418" source="_eaig8Er4EemAZaGjK5Aj8g" target="_eanZcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_egh0MEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__414&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__419&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__416&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ac__MasterAnnounce&quot;,&quot;To__Debug__B__Ac__MasterAnnounce__415&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__417&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_egCsAEr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__419" guard="_egpI8Ur4EemAZaGjK5Aj8g" source="_eanZcEr4EemAZaGjK5Aj8g" target="_eamLUEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_egpI8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion421">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_egpI8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion421">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__419&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tEQWcUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEQWckrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEXrMErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__532">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tERkkErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tERkkUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnounce&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEaHcUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnounce__533">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tESysErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tESysUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnounce&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEcjsErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce__534">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tEUA0ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEUA0UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEeY4ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__535">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eanZcEr4EemAZaGjK5Aj8g" name="DecesionPoint__326" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_eap1sEr4EemAZaGjK5Aj8g" name="Init__State__327"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tEp_EErDEem2BZRQc2M93A" name="Debug__Path__ExitPoint1__BeMaster__4" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tEqmIUrDEem2BZRQc2M93A" name="Debug__C__ExitPoint1__BeMaster__4">
              <connectionPoint xmi:id="_tEr0QUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tEsbUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_elZtIUr4EemAZaGjK5Aj8g" name="From__Parent__507" kind="entryPoint"/>
              <connectionPoint xmi:id="_elfzwEr4EemAZaGjK5Aj8g" name="To__Parent__509" kind="exitPoint"/>
              <region xmi:id="_tErNMErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tE-vMErDEem2BZRQc2M93A" name="Debug__init__trans__ExitPoint1__BeMaster__4" source="_tEr0QUrDEem2BZRQc2M93A" target="_tE86AErDEem2BZRQc2M93A"/>
                <transition xmi:id="_elqy4Er4EemAZaGjK5Aj8g" name="Trans__ex513" source="_tEsbUUrDEem2BZRQc2M93A" target="_elho8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_enG9UEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__537&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_elrZ8Er4EemAZaGjK5Aj8g" name="Trans__Init__State__512514" source="_elnIgEr4EemAZaGjK5Aj8g" target="_elho8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_enA2sEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__512&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__512&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__537&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__512&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_elsoEEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__ExitPoint1__BeMaster__4__515" source="_tE86AErDEem2BZRQc2M93A" target="_elho8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_enQHQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__537&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_eludQEr4EemAZaGjK5Aj8g" name="PME_Trig516" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_el0j4Er4EemAZaGjK5Aj8g" name="PME_Trig517" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_el3nMEr4EemAZaGjK5Aj8g" name="PME_Trig518" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_el5cYEr4EemAZaGjK5Aj8g" name="PME_Trig519" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_el7RkEr4EemAZaGjK5Aj8g" name="PME_Trig520" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_emGQsEr4EemAZaGjK5Aj8g" name="PME_Trig521" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_emIs8Er4EemAZaGjK5Aj8g" name="PME_Trig522" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_emKiIEr4EemAZaGjK5Aj8g" name="PME_Trig523" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_emQowEr4EemAZaGjK5Aj8g" name="PME_Trig524" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_emTFAEr4EemAZaGjK5Aj8g" name="PME_Trig525" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_emVhQEr4EemAZaGjK5Aj8g" name="PME_Trig526" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_emXWcEr4EemAZaGjK5Aj8g" name="PME_Trig527" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_emc2AEr4EemAZaGjK5Aj8g" name="PME_Trig528" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_emerMEr4EemAZaGjK5Aj8g" name="PME_Trig529" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_emhugEr4EemAZaGjK5Aj8g" name="PME_Trig530" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_emmnAEr4EemAZaGjK5Aj8g" name="PME_Trig531" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_emocMEr4EemAZaGjK5Aj8g" name="PME_Trig532" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_emsGkEr4EemAZaGjK5Aj8g" name="PME_Trig533" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_emw_EEr4EemAZaGjK5Aj8g" name="PME_Trig534" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_emy0QEr4EemAZaGjK5Aj8g" name="PME_Trig535" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_em13kEr4EemAZaGjK5Aj8g" name="PME_Trig536" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_em7-MEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__ExitPoint1__BeMaster__4__537" guard="_enSjgUr4EemAZaGjK5Aj8g" source="_elho8Er4EemAZaGjK5Aj8g" target="_tE86AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_enSjgUr4EemAZaGjK5Aj8g" name="PME_checkDecesion541">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_enSjgEr4EemAZaGjK5Aj8g" name="PME_checkDecesion541">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__537&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_em_BgEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__538" source="_elZtIUr4EemAZaGjK5Aj8g" target="_elho8Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_enL10Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__539&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__537&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_em_BgUr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__539" guard="_enRVYUr4EemAZaGjK5Aj8g" source="_elho8Er4EemAZaGjK5Aj8g" target="_elfzwEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_enRVYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion540">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_enRVYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion540">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__539&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tE86AErDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE86AUrDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_elho8Er4EemAZaGjK5Aj8g" name="DecesionPoint__511" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_elnIgEr4EemAZaGjK5Aj8g" name="Init__State__512"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFEOwErDEem2BZRQc2M93A" name="Debug__Path__BeSlave" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tFE10UrDEem2BZRQc2M93A" name="Debug__C__BeSlave">
              <connectionPoint xmi:id="_tFGrAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tFIgMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_flkJoEr4EemAZaGjK5Aj8g" name="From__Parent__1502" kind="entryPoint"/>
              <connectionPoint xmi:id="_fllXwEr4EemAZaGjK5Aj8g" name="To__Parent__1504" kind="exitPoint"/>
              <region xmi:id="_tFE10krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tFXJs0rDEem2BZRQc2M93A" name="Debug__end__trans__BeSlave" source="_tFWioErDEem2BZRQc2M93A" target="_tFIgMUrDEem2BZRQc2M93A">
                  <trigger xmi:id="_tFXJtErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_flssgEr4EemAZaGjK5Aj8g" name="Trans__Init__State__15071508" source="_flnM8Er4EemAZaGjK5Aj8g" target="_fll-0Ur4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fmtZIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1507&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1532&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1507&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1534&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1507&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_flt6oEr4EemAZaGjK5Aj8g" name="Trans__ex1509" source="_tFIgMUrDEem2BZRQc2M93A" target="_fll-0Ur4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fm2jEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1532&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1534&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fluhsEr4EemAZaGjK5Aj8g" name="Trans__en1510" source="_tFGrAErDEem2BZRQc2M93A" target="_fll-0Ur4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fm7bkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1532&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1534&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_flvv0Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__BeSlave__1511" source="_tFWioErDEem2BZRQc2M93A" target="_fll-0Ur4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fmxqkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1532&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1534&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_flwW4Er4EemAZaGjK5Aj8g" name="PME_Trig1512" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_flzaMEr4EemAZaGjK5Aj8g" name="PME_Trig1513" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fl4SsEr4EemAZaGjK5Aj8g" name="PME_Trig1514" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fl5g0Er4EemAZaGjK5Aj8g" name="PME_Trig1515" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fl6u8Er4EemAZaGjK5Aj8g" name="PME_Trig1516" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fl_ncEr4EemAZaGjK5Aj8g" name="PME_Trig1517" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fmDR0Er4EemAZaGjK5Aj8g" name="PME_Trig1518" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fmEf8Er4EemAZaGjK5Aj8g" name="PME_Trig1519" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fmFuEEr4EemAZaGjK5Aj8g" name="PME_Trig1520" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fmLNoEr4EemAZaGjK5Aj8g" name="PME_Trig1521" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fmNp4Er4EemAZaGjK5Aj8g" name="PME_Trig1522" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fmO4AEr4EemAZaGjK5Aj8g" name="PME_Trig1523" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fmQGIEr4EemAZaGjK5Aj8g" name="PME_Trig1524" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fmSiYEr4EemAZaGjK5Aj8g" name="PME_Trig1525" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fmYB8Er4EemAZaGjK5Aj8g" name="PME_Trig1526" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fmaeMEr4EemAZaGjK5Aj8g" name="PME_Trig1527" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fmfWsEr4EemAZaGjK5Aj8g" name="PME_Trig1528" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fmhy8Er4EemAZaGjK5Aj8g" name="PME_Trig1529" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fmiaAEr4EemAZaGjK5Aj8g" name="PME_Trig1530" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fmjoIEr4EemAZaGjK5Aj8g" name="PME_Trig1531" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fmmrcEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__BeSlave__1532" guard="_fm930Ur4EemAZaGjK5Aj8g" source="_fll-0Ur4EemAZaGjK5Aj8g" target="_tFWioErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fm930Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1535">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fm930Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1535">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeSlave__1532&quot;,&quot;Debug__A__Ac__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fmrj8Er4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1533" source="_flkJoEr4EemAZaGjK5Aj8g" target="_fll-0Ur4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fm3xMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1532&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1534&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fmrj8Ur4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1534" guard="_fm_F8Ur4EemAZaGjK5Aj8g" source="_fll-0Ur4EemAZaGjK5Aj8g" target="_fllXwEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_fm_F8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1536">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fm_F8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1536">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1534&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tFWioErDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFWioUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fll-0Ur4EemAZaGjK5Aj8g" name="DecesionPoint__1506" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_flnM8Er4EemAZaGjK5Aj8g" name="Init__State__1507"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tF4HEErDEem2BZRQc2M93A" name="Debug__Path__ServiceRequest" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tF58QErDEem2BZRQc2M93A" name="Debug__C__ServiceRequest">
              <connectionPoint xmi:id="_tF7KYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tF7xcUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_fm_tAUr4EemAZaGjK5Aj8g" name="From__Parent__1538" kind="entryPoint"/>
              <connectionPoint xmi:id="_fnA7IEr4EemAZaGjK5Aj8g" name="To__Parent__1540" kind="exitPoint"/>
              <region xmi:id="_tF58QUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tGVaEErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest" source="_tF7KYUrDEem2BZRQc2M93A" target="_tGLCAUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGmf0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceRequest__603">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__init__trans__ServiceRequest&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tGVaEUrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tGLCAUrDEem2BZRQc2M93A" target="_tGMQIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGWoMErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGWBIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGXPQErDEem2BZRQc2M93A" name="Debug__AC__ServiceRequest" source="_tGMQIErDEem2BZRQc2M93A" target="_tGPTcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGYdYErDEem2BZRQc2M93A" name="ReplyRequest" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>   //messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ClientRequest,&quot;&lt;&lt;messageID&lt;&lt;&quot;,,&quot;&lt;&lt;&quot;\n&quot;;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Message from client replied at index &quot;&lt;&lt;msg->sapIndex0_&lt;&lt;&quot;\n&quot;;
    int tempid=msg->sapIndex0_;
    ServerComm.Reply(0).sendAt(tempid);
    int j=1;
    for (int i=0;i&lt;=1000000;i++)
	j=j+1;
    j=j+1;
    std::cout&lt;&lt;j&lt;&lt;&quot;\n&quot;;
    //ts.getclock(ts);
    //if (logfile.is_open())
    //logfile&lt;&lt;&quot;CleintReply,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__AC__ServiceRequest&quot;,(char *)&quot;Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGX2UErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGYdYUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tGPTcErDEem2BZRQc2M93A" target="_tGQhkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGZEcUrDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGZEcErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tGZrgErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceRequest" source="_tGQhkErDEem2BZRQc2M93A" target="_tF7xcUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGsmcErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceRequest__608">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__end__trans__ServiceRequest&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tGZrgUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_fnI28Er4EemAZaGjK5Aj8g" name="Trans__Init__State__15431544" source="_fnDXYEr4EemAZaGjK5Aj8g" target="_fnBiMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fqDoEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1543&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1543&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1543&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1630&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1543&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1543&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1543&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fnJeAEr4EemAZaGjK5Aj8g" name="Trans__ex1545" source="_tF7xcUrDEem2BZRQc2M93A" target="_fnBiMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fqOAIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1630&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fnLTMEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__RunAsMaster__1546" source="_tGQhkErDEem2BZRQc2M93A" target="_fnBiMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fqQcYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1630&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fnL6QEr4EemAZaGjK5Aj8g" name="PME_Trig1547" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fnNIYEr4EemAZaGjK5Aj8g" name="PME_Trig1548" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fnUdIEr4EemAZaGjK5Aj8g" name="PME_Trig1549" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fnVrQEr4EemAZaGjK5Aj8g" name="PME_Trig1550" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fnW5YEr4EemAZaGjK5Aj8g" name="PME_Trig1551" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fnZVoEr4EemAZaGjK5Aj8g" name="PME_Trig1552" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fne1MEr4EemAZaGjK5Aj8g" name="PME_Trig1553" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fnfcQEr4EemAZaGjK5Aj8g" name="PME_Trig1554" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fngqYEr4EemAZaGjK5Aj8g" name="PME_Trig1555" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fnh4gEr4EemAZaGjK5Aj8g" name="PME_Trig1556" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fnomMEr4EemAZaGjK5Aj8g" name="PME_Trig1557" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fnpNQEr4EemAZaGjK5Aj8g" name="PME_Trig1558" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fnqbYEr4EemAZaGjK5Aj8g" name="PME_Trig1559" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fnrpgEr4EemAZaGjK5Aj8g" name="PME_Trig1560" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fnv68Er4EemAZaGjK5Aj8g" name="PME_Trig1561" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fny-QEr4EemAZaGjK5Aj8g" name="PME_Trig1562" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fn0MYEr4EemAZaGjK5Aj8g" name="PME_Trig1563" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fn1agEr4EemAZaGjK5Aj8g" name="PME_Trig1564" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fn7hIEr4EemAZaGjK5Aj8g" name="PME_Trig1565" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fn8IMEr4EemAZaGjK5Aj8g" name="PME_Trig1566" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fn9WUEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__RunAsMaster__1567" source="_tGLCAUrDEem2BZRQc2M93A" target="_fnBiMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fqLj4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1630&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fn99YEr4EemAZaGjK5Aj8g" name="PME_Trig1568" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fn-kcEr4EemAZaGjK5Aj8g" name="PME_Trig1569" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fn_ykEr4EemAZaGjK5Aj8g" name="PME_Trig1570" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_foGgQEr4EemAZaGjK5Aj8g" name="PME_Trig1571" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_foHHUEr4EemAZaGjK5Aj8g" name="PME_Trig1572" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_foIVcEr4EemAZaGjK5Aj8g" name="PME_Trig1573" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_foI8gEr4EemAZaGjK5Aj8g" name="PME_Trig1574" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_foKKoEr4EemAZaGjK5Aj8g" name="PME_Trig1575" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_foNN8Er4EemAZaGjK5Aj8g" name="PME_Trig1576" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_foQ4UEr4EemAZaGjK5Aj8g" name="PME_Trig1577" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_foSGcEr4EemAZaGjK5Aj8g" name="PME_Trig1578" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_foStgEr4EemAZaGjK5Aj8g" name="PME_Trig1579" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_foT7oEr4EemAZaGjK5Aj8g" name="PME_Trig1580" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_foWX4Er4EemAZaGjK5Aj8g" name="PME_Trig1581" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_foapUEr4EemAZaGjK5Aj8g" name="PME_Trig1582" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fob3cEr4EemAZaGjK5Aj8g" name="PME_Trig1583" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_focegEr4EemAZaGjK5Aj8g" name="PME_Trig1584" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fodsoEr4EemAZaGjK5Aj8g" name="PME_Trig1585" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_foeTsEr4EemAZaGjK5Aj8g" name="PME_Trig1586" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_foh-EEr4EemAZaGjK5Aj8g" name="PME_Trig1587" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fomPgEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__ServiceRequest__1588" source="_tGPTcErDEem2BZRQc2M93A" target="_fnBiMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fqCZ8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1630&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fondoEr4EemAZaGjK5Aj8g" name="PME_Trig1589" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fooEsEr4EemAZaGjK5Aj8g" name="PME_Trig1590" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_foqg8Er4EemAZaGjK5Aj8g" name="PME_Trig1591" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fovZcEr4EemAZaGjK5Aj8g" name="PME_Trig1592" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_foxOoEr4EemAZaGjK5Aj8g" name="PME_Trig1593" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_foycwEr4EemAZaGjK5Aj8g" name="PME_Trig1594" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fo05AEr4EemAZaGjK5Aj8g" name="PME_Trig1595" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fo4jYEr4EemAZaGjK5Aj8g" name="PME_Trig1596" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fo5xgEr4EemAZaGjK5Aj8g" name="PME_Trig1597" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fo6_oEr4EemAZaGjK5Aj8g" name="PME_Trig1598" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fo7msEr4EemAZaGjK5Aj8g" name="PME_Trig1599" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fo800Er4EemAZaGjK5Aj8g" name="PME_Trig1600" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fpBtUEr4EemAZaGjK5Aj8g" name="PME_Trig1601" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fpDigEr4EemAZaGjK5Aj8g" name="PME_Trig1602" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fpEwoEr4EemAZaGjK5Aj8g" name="PME_Trig1603" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fpFXsEr4EemAZaGjK5Aj8g" name="PME_Trig1604" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fpGl0Er4EemAZaGjK5Aj8g" name="PME_Trig1605" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fpHz8Er4EemAZaGjK5Aj8g" name="PME_Trig1606" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fpN6kEr4EemAZaGjK5Aj8g" name="PME_Trig1607" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fpPIsEr4EemAZaGjK5Aj8g" name="PME_Trig1608" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fpQW0Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__ServiceRequest__1609" source="_tGMQIErDEem2BZRQc2M93A" target="_fnBiMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fqMyAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1630&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fpSMAEr4EemAZaGjK5Aj8g" name="PME_Trig1610" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fpYSoEr4EemAZaGjK5Aj8g" name="PME_Trig1611" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fpZgwEr4EemAZaGjK5Aj8g" name="PME_Trig1612" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fpaH0Er4EemAZaGjK5Aj8g" name="PME_Trig1613" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fpbV8Er4EemAZaGjK5Aj8g" name="PME_Trig1614" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fpeZQEr4EemAZaGjK5Aj8g" name="PME_Trig1615" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fpiDoEr4EemAZaGjK5Aj8g" name="PME_Trig1616" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fpjRwEr4EemAZaGjK5Aj8g" name="PME_Trig1617" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fpj40Er4EemAZaGjK5Aj8g" name="PME_Trig1618" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fplG8Er4EemAZaGjK5Aj8g" name="PME_Trig1619" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fpnjMEr4EemAZaGjK5Aj8g" name="PME_Trig1620" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fpr0oEr4EemAZaGjK5Aj8g" name="PME_Trig1621" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fpsbsEr4EemAZaGjK5Aj8g" name="PME_Trig1622" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fptp0Er4EemAZaGjK5Aj8g" name="PME_Trig1623" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fpuQ4Er4EemAZaGjK5Aj8g" name="PME_Trig1624" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fpvfAEr4EemAZaGjK5Aj8g" name="PME_Trig1625" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fp0XgEr4EemAZaGjK5Aj8g" name="PME_Trig1626" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fp2zwEr4EemAZaGjK5Aj8g" name="PME_Trig1627" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fp4B4Er4EemAZaGjK5Aj8g" name="PME_Trig1628" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fp4o8Er4EemAZaGjK5Aj8g" name="PME_Trig1629" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fp7sQEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__RunAsMaster__1630" guard="_fqVU4Ur4EemAZaGjK5Aj8g" source="_fnBiMEr4EemAZaGjK5Aj8g" target="_tGQhkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fqVU4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1638">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqVU4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1638">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1630&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fp8TUEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__RunAsMaster__1631" guard="_fqV780r4EemAZaGjK5Aj8g" source="_fnBiMEr4EemAZaGjK5Aj8g" target="_tGLCAUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fqV780r4EemAZaGjK5Aj8g" name="PME_checkDecesion1640">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqV78kr4EemAZaGjK5Aj8g" name="PME_checkDecesion1640">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fp86YEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__ServiceRequest__1632" guard="_fqS4oUr4EemAZaGjK5Aj8g" source="_fnBiMEr4EemAZaGjK5Aj8g" target="_tGPTcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fqS4oUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1636">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqS4oEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1636">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fp-IgEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__ServiceRequest__1633" guard="_fqV78Ur4EemAZaGjK5Aj8g" source="_fnBiMEr4EemAZaGjK5Aj8g" target="_tGMQIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fqV78Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1639">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqV78Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1639">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fqAkwEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1634" source="_fm_tAUr4EemAZaGjK5Aj8g" target="_fnBiMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fqJusEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__Ac__ServiceRequest&quot;,&quot;To__Debug__A__Ac__ServiceRequest__1632&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1630&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__1633&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1631&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fqBL0Er4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1635" guard="_fqUt0Ur4EemAZaGjK5Aj8g" source="_fnBiMEr4EemAZaGjK5Aj8g" target="_fnA7IEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_fqUt0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1637">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fqUt0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1637">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1635&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tGLCAUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGLpEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGa5oUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__598">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGMQIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGMQIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGd88ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest__599">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGPTcErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGPTcUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGgZMUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceRequest__600">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tGQhkErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGQhkUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGjcgErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__601">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fnBiMEr4EemAZaGjK5Aj8g" name="DecesionPoint__1542" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fnDXYEr4EemAZaGjK5Aj8g" name="Init__State__1543"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tGwQ0ErDEem2BZRQc2M93A" name="Debug__Path__StandBy__CheckConfig__6" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tGw34UrDEem2BZRQc2M93A" name="Debug__C__StandBy__CheckConfig__6">
              <connectionPoint xmi:id="_tGyGAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tGyGAkrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_ftsK4Er4EemAZaGjK5Aj8g" name="From__Parent__1746" kind="entryPoint"/>
              <connectionPoint xmi:id="_ftsx8Er4EemAZaGjK5Aj8g" name="To__Parent__1748" kind="exitPoint"/>
              <region xmi:id="_tGw34krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHFoAErDEem2BZRQc2M93A" name="Debug__init__trans__StandBy__CheckConfig__6" source="_tGyGAErDEem2BZRQc2M93A" target="_tHDLwUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tHGPEErDEem2BZRQc2M93A" name="Debug__Ex__StandBy" source="_tHDLwUrDEem2BZRQc2M93A" target="_tHDy0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHROMErDEem2BZRQc2M93A" name="Debug__Ex__StandBy__626">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ex__StandBy&quot;,(char *)&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHGPEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHGPEkrDEem2BZRQc2M93A" name="Debug__AC__StandBy__CheckConfig__6" source="_tHDy0ErDEem2BZRQc2M93A" target="_tHFA8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHG2IErDEem2BZRQc2M93A" name="StartupServer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: StartingUp\n&quot;;
    this->hostConfig=config;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Configuration is:&quot;&lt;&lt; config.RunningMode&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__AC__StandBy__CheckConfig__6&quot;,(char *)&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHGPE0rDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHG2IUrDEem2BZRQc2M93A" name="Debug__end__trans__StandBy__CheckConfig__6" source="_tHFA8ErDEem2BZRQc2M93A" target="_tGyGAkrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHTqcErDEem2BZRQc2M93A" name="Debug__end__trans__StandBy__CheckConfig__6__629">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__end__trans__StandBy__CheckConfig__6&quot;,(char *)&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHG2IkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ft2i8Er4EemAZaGjK5Aj8g" name="Trans__ex1752" source="_tGyGAkrDEem2BZRQc2M93A" target="_ftvOMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fwauwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1821&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1817&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ft2i8Ur4EemAZaGjK5Aj8g" name="Trans__Init__State__17511753" source="_ft0twEr4EemAZaGjK5Aj8g" target="_ftvOMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fwZgoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1751&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1751&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1751&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1821&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1751&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1817&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1751&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ft4YIEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__StandBy__CheckConfig__6__1754" source="_tHFA8ErDEem2BZRQc2M93A" target="_ftvOMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fwQ9wEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1821&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1817&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ft60YEr4EemAZaGjK5Aj8g" name="PME_Trig1755" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ft-ewEr4EemAZaGjK5Aj8g" name="PME_Trig1756" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fuA7AEr4EemAZaGjK5Aj8g" name="PME_Trig1757" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fuCwMEr4EemAZaGjK5Aj8g" name="PME_Trig1758" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fuHosEr4EemAZaGjK5Aj8g" name="PME_Trig1759" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fuKE8Er4EemAZaGjK5Aj8g" name="PME_Trig1760" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fuKsAEr4EemAZaGjK5Aj8g" name="PME_Trig1761" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fuL6IEr4EemAZaGjK5Aj8g" name="PME_Trig1762" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fuNIQEr4EemAZaGjK5Aj8g" name="PME_Trig1763" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fuSAwEr4EemAZaGjK5Aj8g" name="PME_Trig1764" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fuT18Er4EemAZaGjK5Aj8g" name="PME_Trig1765" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fuVEEEr4EemAZaGjK5Aj8g" name="PME_Trig1766" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fuWSMEr4EemAZaGjK5Aj8g" name="PME_Trig1767" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fuYHYEr4EemAZaGjK5Aj8g" name="PME_Trig1768" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fue1EEr4EemAZaGjK5Aj8g" name="PME_Trig1769" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fufcIEr4EemAZaGjK5Aj8g" name="PME_Trig1770" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fugqQEr4EemAZaGjK5Aj8g" name="PME_Trig1771" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fujGgEr4EemAZaGjK5Aj8g" name="PME_Trig1772" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fun_AEr4EemAZaGjK5Aj8g" name="PME_Trig1773" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fupNIEr4EemAZaGjK5Aj8g" name="PME_Trig1774" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fuqbQEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__StandBy__1775" source="_tHDLwUrDEem2BZRQc2M93A" target="_ftvOMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fwPvoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1821&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1817&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_furpYEr4EemAZaGjK5Aj8g" name="PME_Trig1776" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fuy-IEr4EemAZaGjK5Aj8g" name="PME_Trig1777" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fu0MQEr4EemAZaGjK5Aj8g" name="PME_Trig1778" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fu2BcEr4EemAZaGjK5Aj8g" name="PME_Trig1779" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fu8vIEr4EemAZaGjK5Aj8g" name="PME_Trig1780" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fu9WMEr4EemAZaGjK5Aj8g" name="PME_Trig1781" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fu-kUEr4EemAZaGjK5Aj8g" name="PME_Trig1782" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fvBAkEr4EemAZaGjK5Aj8g" name="PME_Trig1783" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvGgIEr4EemAZaGjK5Aj8g" name="PME_Trig1784" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fvHuQEr4EemAZaGjK5Aj8g" name="PME_Trig1785" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvI8YEr4EemAZaGjK5Aj8g" name="PME_Trig1786" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fvLYoEr4EemAZaGjK5Aj8g" name="PME_Trig1787" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fvQRIEr4EemAZaGjK5Aj8g" name="PME_Trig1788" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvRfQEr4EemAZaGjK5Aj8g" name="PME_Trig1789" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fvStYEr4EemAZaGjK5Aj8g" name="PME_Trig1790" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fvTUcEr4EemAZaGjK5Aj8g" name="PME_Trig1791" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fvWXwEr4EemAZaGjK5Aj8g" name="PME_Trig1792" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fvaCIEr4EemAZaGjK5Aj8g" name="PME_Trig1793" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvbQQEr4EemAZaGjK5Aj8g" name="PME_Trig1794" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fvceYEr4EemAZaGjK5Aj8g" name="PME_Trig1795" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fvdFcEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__StandBy__CheckConfig__6__1796" source="_tHDy0ErDEem2BZRQc2M93A" target="_ftvOMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fwPIkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1821&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1817&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fvdsgEr4EemAZaGjK5Aj8g" name="PME_Trig1797" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvh98Er4EemAZaGjK5Aj8g" name="PME_Trig1798" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fvloUEr4EemAZaGjK5Aj8g" name="PME_Trig1799" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvm2cEr4EemAZaGjK5Aj8g" name="PME_Trig1800" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fvoEkEr4EemAZaGjK5Aj8g" name="PME_Trig1801" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvtkIEr4EemAZaGjK5Aj8g" name="PME_Trig1802" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fvuyQEr4EemAZaGjK5Aj8g" name="PME_Trig1803" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fvvZUEr4EemAZaGjK5Aj8g" name="PME_Trig1804" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvwncEr4EemAZaGjK5Aj8g" name="PME_Trig1805" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fvx1kEr4EemAZaGjK5Aj8g" name="PME_Trig1806" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fvycoEr4EemAZaGjK5Aj8g" name="PME_Trig1807" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fv3VIEr4EemAZaGjK5Aj8g" name="PME_Trig1808" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fv5xYEr4EemAZaGjK5Aj8g" name="PME_Trig1809" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fv6YcEr4EemAZaGjK5Aj8g" name="PME_Trig1810" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fv7mkEr4EemAZaGjK5Aj8g" name="PME_Trig1811" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fv8NoEr4EemAZaGjK5Aj8g" name="PME_Trig1812" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fv_4AEr4EemAZaGjK5Aj8g" name="PME_Trig1813" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fwC7UEr4EemAZaGjK5Aj8g" name="PME_Trig1814" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fwEJcEr4EemAZaGjK5Aj8g" name="PME_Trig1815" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fwFXkEr4EemAZaGjK5Aj8g" name="PME_Trig1816" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fwGlsEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__StandBy__CheckConfig__6__1817" guard="_fwiDgUr4EemAZaGjK5Aj8g" source="_ftvOMEr4EemAZaGjK5Aj8g" target="_tHFA8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fwiDgUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1825">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fwiDgEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1825">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1817&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fwHMwEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__StandBy__1818" guard="_fwb84Ur4EemAZaGjK5Aj8g" source="_ftvOMEr4EemAZaGjK5Aj8g" target="_tHDLwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fwb84Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1823">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fwb84Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1823">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBy__1818&quot;,&quot;Debug__B__Ex__StandBy&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fwHz0Er4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__StandBy__CheckConfig__6__1819" guard="_fwbV0Ur4EemAZaGjK5Aj8g" source="_ftvOMEr4EemAZaGjK5Aj8g" target="_tHDy0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_fwbV0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion1822">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fwbV0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion1822">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1819&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_fwNTYEr4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1820" source="_ftsK4Er4EemAZaGjK5Aj8g" target="_ftvOMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fwUoIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__B__Ac__StandBy__CheckConfig__6__1819&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1821&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__1817&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fwN6cEr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1821" guard="_fwgOUUr4EemAZaGjK5Aj8g" source="_ftvOMEr4EemAZaGjK5Aj8g" target="_ftsx8Er4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_fwgOUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1824">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_fwgOUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1824">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1821&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHDLwUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDLwkrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHIEQErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy__622">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHDy0ErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDy0UrDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy__CheckConfig__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHM8wErDEem2BZRQc2M93A" name="Debug__B__Ac__StandBy__CheckConfig__6__623">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHFA8ErDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHFA8UrDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy__CheckConfig__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHOx8UrDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6__624">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ftvOMEr4EemAZaGjK5Aj8g" name="DecesionPoint__1750" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ft0twEr4EemAZaGjK5Aj8g" name="Init__State__1751"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tHWGsErDEem2BZRQc2M93A" name="Debug__Path__KeepAlive" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tHWtwUrDEem2BZRQc2M93A" name="Debug__C__KeepAlive">
              <connectionPoint xmi:id="_tHX74UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tHYi8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_fqXKEUr4EemAZaGjK5Aj8g" name="From__Parent__1642" kind="entryPoint"/>
              <connectionPoint xmi:id="_fqYYMEr4EemAZaGjK5Aj8g" name="To__Parent__1644" kind="exitPoint"/>
              <region xmi:id="_tHWtwkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHuhMErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAlive" source="_tHX74UrDEem2BZRQc2M93A" target="_tHqPwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tH8joErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAlive__648">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__init__trans__KeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tHuhMUrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tHqPwErDEem2BZRQc2M93A" target="_tHq20ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHvIQErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHuhMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHvvUErDEem2BZRQc2M93A" name="Debug__AC__KeepAlive" source="_tHq20ErDEem2BZRQc2M93A" target="_tHsE8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHvvUkrDEem2BZRQc2M93A" name="SendKeepAlive" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    if (hostConfig.RunningMode==1)
    Master.IAmAlive((char *)this->getName()).send();
    std::cout&lt;&lt;&quot;Master: Keep Alive is sent\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__AC__KeepAlive&quot;,(char *)&quot;Debug__B__Ac__KeepAlive&quot;,(char *)&quot;Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHvvUUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHwWYErDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tHsE8ErDEem2BZRQc2M93A" target="_tHt6IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHw9cErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__KeepAlive&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHwWYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHw9cUrDEem2BZRQc2M93A" name="Debug__end__trans__KeepAlive" source="_tHt6IErDEem2BZRQc2M93A" target="_tHYi8UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tICqQErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAlive__653">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__end__trans__KeepAlive&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHxkgErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_fqg7EEr4EemAZaGjK5Aj8g" name="Trans__ex1648" source="_tHYi8UrDEem2BZRQc2M93A" target="_fqa0cEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ftjA8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fqg7EUr4EemAZaGjK5Aj8g" name="Trans__Init__State__16471649" source="_fqfF4Er4EemAZaGjK5Aj8g" target="_fqa0cEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fthLwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1647&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1647&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1647&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1647&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1647&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1647&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_fqj-YEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__RunAsMaster__1650" source="_tHqPwErDEem2BZRQc2M93A" target="_fqa0cEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ftYo4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fqnowEr4EemAZaGjK5Aj8g" name="PME_Trig1651" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fqpd8Er4EemAZaGjK5Aj8g" name="PME_Trig1652" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fqqsEEr4EemAZaGjK5Aj8g" name="PME_Trig1653" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fqr6MEr4EemAZaGjK5Aj8g" name="PME_Trig1654" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fqshQEr4EemAZaGjK5Aj8g" name="PME_Trig1655" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fqvkkEr4EemAZaGjK5Aj8g" name="PME_Trig1656" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fqzO8Er4EemAZaGjK5Aj8g" name="PME_Trig1657" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fq0dEEr4EemAZaGjK5Aj8g" name="PME_Trig1658" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fq1EIEr4EemAZaGjK5Aj8g" name="PME_Trig1659" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fq2SQEr4EemAZaGjK5Aj8g" name="PME_Trig1660" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fq25UEr4EemAZaGjK5Aj8g" name="PME_Trig1661" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fq8_8Er4EemAZaGjK5Aj8g" name="PME_Trig1662" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fq-OEEr4EemAZaGjK5Aj8g" name="PME_Trig1663" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fq-1IEr4EemAZaGjK5Aj8g" name="PME_Trig1664" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_frADQEr4EemAZaGjK5Aj8g" name="PME_Trig1665" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_frAqUEr4EemAZaGjK5Aj8g" name="PME_Trig1666" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_frB4cEr4EemAZaGjK5Aj8g" name="PME_Trig1667" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_frH_EEr4EemAZaGjK5Aj8g" name="PME_Trig1668" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frJNMEr4EemAZaGjK5Aj8g" name="PME_Trig1669" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_frJ0QEr4EemAZaGjK5Aj8g" name="PME_Trig1670" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_frLCYEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__RunAsMaster__1671" source="_tHt6IErDEem2BZRQc2M93A" target="_fqa0cEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ftZ3AEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_frMQgEr4EemAZaGjK5Aj8g" name="PME_Trig1672" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frQh8Er4EemAZaGjK5Aj8g" name="PME_Trig1673" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_frSXIEr4EemAZaGjK5Aj8g" name="PME_Trig1674" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frTlQEr4EemAZaGjK5Aj8g" name="PME_Trig1675" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_frUMUEr4EemAZaGjK5Aj8g" name="PME_Trig1676" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frVacEr4EemAZaGjK5Aj8g" name="PME_Trig1677" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fra6AEr4EemAZaGjK5Aj8g" name="PME_Trig1678" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_frcvMEr4EemAZaGjK5Aj8g" name="PME_Trig1679" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frd9UEr4EemAZaGjK5Aj8g" name="PME_Trig1680" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_frekYEr4EemAZaGjK5Aj8g" name="PME_Trig1681" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frfygEr4EemAZaGjK5Aj8g" name="PME_Trig1682" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_frlSEEr4EemAZaGjK5Aj8g" name="PME_Trig1683" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_frmgMEr4EemAZaGjK5Aj8g" name="PME_Trig1684" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frnuUEr4EemAZaGjK5Aj8g" name="PME_Trig1685" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_froVYEr4EemAZaGjK5Aj8g" name="PME_Trig1686" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_frpjgEr4EemAZaGjK5Aj8g" name="PME_Trig1687" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_frqxoEr4EemAZaGjK5Aj8g" name="PME_Trig1688" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fryGYEr4EemAZaGjK5Aj8g" name="PME_Trig1689" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_frytcEr4EemAZaGjK5Aj8g" name="PME_Trig1690" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_frz7kEr4EemAZaGjK5Aj8g" name="PME_Trig1691" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fr2-4Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__KeepAlive__1692" source="_tHsE8ErDEem2BZRQc2M93A" target="_fqa0cEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ftWMoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fr6pQEr4EemAZaGjK5Aj8g" name="PME_Trig1693" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fr73YEr4EemAZaGjK5Aj8g" name="PME_Trig1694" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fr9FgEr4EemAZaGjK5Aj8g" name="PME_Trig1695" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fr_hwEr4EemAZaGjK5Aj8g" name="PME_Trig1696" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fsAv4Er4EemAZaGjK5Aj8g" name="PME_Trig1697" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fsDzMEr4EemAZaGjK5Aj8g" name="PME_Trig1698" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fsG2gEr4EemAZaGjK5Aj8g" name="PME_Trig1699" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fsIEoEr4EemAZaGjK5Aj8g" name="PME_Trig1700" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fsMWEEr4EemAZaGjK5Aj8g" name="PME_Trig1701" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fsQAcEr4EemAZaGjK5Aj8g" name="PME_Trig1702" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fsQngEr4EemAZaGjK5Aj8g" name="PME_Trig1703" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fsR1oEr4EemAZaGjK5Aj8g" name="PME_Trig1704" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fsWHEEr4EemAZaGjK5Aj8g" name="PME_Trig1705" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fsZxcEr4EemAZaGjK5Aj8g" name="PME_Trig1706" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fsa_kEr4EemAZaGjK5Aj8g" name="PME_Trig1707" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fscNsEr4EemAZaGjK5Aj8g" name="PME_Trig1708" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fseC4Er4EemAZaGjK5Aj8g" name="PME_Trig1709" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_fsi7YEr4EemAZaGjK5Aj8g" name="PME_Trig1710" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fsjicEr4EemAZaGjK5Aj8g" name="PME_Trig1711" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_fskwkEr4EemAZaGjK5Aj8g" name="PME_Trig1712" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_fslXoEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__KeepAlive__1713" source="_tHq20ErDEem2BZRQc2M93A" target="_fqa0cEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ftfWkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_fsl-sEr4EemAZaGjK5Aj8g" name="PME_Trig1714" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fsnM0Er4EemAZaGjK5Aj8g" name="PME_Trig1715" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fsreQEr4EemAZaGjK5Aj8g" name="PME_Trig1716" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fsuhkEr4EemAZaGjK5Aj8g" name="PME_Trig1717" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_fsvvsEr4EemAZaGjK5Aj8g" name="PME_Trig1718" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fswWwEr4EemAZaGjK5Aj8g" name="PME_Trig1719" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_fsyzAEr4EemAZaGjK5Aj8g" name="PME_Trig1720" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_fs3EcEr4EemAZaGjK5Aj8g" name="PME_Trig1721" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fs4SkEr4EemAZaGjK5Aj8g" name="PME_Trig1722" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_fs45oEr4EemAZaGjK5Aj8g" name="PME_Trig1723" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_fs5gsEr4EemAZaGjK5Aj8g" name="PME_Trig1724" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_fs6u0Er4EemAZaGjK5Aj8g" name="PME_Trig1725" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_dbzn0Er4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_fs9LEEr4EemAZaGjK5Aj8g" name="PME_Trig1726" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ftA1cEr4EemAZaGjK5Aj8g" name="PME_Trig1727" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ftCqoEr4EemAZaGjK5Aj8g" name="PME_Trig1728" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ftD4wEr4EemAZaGjK5Aj8g" name="PME_Trig1729" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ftEf0Er4EemAZaGjK5Aj8g" name="PME_Trig1730" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ftG8EEr4EemAZaGjK5Aj8g" name="PME_Trig1731" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ftLNgEr4EemAZaGjK5Aj8g" name="PME_Trig1732" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_ftMboEr4EemAZaGjK5Aj8g" name="PME_Trig1733" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_ftNpwEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__RunAsMaster__1734" guard="_ftq8wUr4EemAZaGjK5Aj8g" source="_fqa0cEr4EemAZaGjK5Aj8g" target="_tHqPwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ftq8wUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1744">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ftq8wEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1744">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ftOQ0Er4EemAZaGjK5Aj8g" name="To__Debug__A__En__RunAsMaster__1735" guard="_ftkPEUr4EemAZaGjK5Aj8g" source="_fqa0cEr4EemAZaGjK5Aj8g" target="_tHt6IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ftkPEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1741">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ftkPEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1741">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1735&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ftOQ0Ur4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__KeepAlive__1736" guard="_ftmrUUr4EemAZaGjK5Aj8g" source="_fqa0cEr4EemAZaGjK5Aj8g" target="_tHsE8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ftmrUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1742">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ftmrUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1742">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,&quot;Debug__A__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ftOQ0kr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__KeepAlive__1737" guard="_ftjoAUr4EemAZaGjK5Aj8g" source="_fqa0cEr4EemAZaGjK5Aj8g" target="_tHq20ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_ftjoAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1740">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ftjoAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1740">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,&quot;Debug__B__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_ftPe8Er4EemAZaGjK5Aj8g" name="From__Parnet__ServerStateMachine__1738" source="_fqXKEUr4EemAZaGjK5Aj8g" target="_fqa0cEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ftXawEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__1737&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1735&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1736&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1739&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1734&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ftQtEEr4EemAZaGjK5Aj8g" name="To__Parent__ServerStateMachine__1739" guard="_ftpuoUr4EemAZaGjK5Aj8g" source="_fqa0cEr4EemAZaGjK5Aj8g" target="_fqYYMEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_ftpuoUr4EemAZaGjK5Aj8g" name="PME_checkDecesion1743">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_ftpuoEr4EemAZaGjK5Aj8g" name="PME_checkDecesion1743">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1739&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHqPwErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHqPwUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHyyoErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__643">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHq20ErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHq20UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH1O4UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive__644">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHsE8ErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHsE8UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH3rIUrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive__645">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHt6IErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHt6IUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH6HYErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__646">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fqa0cEr4EemAZaGjK5Aj8g" name="DecesionPoint__1646" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_fqfF4Er4EemAZaGjK5Aj8g" name="Init__State__1647"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tJHBQErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_dt1zAEr4EemAZaGjK5Aj8g" name="DecesionPoint__1" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxfLcUrDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_sxfLcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Slave.recallAll();
ConfigComm.recallAll();
Master.recallAll();
ServerComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxvDEErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sxucAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;KeepAliveTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(KeepAliveTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,KeepAliveTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
tempS.append(&quot;AnnouncementTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncementTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncementTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxzUgUrDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxyGYErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;KeepAliveTimeOut&quot;==tempVarName){
    KeepAliveTimeOut=atoi(varValue);
    return true;
}else if (&quot;AnnouncementTimeOut&quot;==tempVarName){
    AnnouncementTimeOut=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_syDzMErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sx6CMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dolfkUr4EemAZaGjK5Aj8g" name="loadHeap" specification="_dolfkEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.KeepAliveTimeOut&quot;,this->KeepAliveTimeOut);
heap.setVarValue(&quot;this.AnnouncementTimeOut&quot;,this->AnnouncementTimeOut);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_do0JEUr4EemAZaGjK5Aj8g" name="unLoadHeap" specification="_do0JEEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.KeepAliveTimeOut&quot;,&amp;this->KeepAliveTimeOut);
heap.loadVarFromHeap(&quot;this.AnnouncementTimeOut&quot;,&amp;this->AnnouncementTimeOut);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_drEy4Er4EemAZaGjK5Aj8g" name="sendMessage" specification="_drEL0Er4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;ServerComm&quot;) {
  if(message.signal==&quot;Reply&quot;) {
   if(message.payload.size()==1){
    ServerComm.Reply( boost::any_cast&lt;int>(message.payload[&quot;Result&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Master&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Master.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Slave&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Slave.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_drebgEr4EemAZaGjK5Aj8g" name="sendInternalMessage" specification="_drd0cEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtVcsUr4EemAZaGjK5Aj8g" name="initForPMD" specification="_dtVcsEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Server::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Server::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ServerComm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;ServerComm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;KeepAliveTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;MasterAnnounceTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sxfLcErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_sxfLcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxucAErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sxvDEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxyGYErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxzUgUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxytcErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxytcUrDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxzUgErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sx6CMErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_syDzMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sx7QUErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx8ecUrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx9skErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-ToUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-6sErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syAI0ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8ErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8UrDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syClEErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syDMIErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dolfkEr4EemAZaGjK5Aj8g" name="loadHeap" visibility="private" method="_dolfkUr4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_do0JEEr4EemAZaGjK5Aj8g" name="unLoadHeap" visibility="private" method="_do0JEUr4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_drEL0Er4EemAZaGjK5Aj8g" name="sendMessage" visibility="private" method="_drEy4Er4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_drGoEEr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_draKEEr4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_drd0cEr4EemAZaGjK5Aj8g" name="sendInternalMessage" visibility="private" method="_drebgEr4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_drlwQEr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_drsd8Er4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dtVcsEr4EemAZaGjK5Aj8g" name="initForPMD" visibility="private" method="_dtVcsUr4EemAZaGjK5Aj8g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_zpdLYAgmEea_md0mpENoqg" name="Client" classifierBehavior="_BKT8EAlKEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_5utSYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_g3nG4AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kSO0IAliEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kSfS0AliEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_iLeRcAmuEea_md0mpENoqg" name="RequestTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_oWg3YAmuEea_md0mpENoqg" name="ConfigTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tP9SkAmuEea_md0mpENoqg" name="ResponseTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_fL3OQAnFEeaGqPUk-4V4qQ" name="Server1Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jNC1oAnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNNNsAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lRZpIAnFEeaGqPUk-4V4qQ" name="Server2Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pIHs8AnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pIOaoAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_8sGy4AovEeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swu9gErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swxZwUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swyA0ErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8ErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8UrDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxH_EErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxJNMUrDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_f62dIEr4EemAZaGjK5Aj8g" name="dbgPortForClient" visibility="protected" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_f63EMEr4EemAZaGjK5Aj8g" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_f63EMUr4EemAZaGjK5Aj8g" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_BKT8EAlKEea_md0mpENoqg" name="ClientStateMachine">
          <region xmi:id="_Bk0GwAlKEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_UScqkAlKEea_md0mpENoqg" name="inittrans" source="_tPxp8ErDEem2BZRQc2M93A" target="_Q5-S4AlKEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ptLt0AlKEea_md0mpENoqg" name="InitLog">
                <language>C++</language>
                <body>      std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;
     char  fileName[30];
     char  clientIndex[5];
     //itoa(clientIndex,this->getIndex(),10);

	sprintf(clientIndex, &quot;%d&quot;, this->getIndex());
     strcpy(fileName,this->getName());
     strcat(fileName, clientIndex);
     logfile.open(fileName);
     logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::inittrans&quot;,(char *)&quot;Debug__Path__inittrans&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_LR5_sAlhEea_md0mpENoqg" name="StarupTransition" source="_tRT7AErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_h7nXgAlhEea_md0mpENoqg" name="StartUPClient">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; Client is startingUP \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StarupTransition&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_7y_ToAmtEea_md0mpENoqg" name="reqFlowInit" source="_tSQ9QErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTAkIErDEem2BZRQc2M93A" name="reqFlowInit__956">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::reqFlowInit&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_BanqgAmuEea_md0mpENoqg" name="ServiceResult" source="_tNLo8ErDEem2BZRQc2M93A" target="_uScfwAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_CC7jEAovEeaGqPUk-4V4qQ" name="getResponse">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: got reponse from server, go to process response state\n&quot;;
    int j=0;
    for (int i=0;i&lt;=100000;i++)
	j=j+1;
    std::cout&lt;&lt;j;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ServiceResult&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_Cf20QAmuEea_md0mpENoqg" name="ReqFlowDone" source="_tQWRsErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_PDYPsAoxEeaGqPUk-4V4qQ" name="AllIsDone">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The service Request has been done sucessfully\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ReqFlowDone&quot;,(char *)&quot;Debug__Path__ReqFlowDone&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_xsxFAAnCEeaGqPUk-4V4qQ" name="NoMaster" source="_tLzI4ErDEem2BZRQc2M93A" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMXJkErDEem2BZRQc2M93A" name="NoMaster__760">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::NoMaster&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_6NrWIAnCEeaGqPUk-4V4qQ" name="reqService" source="_tOHdEErDEem2BZRQc2M93A" target="_fO-gkAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvuAcAnEEeaGqPUk-4V4qQ" name="requestserive">
                <language>C++</language>
                <body>    
    messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,SendingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    if (hostConfig.MasterList[0] &amp;&amp; hostConfig.MasterList[1])
    {
    int r=rand()%2;
    if (r==0)
    {
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else{
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }
    }
    else if (hostConfig.MasterList[0]){
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else
    {
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::reqService&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_KpN_QAo2EeaGqPUk-4V4qQ" name="Retry" source="_tMY-wErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNJMsErDEem2BZRQc2M93A" name="Retry__787">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL4ocErDEem2BZRQc2M93A" name="Debug__NoMaster__S" guard="_tL5PgUrDEem2BZRQc2M93A" source="_tLzI4ErDEem2BZRQc2M93A" target="_tL0-EUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tL5PgUrDEem2BZRQc2M93A" name="Debug__GuardNoMaster">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tL5PgErDEem2BZRQc2M93A" name="Debug__GuardNoMaster">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;checkConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL6doErDEem2BZRQc2M93A" name="Debug__NoMaster__S__740">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoMaster__S&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL7rwErDEem2BZRQc2M93A" name="Debug__NoMaster__E" source="_tL1lIUrDEem2BZRQc2M93A" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL8S0ErDEem2BZRQc2M93A" name="Debug__NoMaster__E__741">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL854ErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL9g8UrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange__743">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tL9g8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL-IAErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL-vEErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint__744">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL-IAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_WIErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL_WIkrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint__745">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_WIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_9MErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMAkQErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints__746">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_9MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMAkQUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMBLUErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode__747">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMAkQkrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMBLUUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMCZcUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg__748">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMByYErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMByYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMCZcErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMcCEUrDEem2BZRQc2M93A" name="Debug__Retry" source="_KwFHIAo0EeaGqPUk-4V4qQ" target="_tMY-wErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMcpIErDEem2BZRQc2M93A" name="Debug__Retry__762">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry&quot;,(char *)&quot;Retry&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_2jDQUAo3EeaGqPUk-4V4qQ" name="Retry" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMd3QErDEem2BZRQc2M93A" name="Debug__Retry__S" guard="_tMeeUUrDEem2BZRQc2M93A" source="_tMY-wErDEem2BZRQc2M93A" target="_tMaz8UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tMeeUUrDEem2BZRQc2M93A" name="Debug__GuardRetry">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tMeeUErDEem2BZRQc2M93A" name="Debug__GuardRetry">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Retry&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMfscErDEem2BZRQc2M93A" name="Debug__Retry__S__764">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry__S&quot;,(char *)&quot;Debug__Path__Retry&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tMg6kErDEem2BZRQc2M93A" name="Debug__Retry__E" source="_tMbbAUrDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMg6kUrDEem2BZRQc2M93A" name="Debug__Retry__E__765">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__Retry__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tMiIsErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMivwErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange__767">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tMiIsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMj94ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMkk8ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint__768">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMj94UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMlzEErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMmaIErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint__769">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMlzEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnBMErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMnoQErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints__770">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMnBMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnoQUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMoPUUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode__771">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMoPUErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMo2YErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMqEgErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg__772">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMo2YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNP6YUrDEem2BZRQc2M93A" name="Debug__ServiceResult" source="_fO-gkAmtEea_md0mpENoqg" target="_tNLo8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNP6YkrDEem2BZRQc2M93A" name="Debug__ServiceResult__789">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_DEh6sAnGEeaGqPUk-4V4qQ" name="Result" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ _lRZpIAnFEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_tNRIgErDEem2BZRQc2M93A" name="Debug__ServiceResult__S" guard="_tNSWoUrDEem2BZRQc2M93A" source="_tNLo8ErDEem2BZRQc2M93A" target="_tNOFMErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tNSWoUrDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tNSWoErDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNS9sErDEem2BZRQc2M93A" name="Debug__ServiceResult__S__791">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__S&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNUL0ErDEem2BZRQc2M93A" name="Debug__ServiceResult__E" source="_tNOsQUrDEem2BZRQc2M93A" target="_uScfwAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNUy4ErDEem2BZRQc2M93A" name="Debug__ServiceResult__E__792">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNWBAErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNWoEErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange__794">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tNWBAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNXPIErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNYdQErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint__795">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNXPIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNZrYErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNZrYkrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint__796">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNZrYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNaScErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNa5gErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints__797">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNaScUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNa5gUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNbgkUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode__798">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tNbgkErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNdVwErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNd80krDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg__799">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNdVwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOiT0ErDEem2BZRQc2M93A" name="Debug__reqService__S" guard="_tOkJAUrDEem2BZRQc2M93A" source="_tOHdEErDEem2BZRQc2M93A" target="_tObmIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tOkJAUrDEem2BZRQc2M93A" name="Debug__GuardreqService">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tOkJAErDEem2BZRQc2M93A" name="Debug__GuardreqService">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;checkConfig&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOlXIErDEem2BZRQc2M93A" name="Debug__reqService__S__815">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqService__S&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tOnzYErDEem2BZRQc2M93A" name="Debug__reqService__E" source="_tOc0QUrDEem2BZRQc2M93A" target="_fO-gkAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOoacErDEem2BZRQc2M93A" name="Debug__reqService__E__816">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqService__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tOsE0ErDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOsr4UrDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange__818">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tOsr4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOvvMErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOwWQErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint__819">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOvvMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOw9UErDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOw9UkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint__820">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOw9UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOxkYErDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOxkYkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints__821">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOxkYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyLcErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOyLckrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode__822">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tOyLcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyygErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOzZkkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg__823">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOyygUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPNCMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9" source="_aVMuMAmtEea_md0mpENoqg" target="_tPJ-4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPNCMUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__835">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_fW6vEAnCEeaGqPUk-4V4qQ" name="ConfigReply" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tPOQUErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S" guard="_tPO3YErDEem2BZRQc2M93A" source="_tPJ-4ErDEem2BZRQc2M93A" target="_tPLNAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tPO3YErDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tPOQUUrDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;getMasterName&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPPecErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S__837">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9__S&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tPShwErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTI0ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange__840">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tPShwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPTv4ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTv4krDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint__841">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPTv4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPUW8ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPU-AUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint__842">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPU-AErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPVlEErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWMIUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints__843">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPWMIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPWzMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWzMkrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode__844">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tPWzMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPXaQErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPYoYUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg__845">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPXaQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYoYErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP17YUrDEem2BZRQc2M93A" name="Debug__inittrans" source="_tT_bkErDEem2BZRQc2M93A" target="_tPxp8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP17YkrDEem2BZRQc2M93A" name="Debug__inittrans__858">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitingForReply&quot;,&quot;ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;Reply&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;checkConfig&quot;,&quot;NoMaster&quot;,&quot;Retry&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;init&quot;,&quot;&quot;,&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Ready&quot;,&quot;reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;init&quot;,&quot;inittrans&quot;,&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitingForReply&quot;,&quot;NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Retry&quot;,&quot;Retry&quot;,&quot;getMasterName&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBY&quot;,&quot;StarupTransition&quot;,&quot;Ready&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;getMasterName&quot;,&quot;&quot;,&quot;checkConfig&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;checkConfig&quot;,&quot;reqService&quot;,&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitForEcho&quot;,&quot;DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;Echo&quot;,&quot;Echo&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;ProcessResponse&quot;,&quot;ReqFlowDone&quot;,&quot;Ready&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tUB30ErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP3JgErDEem2BZRQc2M93A" name="Debug__inittrans__S" guard="_tP3wkUrDEem2BZRQc2M93A" source="_tPxp8ErDEem2BZRQc2M93A" target="_tPzfIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tP3wkUrDEem2BZRQc2M93A" name="Debug__Guardinittrans">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tP3wkErDEem2BZRQc2M93A" name="Debug__Guardinittrans">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP4XoErDEem2BZRQc2M93A" name="Debug__inittrans__S__860">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__inittrans__S&quot;,(char *)&quot;Debug__Path__inittrans&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tP5lwErDEem2BZRQc2M93A" name="Debug__inittrans__E" source="_tP1UUUrDEem2BZRQc2M93A" target="_Q5-S4AlKEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP5lwUrDEem2BZRQc2M93A" name="Debug__inittrans__E__861">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__inittrans__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tP7a8ErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP7a8krDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange__863">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tP7a8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP8pEErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP8pEkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint__864">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP8pEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP9QIErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP93MUrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint__865">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP93MErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP-eQErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP-eQkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints__866">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP-eQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_FUErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP_FUkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode__867">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tP_FUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_sYErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQA6gErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg__868">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQATcErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATckrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQZVAUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone" source="_uScfwAmtEea_md0mpENoqg" target="_tQWRsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQZ8EErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__881">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;Debug__Path__ReqFlowDone&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_rVlzAAovEeaGqPUk-4V4qQ" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQbKMErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__S" guard="_tQbxQUrDEem2BZRQc2M93A" source="_tQWRsErDEem2BZRQc2M93A" target="_tQYG4ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tQbxQUrDEem2BZRQc2M93A" name="Debug__GuardReqFlowDone">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tQbxQErDEem2BZRQc2M93A" name="Debug__GuardReqFlowDone">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQcYUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__S__883">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone__S&quot;,(char *)&quot;Debug__Path__ReqFlowDone&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tQkUIErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__E" source="_tQYt8ErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQk7MErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__E__884">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tQmJUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQmwYUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange__886">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tQmwYErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQnXcErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQn-gErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint__887">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQnXcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQolkErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQolkkrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint__888">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQolkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQpzsErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQqawErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints__889">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQpzsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQqawUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQrB0UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode__890">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tQrB0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQro4ErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQsP8UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg__891">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQro4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQro4krDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQsP8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRYzgErDEem2BZRQc2M93A" name="Debug__StarupTransition" source="_Q5-S4AlKEea_md0mpENoqg" target="_tRT7AErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRYzgUrDEem2BZRQc2M93A" name="Debug__StarupTransition__906">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_TP2tsAlhEea_md0mpENoqg" name="startUp" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tRfhMErDEem2BZRQc2M93A" name="Debug__StarupTransition__S" guard="_tRhWYErDEem2BZRQc2M93A" source="_tRT7AErDEem2BZRQc2M93A" target="_tRVwMUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tRhWYErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tRgvUErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;StandBY&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRh9cErDEem2BZRQc2M93A" name="Debug__StarupTransition__S__908">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition__S&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tRjyoErDEem2BZRQc2M93A" name="Debug__StarupTransition__E" source="_tRYMcErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRkZsErDEem2BZRQc2M93A" name="Debug__StarupTransition__E__909">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tRmO4ErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRm18UrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange__911">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tRm18ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRndAErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRoEEUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint__912">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRoEEErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRorIErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRpSMUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint__913">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRpSMErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRrHYErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRrucErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints__914">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRrHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRsVgErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRs8kErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode__915">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tRsVgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRs8kUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRuKsUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg__916">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRtjoErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRtjoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRuKsErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSUnoUrDEem2BZRQc2M93A" name="Debug__reqFlowInit" source="_IjppsAlhEea_md0mpENoqg" target="_tSQ9QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSUnokrDEem2BZRQc2M93A" name="Debug__reqFlowInit__931">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit&quot;,(char *)&quot;Ready&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_JtvGgAnKEeaGqPUk-4V4qQ" name="RequestTimer" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSauQErDEem2BZRQc2M93A" name="Debug__reqFlowInit__E" source="_tSUAkErDEem2BZRQc2M93A" target="_aVMuMAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSauQUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__E__934">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;getMasterName&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tScjcErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSdKgErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange__936">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tScjcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSeYoErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSe_sUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint__937">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSe_sErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSfmwErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSgN0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint__938">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSfmwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tShb8ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSiqEErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints__939">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tShb8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSiqEUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSjRIUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode__940">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tSjRIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSj4MErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSlGUErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg__941">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSj4MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTLjQErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__E" source="_tTGqwErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTMKUErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__E__961">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoResponseFromServer__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tTNYcErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTNYckrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange__963">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tTNYcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTN_gErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTN_gkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint__964">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTN_gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTOmkErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTOmkkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint__965">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTOmkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTPNoErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTPNokrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints__966">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTPNoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTP0sErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTP0skrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode__967">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tTP0sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTQbwErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTRC0krDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg__968">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTQbwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tUApsErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_Oll1cAlKEea_md0mpENoqg" target="_tT_bkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tUApsUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAUzAEr4EemAZaGjK5Aj8g" name="1846" source="_tSQ9QErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwg50Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAX2UEr4EemAZaGjK5Aj8g" name="1847" source="_tPJ-4ErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtroQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAa5oEr4EemAZaGjK5Aj8g" name="1848" source="_tMY-wErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gt3OcEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAcHwEr4EemAZaGjK5Aj8g" name="1849" source="_tLzI4ErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gucdQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAcu0Er4EemAZaGjK5Aj8g" name="1850" source="_tRT7AErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gv510Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAdV4Er4EemAZaGjK5Aj8g" name="1851" source="_tPxp8ErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_guxNYEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__inittrans&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAdV4Ur4EemAZaGjK5Aj8g" name="1852" source="_tNLo8ErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gt98IEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAd88Er4EemAZaGjK5Aj8g" name="1853" source="_tQWRsErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gvtokEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAekAEr4EemAZaGjK5Aj8g" name="1854" source="_tOHdEErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gxDsYEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gAmf0Er4EemAZaGjK5Aj8g" name="From__Ready__1855" source="_IjppsAlhEea_md0mpENoqg" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gxLoMEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gAvpwEr4EemAZaGjK5Aj8g" name="PME_Trig1856" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gAxe8Er4EemAZaGjK5Aj8g" name="PME_Trig1857" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gAzUIEr4EemAZaGjK5Aj8g" name="PME_Trig1858" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gA6B0Er4EemAZaGjK5Aj8g" name="PME_Trig1859" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gA7P8Er4EemAZaGjK5Aj8g" name="PME_Trig1860" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gA8eEEr4EemAZaGjK5Aj8g" name="PME_Trig1861" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gA9FIEr4EemAZaGjK5Aj8g" name="PME_Trig1862" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBAvgEr4EemAZaGjK5Aj8g" name="PME_Trig1863" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBFA8Er4EemAZaGjK5Aj8g" name="PME_Trig1864" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gBGPEEr4EemAZaGjK5Aj8g" name="PME_Trig1865" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gBG2IEr4EemAZaGjK5Aj8g" name="PME_Trig1866" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gBIEQEr4EemAZaGjK5Aj8g" name="PME_Trig1867" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gBOx8Er4EemAZaGjK5Aj8g" name="PME_Trig1868" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBPZAEr4EemAZaGjK5Aj8g" name="PME_Trig1869" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gBQnIEr4EemAZaGjK5Aj8g" name="PME_Trig1870" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gBR1QEr4EemAZaGjK5Aj8g" name="PME_Trig1871" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gBWGsEr4EemAZaGjK5Aj8g" name="PME_Trig1872" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gBZxEEr4EemAZaGjK5Aj8g" name="PME_Trig1873" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gBa_MEr4EemAZaGjK5Aj8g" name="PME_Trig1874" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBcNUEr4EemAZaGjK5Aj8g" name="PME_Trig1875" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gBgewEr4EemAZaGjK5Aj8g" name="From__WaitingForReply__1876" source="_fO-gkAmtEea_md0mpENoqg" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gviCYEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gBkJIEr4EemAZaGjK5Aj8g" name="PME_Trig1877" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBkwMEr4EemAZaGjK5Aj8g" name="PME_Trig1878" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gBl-UEr4EemAZaGjK5Aj8g" name="PME_Trig1879" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBsE8Er4EemAZaGjK5Aj8g" name="PME_Trig1880" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gBt6IEr4EemAZaGjK5Aj8g" name="PME_Trig1881" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBuhMEr4EemAZaGjK5Aj8g" name="PME_Trig1882" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gBvIQEr4EemAZaGjK5Aj8g" name="PME_Trig1883" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gBwWYEr4EemAZaGjK5Aj8g" name="PME_Trig1884" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gBxkgEr4EemAZaGjK5Aj8g" name="PME_Trig1885" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gB3EEEr4EemAZaGjK5Aj8g" name="PME_Trig1886" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gB4SMEr4EemAZaGjK5Aj8g" name="PME_Trig1887" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gB5gUEr4EemAZaGjK5Aj8g" name="PME_Trig1888" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gB6ucEr4EemAZaGjK5Aj8g" name="PME_Trig1889" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gB-Y0Er4EemAZaGjK5Aj8g" name="PME_Trig1890" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gCCDMEr4EemAZaGjK5Aj8g" name="PME_Trig1891" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gCDRUEr4EemAZaGjK5Aj8g" name="PME_Trig1892" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gCD4YEr4EemAZaGjK5Aj8g" name="PME_Trig1893" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gCFtkEr4EemAZaGjK5Aj8g" name="PME_Trig1894" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gCLNIEr4EemAZaGjK5Aj8g" name="PME_Trig1895" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gCMbQEr4EemAZaGjK5Aj8g" name="From__Retry__1896" source="_KwFHIAo0EeaGqPUk-4V4qQ" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwdPcEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gCOQcEr4EemAZaGjK5Aj8g" name="PME_Trig1897" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gCO3gEr4EemAZaGjK5Aj8g" name="PME_Trig1898" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gCQssEr4EemAZaGjK5Aj8g" name="PME_Trig1899" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gCWMQEr4EemAZaGjK5Aj8g" name="PME_Trig1900" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gCXaYEr4EemAZaGjK5Aj8g" name="PME_Trig1901" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gCYogEr4EemAZaGjK5Aj8g" name="PME_Trig1902" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gCbr0Er4EemAZaGjK5Aj8g" name="PME_Trig1903" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gCevIEr4EemAZaGjK5Aj8g" name="PME_Trig1904" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gCgkUEr4EemAZaGjK5Aj8g" name="PME_Trig1905" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gChLYEr4EemAZaGjK5Aj8g" name="PME_Trig1906" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gChycEr4EemAZaGjK5Aj8g" name="PME_Trig1907" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gCjAkEr4EemAZaGjK5Aj8g" name="PME_Trig1908" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gCmD4Er4EemAZaGjK5Aj8g" name="PME_Trig1909" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gCpuQEr4EemAZaGjK5Aj8g" name="PME_Trig1910" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gCq8YEr4EemAZaGjK5Aj8g" name="PME_Trig1911" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gCsKgEr4EemAZaGjK5Aj8g" name="PME_Trig1912" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gCsxkEr4EemAZaGjK5Aj8g" name="PME_Trig1913" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gCv04Er4EemAZaGjK5Aj8g" name="PME_Trig1914" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gCzfQEr4EemAZaGjK5Aj8g" name="PME_Trig1915" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gC0GUEr4EemAZaGjK5Aj8g" name="PME_Trig1916" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gC1UcEr4EemAZaGjK5Aj8g" name="From__StandBY__1917" source="_Q5-S4AlKEea_md0mpENoqg" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gw4tQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gC2ikEr4EemAZaGjK5Aj8g" name="PME_Trig1918" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gC3JoEr4EemAZaGjK5Aj8g" name="PME_Trig1919" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gC5l4Er4EemAZaGjK5Aj8g" name="PME_Trig1920" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gC-eYEr4EemAZaGjK5Aj8g" name="PME_Trig1921" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gC_FcEr4EemAZaGjK5Aj8g" name="PME_Trig1922" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gC_sgEr4EemAZaGjK5Aj8g" name="PME_Trig1923" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gDATkEr4EemAZaGjK5Aj8g" name="PME_Trig1924" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gDBhsEr4EemAZaGjK5Aj8g" name="PME_Trig1925" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gDFzIEr4EemAZaGjK5Aj8g" name="PME_Trig1926" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gDIPYEr4EemAZaGjK5Aj8g" name="PME_Trig1927" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gDI2cEr4EemAZaGjK5Aj8g" name="PME_Trig1928" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gDKEkEr4EemAZaGjK5Aj8g" name="PME_Trig1929" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gDKroEr4EemAZaGjK5Aj8g" name="PME_Trig1930" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gDLSsEr4EemAZaGjK5Aj8g" name="PME_Trig1931" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gDRZUEr4EemAZaGjK5Aj8g" name="PME_Trig1932" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gDTOgEr4EemAZaGjK5Aj8g" name="PME_Trig1933" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gDT1kEr4EemAZaGjK5Aj8g" name="PME_Trig1934" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gDVDsEr4EemAZaGjK5Aj8g" name="PME_Trig1935" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gDWR0Er4EemAZaGjK5Aj8g" name="PME_Trig1936" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gDeNoEr4EemAZaGjK5Aj8g" name="PME_Trig1937" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gDfbwEr4EemAZaGjK5Aj8g" name="From__Debug__InitState__1938" source="_tT_bkErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gulAIEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gDnXkEr4EemAZaGjK5Aj8g" name="PME_Trig1939" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gDolsEr4EemAZaGjK5Aj8g" name="PME_Trig1940" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gDqa4Er4EemAZaGjK5Aj8g" name="PME_Trig1941" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gDuFQEr4EemAZaGjK5Aj8g" name="PME_Trig1942" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gDy9wEr4EemAZaGjK5Aj8g" name="PME_Trig1943" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gD0L4Er4EemAZaGjK5Aj8g" name="PME_Trig1944" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gD3PMEr4EemAZaGjK5Aj8g" name="PME_Trig1945" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gD8uwEr4EemAZaGjK5Aj8g" name="PME_Trig1946" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gD984Er4EemAZaGjK5Aj8g" name="PME_Trig1947" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gD_yEEr4EemAZaGjK5Aj8g" name="PME_Trig1948" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gEF4sEr4EemAZaGjK5Aj8g" name="PME_Trig1949" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gEGfwEr4EemAZaGjK5Aj8g" name="PME_Trig1950" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gEHt4Er4EemAZaGjK5Aj8g" name="PME_Trig1951" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gEIU8Er4EemAZaGjK5Aj8g" name="PME_Trig1952" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gEKKIEr4EemAZaGjK5Aj8g" name="PME_Trig1953" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gEPCoEr4EemAZaGjK5Aj8g" name="PME_Trig1954" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gEQQwEr4EemAZaGjK5Aj8g" name="PME_Trig1955" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gEQ30Er4EemAZaGjK5Aj8g" name="PME_Trig1956" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gERe4Er4EemAZaGjK5Aj8g" name="PME_Trig1957" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gESF8Er4EemAZaGjK5Aj8g" name="PME_Trig1958" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gETUEEr4EemAZaGjK5Aj8g" name="PME_Trig1959" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gEWXYEr4EemAZaGjK5Aj8g" name="From__ProcessResponse__1960" source="_uScfwAmtEea_md0mpENoqg" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gu-BsEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gEao0Er4EemAZaGjK5Aj8g" name="PME_Trig1961" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gEb28Er4EemAZaGjK5Aj8g" name="PME_Trig1962" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gEceAEr4EemAZaGjK5Aj8g" name="PME_Trig1963" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gEe6QEr4EemAZaGjK5Aj8g" name="PME_Trig1964" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gEjywEr4EemAZaGjK5Aj8g" name="PME_Trig1965" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gEkZ0Er4EemAZaGjK5Aj8g" name="PME_Trig1966" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gEln8Er4EemAZaGjK5Aj8g" name="PME_Trig1967" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gEmPAEr4EemAZaGjK5Aj8g" name="PME_Trig1968" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gEm2EEr4EemAZaGjK5Aj8g" name="PME_Trig1969" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gEndIEr4EemAZaGjK5Aj8g" name="PME_Trig1970" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gEs8sEr4EemAZaGjK5Aj8g" name="PME_Trig1971" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gEux4Er4EemAZaGjK5Aj8g" name="PME_Trig1972" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gEvY8Er4EemAZaGjK5Aj8g" name="PME_Trig1973" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gEwAAEr4EemAZaGjK5Aj8g" name="PME_Trig1974" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gExOIEr4EemAZaGjK5Aj8g" name="PME_Trig1975" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gEzDUEr4EemAZaGjK5Aj8g" name="PME_Trig1976" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gE2tsEr4EemAZaGjK5Aj8g" name="PME_Trig1977" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gE5J8Er4EemAZaGjK5Aj8g" name="PME_Trig1978" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gE5xAEr4EemAZaGjK5Aj8g" name="PME_Trig1979" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gE6YEEr4EemAZaGjK5Aj8g" name="PME_Trig1980" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gE7mMEr4EemAZaGjK5Aj8g" name="From__getMasterName__1981" source="_aVMuMAmtEea_md0mpENoqg" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gw_a8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;getMasterName&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gFCT4Er4EemAZaGjK5Aj8g" name="PME_Trig1982" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gFDiAEr4EemAZaGjK5Aj8g" name="PME_Trig1983" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gFEwIEr4EemAZaGjK5Aj8g" name="PME_Trig1984" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gFFXMEr4EemAZaGjK5Aj8g" name="PME_Trig1985" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gFF-QEr4EemAZaGjK5Aj8g" name="PME_Trig1986" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gFJBkEr4EemAZaGjK5Aj8g" name="PME_Trig1987" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gFNTAEr4EemAZaGjK5Aj8g" name="PME_Trig1988" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gFN6EEr4EemAZaGjK5Aj8g" name="PME_Trig1989" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gFOhIEr4EemAZaGjK5Aj8g" name="PME_Trig1990" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gFPvQEr4EemAZaGjK5Aj8g" name="PME_Trig1991" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gFQWUEr4EemAZaGjK5Aj8g" name="PME_Trig1992" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gFVO0Er4EemAZaGjK5Aj8g" name="PME_Trig1993" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gFXEAEr4EemAZaGjK5Aj8g" name="PME_Trig1994" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gFY5MEr4EemAZaGjK5Aj8g" name="PME_Trig1995" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_gFZgQEr4EemAZaGjK5Aj8g" name="PME_Trig1996" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gFcjkEr4EemAZaGjK5Aj8g" name="PME_Trig1997" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_gFgN8Er4EemAZaGjK5Aj8g" name="PME_Trig1998" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gFhcEEr4EemAZaGjK5Aj8g" name="PME_Trig1999" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gFiDIEr4EemAZaGjK5Aj8g" name="PME_Trig2000" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_gFjRQEr4EemAZaGjK5Aj8g" name="PME_Trig2001" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gFrNEEr4EemAZaGjK5Aj8g" name="To__Ready__2002" guard="_gxOEcUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_IjppsAlhEea_md0mpENoqg">
              <ownedRule xmi:id="_gxOEcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2892">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxOEcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2892">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Ready__2002&quot;,&quot;Ready&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gFr0IEr4EemAZaGjK5Aj8g" name="To__WaitingForReply__2003" guard="_gxZDkUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_fO-gkAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_gxZDkUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2903">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxZDkEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2903">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__WaitingForReply__2003&quot;,&quot;WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gFr0IUr4EemAZaGjK5Aj8g" name="To__Retry__2004" guard="_gxct8Ur4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <ownedRule xmi:id="_gxct8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2905">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxct8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2905">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Retry__2004&quot;,&quot;Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gFsbMEr4EemAZaGjK5Aj8g" name="To__StandBY__2005" guard="_gxP5oUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_Q5-S4AlKEea_md0mpENoqg">
              <ownedRule xmi:id="_gxP5oUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2893">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxP5oEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2893">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBY__2005&quot;,&quot;StandBY&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gFsbMUr4EemAZaGjK5Aj8g" name="To__Debug__InitState__2006" guard="_gxS88Ur4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_tT_bkErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_gxS88Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2895">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxS88Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2895">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__2006&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gFtCQEr4EemAZaGjK5Aj8g" name="To__ProcessResponse__2007" guard="_gxdVAEr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_uScfwAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_gxdVAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2906">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxct8kr4EemAZaGjK5Aj8g" name="PME_checkDecesion2906">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ProcessResponse__2007&quot;,&quot;ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gFtCQUr4EemAZaGjK5Aj8g" name="To__getMasterName__2008" guard="_gxWAQ0r4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_aVMuMAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_gxWAQ0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2899">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxWAQkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2899">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__getMasterName__2008&quot;,&quot;getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gFu3cEr4EemAZaGjK5Aj8g" name="Trans__ex2009" source="_tL1lIUrDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwlLQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gF0XAEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__NoMaster__2011" guard="_gxTkAUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gFwsoEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxTkAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2896">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxTkAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2896">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoMaster__2011&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gF1lIUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__NoMaster__2013" source="_gF0-EEr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gvN5UEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gIaYAEr4EemAZaGjK5Aj8g" name="Trans__ex2090" source="_tQYt8ErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwMJsEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gIa_Ekr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ReqFlowDone__2092" guard="_gxX1cUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gIa_EEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxX1cUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2902">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxX1cEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2902">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gIcNMEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ReqFlowDone__2094" source="_gIbmIEr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gvTY4Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gMowsEr4EemAZaGjK5Aj8g" name="Trans__ex2194" source="_tMbbAUrDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gvx6AEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gMql4Ur4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__Retry__2196" guard="_gxa4wUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gMp-0Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxa4wUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2904">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxa4wEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2904">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Retry__2196&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gMr0AUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__Retry__2198" source="_gMrM8Er4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_guPo8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gWzZUEr4EemAZaGjK5Aj8g" name="Trans__ex2298" source="_tRYMcErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gup4oEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gW0AYUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__StarupTransition__2300" guard="_gxVZMUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gWzZUUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxVZMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2897">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxVZMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2897">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gW1OgEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__StarupTransition__2302" source="_gW0ncEr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwQbIEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gaTZQEr4EemAZaGjK5Aj8g" name="Trans__ex2380" source="_tOc0QUrDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gvEvYEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gaUAUUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__reqService__2382" guard="_gxWAQUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gaTZQUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxWAQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2898">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxWAQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2898">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqService__2382&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gaZf4Er4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__reqService__2384" source="_gaVOcEr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_guGfAEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gdpBIUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__getMasterName__checkConfig__9__2462" guard="_gxXOYUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gdoaEEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxXOYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2901">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxXOYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2901">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gdpoMUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__getMasterName__checkConfig__9__2464" source="_gdpBIkr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gv-HQEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gf31wEr4EemAZaGjK5Aj8g" name="Trans__ex2519" source="_tTGqwErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwwKYEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gf65EEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__NoResponseFromServer__2521" guard="_gxSV4Ur4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gf31wUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxSV4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2894">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxSV4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2894">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gf_xkEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__NoResponseFromServer__2523" source="_gf98YEr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_guUhcEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gkAH0Er4EemAZaGjK5Aj8g" name="Trans__ex2623" source="_tP1UUUrDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gvm64Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gkCkEUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__inittrans__2625" guard="_gxWnUUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gkAu4Er4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxWnUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2900">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxWnUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2900">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__inittrans__2625&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gkFnYUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__inittrans__2627" source="_gkEZQEr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtvSoEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gnBmoEr4EemAZaGjK5Aj8g" name="Trans__ex2704" source="_tNOsQUrDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gu37EEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gnCNskr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__ServiceResult__2706" guard="_gxNdYUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gnCNsEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxNdYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2891">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxNdYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2891">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gnC0wkr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__ServiceResult__2708" source="_gnC0wEr4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwz0wEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gqP5wEr4EemAZaGjK5Aj8g" name="Trans__ex2786" source="_tSUAkErDEem2BZRQc2M93A" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gvb7wEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gqQg0Ur4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__reqFlowInit__2788" guard="_gxM2UUr4EemAZaGjK5Aj8g" source="_f_RqIEr4EemAZaGjK5Aj8g" target="_gqP5wUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_gxM2UUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2890">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_gxM2UEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2890">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gqRu8Ur4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__reqFlowInit__2790" source="_gqRH4Er4EemAZaGjK5Aj8g" target="_f_RqIEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gwFcAEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2788&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2706&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__2002&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__2005&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2521&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2011&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__2300&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;getMasterName&quot;,&quot;To__getMasterName__2008&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2625&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2462&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2092&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__2003&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2196&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__2004&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__2007&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Oll1cAlKEea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_Q5-S4AlKEea_md0mpENoqg" name="StandBY">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYErDEem2BZRQc2M93A" name="StandBY__984">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYUrDEem2BZRQc2M93A" name="StandBY__985">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_IjppsAlhEea_md0mpENoqg" name="Ready">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_fmLpMAm5Eea_md0mpENoqg" name="ReadyEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Ready&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU7PsErDEem2BZRQc2M93A" name="Ready__986">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_aVMuMAmtEea_md0mpENoqg" name="getMasterName">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_nvRWkAnBEea_md0mpENoqg" name="GetMasterNameEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;getMasterName&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU2XMErDEem2BZRQc2M93A" name="getMasterName__983">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_fO-gkAmtEea_md0mpENoqg" name="WaitingForReply">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_SJEfMAo6EeaGqPUk-4V4qQ" name="WaitForReply">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_r05c0Ao9EeaGqPUk-4V4qQ" name="CancellTimer">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_uScfwAmtEea_md0mpENoqg" name="ProcessResponse">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_u-x1UAoxEeaGqPUk-4V4qQ" name="ProcessMessage">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; : Processing Response .....\n&quot;;
    //int r=rand()%10;
    
    Timer.informIn(UMLRTTimespec(0,500),4);
    //messageID=messageID+1; 
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageProcessed,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tUvpgErDEem2BZRQc2M93A" name="ProcessResponse__981">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_KwFHIAo0EeaGqPUk-4V4qQ" name="Retry">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_1CJTsAo2EeaGqPUk-4V4qQ" name="RetryConfig">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Retry&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    int r=rand()%5;
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The master is not available, retry in &quot;&lt;&lt;r&lt;&lt; &quot; second\n&quot;;
    Timer.informIn(UMLRTTimespec(r,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tUyFwErDEem2BZRQc2M93A" name="Retry__982">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tLzI4ErDEem2BZRQc2M93A" name="Debug__Path__NoMaster" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tLzv8UrDEem2BZRQc2M93A" name="Debug__C__NoMaster">
              <connectionPoint xmi:id="_tL0-EUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tL1lIUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gFwsoEr4EemAZaGjK5Aj8g" name="From__Parent__2010" kind="entryPoint"/>
              <connectionPoint xmi:id="_gF0-EEr4EemAZaGjK5Aj8g" name="To__Parent__2012" kind="exitPoint"/>
              <region xmi:id="_tLzv8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMJHIErDEem2BZRQc2M93A" name="Debug__init__trans__NoMaster" source="_tL0-EUrDEem2BZRQc2M93A" target="_tMFcwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMS4IErDEem2BZRQc2M93A" name="Debug__init__trans__NoMaster__753">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__init__trans__NoMaster&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tMJHIUrDEem2BZRQc2M93A" name="Debug__Ac__NoMaster" source="_tMFcwUrDEem2BZRQc2M93A" target="_tMGq4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMUGQErDEem2BZRQc2M93A" name="Debug__Ac__NoMaster__755">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__Ac__NoMaster&quot;,(char *)&quot;Debug__B__Ac__NoMaster&quot;,(char *)&quot;Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMJHIkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMJuMErDEem2BZRQc2M93A" name="Debug__En__Retry" source="_tMGq4ErDEem2BZRQc2M93A" target="_tMH5AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMJuMkrDEem2BZRQc2M93A" name="RetryConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    int r=rand()%5;
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The master is not available, retry in &quot;&lt;&lt;r&lt;&lt; &quot; second\n&quot;;
    Timer.informIn(UMLRTTimespec(r,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__En__Retry&quot;,(char *)&quot;Debug__A__Ac__NoMaster&quot;,(char *)&quot;Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMJuMUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMKVQErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster" source="_tMH5AErDEem2BZRQc2M93A" target="_tL1lIUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMWigErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster__758">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__end__trans__NoMaster&quot;,(char *)&quot;Debug__A__En__NoMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMKVQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gF4BYEr4EemAZaGjK5Aj8g" name="Trans__ex2016" source="_tL1lIUrDEem2BZRQc2M93A" target="_gF2MMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gIFn4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2085&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__2081&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__2082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2083&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gF4ocEr4EemAZaGjK5Aj8g" name="Trans__Init__State__20152017" source="_gF2zQEr4EemAZaGjK5Aj8g" target="_gF2MMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gIROEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2015&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2085&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2015&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__2081&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2015&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__2082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2015&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2083&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2015&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gF_WIEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__NoMaster__2018" source="_tMGq4ErDEem2BZRQc2M93A" target="_gF2MMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gIJ5UEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2085&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__2081&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__2082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2083&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gF_9MEr4EemAZaGjK5Aj8g" name="PME_Trig2019" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGAkQEr4EemAZaGjK5Aj8g" name="PME_Trig2020" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gGByYEr4EemAZaGjK5Aj8g" name="PME_Trig2021" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGDAgEr4EemAZaGjK5Aj8g" name="PME_Trig2022" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gGJHIEr4EemAZaGjK5Aj8g" name="PME_Trig2023" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGKVQEr4EemAZaGjK5Aj8g" name="PME_Trig2024" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gGK8UEr4EemAZaGjK5Aj8g" name="PME_Trig2025" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGMKcEr4EemAZaGjK5Aj8g" name="PME_Trig2026" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gGNYkEr4EemAZaGjK5Aj8g" name="PME_Trig2027" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGP00Er4EemAZaGjK5Aj8g" name="PME_Trig2028" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gGQb4Er4EemAZaGjK5Aj8g" name="PME_Trig2029" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gGRqAEr4EemAZaGjK5Aj8g" name="PME_Trig2030" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gGSREEr4EemAZaGjK5Aj8g" name="PME_Trig2031" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gGUGQEr4EemAZaGjK5Aj8g" name="PME_Trig2032" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGZl0Er4EemAZaGjK5Aj8g" name="PME_Trig2033" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gGd3QEr4EemAZaGjK5Aj8g" name="PME_Trig2034" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gGfFYEr4EemAZaGjK5Aj8g" name="PME_Trig2035" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gGfscEr4EemAZaGjK5Aj8g" name="PME_Trig2036" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gGg6kEr4EemAZaGjK5Aj8g" name="PME_Trig2037" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGiIsEr4EemAZaGjK5Aj8g" name="PME_Trig2038" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gGnoQEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__NoMaster__2039" source="_tMFcwUrDEem2BZRQc2M93A" target="_gF2MMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gIG2AEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2085&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__2081&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__2082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2083&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gGo2YEr4EemAZaGjK5Aj8g" name="PME_Trig2040" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGpdcEr4EemAZaGjK5Aj8g" name="PME_Trig2041" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gGqrkEr4EemAZaGjK5Aj8g" name="PME_Trig2042" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGr5sEr4EemAZaGjK5Aj8g" name="PME_Trig2043" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gGwLIEr4EemAZaGjK5Aj8g" name="PME_Trig2044" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gGynYEr4EemAZaGjK5Aj8g" name="PME_Trig2045" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gGz1gEr4EemAZaGjK5Aj8g" name="PME_Trig2046" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gG0ckEr4EemAZaGjK5Aj8g" name="PME_Trig2047" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gG1qsEr4EemAZaGjK5Aj8g" name="PME_Trig2048" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gG240Er4EemAZaGjK5Aj8g" name="PME_Trig2049" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gG9mgEr4EemAZaGjK5Aj8g" name="PME_Trig2050" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gG-NkEr4EemAZaGjK5Aj8g" name="PME_Trig2051" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gG-0oEr4EemAZaGjK5Aj8g" name="PME_Trig2052" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gHACwEr4EemAZaGjK5Aj8g" name="PME_Trig2053" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHCfAEr4EemAZaGjK5Aj8g" name="PME_Trig2054" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gHDGEEr4EemAZaGjK5Aj8g" name="PME_Trig2055" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gHEUMEr4EemAZaGjK5Aj8g" name="PME_Trig2056" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gHE7QEr4EemAZaGjK5Aj8g" name="PME_Trig2057" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gHGJYEr4EemAZaGjK5Aj8g" name="PME_Trig2058" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHHXgEr4EemAZaGjK5Aj8g" name="PME_Trig2059" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gHLo8Er4EemAZaGjK5Aj8g" name="From__Debug__A__En__NoMaster__2060" source="_tMH5AErDEem2BZRQc2M93A" target="_gF2MMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gIOKwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2085&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__2081&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__2082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2083&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gHPTUEr4EemAZaGjK5Aj8g" name="PME_Trig2061" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHTkwEr4EemAZaGjK5Aj8g" name="PME_Trig2062" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gHZrYEr4EemAZaGjK5Aj8g" name="PME_Trig2063" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHcHoEr4EemAZaGjK5Aj8g" name="PME_Trig2064" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gHcusEr4EemAZaGjK5Aj8g" name="PME_Trig2065" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHd80Er4EemAZaGjK5Aj8g" name="PME_Trig2066" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gHej4Er4EemAZaGjK5Aj8g" name="PME_Trig2067" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHiOQEr4EemAZaGjK5Aj8g" name="PME_Trig2068" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gHl4oEr4EemAZaGjK5Aj8g" name="PME_Trig2069" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHmfsEr4EemAZaGjK5Aj8g" name="PME_Trig2070" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gHnt0Er4EemAZaGjK5Aj8g" name="PME_Trig2071" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gHoU4Er4EemAZaGjK5Aj8g" name="PME_Trig2072" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gHqKEEr4EemAZaGjK5Aj8g" name="PME_Trig2073" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gHvCkEr4EemAZaGjK5Aj8g" name="PME_Trig2074" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gHwQsEr4EemAZaGjK5Aj8g" name="PME_Trig2075" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gHxe0Er4EemAZaGjK5Aj8g" name="PME_Trig2076" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gHyF4Er4EemAZaGjK5Aj8g" name="PME_Trig2077" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gHzUAEr4EemAZaGjK5Aj8g" name="PME_Trig2078" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gH6owEr4EemAZaGjK5Aj8g" name="PME_Trig2079" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gH724Er4EemAZaGjK5Aj8g" name="PME_Trig2080" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gH9sEEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__NoMaster__2081" guard="_gIZJ4Ur4EemAZaGjK5Aj8g" source="_gF2MMEr4EemAZaGjK5Aj8g" target="_tMGq4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gIZJ4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2087">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gIZJ4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2087">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoMaster__2081&quot;,&quot;Debug__A__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gH-6MEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__NoMaster__2082" guard="_gIZJ40r4EemAZaGjK5Aj8g" source="_gF2MMEr4EemAZaGjK5Aj8g" target="_tMFcwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gIZJ40r4EemAZaGjK5Aj8g" name="PME_checkDecesion2088">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gIZJ4kr4EemAZaGjK5Aj8g" name="PME_checkDecesion2088">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoMaster__2082&quot;,&quot;Debug__B__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gIAIUEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__NoMaster__2083" guard="_gIZw8Ur4EemAZaGjK5Aj8g" source="_gF2MMEr4EemAZaGjK5Aj8g" target="_tMH5AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gIZw8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2089">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gIZw8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2089">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__NoMaster__2083&quot;,&quot;Debug__A__En__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gIEZwEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2084" source="_gFwsoEr4EemAZaGjK5Aj8g" target="_gF2MMEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gIPY4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2085&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__2081&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__2082&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2083&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gIEZwUr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2085" guard="_gIYi0Ur4EemAZaGjK5Aj8g" source="_gF2MMEr4EemAZaGjK5Aj8g" target="_gF0-EEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gIYi0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2086">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gIYi0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2086">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2085&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMFcwUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMFcwkrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMLjYUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster__749">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMGq4ErDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMGq4UrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMN_oUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster__750">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMH5AErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMIgEErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMRC8UrDEem2BZRQc2M93A" name="Debug__A__En__NoMaster__751">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gF2MMEr4EemAZaGjK5Aj8g" name="DecesionPoint__2014" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gF2zQEr4EemAZaGjK5Aj8g" name="Init__State__2015"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tMY-wErDEem2BZRQc2M93A" name="Debug__Path__Retry" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tMaM4ErDEem2BZRQc2M93A" name="Debug__C__Retry">
              <connectionPoint xmi:id="_tMaz8UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tMbbAUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gMp-0Er4EemAZaGjK5Aj8g" name="From__Parent__2195" kind="entryPoint"/>
              <connectionPoint xmi:id="_gMrM8Er4EemAZaGjK5Aj8g" name="To__Parent__2197" kind="exitPoint"/>
              <region xmi:id="_tMaM4UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMyAUErDEem2BZRQc2M93A" name="Debug__init__trans__Retry" source="_tMaz8UrDEem2BZRQc2M93A" target="_tMtH0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNACwErDEem2BZRQc2M93A" name="Debug__init__trans__Retry__778">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__init__trans__Retry&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tMyAUUrDEem2BZRQc2M93A" name="Debug__Ex__Retry" source="_tMtH0ErDEem2BZRQc2M93A" target="_tMuV8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNB38ErDEem2BZRQc2M93A" name="Debug__Ex__Retry__780">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__Ex__Retry&quot;,(char *)&quot;Debug__B__Ex__Retry&quot;,(char *)&quot;Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMyAUkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMyAU0rDEem2BZRQc2M93A" name="Debug__AC__Retry" source="_tMuV8ErDEem2BZRQc2M93A" target="_tMwLIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNEUMErDEem2BZRQc2M93A" name="Debug__AC__Retry__782">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__AC__Retry&quot;,(char *)&quot;Debug__B__Ac__Retry&quot;,(char *)&quot;Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMynYErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMynYUrDEem2BZRQc2M93A" name="Debug__En__getMasterName" source="_tMwLIErDEem2BZRQc2M93A" target="_tMxZQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMzOcErDEem2BZRQc2M93A" name="GetMasterNameEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__En__getMasterName&quot;,(char *)&quot;Debug__A__Ac__Retry&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMynYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMzOcUrDEem2BZRQc2M93A" name="Debug__end__trans__Retry" source="_tMxZQErDEem2BZRQc2M93A" target="_tMbbAUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNH-kErDEem2BZRQc2M93A" name="Debug__end__trans__Retry__785">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__end__trans__Retry&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMzOckrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gMuQQEr4EemAZaGjK5Aj8g" name="Trans__Init__State__22002201" source="_gMtCIEr4EemAZaGjK5Aj8g" target="_gMr0Akr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gV-S4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2200&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2289&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2200&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__2287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2200&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2200&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__2290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2200&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2292&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2200&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gMu3UEr4EemAZaGjK5Aj8g" name="Trans__ex2202" source="_tMbbAUrDEem2BZRQc2M93A" target="_gMr0Akr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gVwQcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2289&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__2287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__2290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2292&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gM1lAEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__Retry__2203" source="_tMwLIErDEem2BZRQc2M93A" target="_gMr0Akr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gWQmwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2289&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__2287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__2290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2292&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gM2zIEr4EemAZaGjK5Aj8g" name="PME_Trig2204" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gM3aMEr4EemAZaGjK5Aj8g" name="PME_Trig2205" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gM4oUEr4EemAZaGjK5Aj8g" name="PME_Trig2206" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gM7EkEr4EemAZaGjK5Aj8g" name="PME_Trig2207" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gM85wEr4EemAZaGjK5Aj8g" name="PME_Trig2208" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gNBLMEr4EemAZaGjK5Aj8g" name="PME_Trig2209" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gNGqwEr4EemAZaGjK5Aj8g" name="PME_Trig2210" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gNIf8Er4EemAZaGjK5Aj8g" name="PME_Trig2211" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gNK8MEr4EemAZaGjK5Aj8g" name="PME_Trig2212" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gNSQ8Er4EemAZaGjK5Aj8g" name="PME_Trig2213" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gNaMwEr4EemAZaGjK5Aj8g" name="PME_Trig2214" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gNg6cEr4EemAZaGjK5Aj8g" name="PME_Trig2215" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gNoPMEr4EemAZaGjK5Aj8g" name="PME_Trig2216" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gNwLAEr4EemAZaGjK5Aj8g" name="PME_Trig2217" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gN3fwEr4EemAZaGjK5Aj8g" name="PME_Trig2218" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gN58AEr4EemAZaGjK5Aj8g" name="PME_Trig2219" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gN7KIEr4EemAZaGjK5Aj8g" name="PME_Trig2220" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gOBQwEr4EemAZaGjK5Aj8g" name="PME_Trig2221" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gOP6QEr4EemAZaGjK5Aj8g" name="PME_Trig2222" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gOWn8Er4EemAZaGjK5Aj8g" name="PME_Trig2223" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gOZrQEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__Retry__2224" source="_tMtH0ErDEem2BZRQc2M93A" target="_gMr0Akr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gWfQQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2289&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__2287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__2290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2292&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gOaSUEr4EemAZaGjK5Aj8g" name="PME_Trig2225" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gObgcEr4EemAZaGjK5Aj8g" name="PME_Trig2226" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gOcHgEr4EemAZaGjK5Aj8g" name="PME_Trig2227" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gOdVoEr4EemAZaGjK5Aj8g" name="PME_Trig2228" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gOejwEr4EemAZaGjK5Aj8g" name="PME_Trig2229" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gOl4gEr4EemAZaGjK5Aj8g" name="PME_Trig2230" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gOo70Er4EemAZaGjK5Aj8g" name="PME_Trig2231" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gOqJ8Er4EemAZaGjK5Aj8g" name="PME_Trig2232" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gOqxAEr4EemAZaGjK5Aj8g" name="PME_Trig2233" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gOr_IEr4EemAZaGjK5Aj8g" name="PME_Trig2234" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gOsmMEr4EemAZaGjK5Aj8g" name="PME_Trig2235" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gOtNQEr4EemAZaGjK5Aj8g" name="PME_Trig2236" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gOubYEr4EemAZaGjK5Aj8g" name="PME_Trig2237" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gOvCcEr4EemAZaGjK5Aj8g" name="PME_Trig2238" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gOwQkEr4EemAZaGjK5Aj8g" name="PME_Trig2239" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gPCkcEr4EemAZaGjK5Aj8g" name="PME_Trig2240" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gPOxsEr4EemAZaGjK5Aj8g" name="PME_Trig2241" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gPYisEr4EemAZaGjK5Aj8g" name="PME_Trig2242" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gPjh0Er4EemAZaGjK5Aj8g" name="PME_Trig2243" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gPq2kEr4EemAZaGjK5Aj8g" name="PME_Trig2244" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gPrdoEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__getMasterName__2245" source="_tMxZQErDEem2BZRQc2M93A" target="_gMr0Akr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gVgY0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2289&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__2287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__2290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2292&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gPsEsEr4EemAZaGjK5Aj8g" name="PME_Trig2246" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gPsrwEr4EemAZaGjK5Aj8g" name="PME_Trig2247" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gPt54Er4EemAZaGjK5Aj8g" name="PME_Trig2248" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gPvIAEr4EemAZaGjK5Aj8g" name="PME_Trig2249" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gPwWIEr4EemAZaGjK5Aj8g" name="PME_Trig2250" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gP45AEr4EemAZaGjK5Aj8g" name="PME_Trig2251" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gP7VQEr4EemAZaGjK5Aj8g" name="PME_Trig2252" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gP8jYEr4EemAZaGjK5Aj8g" name="PME_Trig2253" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gP9KcEr4EemAZaGjK5Aj8g" name="PME_Trig2254" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gP9xgEr4EemAZaGjK5Aj8g" name="PME_Trig2255" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gP-_oEr4EemAZaGjK5Aj8g" name="PME_Trig2256" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gQANwEr4EemAZaGjK5Aj8g" name="PME_Trig2257" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gQJXsEr4EemAZaGjK5Aj8g" name="PME_Trig2258" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gQShoEr4EemAZaGjK5Aj8g" name="PME_Trig2259" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gQTvwEr4EemAZaGjK5Aj8g" name="PME_Trig2260" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gQVk8Er4EemAZaGjK5Aj8g" name="PME_Trig2261" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gQeu4Er4EemAZaGjK5Aj8g" name="PME_Trig2262" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gQqVEEr4EemAZaGjK5Aj8g" name="PME_Trig2263" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gQ0tIEr4EemAZaGjK5Aj8g" name="PME_Trig2264" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gQ8o8Er4EemAZaGjK5Aj8g" name="PME_Trig2265" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gQ93EEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__Retry__2266" source="_tMuV8ErDEem2BZRQc2M93A" target="_gMr0Akr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gWq2cEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2289&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__2287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__2290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2292&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gRCvkEr4EemAZaGjK5Aj8g" name="PME_Trig2267" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gRQK8Er4EemAZaGjK5Aj8g" name="PME_Trig2268" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gRdmUEr4EemAZaGjK5Aj8g" name="PME_Trig2269" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gRtd8Er4EemAZaGjK5Aj8g" name="PME_Trig2270" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gR3O8Er4EemAZaGjK5Aj8g" name="PME_Trig2271" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gSF4cEr4EemAZaGjK5Aj8g" name="PME_Trig2272" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gSQ3kEr4EemAZaGjK5Aj8g" name="PME_Trig2273" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gScdwEr4EemAZaGjK5Aj8g" name="PME_Trig2274" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gSjygEr4EemAZaGjK5Aj8g" name="PME_Trig2275" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gSruUEr4EemAZaGjK5Aj8g" name="PME_Trig2276" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gSv_wEr4EemAZaGjK5Aj8g" name="PME_Trig2277" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gTAecEr4EemAZaGjK5Aj8g" name="PME_Trig2278" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gTEv4Er4EemAZaGjK5Aj8g" name="PME_Trig2279" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gTXDwEr4EemAZaGjK5Aj8g" name="PME_Trig2280" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gTfmoEr4EemAZaGjK5Aj8g" name="PME_Trig2281" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gTqlwEr4EemAZaGjK5Aj8g" name="PME_Trig2282" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gT_V4Er4EemAZaGjK5Aj8g" name="PME_Trig2283" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gUN_YEr4EemAZaGjK5Aj8g" name="PME_Trig2284" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gUYXcEr4EemAZaGjK5Aj8g" name="PME_Trig2285" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gUg6UEr4EemAZaGjK5Aj8g" name="PME_Trig2286" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gU574Er4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__Retry__2287" guard="_gWvH4Ur4EemAZaGjK5Aj8g" source="_gMr0Akr4EemAZaGjK5Aj8g" target="_tMwLIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gWvH4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2294">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gWvH4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2294">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Retry__2287&quot;,&quot;Debug__A__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gU7KAEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__Retry__2288" guard="_gWwWAUr4EemAZaGjK5Aj8g" source="_gMr0Akr4EemAZaGjK5Aj8g" target="_tMtH0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gWwWAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2295">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gWwWAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2295">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Retry__2288&quot;,&quot;Debug__B__Ex__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gU8YIEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__getMasterName__2289" guard="_gWsroUr4EemAZaGjK5Aj8g" source="_gMr0Akr4EemAZaGjK5Aj8g" target="_tMxZQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gWsroUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2293">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gWsroEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2293">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__2289&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gU-NUEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__Retry__2290" guard="_gWxkIUr4EemAZaGjK5Aj8g" source="_gMr0Akr4EemAZaGjK5Aj8g" target="_tMuV8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gWxkIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2296">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gWxkIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2296">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Retry__2290&quot;,&quot;Debug__B__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gVX18Er4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2291" source="_gMp-0Er4EemAZaGjK5Aj8g" target="_gMr0Akr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gWDLYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2289&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__Ac__Retry&quot;,&quot;To__Debug__A__Ac__Retry__2287&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__2290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2292&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gVZEEEr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2292" guard="_gWyLMUr4EemAZaGjK5Aj8g" source="_gMr0Akr4EemAZaGjK5Aj8g" target="_gMrM8Er4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gWyLMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2297">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gWyLMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2297">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2292&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMtH0ErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMtH0UrDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM1DoErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry__773">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMuV8ErDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMuV8UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM3f4UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry__774">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMwLIErDEem2BZRQc2M93A" name="Debug__A__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMwLIUrDEem2BZRQc2M93A" name="Debug__A__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM58IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Retry__775">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMxZQErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMxZQUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM7xUErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__776">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gMr0Akr4EemAZaGjK5Aj8g" name="DecesionPoint__2199" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gMtCIEr4EemAZaGjK5Aj8g" name="Init__State__2200"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tNLo8ErDEem2BZRQc2M93A" name="Debug__Path__ServiceResult" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tNMQAUrDEem2BZRQc2M93A" name="Debug__C__ServiceResult">
              <connectionPoint xmi:id="_tNOFMErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tNOsQUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gnCNsEr4EemAZaGjK5Aj8g" name="From__Parent__2705" kind="entryPoint"/>
              <connectionPoint xmi:id="_gnC0wEr4EemAZaGjK5Aj8g" name="To__Parent__2707" kind="exitPoint"/>
              <region xmi:id="_tNMQAkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tNnt0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult" source="_tNOFMErDEem2BZRQc2M93A" target="_tNiOQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tN6BsErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult__805">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__init__trans__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tNqKEErDEem2BZRQc2M93A" name="Debug__En__ProcessResponse" source="_tNkqgErDEem2BZRQc2M93A" target="_tNmfsErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNqxIErDEem2BZRQc2M93A" name="ProcessMessage" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; : Processing Response .....\n&quot;;
    //int r=rand()%10;
    
    Timer.informIn(UMLRTTimespec(0,500),4);
    //messageID=messageID+1; 
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageProcessed,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__En__ProcessResponse&quot;,(char *)&quot;Debug__A__Ac__ServiceResult&quot;,(char *)&quot;Debug__A__En__ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNqKEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tNr_QErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceResult" source="_tNmfsErDEem2BZRQc2M93A" target="_tNOsQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOBWcErDEem2BZRQc2M93A" name="Debug__end__trans__ServiceResult__810">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__end__trans__ServiceResult&quot;,(char *)&quot;Debug__A__En__ProcessResponse&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNr_QUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gnKwkEr4EemAZaGjK5Aj8g" name="Trans__ex2711" source="_tNOsQUrDEem2BZRQc2M93A" target="_gnDb0Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gp9l4Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__2777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2781&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gnKwkUr4EemAZaGjK5Aj8g" name="Trans__Init__State__27102712" source="_gnGfIEr4EemAZaGjK5Aj8g" target="_gnDb0Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gp8XwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2710&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__2777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2710&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2710&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2781&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2710&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2710&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gnMlwEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__ProcessResponse__2713" source="_tNmfsErDEem2BZRQc2M93A" target="_gnDb0Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gqB3UEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__2777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2781&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ProcessResponse&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gnQQIEr4EemAZaGjK5Aj8g" name="PME_Trig2714" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gnVvsEr4EemAZaGjK5Aj8g" name="PME_Trig2715" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gnZaEEr4EemAZaGjK5Aj8g" name="PME_Trig2716" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gncdYEr4EemAZaGjK5Aj8g" name="PME_Trig2717" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gnfgsEr4EemAZaGjK5Aj8g" name="PME_Trig2718" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gngHwEr4EemAZaGjK5Aj8g" name="PME_Trig2719" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gnhV4Er4EemAZaGjK5Aj8g" name="PME_Trig2720" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gnh88Er4EemAZaGjK5Aj8g" name="PME_Trig2721" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gnmOYEr4EemAZaGjK5Aj8g" name="PME_Trig2722" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gnp4wEr4EemAZaGjK5Aj8g" name="PME_Trig2723" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gnrG4Er4EemAZaGjK5Aj8g" name="PME_Trig2724" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gnuKMEr4EemAZaGjK5Aj8g" name="PME_Trig2725" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gnzpwEr4EemAZaGjK5Aj8g" name="PME_Trig2726" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gn1e8Er4EemAZaGjK5Aj8g" name="PME_Trig2727" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gn6XcEr4EemAZaGjK5Aj8g" name="PME_Trig2728" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gn8zsEr4EemAZaGjK5Aj8g" name="PME_Trig2729" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gn-B0Er4EemAZaGjK5Aj8g" name="PME_Trig2730" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_goBFIEr4EemAZaGjK5Aj8g" name="PME_Trig2731" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_goEIcEr4EemAZaGjK5Aj8g" name="PME_Trig2732" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_goGksEr4EemAZaGjK5Aj8g" name="PME_Trig2733" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_goIZ4Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__WaitingForReply__2734" source="_tNiOQUrDEem2BZRQc2M93A" target="_gnDb0Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gqACIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__2777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2781&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_goIZ4Ur4EemAZaGjK5Aj8g" name="PME_Trig2735" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_goJoAEr4EemAZaGjK5Aj8g" name="PME_Trig2736" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_goPuoEr4EemAZaGjK5Aj8g" name="PME_Trig2737" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_goTZAEr4EemAZaGjK5Aj8g" name="PME_Trig2738" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_goUnIEr4EemAZaGjK5Aj8g" name="PME_Trig2739" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_goZfoEr4EemAZaGjK5Aj8g" name="PME_Trig2740" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gobU0Er4EemAZaGjK5Aj8g" name="PME_Trig2741" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_godKAEr4EemAZaGjK5Aj8g" name="PME_Trig2742" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_godxEEr4EemAZaGjK5Aj8g" name="PME_Trig2743" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_goeYIEr4EemAZaGjK5Aj8g" name="PME_Trig2744" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_goiCgEr4EemAZaGjK5Aj8g" name="PME_Trig2745" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gomT8Er4EemAZaGjK5Aj8g" name="PME_Trig2746" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gom7AEr4EemAZaGjK5Aj8g" name="PME_Trig2747" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gooJIEr4EemAZaGjK5Aj8g" name="PME_Trig2748" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gou20Er4EemAZaGjK5Aj8g" name="PME_Trig2749" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_goxTEEr4EemAZaGjK5Aj8g" name="PME_Trig2750" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gozvUEr4EemAZaGjK5Aj8g" name="PME_Trig2751" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_go4AwEr4EemAZaGjK5Aj8g" name="PME_Trig2752" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_go518Er4EemAZaGjK5Aj8g" name="PME_Trig2753" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_go7EEEr4EemAZaGjK5Aj8g" name="PME_Trig2754" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_go8SMEr4EemAZaGjK5Aj8g" name="PME_Trig2755" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_go85QEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__ServiceResult__2756" source="_tNkqgErDEem2BZRQc2M93A" target="_gnDb0Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gp-0AEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__2777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2781&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_go9gUEr4EemAZaGjK5Aj8g" name="PME_Trig2757" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gpCY0Er4EemAZaGjK5Aj8g" name="PME_Trig2758" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gpGDMEr4EemAZaGjK5Aj8g" name="PME_Trig2759" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gpMw4Er4EemAZaGjK5Aj8g" name="PME_Trig2760" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gpQbQEr4EemAZaGjK5Aj8g" name="PME_Trig2761" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gpV60Er4EemAZaGjK5Aj8g" name="PME_Trig2762" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gpWh4Er4EemAZaGjK5Aj8g" name="PME_Trig2763" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gpY-IEr4EemAZaGjK5Aj8g" name="PME_Trig2764" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gpZlMEr4EemAZaGjK5Aj8g" name="PME_Trig2765" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gpazUEr4EemAZaGjK5Aj8g" name="PME_Trig2766" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gpcBcEr4EemAZaGjK5Aj8g" name="PME_Trig2767" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gpcogEr4EemAZaGjK5Aj8g" name="PME_Trig2768" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gphhAEr4EemAZaGjK5Aj8g" name="PME_Trig2769" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gpj9QEr4EemAZaGjK5Aj8g" name="PME_Trig2770" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gpkkUEr4EemAZaGjK5Aj8g" name="PME_Trig2771" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gpmZgEr4EemAZaGjK5Aj8g" name="PME_Trig2772" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gprSAEr4EemAZaGjK5Aj8g" name="PME_Trig2773" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gptuQEr4EemAZaGjK5Aj8g" name="PME_Trig2774" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gpu8YEr4EemAZaGjK5Aj8g" name="PME_Trig2775" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gpx_sEr4EemAZaGjK5Aj8g" name="PME_Trig2776" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gp0b8Er4EemAZaGjK5Aj8g" name="To__Debug__A__En__ProcessResponse__2777" guard="_gqDsgUr4EemAZaGjK5Aj8g" source="_gnDb0Er4EemAZaGjK5Aj8g" target="_tNmfsErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gqDsgUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2782">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gqDsgEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2782">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ProcessResponse__2777&quot;,&quot;Debug__A__En__ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gp1DAEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__WaitingForReply__2778" guard="_gqDsg0r4EemAZaGjK5Aj8g" source="_gnDb0Er4EemAZaGjK5Aj8g" target="_tNiOQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gqDsg0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2783">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gqDsgkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2783">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__2778&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gp1DAUr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__ServiceResult__2779" guard="_gqJMEUr4EemAZaGjK5Aj8g" source="_gnDb0Er4EemAZaGjK5Aj8g" target="_tNkqgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gqJMEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2785">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gqJMEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2785">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceResult__2779&quot;,&quot;Debug__A__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gp7JoEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2780" source="_gnCNsEr4EemAZaGjK5Aj8g" target="_gnDb0Er4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gqDFcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__En__ProcessResponse&quot;,&quot;To__Debug__A__En__ProcessResponse__2777&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2778&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2781&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2779&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gp7JoUr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2781" guard="_gqGIwEr4EemAZaGjK5Aj8g" source="_gnDb0Er4EemAZaGjK5Aj8g" target="_gnC0wEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gqGIwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2784">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gqFhsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2784">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2781&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tNiOQUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNiOQkrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNtNYUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__800">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNkqgErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNkqgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN1JMErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult__802">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNmfsErDEem2BZRQc2M93A" name="Debug__A__En__ProcessResponse">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNmfsUrDEem2BZRQc2M93A" name="Debug__A__En__ProcessResponse">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__En__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN3lcErDEem2BZRQc2M93A" name="Debug__A__En__ProcessResponse__803">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__En__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gnDb0Er4EemAZaGjK5Aj8g" name="DecesionPoint__2709" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gnGfIEr4EemAZaGjK5Aj8g" name="Init__State__2710"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tOHdEErDEem2BZRQc2M93A" name="Debug__Path__reqService" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tOXUsErDEem2BZRQc2M93A" name="Debug__C__reqService">
              <connectionPoint xmi:id="_tObmIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tOc0QUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gaTZQUr4EemAZaGjK5Aj8g" name="From__Parent__2381" kind="entryPoint"/>
              <connectionPoint xmi:id="_gaVOcEr4EemAZaGjK5Aj8g" name="To__Parent__2383" kind="exitPoint"/>
              <region xmi:id="_tOXUsUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tO45IErDEem2BZRQc2M93A" name="Debug__init__trans__reqService" source="_tObmIUrDEem2BZRQc2M93A" target="_tO2c4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPCDEErDEem2BZRQc2M93A" name="Debug__init__trans__reqService__828">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__init__trans__reqService&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tO5gMErDEem2BZRQc2M93A" name="Debug__Ac__reqService" source="_tO2c4ErDEem2BZRQc2M93A" target="_tO3D8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tO5gMkrDEem2BZRQc2M93A" name="requestserive" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,SendingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    if (hostConfig.MasterList[0] &amp;&amp; hostConfig.MasterList[1])
    {
    int r=rand()%2;
    if (r==0)
    {
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else{
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }
    }
    else if (hostConfig.MasterList[0]){
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else
    {
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__Ac__reqService&quot;,(char *)&quot;Debug__B__Ac__reqService&quot;,(char *)&quot;Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO5gMUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tO5gM0rDEem2BZRQc2M93A" name="Debug__En__WaitingForReply" source="_tO3D8ErDEem2BZRQc2M93A" target="_tO4SEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tO6HQUrDEem2BZRQc2M93A" name="WaitForReply" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__En__WaitingForReply&quot;,(char *)&quot;Debug__A__Ac__reqService&quot;,(char *)&quot;Debug__A__En__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO6HQErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tO6HQkrDEem2BZRQc2M93A" name="Debug__end__trans__reqService" source="_tO4SEErDEem2BZRQc2M93A" target="_tOc0QUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPFtcErDEem2BZRQc2M93A" name="Debug__end__trans__reqService__832">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__end__trans__reqService&quot;,(char *)&quot;Debug__A__En__reqService&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO6HQ0rDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gaiCwEr4EemAZaGjK5Aj8g" name="Trans__ex2387" source="_tOc0QUrDEem2BZRQc2M93A" target="_gab8IEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gdfQIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2456&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__2452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gaiCwUr4EemAZaGjK5Aj8g" name="Trans__Init__State__23862388" source="_gag0oEr4EemAZaGjK5Aj8g" target="_gab8IEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gdVfIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2386&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2456&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2386&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__2452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2386&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2386&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2386&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gaj38Er4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__reqService__2389" source="_tO2c4ErDEem2BZRQc2M93A" target="_gab8IEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gdi6gEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2456&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__2452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_galGEEr4EemAZaGjK5Aj8g" name="PME_Trig2390" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gaqloEr4EemAZaGjK5Aj8g" name="PME_Trig2391" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_garMsEr4EemAZaGjK5Aj8g" name="PME_Trig2392" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gasa0Er4EemAZaGjK5Aj8g" name="PME_Trig2393" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gato8Er4EemAZaGjK5Aj8g" name="PME_Trig2394" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gauQAEr4EemAZaGjK5Aj8g" name="PME_Trig2395" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gayhcEr4EemAZaGjK5Aj8g" name="PME_Trig2396" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ga2y4Er4EemAZaGjK5Aj8g" name="PME_Trig2397" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ga5PIEr4EemAZaGjK5Aj8g" name="PME_Trig2398" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ga_80Er4EemAZaGjK5Aj8g" name="PME_Trig2399" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gbBK8Er4EemAZaGjK5Aj8g" name="PME_Trig2400" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gbByAEr4EemAZaGjK5Aj8g" name="PME_Trig2401" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gbDAIEr4EemAZaGjK5Aj8g" name="PME_Trig2402" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gbGqgEr4EemAZaGjK5Aj8g" name="PME_Trig2403" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gbJt0Er4EemAZaGjK5Aj8g" name="PME_Trig2404" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gbK78Er4EemAZaGjK5Aj8g" name="PME_Trig2405" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gbLjAEr4EemAZaGjK5Aj8g" name="PME_Trig2406" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gbMxIEr4EemAZaGjK5Aj8g" name="PME_Trig2407" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gbOmUEr4EemAZaGjK5Aj8g" name="PME_Trig2408" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gbUF4Er4EemAZaGjK5Aj8g" name="PME_Trig2409" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gbV7EEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__reqService__2410" source="_tO4SEErDEem2BZRQc2M93A" target="_gab8IEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gdaXoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2456&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__2452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gbXJMEr4EemAZaGjK5Aj8g" name="PME_Trig2411" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gbaMgEr4EemAZaGjK5Aj8g" name="PME_Trig2412" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gbcBsEr4EemAZaGjK5Aj8g" name="PME_Trig2413" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gbdP0Er4EemAZaGjK5Aj8g" name="PME_Trig2414" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gbiIUEr4EemAZaGjK5Aj8g" name="PME_Trig2415" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gboO8Er4EemAZaGjK5Aj8g" name="PME_Trig2416" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gbpdEEr4EemAZaGjK5Aj8g" name="PME_Trig2417" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gbqrMEr4EemAZaGjK5Aj8g" name="PME_Trig2418" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gbrSQEr4EemAZaGjK5Aj8g" name="PME_Trig2419" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gbtugEr4EemAZaGjK5Aj8g" name="PME_Trig2420" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gbu8oEr4EemAZaGjK5Aj8g" name="PME_Trig2421" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gbvjsEr4EemAZaGjK5Aj8g" name="PME_Trig2422" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gbwx0Er4EemAZaGjK5Aj8g" name="PME_Trig2423" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gb4toEr4EemAZaGjK5Aj8g" name="PME_Trig2424" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gb8_EEr4EemAZaGjK5Aj8g" name="PME_Trig2425" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gb9mIEr4EemAZaGjK5Aj8g" name="PME_Trig2426" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gb-0QEr4EemAZaGjK5Aj8g" name="PME_Trig2427" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gcApcEr4EemAZaGjK5Aj8g" name="PME_Trig2428" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gcCeoEr4EemAZaGjK5Aj8g" name="PME_Trig2429" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gcDswEr4EemAZaGjK5Aj8g" name="PME_Trig2430" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gcE64Er4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__reqService__2431" source="_tO3D8ErDEem2BZRQc2M93A" target="_gab8IEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gdiTcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2456&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__2452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gcFh8Er4EemAZaGjK5Aj8g" name="PME_Trig2432" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gcGwEEr4EemAZaGjK5Aj8g" name="PME_Trig2433" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gcMPoEr4EemAZaGjK5Aj8g" name="PME_Trig2434" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gcOE0Er4EemAZaGjK5Aj8g" name="PME_Trig2435" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gcPS8Er4EemAZaGjK5Aj8g" name="PME_Trig2436" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gcaSEEr4EemAZaGjK5Aj8g" name="PME_Trig2437" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gccHQEr4EemAZaGjK5Aj8g" name="PME_Trig2438" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gcdVYEr4EemAZaGjK5Aj8g" name="PME_Trig2439" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gcfKkEr4EemAZaGjK5Aj8g" name="PME_Trig2440" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gcl4QEr4EemAZaGjK5Aj8g" name="PME_Trig2441" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gcmfUEr4EemAZaGjK5Aj8g" name="PME_Trig2442" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gcoUgEr4EemAZaGjK5Aj8g" name="PME_Trig2443" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gcrX0Er4EemAZaGjK5Aj8g" name="PME_Trig2444" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gctNAEr4EemAZaGjK5Aj8g" name="PME_Trig2445" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gc0hwEr4EemAZaGjK5Aj8g" name="PME_Trig2446" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gc4MIEr4EemAZaGjK5Aj8g" name="PME_Trig2447" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gc9EoEr4EemAZaGjK5Aj8g" name="PME_Trig2448" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gdDyUEr4EemAZaGjK5Aj8g" name="PME_Trig2449" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gdFngEr4EemAZaGjK5Aj8g" name="PME_Trig2450" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gdLuIEr4EemAZaGjK5Aj8g" name="PME_Trig2451" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gdRNsEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__reqService__2452" guard="_gdlWwUr4EemAZaGjK5Aj8g" source="_gab8IEr4EemAZaGjK5Aj8g" target="_tO2c4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gdlWwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2458">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gdlWwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2458">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqService__2452&quot;,&quot;Debug__B__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gdSb0Er4EemAZaGjK5Aj8g" name="To__Debug__A__En__reqService__2453" guard="_gdnL8Ur4EemAZaGjK5Aj8g" source="_gab8IEr4EemAZaGjK5Aj8g" target="_tO4SEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gdnL8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2459">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gdnL8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2459">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__reqService__2453&quot;,&quot;Debug__A__En__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gdTC4Er4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__reqService__2454" guard="_gdnzAUr4EemAZaGjK5Aj8g" source="_gab8IEr4EemAZaGjK5Aj8g" target="_tO3D8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gdnzAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2460">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gdnzAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2460">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqService__2454&quot;,&quot;Debug__A__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gdURAEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2455" source="_gaTZQUr4EemAZaGjK5Aj8g" target="_gab8IEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gdkIoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2456&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__2452&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2454&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gdURAUr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2456" guard="_gdkvsUr4EemAZaGjK5Aj8g" source="_gab8IEr4EemAZaGjK5Aj8g" target="_gaVOcEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gdkvsUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2457">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gdkvsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2457">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2456&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tO2c4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO2c4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO7VYErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService__824">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tO3D8ErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO3D8UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO-YsErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService__825">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tO4SEErDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO4SEUrDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPAN4UrDEem2BZRQc2M93A" name="Debug__A__En__reqService__826">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gab8IEr4EemAZaGjK5Aj8g" name="DecesionPoint__2385" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gag0oEr4EemAZaGjK5Aj8g" name="Init__State__2386"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tPJ-4ErDEem2BZRQc2M93A" name="Debug__Path__getMasterName__checkConfig__9" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tPKl8UrDEem2BZRQc2M93A" name="Debug__C__getMasterName__checkConfig__9">
              <connectionPoint xmi:id="_tPLNAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_gdoaEEr4EemAZaGjK5Aj8g" name="From__Parent__2461" kind="entryPoint"/>
              <connectionPoint xmi:id="_gdpBIkr4EemAZaGjK5Aj8g" name="To__Parent__2463" kind="exitPoint"/>
              <region xmi:id="_tPKl8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tPgkMUrDEem2BZRQc2M93A" name="Debug__AC__getMasterName__checkConfig__9" source="_tPeH8ErDEem2BZRQc2M93A" target="_tPfWEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPqVMErDEem2BZRQc2M93A" name="Debug__AC__getMasterName__checkConfig__9__852">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__AC__getMasterName__checkConfig__9&quot;,(char *)&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tPgkMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gd2cgEr4EemAZaGjK5Aj8g" name="Trans__en2467" source="_tPLNAUrDEem2BZRQc2M93A" target="_gdqPQEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gfrBcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__2513&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gd2cgUr4EemAZaGjK5Aj8g" name="Trans__Init__State__24662468" source="_gdvu0Er4EemAZaGjK5Aj8g" target="_gdqPQEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gffbQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2466&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__2513&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2466&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2466&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2466&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gd3qoEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__getMasterName__checkConfig__9__2469" source="_tPfWEErDEem2BZRQc2M93A" target="_gdqPQEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gfiekEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__2513&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gd4RsEr4EemAZaGjK5Aj8g" name="PME_Trig2470" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gd44wEr4EemAZaGjK5Aj8g" name="PME_Trig2471" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gd6t8Er4EemAZaGjK5Aj8g" name="PME_Trig2472" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gd8jIEr4EemAZaGjK5Aj8g" name="PME_Trig2473" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gd9xQEr4EemAZaGjK5Aj8g" name="PME_Trig2474" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gd-YUEr4EemAZaGjK5Aj8g" name="PME_Trig2475" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gd_mcEr4EemAZaGjK5Aj8g" name="PME_Trig2476" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_geFtEEr4EemAZaGjK5Aj8g" name="PME_Trig2477" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_geG7MEr4EemAZaGjK5Aj8g" name="PME_Trig2478" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_geIJUEr4EemAZaGjK5Aj8g" name="PME_Trig2479" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_geLzsEr4EemAZaGjK5Aj8g" name="PME_Trig2480" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_geOP8Er4EemAZaGjK5Aj8g" name="PME_Trig2481" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_geUWkEr4EemAZaGjK5Aj8g" name="PME_Trig2482" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_geVksEr4EemAZaGjK5Aj8g" name="PME_Trig2483" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_geWLwEr4EemAZaGjK5Aj8g" name="PME_Trig2484" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_geWy0Er4EemAZaGjK5Aj8g" name="PME_Trig2485" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_geYA8Er4EemAZaGjK5Aj8g" name="PME_Trig2486" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gebEQEr4EemAZaGjK5Aj8g" name="PME_Trig2487" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gefVsEr4EemAZaGjK5Aj8g" name="PME_Trig2488" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_gef8wEr4EemAZaGjK5Aj8g" name="PME_Trig2489" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gehK4Er4EemAZaGjK5Aj8g" name="PME_Trig2490" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_geiZAEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__getMasterName__checkConfig__9__2491" source="_tPeH8ErDEem2BZRQc2M93A" target="_gdqPQEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gfv58Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__2513&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gejnIEr4EemAZaGjK5Aj8g" name="PME_Trig2492" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gelcUEr4EemAZaGjK5Aj8g" name="PME_Trig2493" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gemDYEr4EemAZaGjK5Aj8g" name="PME_Trig2494" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_genRgEr4EemAZaGjK5Aj8g" name="PME_Trig2495" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_geofoEr4EemAZaGjK5Aj8g" name="PME_Trig2496" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ge0F0Er4EemAZaGjK5Aj8g" name="PME_Trig2497" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ge1T8Er4EemAZaGjK5Aj8g" name="PME_Trig2498" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ge2iEEr4EemAZaGjK5Aj8g" name="PME_Trig2499" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ge3wMEr4EemAZaGjK5Aj8g" name="PME_Trig2500" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ge5lYEr4EemAZaGjK5Aj8g" name="PME_Trig2501" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ge6zgEr4EemAZaGjK5Aj8g" name="PME_Trig2502" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_ge7akEr4EemAZaGjK5Aj8g" name="PME_Trig2503" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ge8osEr4EemAZaGjK5Aj8g" name="PME_Trig2504" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ge_sAEr4EemAZaGjK5Aj8g" name="PME_Trig2505" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gfCvUEr4EemAZaGjK5Aj8g" name="PME_Trig2506" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gfD9cEr4EemAZaGjK5Aj8g" name="PME_Trig2507" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gfEkgEr4EemAZaGjK5Aj8g" name="PME_Trig2508" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gfFyoEr4EemAZaGjK5Aj8g" name="PME_Trig2509" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gfNHYEr4EemAZaGjK5Aj8g" name="PME_Trig2510" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gfO8kEr4EemAZaGjK5Aj8g" name="PME_Trig2511" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gfT1EEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__getMasterName__checkConfig__9__2512" guard="_gf0LYUr4EemAZaGjK5Aj8g" source="_gdqPQEr4EemAZaGjK5Aj8g" target="_tPfWEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gf0LYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2517">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gf0LYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2517">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2512&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gfUcIEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__getMasterName__checkConfig__9__2513" guard="_gfy9QEr4EemAZaGjK5Aj8g" source="_gdqPQEr4EemAZaGjK5Aj8g" target="_tPeH8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gfy9QEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2516">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gfyWMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2516">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__2513&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gfXfcEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2514" source="_gdoaEEr4EemAZaGjK5Aj8g" target="_gdqPQEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gfkTwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__2513&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2512&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2515&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gfYGgEr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2515" guard="_gf2noUr4EemAZaGjK5Aj8g" source="_gdqPQEr4EemAZaGjK5Aj8g" target="_gdpBIkr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gf2noUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2518">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gf2noEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2518">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2515&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tPeH8ErDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPeH8UrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName__checkConfig__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPk1oUrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9__847">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tPfWEErDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPfWEUrDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName__checkConfig__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPnR4ErDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9__848">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gdqPQEr4EemAZaGjK5Aj8g" name="DecesionPoint__2465" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gdvu0Er4EemAZaGjK5Aj8g" name="Init__State__2466"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tPxp8ErDEem2BZRQc2M93A" name="Debug__Path__inittrans" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tPy4EErDEem2BZRQc2M93A" name="Debug__C__inittrans">
              <connectionPoint xmi:id="_tPzfIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tP1UUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gkAu4Er4EemAZaGjK5Aj8g" name="From__Parent__2624" kind="entryPoint"/>
              <connectionPoint xmi:id="_gkEZQEr4EemAZaGjK5Aj8g" name="To__Parent__2626" kind="exitPoint"/>
              <region xmi:id="_tPy4EUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQHBIErDEem2BZRQc2M93A" name="Debug__init__trans__inittrans" source="_tPzfIUrDEem2BZRQc2M93A" target="_tQDWwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQPkAErDEem2BZRQc2M93A" name="Debug__init__trans__inittrans__873">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__init__trans__inittrans&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tQHBIUrDEem2BZRQc2M93A" name="Debug__Ac__inittrans" source="_tQDWwUrDEem2BZRQc2M93A" target="_tQD90ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQHoMErDEem2BZRQc2M93A" name="InitLog" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>      std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Intialization\n&quot;;
     char  fileName[30];
     char  clientIndex[5];
     //itoa(clientIndex,this->getIndex(),10);

	sprintf(clientIndex, &quot;%d&quot;, this->getIndex());
     strcpy(fileName,this->getName());
     strcat(fileName, clientIndex);
     logfile.open(fileName);
     logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__Ac__inittrans&quot;,(char *)&quot;Debug__B__Ac__inittrans&quot;,(char *)&quot;Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQHBIkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQHoMUrDEem2BZRQc2M93A" name="Debug__En__StandBY" source="_tQD90ErDEem2BZRQc2M93A" target="_tQFzAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQSAQErDEem2BZRQc2M93A" name="Debug__En__StandBY__876">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__En__StandBY&quot;,(char *)&quot;Debug__A__Ac__inittrans&quot;,(char *)&quot;Debug__A__En__inittrans&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQHoMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQIPQErDEem2BZRQc2M93A" name="Debug__end__trans__inittrans" source="_tQFzAErDEem2BZRQc2M93A" target="_tP1UUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQTOYErDEem2BZRQc2M93A" name="Debug__end__trans__inittrans__878">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__end__trans__inittrans&quot;,(char *)&quot;Debug__A__En__inittrans&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQIPQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gkM8IEr4EemAZaGjK5Aj8g" name="Trans__ex2630" source="_tP1UUUrDEem2BZRQc2M93A" target="_gkGOcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gm3OkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2697&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2699&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__2695&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__2696&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gkNjMEr4EemAZaGjK5Aj8g" name="Trans__Init__State__26292631" source="_gkHckEr4EemAZaGjK5Aj8g" target="_gkGOcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gm9VMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2629&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2697&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2629&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2699&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2629&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__2695&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2629&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__2696&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2629&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gkOxUEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__inittrans__2632" source="_tQFzAErDEem2BZRQc2M93A" target="_gkGOcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gmuEoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2697&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2699&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__2695&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__2696&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gkPYYEr4EemAZaGjK5Aj8g" name="PME_Trig2633" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gkkIgEr4EemAZaGjK5Aj8g" name="PME_Trig2634" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gklWoEr4EemAZaGjK5Aj8g" name="PME_Trig2635" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gkoZ8Er4EemAZaGjK5Aj8g" name="PME_Trig2636" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gksEUEr4EemAZaGjK5Aj8g" name="PME_Trig2637" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gktScEr4EemAZaGjK5Aj8g" name="PME_Trig2638" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gkt5gEr4EemAZaGjK5Aj8g" name="PME_Trig2639" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gkvHoEr4EemAZaGjK5Aj8g" name="PME_Trig2640" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gkxj4Er4EemAZaGjK5Aj8g" name="PME_Trig2641" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gkyK8Er4EemAZaGjK5Aj8g" name="PME_Trig2642" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gkzZEEr4EemAZaGjK5Aj8g" name="PME_Trig2643" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gk0AIEr4EemAZaGjK5Aj8g" name="PME_Trig2644" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gk778Er4EemAZaGjK5Aj8g" name="PME_Trig2645" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gk-_QEr4EemAZaGjK5Aj8g" name="PME_Trig2646" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glCpoEr4EemAZaGjK5Aj8g" name="PME_Trig2647" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_glD3wEr4EemAZaGjK5Aj8g" name="PME_Trig2648" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_glFs8Er4EemAZaGjK5Aj8g" name="PME_Trig2649" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_glG7EEr4EemAZaGjK5Aj8g" name="PME_Trig2650" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_glIJMEr4EemAZaGjK5Aj8g" name="PME_Trig2651" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glLzkEr4EemAZaGjK5Aj8g" name="PME_Trig2652" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_glNBsEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__inittrans__2653" source="_tQD90ErDEem2BZRQc2M93A" target="_gkGOcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gm7gAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2697&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2699&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__2695&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__2696&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_glNowEr4EemAZaGjK5Aj8g" name="PME_Trig2654" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glPd8Er4EemAZaGjK5Aj8g" name="PME_Trig2655" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_glQsEEr4EemAZaGjK5Aj8g" name="PME_Trig2656" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glR6MEr4EemAZaGjK5Aj8g" name="PME_Trig2657" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_glShQEr4EemAZaGjK5Aj8g" name="PME_Trig2658" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glWysEr4EemAZaGjK5Aj8g" name="PME_Trig2659" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_glc5UEr4EemAZaGjK5Aj8g" name="PME_Trig2660" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glhKwEr4EemAZaGjK5Aj8g" name="PME_Trig2661" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gliY4Er4EemAZaGjK5Aj8g" name="PME_Trig2662" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glkOEEr4EemAZaGjK5Aj8g" name="PME_Trig2663" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gllcMEr4EemAZaGjK5Aj8g" name="PME_Trig2664" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_glmDQEr4EemAZaGjK5Aj8g" name="PME_Trig2665" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_glmqUEr4EemAZaGjK5Aj8g" name="PME_Trig2666" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_glq7wEr4EemAZaGjK5Aj8g" name="PME_Trig2667" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_glsJ4Er4EemAZaGjK5Aj8g" name="PME_Trig2668" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gltYAEr4EemAZaGjK5Aj8g" name="PME_Trig2669" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_glvNMEr4EemAZaGjK5Aj8g" name="PME_Trig2670" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_glwbUEr4EemAZaGjK5Aj8g" name="PME_Trig2671" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_glxCYEr4EemAZaGjK5Aj8g" name="PME_Trig2672" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gl6MUEr4EemAZaGjK5Aj8g" name="PME_Trig2673" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gl92sEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__inittrans__2674" source="_tQDWwUrDEem2BZRQc2M93A" target="_gkGOcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gms2gEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2697&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2699&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__2695&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__2696&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gl_r4Er4EemAZaGjK5Aj8g" name="PME_Trig2675" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gmA6AEr4EemAZaGjK5Aj8g" name="PME_Trig2676" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gmD9UEr4EemAZaGjK5Aj8g" name="PME_Trig2677" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gmHnsEr4EemAZaGjK5Aj8g" name="PME_Trig2678" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gmI10Er4EemAZaGjK5Aj8g" name="PME_Trig2679" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gmJc4Er4EemAZaGjK5Aj8g" name="PME_Trig2680" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gmKrAEr4EemAZaGjK5Aj8g" name="PME_Trig2681" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gmNHQEr4EemAZaGjK5Aj8g" name="PME_Trig2682" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gmNuUEr4EemAZaGjK5Aj8g" name="PME_Trig2683" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gmO8cEr4EemAZaGjK5Aj8g" name="PME_Trig2684" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gmPjgEr4EemAZaGjK5Aj8g" name="PME_Trig2685" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gmaioEr4EemAZaGjK5Aj8g" name="PME_Trig2686" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gmcX0Er4EemAZaGjK5Aj8g" name="PME_Trig2687" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gmc-4Er4EemAZaGjK5Aj8g" name="PME_Trig2688" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gmeNAEr4EemAZaGjK5Aj8g" name="PME_Trig2689" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gmfbIEr4EemAZaGjK5Aj8g" name="PME_Trig2690" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gmhQUEr4EemAZaGjK5Aj8g" name="PME_Trig2691" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gmh3YEr4EemAZaGjK5Aj8g" name="PME_Trig2692" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gmjFgEr4EemAZaGjK5Aj8g" name="PME_Trig2693" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gmmI0Er4EemAZaGjK5Aj8g" name="PME_Trig2694" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gmpMIEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__inittrans__2695" guard="_gnA_kUr4EemAZaGjK5Aj8g" source="_gkGOcEr4EemAZaGjK5Aj8g" target="_tQFzAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gnA_kUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2702">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gnA_kEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2702">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__inittrans__2695&quot;,&quot;Debug__A__En__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gmpMIUr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__inittrans__2696" guard="_gnA_k0r4EemAZaGjK5Aj8g" source="_gkGOcEr4EemAZaGjK5Aj8g" target="_tQD90ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gnA_k0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2703">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gnA_kkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2703">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__inittrans__2696&quot;,&quot;Debug__A__Ac__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gmpMIkr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__inittrans__2697" guard="_gm_xcUr4EemAZaGjK5Aj8g" source="_gkGOcEr4EemAZaGjK5Aj8g" target="_tQDWwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gm_xcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2700">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gm_xcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2700">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__inittrans__2697&quot;,&quot;Debug__B__Ac__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gmrBUEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2698" source="_gkAu4Er4EemAZaGjK5Aj8g" target="_gkGOcEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gm_KYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2697&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2699&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__En__inittrans&quot;,&quot;To__Debug__A__En__inittrans__2695&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__A__Ac__inittrans&quot;,&quot;To__Debug__A__Ac__inittrans__2696&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gmroYEr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2699" guard="_gnAYgUr4EemAZaGjK5Aj8g" source="_gkGOcEr4EemAZaGjK5Aj8g" target="_gkEZQEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gnAYgUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2701">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gnAYgEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2701">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2699&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQDWwUrDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQDWwkrDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;inittrans&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQJdYErDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans__869">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQD90ErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQEk4ErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;inittrans&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQL5oErDEem2BZRQc2M93A" name="Debug__A__Ac__inittrans__870">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQFzAErDEem2BZRQc2M93A" name="Debug__A__En__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQFzAUrDEem2BZRQc2M93A" name="Debug__A__En__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__En__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQNu0UrDEem2BZRQc2M93A" name="Debug__A__En__inittrans__871">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__A__En__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gkGOcEr4EemAZaGjK5Aj8g" name="DecesionPoint__2628" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gkHckEr4EemAZaGjK5Aj8g" name="Init__State__2629"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tQWRsErDEem2BZRQc2M93A" name="Debug__Path__ReqFlowDone" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tQW4wUrDEem2BZRQc2M93A" name="Debug__C__ReqFlowDone">
              <connectionPoint xmi:id="_tQYG4ErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tQYt8ErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gIa_EEr4EemAZaGjK5Aj8g" name="From__Parent__2091" kind="entryPoint"/>
              <connectionPoint xmi:id="_gIbmIEr4EemAZaGjK5Aj8g" name="To__Parent__2093" kind="exitPoint"/>
              <region xmi:id="_tQW4wkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQ0LwErDEem2BZRQc2M93A" name="Debug__init__trans__ReqFlowDone" source="_tQYG4ErDEem2BZRQc2M93A" target="_tQvTQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tREDYUrDEem2BZRQc2M93A" name="Debug__init__trans__ReqFlowDone__897">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__init__trans__ReqFlowDone&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tQ0LwUrDEem2BZRQc2M93A" name="Debug__Ex__ProcessResponse" source="_tQvTQUrDEem2BZRQc2M93A" target="_tQwhYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRF4kErDEem2BZRQc2M93A" name="Debug__Ex__ProcessResponse__899">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__Ex__ProcessResponse&quot;,(char *)&quot;Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ0y0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQ0y0UrDEem2BZRQc2M93A" name="Debug__AC__ReqFlowDone" source="_tQwhYErDEem2BZRQc2M93A" target="_tQxvgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQ1Z4ErDEem2BZRQc2M93A" name="AllIsDone" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The service Request has been done sucessfully\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__AC__ReqFlowDone&quot;,(char *)&quot;Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ0y0krDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQ1Z4UrDEem2BZRQc2M93A" name="Debug__En__Ready" source="_tQxvgErDEem2BZRQc2M93A" target="_tQy9oErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQ2A8UrDEem2BZRQc2M93A" name="ReadyEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__En__Ready&quot;,(char *)&quot;Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ2A8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tQ2oAErDEem2BZRQc2M93A" name="Debug__end__trans__ReqFlowDone" source="_tQy9oErDEem2BZRQc2M93A" target="_tQYt8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRQQoErDEem2BZRQc2M93A" name="Debug__end__trans__ReqFlowDone__903">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__end__trans__ReqFlowDone&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ2oAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gIjh8Er4EemAZaGjK5Aj8g" name="Trans__ex2097" source="_tQYt8ErDEem2BZRQc2M93A" target="_gIeCYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gMXq8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gIkJAEr4EemAZaGjK5Aj8g" name="Trans__Init__State__20962098" source="_gIiT0Er4EemAZaGjK5Aj8g" target="_gIeCYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gMWc0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2096&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2096&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gImlQEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__ReqFlowDone__2099" source="_tQxvgErDEem2BZRQc2M93A" target="_gIeCYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gMaHMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gItS8Er4EemAZaGjK5Aj8g" name="PME_Trig2100" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gIuhEEr4EemAZaGjK5Aj8g" name="PME_Trig2101" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gIwWQEr4EemAZaGjK5Aj8g" name="PME_Trig2102" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gI3D8Er4EemAZaGjK5Aj8g" name="PME_Trig2103" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gI5gMEr4EemAZaGjK5Aj8g" name="PME_Trig2104" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJA08Er4EemAZaGjK5Aj8g" name="PME_Trig2105" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gJCqIEr4EemAZaGjK5Aj8g" name="PME_Trig2106" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJFtcEr4EemAZaGjK5Aj8g" name="PME_Trig2107" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gJKl8Er4EemAZaGjK5Aj8g" name="PME_Trig2108" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJLNAEr4EemAZaGjK5Aj8g" name="PME_Trig2109" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gJMbIEr4EemAZaGjK5Aj8g" name="PME_Trig2110" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gJNpQEr4EemAZaGjK5Aj8g" name="PME_Trig2111" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gJPecEr4EemAZaGjK5Aj8g" name="PME_Trig2112" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gJU-AEr4EemAZaGjK5Aj8g" name="PME_Trig2113" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJWMIEr4EemAZaGjK5Aj8g" name="PME_Trig2114" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gJWzMEr4EemAZaGjK5Aj8g" name="PME_Trig2115" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gJYBUEr4EemAZaGjK5Aj8g" name="PME_Trig2116" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gJZPcEr4EemAZaGjK5Aj8g" name="PME_Trig2117" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gJgkMEr4EemAZaGjK5Aj8g" name="PME_Trig2118" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJiZYEr4EemAZaGjK5Aj8g" name="PME_Trig2119" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gJmDwEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__ProcessResponse__2120" source="_tQvTQUrDEem2BZRQc2M93A" target="_gIeCYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gMSLYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gJq8QEr4EemAZaGjK5Aj8g" name="PME_Trig2121" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJsxcEr4EemAZaGjK5Aj8g" name="PME_Trig2122" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gJ0tQEr4EemAZaGjK5Aj8g" name="PME_Trig2123" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJ17YEr4EemAZaGjK5Aj8g" name="PME_Trig2124" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gJ3JgEr4EemAZaGjK5Aj8g" name="PME_Trig2125" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gJ_FUEr4EemAZaGjK5Aj8g" name="PME_Trig2126" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gKATcEr4EemAZaGjK5Aj8g" name="PME_Trig2127" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gKCIoEr4EemAZaGjK5Aj8g" name="PME_Trig2128" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gKPkAEr4EemAZaGjK5Aj8g" name="PME_Trig2129" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gKT1cEr4EemAZaGjK5Aj8g" name="PME_Trig2130" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gKdmcEr4EemAZaGjK5Aj8g" name="PME_Trig2131" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gKfboEr4EemAZaGjK5Aj8g" name="PME_Trig2132" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gKgCsEr4EemAZaGjK5Aj8g" name="PME_Trig2133" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gKmJUEr4EemAZaGjK5Aj8g" name="PME_Trig2134" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gKolkEr4EemAZaGjK5Aj8g" name="PME_Trig2135" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gKpzsEr4EemAZaGjK5Aj8g" name="PME_Trig2136" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gKusMEr4EemAZaGjK5Aj8g" name="PME_Trig2137" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gKxIcEr4EemAZaGjK5Aj8g" name="PME_Trig2138" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gKxvgEr4EemAZaGjK5Aj8g" name="PME_Trig2139" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gKy9oEr4EemAZaGjK5Aj8g" name="PME_Trig2140" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gK0LwEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Ready__2141" source="_tQy9oErDEem2BZRQc2M93A" target="_gIeCYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gMg04Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gK32IEr4EemAZaGjK5Aj8g" name="PME_Trig2142" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gK65cEr4EemAZaGjK5Aj8g" name="PME_Trig2143" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gK8HkEr4EemAZaGjK5Aj8g" name="PME_Trig2144" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gK8uoEr4EemAZaGjK5Aj8g" name="PME_Trig2145" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gK98wEr4EemAZaGjK5Aj8g" name="PME_Trig2146" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gK_K4Er4EemAZaGjK5Aj8g" name="PME_Trig2147" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gLF4kEr4EemAZaGjK5Aj8g" name="PME_Trig2148" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLHGsEr4EemAZaGjK5Aj8g" name="PME_Trig2149" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gLHtwEr4EemAZaGjK5Aj8g" name="PME_Trig2150" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLI74Er4EemAZaGjK5Aj8g" name="PME_Trig2151" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gLPCgEr4EemAZaGjK5Aj8g" name="PME_Trig2152" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gLPpkEr4EemAZaGjK5Aj8g" name="PME_Trig2153" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gLQ3sEr4EemAZaGjK5Aj8g" name="PME_Trig2154" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gLRewEr4EemAZaGjK5Aj8g" name="PME_Trig2155" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLSs4Er4EemAZaGjK5Aj8g" name="PME_Trig2156" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gLT7AEr4EemAZaGjK5Aj8g" name="PME_Trig2157" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gLWXQEr4EemAZaGjK5Aj8g" name="PME_Trig2158" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gLW-UEr4EemAZaGjK5Aj8g" name="PME_Trig2159" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gLYMcEr4EemAZaGjK5Aj8g" name="PME_Trig2160" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLbPwEr4EemAZaGjK5Aj8g" name="PME_Trig2161" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gLdsAEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__ReqFlowDone__2162" source="_tQwhYErDEem2BZRQc2M93A" target="_gIeCYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gMY5EEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gLe6IEr4EemAZaGjK5Aj8g" name="PME_Trig2163" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLjyoEr4EemAZaGjK5Aj8g" name="PME_Trig2164" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gLlAwEr4EemAZaGjK5Aj8g" name="PME_Trig2165" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLmO4Er4EemAZaGjK5Aj8g" name="PME_Trig2166" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gLm18Er4EemAZaGjK5Aj8g" name="PME_Trig2167" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLpSMEr4EemAZaGjK5Aj8g" name="PME_Trig2168" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gLuxwEr4EemAZaGjK5Aj8g" name="PME_Trig2169" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gLv_4Er4EemAZaGjK5Aj8g" name="PME_Trig2170" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gLxOAEr4EemAZaGjK5Aj8g" name="PME_Trig2171" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gL04YEr4EemAZaGjK5Aj8g" name="PME_Trig2172" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gL4iwEr4EemAZaGjK5Aj8g" name="PME_Trig2173" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gL5J0Er4EemAZaGjK5Aj8g" name="PME_Trig2174" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gL5w4Er4EemAZaGjK5Aj8g" name="PME_Trig2175" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gL6_AEr4EemAZaGjK5Aj8g" name="PME_Trig2176" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gL9bQEr4EemAZaGjK5Aj8g" name="PME_Trig2177" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gMCTwEr4EemAZaGjK5Aj8g" name="PME_Trig2178" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gMC60Er4EemAZaGjK5Aj8g" name="PME_Trig2179" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gMEI8Er4EemAZaGjK5Aj8g" name="PME_Trig2180" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gMEwAEr4EemAZaGjK5Aj8g" name="PME_Trig2181" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gMF-IEr4EemAZaGjK5Aj8g" name="PME_Trig2182" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gMNS4Er4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__ReqFlowDone__2183" guard="_gMjRI0r4EemAZaGjK5Aj8g" source="_gIeCYEr4EemAZaGjK5Aj8g" target="_tQxvgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gMjRI0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2192">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gMjRIkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2192">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gMNS4Ur4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__ProcessResponse__2184" guard="_gMjRIUr4EemAZaGjK5Aj8g" source="_gIeCYEr4EemAZaGjK5Aj8g" target="_tQvTQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gMjRIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2191">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gMjRIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2191">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gMN58Er4EemAZaGjK5Aj8g" name="To__Debug__A__En__Ready__2185" guard="_gMiqE0r4EemAZaGjK5Aj8g" source="_gIeCYEr4EemAZaGjK5Aj8g" target="_tQy9oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gMiqE0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2190">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gMiqEkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2190">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__2185&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gMN58Ur4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__ReqFlowDone__2186" guard="_gMiqEUr4EemAZaGjK5Aj8g" source="_gIeCYEr4EemAZaGjK5Aj8g" target="_tQwhYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gMiqEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2189">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gMiqEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2189">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gMPIEEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2187" source="_gIa_EEr4EemAZaGjK5Aj8g" target="_gIeCYEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gMiDAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ac__ReqFlowDone&quot;,&quot;To__Debug__B__Ac__ReqFlowDone__2186&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2185&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__2184&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2183&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2188&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gMPIEUr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2188" guard="_gMj4MUr4EemAZaGjK5Aj8g" source="_gIeCYEr4EemAZaGjK5Aj8g" target="_gIbmIEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gMj4MUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2193">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gMj4MEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2193">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2188&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQvTQUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQvTQkrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQ32IUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse__892">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQwhYErDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQwhYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReqFlowDone&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQ-j0UrDEem2BZRQc2M93A" name="Debug__B__Ac__ReqFlowDone__893">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQxvgErDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQxvgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReqFlowDone&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRBAEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone__894">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQy9oErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQzksErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRC1QErDEem2BZRQc2M93A" name="Debug__A__En__Ready__895">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gIeCYEr4EemAZaGjK5Aj8g" name="DecesionPoint__2095" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gIiT0Er4EemAZaGjK5Aj8g" name="Init__State__2096"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tRT7AErDEem2BZRQc2M93A" name="Debug__Path__StarupTransition" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tRUiEUrDEem2BZRQc2M93A" name="Debug__C__StarupTransition">
              <connectionPoint xmi:id="_tRVwMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tRYMcErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gWzZUUr4EemAZaGjK5Aj8g" name="From__Parent__2299" kind="entryPoint"/>
              <connectionPoint xmi:id="_gW0ncEr4EemAZaGjK5Aj8g" name="To__Parent__2301" kind="exitPoint"/>
              <region xmi:id="_tRUiEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tR3UoErDEem2BZRQc2M93A" name="Debug__init__trans__StarupTransition" source="_tRVwMUrDEem2BZRQc2M93A" target="_tRx1EErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSGlMErDEem2BZRQc2M93A" name="Debug__init__trans__StarupTransition__922">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__init__trans__StarupTransition&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tR3UoUrDEem2BZRQc2M93A" name="Debug__Ex__StandBY" source="_tRx1EErDEem2BZRQc2M93A" target="_tRycIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSHzUErDEem2BZRQc2M93A" name="Debug__Ex__StandBY__924">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__Ex__StandBY&quot;,(char *)&quot;Debug__B__Ex__StandBY&quot;,(char *)&quot;Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR3UokrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tR37sErDEem2BZRQc2M93A" name="Debug__AC__StarupTransition" source="_tRycIErDEem2BZRQc2M93A" target="_tR04YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tR4iwErDEem2BZRQc2M93A" name="StartUPClient" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; Client is startingUP \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__AC__StarupTransition&quot;,(char *)&quot;Debug__B__Ac__StarupTransition&quot;,(char *)&quot;Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR37sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gW9xYEr4EemAZaGjK5Aj8g" name="Trans__ex2305" source="_tRYMcErDEem2BZRQc2M93A" target="_gW3DsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gaLdcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2373&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__2372&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2371&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gW9xYUr4EemAZaGjK5Aj8g" name="Trans__Init__State__23042306" source="_gW8jQEr4EemAZaGjK5Aj8g" target="_gW3DsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gaN5sEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2304&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2304&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2373&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2304&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__2372&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2304&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2371&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2304&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gXG7UEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__StarupTransition__2307" source="_tR04YErDEem2BZRQc2M93A" target="_gW3DsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gaPH0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2373&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__2372&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2371&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gXLMwEr4EemAZaGjK5Aj8g" name="PME_Trig2308" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gXLz0Er4EemAZaGjK5Aj8g" name="PME_Trig2309" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gXNB8Er4EemAZaGjK5Aj8g" name="PME_Trig2310" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gXO3IEr4EemAZaGjK5Aj8g" name="PME_Trig2311" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gXU9wEr4EemAZaGjK5Aj8g" name="PME_Trig2312" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gXVk0Er4EemAZaGjK5Aj8g" name="PME_Trig2313" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gXWy8Er4EemAZaGjK5Aj8g" name="PME_Trig2314" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gXXaAEr4EemAZaGjK5Aj8g" name="PME_Trig2315" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gXYoIEr4EemAZaGjK5Aj8g" name="PME_Trig2316" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gXcSgEr4EemAZaGjK5Aj8g" name="PME_Trig2317" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gXhLAEr4EemAZaGjK5Aj8g" name="PME_Trig2318" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gXjAMEr4EemAZaGjK5Aj8g" name="PME_Trig2319" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gXpt4Er4EemAZaGjK5Aj8g" name="PME_Trig2320" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gXq8AEr4EemAZaGjK5Aj8g" name="PME_Trig2321" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gXsKIEr4EemAZaGjK5Aj8g" name="PME_Trig2322" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gXtYQEr4EemAZaGjK5Aj8g" name="PME_Trig2323" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gXvNcEr4EemAZaGjK5Aj8g" name="PME_Trig2324" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gXwbkEr4EemAZaGjK5Aj8g" name="PME_Trig2325" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gXxpsEr4EemAZaGjK5Aj8g" name="PME_Trig2326" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_gXyQwEr4EemAZaGjK5Aj8g" name="PME_Trig2327" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gX2iMEr4EemAZaGjK5Aj8g" name="PME_Trig2328" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gX5lgEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__StandBY__2329" source="_tRx1EErDEem2BZRQc2M93A" target="_gW3DsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gaFW0Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2373&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__2372&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBY&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2371&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gX6MkEr4EemAZaGjK5Aj8g" name="PME_Trig2330" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gX7asEr4EemAZaGjK5Aj8g" name="PME_Trig2331" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gX9P4Er4EemAZaGjK5Aj8g" name="PME_Trig2332" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gYDWgEr4EemAZaGjK5Aj8g" name="PME_Trig2333" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gYFLsEr4EemAZaGjK5Aj8g" name="PME_Trig2334" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gYI2EEr4EemAZaGjK5Aj8g" name="PME_Trig2335" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gYSAAEr4EemAZaGjK5Aj8g" name="PME_Trig2336" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gYT1MEr4EemAZaGjK5Aj8g" name="PME_Trig2337" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gYWRcEr4EemAZaGjK5Aj8g" name="PME_Trig2338" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gYZUwEr4EemAZaGjK5Aj8g" name="PME_Trig2339" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gYbJ8Er4EemAZaGjK5Aj8g" name="PME_Trig2340" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gYjs0Er4EemAZaGjK5Aj8g" name="PME_Trig2341" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gYolUEr4EemAZaGjK5Aj8g" name="PME_Trig2342" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gYpMYEr4EemAZaGjK5Aj8g" name="PME_Trig2343" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gYxIMEr4EemAZaGjK5Aj8g" name="PME_Trig2344" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gYyWUEr4EemAZaGjK5Aj8g" name="PME_Trig2345" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gYzkcEr4EemAZaGjK5Aj8g" name="PME_Trig2346" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gY2nwEr4EemAZaGjK5Aj8g" name="PME_Trig2347" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gY3O0Er4EemAZaGjK5Aj8g" name="PME_Trig2348" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gY4c8Er4EemAZaGjK5Aj8g" name="PME_Trig2349" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gY5rEEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__StarupTransition__2350" source="_tRycIErDEem2BZRQc2M93A" target="_gW3DsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gaEIsEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2373&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__2372&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2371&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gZFRQEr4EemAZaGjK5Aj8g" name="PME_Trig2351" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gZGfYEr4EemAZaGjK5Aj8g" name="PME_Trig2352" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gZHtgEr4EemAZaGjK5Aj8g" name="PME_Trig2353" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gZI7oEr4EemAZaGjK5Aj8g" name="PME_Trig2354" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gZN0IEr4EemAZaGjK5Aj8g" name="PME_Trig2355" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gZQQYEr4EemAZaGjK5Aj8g" name="PME_Trig2356" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gZSFkEr4EemAZaGjK5Aj8g" name="PME_Trig2357" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gZaBYEr4EemAZaGjK5Aj8g" name="PME_Trig2358" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gZcdoEr4EemAZaGjK5Aj8g" name="PME_Trig2359" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gZkZcEr4EemAZaGjK5Aj8g" name="PME_Trig2360" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gZlAgEr4EemAZaGjK5Aj8g" name="PME_Trig2361" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gZmOoEr4EemAZaGjK5Aj8g" name="PME_Trig2362" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gZm1sEr4EemAZaGjK5Aj8g" name="PME_Trig2363" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gZrHIEr4EemAZaGjK5Aj8g" name="PME_Trig2364" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gZtjYEr4EemAZaGjK5Aj8g" name="PME_Trig2365" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gZuxgEr4EemAZaGjK5Aj8g" name="PME_Trig2366" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gZv_oEr4EemAZaGjK5Aj8g" name="PME_Trig2367" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gZwmsEr4EemAZaGjK5Aj8g" name="PME_Trig2368" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gZx00Er4EemAZaGjK5Aj8g" name="PME_Trig2369" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gZ5JkEr4EemAZaGjK5Aj8g" name="PME_Trig2370" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gaBscEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__StarupTransition__2371" guard="_gaSLIUr4EemAZaGjK5Aj8g" source="_gW3DsEr4EemAZaGjK5Aj8g" target="_tR04YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gaSLIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2379">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gaSLIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2379">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__StarupTransition__2371&quot;,&quot;Debug__A__Ac__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gaCTgEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__StandBY__2372" guard="_gaRkEUr4EemAZaGjK5Aj8g" source="_gW3DsEr4EemAZaGjK5Aj8g" target="_tRx1EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gaRkEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2378">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gaRkEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2378">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBY__2372&quot;,&quot;Debug__B__Ex__StandBY&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gaCTgUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__StarupTransition__2373" guard="_gaQV8Ur4EemAZaGjK5Aj8g" source="_gW3DsEr4EemAZaGjK5Aj8g" target="_tRycIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gaQV8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2377">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gaQV8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2377">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StarupTransition__2373&quot;,&quot;Debug__B__Ac__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gaC6kEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2374" source="_gWzZUUr4EemAZaGjK5Aj8g" target="_gW3DsEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gaMrkEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2375&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2373&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ex__StandBY&quot;,&quot;To__Debug__B__Ex__StandBY__2372&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2371&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gaC6kUr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2375" guard="_gaPu4Ur4EemAZaGjK5Aj8g" source="_gW3DsEr4EemAZaGjK5Aj8g" target="_gW0ncEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gaPu4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2376">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gaPu4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2376">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2375&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tRx1EErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tRx1EUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tR7mEErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBY__917">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ex__StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tRycIErDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tRycIUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StarupTransition&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tR-CUUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition__918">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tR04YErDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR04YUrDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StarupTransition&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSBssUrDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition__919">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gW3DsEr4EemAZaGjK5Aj8g" name="DecesionPoint__2303" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gW8jQEr4EemAZaGjK5Aj8g" name="Init__State__2304"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tSQ9QErDEem2BZRQc2M93A" name="Debug__Path__reqFlowInit" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tSRkUUrDEem2BZRQc2M93A" name="Debug__C__reqFlowInit">
              <connectionPoint xmi:id="_tSUAkErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gqP5wUr4EemAZaGjK5Aj8g" name="From__Parent__2787" kind="entryPoint"/>
              <connectionPoint xmi:id="_gqRH4Er4EemAZaGjK5Aj8g" name="To__Parent__2789" kind="exitPoint"/>
              <region xmi:id="_tSRkUkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tSuQQUrDEem2BZRQc2M93A" name="Debug__Ex__Ready" source="_tSpXwUrDEem2BZRQc2M93A" target="_tSql4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS6dgErDEem2BZRQc2M93A" name="Debug__Ex__Ready__949">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__Ex__Ready&quot;,(char *)&quot;Debug__B__Ex__Ready&quot;,(char *)&quot;Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSuQQkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSu3UErDEem2BZRQc2M93A" name="Debug__AC__reqFlowInit" source="_tSql4ErDEem2BZRQc2M93A" target="_tSr0AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS8SsErDEem2BZRQc2M93A" name="Debug__AC__reqFlowInit__951">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__AC__reqFlowInit&quot;,(char *)&quot;Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSu3UUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSu3UkrDEem2BZRQc2M93A" name="Debug__En__getMasterName" source="_tSr0AErDEem2BZRQc2M93A" target="_tStCIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSveYUrDEem2BZRQc2M93A" name="GetMasterNameEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__En__getMasterName&quot;,(char *)&quot;Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSveYErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSwFcErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit" source="_tStCIErDEem2BZRQc2M93A" target="_tSUAkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS_WAErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit__954">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__end__trans__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSwFcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gqbf8Er4EemAZaGjK5Aj8g" name="Trans__Init__State__27922793" source="_gqULMEr4EemAZaGjK5Aj8g" target="_gqSWAEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtVqAEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2881&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2792&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2884&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2792&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gqbf8Ur4EemAZaGjK5Aj8g" name="Trans__ex2794" source="_tSUAkErDEem2BZRQc2M93A" target="_gqSWAEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtYtUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2881&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2884&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gqd8MEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__reqFlowInit__2795" source="_tSr0AErDEem2BZRQc2M93A" target="_gqSWAEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtbwoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2881&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2884&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gqfxYEr4EemAZaGjK5Aj8g" name="PME_Trig2796" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gqg_gEr4EemAZaGjK5Aj8g" name="PME_Trig2797" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gqhmkEr4EemAZaGjK5Aj8g" name="PME_Trig2798" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gqi0sEr4EemAZaGjK5Aj8g" name="PME_Trig2799" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gql4AEr4EemAZaGjK5Aj8g" name="PME_Trig2800" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gqqwgEr4EemAZaGjK5Aj8g" name="PME_Trig2801" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gqtz0Er4EemAZaGjK5Aj8g" name="PME_Trig2802" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gqxeMEr4EemAZaGjK5Aj8g" name="PME_Trig2803" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gqyFQEr4EemAZaGjK5Aj8g" name="PME_Trig2804" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gq4L4Er4EemAZaGjK5Aj8g" name="PME_Trig2805" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gq6BEEr4EemAZaGjK5Aj8g" name="PME_Trig2806" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gq6oIEr4EemAZaGjK5Aj8g" name="PME_Trig2807" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gq72QEr4EemAZaGjK5Aj8g" name="PME_Trig2808" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gq-SgEr4EemAZaGjK5Aj8g" name="PME_Trig2809" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gq_goEr4EemAZaGjK5Aj8g" name="PME_Trig2810" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_grAHsEr4EemAZaGjK5Aj8g" name="PME_Trig2811" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_grG1YEr4EemAZaGjK5Aj8g" name="PME_Trig2812" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_grJRoEr4EemAZaGjK5Aj8g" name="PME_Trig2813" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_grKfwEr4EemAZaGjK5Aj8g" name="PME_Trig2814" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_grNjEEr4EemAZaGjK5Aj8g" name="PME_Trig2815" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_grRNcEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__reqFlowInit__2816" source="_tSql4ErDEem2BZRQc2M93A" target="_gqSWAEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtXfMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2881&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2884&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_grTCoEr4EemAZaGjK5Aj8g" name="PME_Trig2817" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_grUQwEr4EemAZaGjK5Aj8g" name="PME_Trig2818" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_grVe4Er4EemAZaGjK5Aj8g" name="PME_Trig2819" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_grWF8Er4EemAZaGjK5Aj8g" name="PME_Trig2820" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_grYiMEr4EemAZaGjK5Aj8g" name="PME_Trig2821" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_greo0Er4EemAZaGjK5Aj8g" name="PME_Trig2822" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_grlWgEr4EemAZaGjK5Aj8g" name="PME_Trig2823" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_grnywEr4EemAZaGjK5Aj8g" name="PME_Trig2824" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_groZ0Er4EemAZaGjK5Aj8g" name="PME_Trig2825" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_grpn8Er4EemAZaGjK5Aj8g" name="PME_Trig2826" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_grugcEr4EemAZaGjK5Aj8g" name="PME_Trig2827" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_grvHgEr4EemAZaGjK5Aj8g" name="PME_Trig2828" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_grxjwEr4EemAZaGjK5Aj8g" name="PME_Trig2829" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gryK0Er4EemAZaGjK5Aj8g" name="PME_Trig2830" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gryx4Er4EemAZaGjK5Aj8g" name="PME_Trig2831" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gr0AAEr4EemAZaGjK5Aj8g" name="PME_Trig2832" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gr0nEEr4EemAZaGjK5Aj8g" name="PME_Trig2833" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gr2cQEr4EemAZaGjK5Aj8g" name="PME_Trig2834" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gr7UwEr4EemAZaGjK5Aj8g" name="PME_Trig2835" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gr8i4Er4EemAZaGjK5Aj8g" name="PME_Trig2836" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gr9J8Er4EemAZaGjK5Aj8g" name="From__Debug__A__En__getMasterName__2837" source="_tStCIErDEem2BZRQc2M93A" target="_gqSWAEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtez8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2881&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2884&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gr-YEEr4EemAZaGjK5Aj8g" name="PME_Trig2838" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsEesEr4EemAZaGjK5Aj8g" name="PME_Trig2839" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gsGT4Er4EemAZaGjK5Aj8g" name="PME_Trig2840" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsHiAEr4EemAZaGjK5Aj8g" name="PME_Trig2841" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gsLMYEr4EemAZaGjK5Aj8g" name="PME_Trig2842" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsMagEr4EemAZaGjK5Aj8g" name="PME_Trig2843" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gsNooEr4EemAZaGjK5Aj8g" name="PME_Trig2844" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsQE4Er4EemAZaGjK5Aj8g" name="PME_Trig2845" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gsQr8Er4EemAZaGjK5Aj8g" name="PME_Trig2846" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsR6EEr4EemAZaGjK5Aj8g" name="PME_Trig2847" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gsWLgEr4EemAZaGjK5Aj8g" name="PME_Trig2848" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gsXZoEr4EemAZaGjK5Aj8g" name="PME_Trig2849" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gsYAsEr4EemAZaGjK5Aj8g" name="PME_Trig2850" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gsZ14Er4EemAZaGjK5Aj8g" name="PME_Trig2851" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsbEAEr4EemAZaGjK5Aj8g" name="PME_Trig2852" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gsbrEEr4EemAZaGjK5Aj8g" name="PME_Trig2853" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gshKoEr4EemAZaGjK5Aj8g" name="PME_Trig2854" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gsjm4Er4EemAZaGjK5Aj8g" name="PME_Trig2855" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gsk1AEr4EemAZaGjK5Aj8g" name="PME_Trig2856" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsmDIEr4EemAZaGjK5Aj8g" name="PME_Trig2857" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gsmqMEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__Ready__2858" source="_tSpXwUrDEem2BZRQc2M93A" target="_gqSWAEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtgpIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2881&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2884&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gsptgEr4EemAZaGjK5Aj8g" name="PME_Trig2859" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsrisEr4EemAZaGjK5Aj8g" name="PME_Trig2860" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gst-8Er4EemAZaGjK5Aj8g" name="PME_Trig2861" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gsvNEEr4EemAZaGjK5Aj8g" name="PME_Trig2862" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gsv0IEr4EemAZaGjK5Aj8g" name="PME_Trig2863" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gs0FkEr4EemAZaGjK5Aj8g" name="PME_Trig2864" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gs1TsEr4EemAZaGjK5Aj8g" name="PME_Trig2865" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gs2h0Er4EemAZaGjK5Aj8g" name="PME_Trig2866" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gs4XAEr4EemAZaGjK5Aj8g" name="PME_Trig2867" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gs5lIEr4EemAZaGjK5Aj8g" name="PME_Trig2868" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gs6MMEr4EemAZaGjK5Aj8g" name="PME_Trig2869" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gs7aUEr4EemAZaGjK5Aj8g" name="PME_Trig2870" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gs8ocEr4EemAZaGjK5Aj8g" name="PME_Trig2871" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gtAS0Er4EemAZaGjK5Aj8g" name="PME_Trig2872" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gtCvEEr4EemAZaGjK5Aj8g" name="PME_Trig2873" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gtDWIEr4EemAZaGjK5Aj8g" name="PME_Trig2874" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gtEkQEr4EemAZaGjK5Aj8g" name="PME_Trig2875" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gtGZcEr4EemAZaGjK5Aj8g" name="PME_Trig2876" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gtKD0Er4EemAZaGjK5Aj8g" name="PME_Trig2877" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gtLR8Er4EemAZaGjK5Aj8g" name="PME_Trig2878" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gtNuMEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__reqFlowInit__2879" guard="_gth3Q0r4EemAZaGjK5Aj8g" source="_gqSWAEr4EemAZaGjK5Aj8g" target="_tSr0AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gth3Q0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2887">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gth3Qkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2887">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gtNuMUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__reqFlowInit__2880" guard="_gthQMUr4EemAZaGjK5Aj8g" source="_gqSWAEr4EemAZaGjK5Aj8g" target="_tSql4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gthQMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2885">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gthQMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2885">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gtOVQEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__getMasterName__2881" guard="_gth3QUr4EemAZaGjK5Aj8g" source="_gqSWAEr4EemAZaGjK5Aj8g" target="_tStCIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gth3QUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2886">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gth3QEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2886">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__2881&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gtOVQUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__Ready__2882" guard="_gtieUUr4EemAZaGjK5Aj8g" source="_gqSWAEr4EemAZaGjK5Aj8g" target="_tSpXwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gtieUUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2888">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gtieUEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2888">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Ready__2882&quot;,&quot;Debug__B__Ex__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gtO8UEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2883" source="_gqP5wUr4EemAZaGjK5Aj8g" target="_gqSWAEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gtQxgEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ac__reqFlowInit&quot;,&quot;To__Debug__B__Ac__reqFlowInit__2880&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2881&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2879&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__2882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2884&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gtO8UUr4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2884" guard="_gtieU0r4EemAZaGjK5Aj8g" source="_gqSWAEr4EemAZaGjK5Aj8g" target="_gqRH4Er4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gtieU0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2889">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gtieUkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2889">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2884&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tSpXwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSpXwkrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSxTkUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready__942">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tSql4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSql4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;reqFlowInit&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSzv0ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqFlowInit__943">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tSr0AErDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSr0AUrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqFlowInit&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS098UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit__944">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tStCIErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tStCIUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS3aMErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__945">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gqSWAEr4EemAZaGjK5Aj8g" name="DecesionPoint__2791" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gqULMEr4EemAZaGjK5Aj8g" name="Init__State__2792"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tTEOgUrDEem2BZRQc2M93A" name="Debug__C__NoResponseFromServer">
              <connectionPoint xmi:id="_tTFcoUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tTGqwErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gf31wUr4EemAZaGjK5Aj8g" name="From__Parent__2520" kind="entryPoint"/>
              <connectionPoint xmi:id="_gf98YEr4EemAZaGjK5Aj8g" name="To__Parent__2522" kind="exitPoint"/>
              <region xmi:id="_tTEOgkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tTWiYErDEem2BZRQc2M93A" name="Debug__init__trans__NoResponseFromServer" source="_tTFcoUrDEem2BZRQc2M93A" target="_tTTfEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTgTYErDEem2BZRQc2M93A" name="Debug__init__trans__NoResponseFromServer__974">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__init__trans__NoResponseFromServer&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tTWiYUrDEem2BZRQc2M93A" name="Debug__Ex__WaitingForReply" source="_tTTfEErDEem2BZRQc2M93A" target="_tTUGIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTWiY0rDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTWiYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tTXJcErDEem2BZRQc2M93A" name="Debug__AC__NoResponseFromServer" source="_tTUGIErDEem2BZRQc2M93A" target="_tTUtMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTXwgErDEem2BZRQc2M93A" name="ServiceFailure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Service Failur.....\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__AC__NoResponseFromServer&quot;,(char *)&quot;Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTXJcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tTXwgUrDEem2BZRQc2M93A" name="Debug__En__Ready" source="_tTUtMErDEem2BZRQc2M93A" target="_tTV7UErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTXwg0rDEem2BZRQc2M93A" name="ReadyEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__En__Ready&quot;,(char *)&quot;Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTXwgkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tTYXkErDEem2BZRQc2M93A" name="Debug__end__trans__NoResponseFromServer" source="_tTV7UErDEem2BZRQc2M93A" target="_tTGqwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTlL4ErDEem2BZRQc2M93A" name="Debug__end__trans__NoResponseFromServer__979">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__end__trans__NoResponseFromServer&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTYXkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ggPCIEr4EemAZaGjK5Aj8g" name="Trans__ex2526" source="_tTGqwErDEem2BZRQc2M93A" target="_ggA_sEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gj0hoEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2617&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ggPpMEr4EemAZaGjK5Aj8g" name="Trans__Init__State__25252527" source="_ggHtYEr4EemAZaGjK5Aj8g" target="_ggA_sEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gjw3QEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2525&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2525&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2525&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2525&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2525&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2617&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2525&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_ggReYEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__Ready__2528" source="_tTV7UErDEem2BZRQc2M93A" target="_ggA_sEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gjtz8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2617&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ggSFcEr4EemAZaGjK5Aj8g" name="PME_Trig2529" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ggYzIEr4EemAZaGjK5Aj8g" name="PME_Trig2530" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ggaoUEr4EemAZaGjK5Aj8g" name="PME_Trig2531" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ggb2cEr4EemAZaGjK5Aj8g" name="PME_Trig2532" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ggcdgEr4EemAZaGjK5Aj8g" name="PME_Trig2533" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ggjyQEr4EemAZaGjK5Aj8g" name="PME_Trig2534" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gglncEr4EemAZaGjK5Aj8g" name="PME_Trig2535" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ggncoEr4EemAZaGjK5Aj8g" name="PME_Trig2536" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ggrHAEr4EemAZaGjK5Aj8g" name="PME_Trig2537" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ggvYcEr4EemAZaGjK5Aj8g" name="PME_Trig2538" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ggzC0Er4EemAZaGjK5Aj8g" name="PME_Trig2539" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gg04AEr4EemAZaGjK5Aj8g" name="PME_Trig2540" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gg1fEEr4EemAZaGjK5Aj8g" name="PME_Trig2541" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gg2tMEr4EemAZaGjK5Aj8g" name="PME_Trig2542" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gg5JcEr4EemAZaGjK5Aj8g" name="PME_Trig2543" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gg-B8Er4EemAZaGjK5Aj8g" name="PME_Trig2544" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gg_QEEr4EemAZaGjK5Aj8g" name="PME_Trig2545" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ghEvoEr4EemAZaGjK5Aj8g" name="PME_Trig2546" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ghHy8Er4EemAZaGjK5Aj8g" name="PME_Trig2547" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghJBEEr4EemAZaGjK5Aj8g" name="PME_Trig2548" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ghKPMEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__WaitingForReply__2549" source="_tTTfEErDEem2BZRQc2M93A" target="_ggA_sEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gjyFYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2617&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_ghMEYEr4EemAZaGjK5Aj8g" name="PME_Trig2550" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghPHsEr4EemAZaGjK5Aj8g" name="PME_Trig2551" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ghQV0Er4EemAZaGjK5Aj8g" name="PME_Trig2552" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghSLAEr4EemAZaGjK5Aj8g" name="PME_Trig2553" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ghTZIEr4EemAZaGjK5Aj8g" name="PME_Trig2554" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghUAMEr4EemAZaGjK5Aj8g" name="PME_Trig2555" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ghUnQEr4EemAZaGjK5Aj8g" name="PME_Trig2556" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghV1YEr4EemAZaGjK5Aj8g" name="PME_Trig2557" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ghZfwEr4EemAZaGjK5Aj8g" name="PME_Trig2558" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghcjEEr4EemAZaGjK5Aj8g" name="PME_Trig2559" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ghdxMEr4EemAZaGjK5Aj8g" name="PME_Trig2560" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gheYQEr4EemAZaGjK5Aj8g" name="PME_Trig2561" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ghke4Er4EemAZaGjK5Aj8g" name="PME_Trig2562" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_ghowUEr4EemAZaGjK5Aj8g" name="PME_Trig2563" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghtBwEr4EemAZaGjK5Aj8g" name="PME_Trig2564" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_ghuP4Er4EemAZaGjK5Aj8g" name="PME_Trig2565" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_ghwFEEr4EemAZaGjK5Aj8g" name="PME_Trig2566" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ghxTMEr4EemAZaGjK5Aj8g" name="PME_Trig2567" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_ghx6QEr4EemAZaGjK5Aj8g" name="PME_Trig2568" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ghzIYEr4EemAZaGjK5Aj8g" name="PME_Trig2569" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_ghzvcEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__NoResponseFromServer__2570" source="_tTUtMErDEem2BZRQc2M93A" target="_ggA_sEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gj1vwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2617&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gh0WgEr4EemAZaGjK5Aj8g" name="PME_Trig2571" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gh52EEr4EemAZaGjK5Aj8g" name="PME_Trig2572" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gh7rQEr4EemAZaGjK5Aj8g" name="PME_Trig2573" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gh8SUEr4EemAZaGjK5Aj8g" name="PME_Trig2574" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gh-HgEr4EemAZaGjK5Aj8g" name="PME_Trig2575" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_giGqYEr4EemAZaGjK5Aj8g" name="PME_Trig2576" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_giKUwEr4EemAZaGjK5Aj8g" name="PME_Trig2577" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_giMxAEr4EemAZaGjK5Aj8g" name="PME_Trig2578" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_giOmMEr4EemAZaGjK5Aj8g" name="PME_Trig2579" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_giP0UEr4EemAZaGjK5Aj8g" name="PME_Trig2580" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_giRCcEr4EemAZaGjK5Aj8g" name="PME_Trig2581" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_giUFwEr4EemAZaGjK5Aj8g" name="PME_Trig2582" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_giWiAEr4EemAZaGjK5Aj8g" name="PME_Trig2583" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_giY-QEr4EemAZaGjK5Aj8g" name="PME_Trig2584" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_giaMYEr4EemAZaGjK5Aj8g" name="PME_Trig2585" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_giazcEr4EemAZaGjK5Aj8g" name="PME_Trig2586" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gid2wEr4EemAZaGjK5Aj8g" name="PME_Trig2587" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ginnwEr4EemAZaGjK5Aj8g" name="PME_Trig2588" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gio14Er4EemAZaGjK5Aj8g" name="PME_Trig2589" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_giqEAEr4EemAZaGjK5Aj8g" name="PME_Trig2590" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_girSIEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__NoResponseFromServer__2591" source="_tTUGIErDEem2BZRQc2M93A" target="_ggA_sEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gjntUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2617&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gitHUEr4EemAZaGjK5Aj8g" name="PME_Trig2592" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_giuVcEr4EemAZaGjK5Aj8g" name="PME_Trig2593" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_giu8gEr4EemAZaGjK5Aj8g" name="PME_Trig2594" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gix_0Er4EemAZaGjK5Aj8g" name="PME_Trig2595" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gi0cEEr4EemAZaGjK5Aj8g" name="PME_Trig2596" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gi1qMEr4EemAZaGjK5Aj8g" name="PME_Trig2597" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gi4GcEr4EemAZaGjK5Aj8g" name="PME_Trig2598" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gi4tgEr4EemAZaGjK5Aj8g" name="PME_Trig2599" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gi5UkEr4EemAZaGjK5Aj8g" name="PME_Trig2600" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gi7w0Er4EemAZaGjK5Aj8g" name="PME_Trig2601" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gjDsoEr4EemAZaGjK5Aj8g" name="PME_Trig2602" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_f62dIEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gjGI4Er4EemAZaGjK5Aj8g" name="PME_Trig2603" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gjKaUEr4EemAZaGjK5Aj8g" name="PME_Trig2604" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gjMPgEr4EemAZaGjK5Aj8g" name="PME_Trig2605" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gjNdoEr4EemAZaGjK5Aj8g" name="PME_Trig2606" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_gjOEsEr4EemAZaGjK5Aj8g" name="PME_Trig2607" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gjPS0Er4EemAZaGjK5Aj8g" name="PME_Trig2608" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_gjP54Er4EemAZaGjK5Aj8g" name="PME_Trig2609" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gjUyYEr4EemAZaGjK5Aj8g" name="PME_Trig2610" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_gjXOoEr4EemAZaGjK5Aj8g" name="PME_Trig2611" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gjcHIEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__Ready__2612" guard="_gj2940r4EemAZaGjK5Aj8g" source="_ggA_sEr4EemAZaGjK5Aj8g" target="_tTV7UErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gj2940r4EemAZaGjK5Aj8g" name="PME_checkDecesion2621">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gj294kr4EemAZaGjK5Aj8g" name="PME_checkDecesion2621">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__2612&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gjejYEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__WaitingForReply__2613" guard="_gj2W0kr4EemAZaGjK5Aj8g" source="_ggA_sEr4EemAZaGjK5Aj8g" target="_tTTfEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gj2W0kr4EemAZaGjK5Aj8g" name="PME_checkDecesion2619">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gj2W0Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2619">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gjejYUr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__NoResponseFromServer__2614" guard="_gj294Ur4EemAZaGjK5Aj8g" source="_ggA_sEr4EemAZaGjK5Aj8g" target="_tTUtMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gj294Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion2620">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gj294Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2620">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gjfxgEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__NoResponseFromServer__2615" guard="_gj2W0Er4EemAZaGjK5Aj8g" source="_ggA_sEr4EemAZaGjK5Aj8g" target="_tTUGIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_gj2W0Er4EemAZaGjK5Aj8g" name="PME_checkDecesion2618">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gj1vwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2618">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_gjiNwEr4EemAZaGjK5Aj8g" name="From__Parnet__ClientStateMachine__2616" source="_gf31wUr4EemAZaGjK5Aj8g" target="_ggA_sEr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_gjvpIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__2615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__2614&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2617&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gji00Er4EemAZaGjK5Aj8g" name="To__Parent__ClientStateMachine__2617" guard="_gj8dcUr4EemAZaGjK5Aj8g" source="_ggA_sEr4EemAZaGjK5Aj8g" target="_gf98YEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_gj8dcUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2622">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_gj8dcEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2622">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2617&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tTTfEErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTTfEUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTY-oUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__969">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTUGIErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUGIUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTba4ErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer__970">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTUtMErDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUtMUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTcpAUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer__971">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTV7UErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTV7UUrDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTeeMErDEem2BZRQc2M93A" name="Debug__A__En__Ready__972">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ggA_sEr4EemAZaGjK5Aj8g" name="DecesionPoint__2524" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_ggHtYEr4EemAZaGjK5Aj8g" name="Init__State__2525"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tT_bkErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_f_RqIEr4EemAZaGjK5Aj8g" name="DecesionPoint__1845" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swtvYErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swtIUErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Server1Comm.recallAll();
ConfigComm.recallAll();
Server2Comm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sw_cMUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sw_cMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxFi0ErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxDGkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxYdwErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sxOswErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_f8zk8Er4EemAZaGjK5Aj8g" name="loadHeap" specification="_f8y94Er4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_f86SoEr4EemAZaGjK5Aj8g" name="unLoadHeap" specification="_f85rkEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_f9uyAUr4EemAZaGjK5Aj8g" name="sendMessage" specification="_f9uyAEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server1Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server1Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server2Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server2Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_f9ycYEr4EemAZaGjK5Aj8g" name="sendInternalMessage" specification="_f9x1UEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_f_CZkUr4EemAZaGjK5Aj8g" name="initForPMD" specification="_f_CZkEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Client::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Client::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Server1Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Server2Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;RequestTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ConfigTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ResponseTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Server1Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Server2Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swtIUErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swtvYErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sw_cMErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sw_cMUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxDGkErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxFi0ErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxDtoErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxEUsErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxE7wErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sxOswErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sxYdwErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxPT0ErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxQh8ErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxRwEUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxS-MUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxTlQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxUzYUrDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxWBgUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxXPoErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sUrDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f8y94Er4EemAZaGjK5Aj8g" name="loadHeap" visibility="private" method="_f8zk8Er4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_f85rkEr4EemAZaGjK5Aj8g" name="unLoadHeap" visibility="private" method="_f86SoEr4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_f9uyAEr4EemAZaGjK5Aj8g" name="sendMessage" visibility="private" method="_f9uyAUr4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_f9wAIEr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f9wnMUr4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f9x1UEr4EemAZaGjK5Aj8g" name="sendInternalMessage" visibility="private" method="_f9ycYEr4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_f91fsEr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f95xIEr4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f_CZkEr4EemAZaGjK5Aj8g" name="initForPMD" visibility="private" method="_f_CZkUr4EemAZaGjK5Aj8g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_yqOfEAxwEeaB2MeL96fedA" memberEnd="_yqPtMgxwEeaB2MeL96fedA _yqQUQAxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_yqPtMAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_yqPtMQxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_yqQUQAxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_yqOfEAxwEeaB2MeL96fedA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_z8f_QAxwEeaB2MeL96fedA" memberEnd="_z8hNYQxwEeaB2MeL96fedA _z8hNYgxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_z8gmUAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_z8hNYAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_z8hNYgxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_z8f_QAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_OiTE0AghEea_md0mpENoqg" name="Utility">
      <packagedElement xmi:type="uml:Class" xmi:id="_JesyoAgiEea_md0mpENoqg" name="HostInfo" visibility="public">
        <ownedAttribute xmi:id="_l4sHAAgiEea_md0mpENoqg" name="hostType" type="_TE8UIAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_6EOE0AglEea_md0mpENoqg" name="status" type="_gf1EkAglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_TE8UIAgiEea_md0mpENoqg" name="HostType">
        <ownedLiteral xmi:id="_Y-NNkAgiEea_md0mpENoqg" name="CLI"/>
        <ownedLiteral xmi:id="_aJOPMAgiEea_md0mpENoqg" name="SRV"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_gf1EkAglEea_md0mpENoqg" name="HostStatus" visibility="public">
        <ownedLiteral xmi:id="_ygyIkAglEea_md0mpENoqg" name="Active"/>
        <ownedLiteral xmi:id="_0Co84AglEea_md0mpENoqg" name="Deactive"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_-VDn4AglEea_md0mpENoqg" name="ServerRole">
        <ownedLiteral xmi:id="_GJYf0AgmEea_md0mpENoqg" name="Master"/>
        <ownedLiteral xmi:id="_HZTPkAgmEea_md0mpENoqg" name="Slave"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_T635wAgmEea_md0mpENoqg" name="ServerInfo">
        <generalization xmi:id="_jCuQYAgrEea_md0mpENoqg" general="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_Y5vngAgmEea_md0mpENoqg" name="role" type="_-VDn4AglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04e0AgsEea_md0mpENoqg" name="ConfigProtocol">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_v000cAgsEea_md0mpENoqg" name="ConfigProtocol">
          <interfaceRealization xmi:id="_v0_zkAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v09XUAgsEea_md0mpENoqg" contract="_v09XUAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_v1SHcAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg" contract="_v1PrMAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v09XUAgsEea_md0mpENoqg" name="ConfigProtocol">
          <ownedOperation xmi:id="_Mnix4AgtEea_md0mpENoqg" name="ReplyReplicationMode">
            <ownedParameter xmi:id="_Mnix4QgtEea_md0mpENoqg" name="RunningMode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_GvEtMAguEea_md0mpENoqg" name="ReplyServerRole">
            <ownedParameter xmi:id="_GvEtMQguEea_md0mpENoqg" name="ServerRole">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlnCwAguEea_md0mpENoqg" name="StartUp">
            <ownedParameter xmi:id="_oGfrwAlpEea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OMA_4AguEea_md0mpENoqg" name="Shutdown"/>
          <ownedOperation xmi:id="_QoJEEAguEea_md0mpENoqg" name="BIT"/>
          <ownedOperation xmi:id="_mLtTMAguEea_md0mpENoqg" name="ReplyMasterId">
            <ownedParameter xmi:id="_s-1M0AguEea_md0mpENoqg" name="MasterId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Iv10IAl4Eea_md0mpENoqg" name="ReplyConfig">
            <ownedParameter xmi:id="_Iv10IQl4Eea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1I9gAgsEea_md0mpENoqg" name="ConfigProtocol~">
          <ownedOperation xmi:id="_AW3DYAgtEea_md0mpENoqg" name="QueryReplicationMode"/>
          <ownedOperation xmi:id="_yDGNYAgtEea_md0mpENoqg" name="QueryServerRole">
            <ownedParameter xmi:id="_yDGNYQgtEea_md0mpENoqg" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_hZgIcAguEea_md0mpENoqg" name="QueryMasterId"/>
          <ownedOperation xmi:id="_BB20wAl4Eea_md0mpENoqg" name="QueryConfig"/>
          <ownedOperation xmi:id="_xu1hMAl4Eea_md0mpENoqg" name="IAMMaster">
            <ownedParameter xmi:id="_xu1hMQl4Eea_md0mpENoqg" name="MasterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1MA0AgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1I9gAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_v1N2AAgsEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1PrMAgsEea_md0mpENoqg" name="ConfigProtocolIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1SugAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_AW3qcAgtEea_md0mpENoqg" operation="_AW3DYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MnkAAAgtEea_md0mpENoqg" operation="_Mnix4AgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_yDG0cAgtEea_md0mpENoqg" operation="_yDGNYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_GvF7UAguEea_md0mpENoqg" operation="_GvEtMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MloQ4AguEea_md0mpENoqg" operation="_MlnCwAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_OMBm8AguEea_md0mpENoqg" operation="_OMA_4AguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_QoLgUAguEea_md0mpENoqg" operation="_QoJEEAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_hZh9oAguEea_md0mpENoqg" operation="_hZgIcAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_mLvIYAguEea_md0mpENoqg" operation="_mLtTMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_BB3b0Al4Eea_md0mpENoqg" operation="_BB20wAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_Iv3CQAl4Eea_md0mpENoqg" operation="_Iv10IAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xu1hMgl4Eea_md0mpENoqg" operation="_xu1hMAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RLyKYAgzEea_md0mpENoqg" name="EchoCapsule" classifierBehavior="_WlNQsAg0Eea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_PdYSYAg0Eea_md0mpENoqg" name="Echo" visibility="public" type="_nk_BAAgzEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WNSukAm2Eea_md0mpENoqg" value="8"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WOSNEAm2Eea_md0mpENoqg" value="8"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swEPIErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swFdQUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swGEUErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swS4oErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swTfsErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swUt0ErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swXKEErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_gxqwYEr4EemAZaGjK5Aj8g" name="dbgPortForEchoCapsule" visibility="protected" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_gxqwYUr4EemAZaGjK5Aj8g" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_gxqwYkr4EemAZaGjK5Aj8g" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WlNQsAg0Eea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_abLcsAg0Eea_md0mpENoqg" name="Region1">
            <transition xmi:id="_kUUFAAg0Eea_md0mpENoqg" name="DoEcho" source="_tJvTYErDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_L4RXcAg1Eea_md0mpENoqg" name="DoEcho">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was recieved\n&quot;;
    int tempid=msg->sapIndex0_;
    Echo.Echo().sendAt(tempid);
    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was replied\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::DoEcho&quot;,(char *)&quot;Debug__Path__DoEcho&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJy9wErDEem2BZRQc2M93A" name="Debug__DoEcho" source="_cfbzcAg0Eea_md0mpENoqg" target="_tJvTYErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJy9wUrDEem2BZRQc2M93A" name="Debug__DoEcho__687">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__DoEcho&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;Debug__Path__DoEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_2CMcAAg0Eea_md0mpENoqg" name="Echo" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tJ0y8ErDEem2BZRQc2M93A" name="Debug__DoEcho__S" guard="_tJ2BEUrDEem2BZRQc2M93A" source="_tJvTYErDEem2BZRQc2M93A" target="_tJxIkUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tJ2BEUrDEem2BZRQc2M93A" name="Debug__GuardDoEcho">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tJ2BEErDEem2BZRQc2M93A" name="Debug__GuardDoEcho">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ2oIErDEem2BZRQc2M93A" name="Debug__DoEcho__S__689">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__DoEcho__S&quot;,(char *)&quot;Debug__Path__DoEcho&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJ4dUErDEem2BZRQc2M93A" name="Debug__DoEcho__E" source="_tJxvoUrDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ5EYErDEem2BZRQc2M93A" name="Debug__DoEcho__E__690">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__DoEcho__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tJ6SgErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ6SgkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange__692">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tJ6SgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ65kErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ65kkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint__693">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ65kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ7goErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ7gokrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint__694">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ7goUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8HsErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ8uwErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints__695">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ8HsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8uwUrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ9V0UrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode__696">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tJ9V0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ984ErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ984krDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg__697">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ984UrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKp5YErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__E" source="_tKkZ0UrDEem2BZRQc2M93A" target="_cfbzcAg0Eea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKqgcErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__E__716">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__init__WaitForEcho__8__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tKsVoErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKs8sErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange__718">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tKsVoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKtjwErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKtjwkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint__719">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKtjwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKuK0ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKux4UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint__720">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKux4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKvY8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKvY8krDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints__721">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKvY8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwAAErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwAAkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode__722">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tKwAAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwnEErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwnEkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg__723">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKwnEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tLNTAErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_bHyrEAg0Eea_md0mpENoqg" target="_tLME4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLNTAUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_gyeBoEr4EemAZaGjK5Aj8g" name="2908" source="_tJvTYErDEem2BZRQc2M93A" target="_gyYiEEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3MJkEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2928&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2929&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gyeosEr4EemAZaGjK5Aj8g" name="From__Debug__InitState__2909" source="_tLME4ErDEem2BZRQc2M93A" target="_gyYiEEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3YW0Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2928&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2929&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gyhsAEr4EemAZaGjK5Aj8g" name="PME_Trig2910" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gyjhMEr4EemAZaGjK5Aj8g" name="PME_Trig2911" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gykvUEr4EemAZaGjK5Aj8g" name="PME_Trig2912" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gynLkEr4EemAZaGjK5Aj8g" name="PME_Trig2913" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gynyoEr4EemAZaGjK5Aj8g" name="PME_Trig2914" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gypAwEr4EemAZaGjK5Aj8g" name="PME_Trig2915" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gyqO4Er4EemAZaGjK5Aj8g" name="PME_Trig2916" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gyt5QEr4EemAZaGjK5Aj8g" name="PME_Trig2917" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_gyugUEr4EemAZaGjK5Aj8g" name="PME_Trig2918" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_gyw8kEr4EemAZaGjK5Aj8g" name="From__WaitForEcho__2919" source="_cfbzcAg0Eea_md0mpENoqg" target="_gyYiEEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3Zk8Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2928&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2929&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitForEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_gyxjoEr4EemAZaGjK5Aj8g" name="PME_Trig2920" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_gyyxwEr4EemAZaGjK5Aj8g" name="PME_Trig2921" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gy0m8Er4EemAZaGjK5Aj8g" name="PME_Trig2922" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gy4RUEr4EemAZaGjK5Aj8g" name="PME_Trig2923" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_gy44YEr4EemAZaGjK5Aj8g" name="PME_Trig2924" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_gy6GgEr4EemAZaGjK5Aj8g" name="PME_Trig2925" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_gy77sEr4EemAZaGjK5Aj8g" name="PME_Trig2926" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
              <trigger xmi:id="_gy8iwEr4EemAZaGjK5Aj8g" name="PME_Trig2927" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_gy9w4Er4EemAZaGjK5Aj8g" name="To__Debug__InitState__2928" guard="_g3kkEUr4EemAZaGjK5Aj8g" source="_gyYiEEr4EemAZaGjK5Aj8g" target="_tLME4ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_g3kkEUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3031">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3kkEEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3031">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__2928&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gy9w4Ur4EemAZaGjK5Aj8g" name="To__WaitForEcho__2929" guard="_g3lyMUr4EemAZaGjK5Aj8g" source="_gyYiEEr4EemAZaGjK5Aj8g" target="_cfbzcAg0Eea_md0mpENoqg">
              <ownedRule xmi:id="_g3lyMUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3033">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3lyMEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3033">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__WaitForEcho__2929&quot;,&quot;WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gy-_AEr4EemAZaGjK5Aj8g" name="Trans__ex2930" source="_tKkZ0UrDEem2BZRQc2M93A" target="_gyYiEEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3PM4Er4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2928&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2929&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_gzBbQEr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__init__WaitForEcho__8__2932" guard="_g3qqsUr4EemAZaGjK5Aj8g" source="_gyYiEEr4EemAZaGjK5Aj8g" target="_gy-_AUr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_g3qqsUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3034">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3qqsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3034">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_gzGTwUr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__init__WaitForEcho__8__2934" source="_gzD3gEr4EemAZaGjK5Aj8g" target="_gyYiEEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3gSoEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2928&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2929&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g0fa4Er4EemAZaGjK5Aj8g" name="Trans__ex2975" source="_tJxvoUrDEem2BZRQc2M93A" target="_gyYiEEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3UscEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2928&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2929&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_g0h3IUr4EemAZaGjK5Aj8g" name="To__Substates__Debug__C__DoEcho__2977" guard="_g3lLIUr4EemAZaGjK5Aj8g" source="_gyYiEEr4EemAZaGjK5Aj8g" target="_g0gpAEr4EemAZaGjK5Aj8g">
              <ownedRule xmi:id="_g3lLIUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3032">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3lLIEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3032">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__DoEcho__2977&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_g0jFQEr4EemAZaGjK5Aj8g" name="From__Substates__Debug__C__DoEcho__2979" source="_g0ieMEr4EemAZaGjK5Aj8g" target="_gyYiEEr4EemAZaGjK5Aj8g">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3j9AEr4EemAZaGjK5Aj8g">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__2928&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__2977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;To__WaitForEcho__2929&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__2932&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_bHyrEAg0Eea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_cfbzcAg0Eea_md0mpENoqg" name="WaitForEcho">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tLow0ErDEem2BZRQc2M93A" name="WaitForEcho__735">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLpX4ErDEem2BZRQc2M93A" name="WaitForEcho__736">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tJvTYErDEem2BZRQc2M93A" name="Debug__Path__DoEcho" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tJwhgErDEem2BZRQc2M93A" name="Debug__C__DoEcho">
              <connectionPoint xmi:id="_tJxIkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tJxvoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_g0gpAEr4EemAZaGjK5Aj8g" name="From__Parent__2976" kind="entryPoint"/>
              <connectionPoint xmi:id="_g0ieMEr4EemAZaGjK5Aj8g" name="To__Parent__2978" kind="exitPoint"/>
              <region xmi:id="_tJwhgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tKFRoErDEem2BZRQc2M93A" name="Debug__init__trans__DoEcho" source="_tJxIkUrDEem2BZRQc2M93A" target="_tKAZIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKStAErDEem2BZRQc2M93A" name="Debug__init__trans__DoEcho__703">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__init__trans__DoEcho&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tKFRoUrDEem2BZRQc2M93A" name="Debug__Ex__WaitForEcho" source="_tKAZIErDEem2BZRQc2M93A" target="_tKBnQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKUiMErDEem2BZRQc2M93A" name="Debug__Ex__WaitForEcho__705">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__Ex__WaitForEcho&quot;,(char *)&quot;Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKFRokrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tKF4sErDEem2BZRQc2M93A" name="Debug__AC__DoEcho" source="_tKBnQErDEem2BZRQc2M93A" target="_tKC1YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKF4skrDEem2BZRQc2M93A" name="DoEcho" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was recieved\n&quot;;
    int tempid=msg->sapIndex0_;
    Echo.Echo().sendAt(tempid);
    std::cout&lt;&lt;&quot;EchoCapsule: The Echo message was replied\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__AC__DoEcho&quot;,(char *)&quot;Debug__B__Ac__DoEcho&quot;,(char *)&quot;Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKF4sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tKGfwErDEem2BZRQc2M93A" name="Debug__En__WaitForEcho" source="_tKC1YErDEem2BZRQc2M93A" target="_tKEDgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKbP4ErDEem2BZRQc2M93A" name="Debug__En__WaitForEcho__708">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__En__WaitForEcho&quot;,(char *)&quot;Debug__A__Ac__DoEcho&quot;,(char *)&quot;Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKGfwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tKHG0ErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho" source="_tKEDgErDEem2BZRQc2M93A" target="_tJxvoUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKdFEErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho__710">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__end__trans__DoEcho&quot;,(char *)&quot;Debug__A__En__WaitForEcho&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKHG0UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_g0sPMEr4EemAZaGjK5Aj8g" name="Trans__Init__State__29812982" source="_g0k6cEr4EemAZaGjK5Aj8g" target="_g0jFQUr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g2yg8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2981&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2981&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2981&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3020&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2981&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2981&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3023&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2981&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_g0s2QEr4EemAZaGjK5Aj8g" name="Trans__ex2983" source="_tJxvoUrDEem2BZRQc2M93A" target="_g0jFQUr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g26cwEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3020&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3023&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_g05qkEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__WaitForEcho__2984" source="_tKEDgErDEem2BZRQc2M93A" target="_g0jFQUr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g29gEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3020&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3023&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_g064sEr4EemAZaGjK5Aj8g" name="PME_Trig2985" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_g08t4Er4EemAZaGjK5Aj8g" name="PME_Trig2986" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g1C0gEr4EemAZaGjK5Aj8g" name="PME_Trig2987" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g1F30Er4EemAZaGjK5Aj8g" name="PME_Trig2988" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g1IUEEr4EemAZaGjK5Aj8g" name="PME_Trig2989" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_g1LXYEr4EemAZaGjK5Aj8g" name="PME_Trig2990" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_g1MlgEr4EemAZaGjK5Aj8g" name="PME_Trig2991" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_g1PBwEr4EemAZaGjK5Aj8g" name="PME_Trig2992" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_g1UhUEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ex__WaitForEcho__2993" source="_tKAZIErDEem2BZRQc2M93A" target="_g0jFQUr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g3BxgEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3020&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3023&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_g1VvcEr4EemAZaGjK5Aj8g" name="PME_Trig2994" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_g1W9kEr4EemAZaGjK5Aj8g" name="PME_Trig2995" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g1bPAEr4EemAZaGjK5Aj8g" name="PME_Trig2996" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g1fgcEr4EemAZaGjK5Aj8g" name="PME_Trig2997" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g1gukEr4EemAZaGjK5Aj8g" name="PME_Trig2998" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_g1m1MEr4EemAZaGjK5Aj8g" name="PME_Trig2999" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_g1oqYEr4EemAZaGjK5Aj8g" name="PME_Trig3000" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_g1p4gEr4EemAZaGjK5Aj8g" name="PME_Trig3001" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_g1qfkEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__DoEcho__3002" source="_tKBnQErDEem2BZRQc2M93A" target="_g0jFQUr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g22yYEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3020&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3023&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_g1rGoEr4EemAZaGjK5Aj8g" name="PME_Trig3003" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_g1ti4Er4EemAZaGjK5Aj8g" name="PME_Trig3004" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g103oEr4EemAZaGjK5Aj8g" name="PME_Trig3005" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g1368Er4EemAZaGjK5Aj8g" name="PME_Trig3006" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g15JEEr4EemAZaGjK5Aj8g" name="PME_Trig3007" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_g16XMEr4EemAZaGjK5Aj8g" name="PME_Trig3008" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_g18zcEr4EemAZaGjK5Aj8g" name="PME_Trig3009" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_g1-BkEr4EemAZaGjK5Aj8g" name="PME_Trig3010" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_g1_PsEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__DoEcho__3011" source="_tKC1YErDEem2BZRQc2M93A" target="_g0jFQUr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g2saUEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3020&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3023&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_g2C6EEr4EemAZaGjK5Aj8g" name="PME_Trig3012" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_g2HLgEr4EemAZaGjK5Aj8g" name="PME_Trig3013" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g2JnwEr4EemAZaGjK5Aj8g" name="PME_Trig3014" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g2OgQEr4EemAZaGjK5Aj8g" name="PME_Trig3015" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_g2RjkEr4EemAZaGjK5Aj8g" name="PME_Trig3016" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_g2SxsEr4EemAZaGjK5Aj8g" name="PME_Trig3017" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_g2T_0Er4EemAZaGjK5Aj8g" name="PME_Trig3018" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_g2WcEEr4EemAZaGjK5Aj8g" name="PME_Trig3019" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_g2e-8Er4EemAZaGjK5Aj8g" name="To__Debug__A__En__WaitForEcho__3020" guard="_g3E00Ur4EemAZaGjK5Aj8g" source="_g0jFQUr4EemAZaGjK5Aj8g" target="_tKEDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_g3E00Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3028">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3E00Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3028">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__WaitForEcho__3020&quot;,&quot;Debug__A__En__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g2g0IEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ex__WaitForEcho__3021" guard="_g3ENwUr4EemAZaGjK5Aj8g" source="_g0jFQUr4EemAZaGjK5Aj8g" target="_tKAZIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_g3ENwUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3027">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3ENwEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3027">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g2ipUEr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__DoEcho__3022" guard="_g3DmsUr4EemAZaGjK5Aj8g" source="_g0jFQUr4EemAZaGjK5Aj8g" target="_tKBnQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_g3DmsUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3026">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3DmsEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3026">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__DoEcho__3022&quot;,&quot;Debug__B__Ac__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g2ipUUr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__DoEcho__3023" guard="_g3GC8Ur4EemAZaGjK5Aj8g" source="_g0jFQUr4EemAZaGjK5Aj8g" target="_tKC1YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_g3GC8Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3030">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3GC8Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3030">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__DoEcho__3023&quot;,&quot;Debug__A__Ac__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g2kegEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__3024" source="_g0gpAEr4EemAZaGjK5Aj8g" target="_g0jFQUr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g2wEsEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ac__DoEcho&quot;,&quot;To__Debug__B__Ac__DoEcho__3022&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__3021&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__3020&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__3025&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__3023&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_g2lsoEr4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__3025" guard="_g3Fb4Ur4EemAZaGjK5Aj8g" source="_g0jFQUr4EemAZaGjK5Aj8g" target="_g0ieMEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_g3Fb4Ur4EemAZaGjK5Aj8g" name="PME_checkDecesion3029">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3Fb4Er4EemAZaGjK5Aj8g" name="PME_checkDecesion3029">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__3025&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKAZIErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKAZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKIU8UrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho__698">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKBnQErDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKBnQUrDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;DoEcho&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKKxMUrDEem2BZRQc2M93A" name="Debug__B__Ac__DoEcho__699">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKC1YErDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKC1YUrDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;DoEcho&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKNNcUrDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho__700">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKEDgErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKEqkErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKPCoErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho__701">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_g0jFQUr4EemAZaGjK5Aj8g" name="DecesionPoint__2980" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_g0k6cEr4EemAZaGjK5Aj8g" name="Init__State__2981"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tKh9kUrDEem2BZRQc2M93A" name="Debug__C__init__WaitForEcho__8">
              <connectionPoint xmi:id="_tKjLsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tKkZ0UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_gy-_AUr4EemAZaGjK5Aj8g" name="From__Parent__2931" kind="entryPoint"/>
              <connectionPoint xmi:id="_gzD3gEr4EemAZaGjK5Aj8g" name="To__Parent__2933" kind="exitPoint"/>
              <region xmi:id="_tKh9kkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tK2tsErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8" source="_tKjLsUrDEem2BZRQc2M93A" target="_tKzDUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLC68ErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8__728">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__init__trans__init__WaitForEcho__8&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tK2tsUrDEem2BZRQc2M93A" name="Debug__Ac__init__WaitForEcho__8" source="_tKzDUUrDEem2BZRQc2M93A" target="_tK0RcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tK370ErDEem2BZRQc2M93A" name="init" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;EchoCapsule: Intializing\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK2tskrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tK370UrDEem2BZRQc2M93A" name="Debug__En__WaitForEcho" source="_tK0RcErDEem2BZRQc2M93A" target="_tK1fkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLF-QErDEem2BZRQc2M93A" name="Debug__En__WaitForEcho__731">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__En__WaitForEcho&quot;,(char *)&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK4i4ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tK4i4UrDEem2BZRQc2M93A" name="Debug__end__trans__init__WaitForEcho__8" source="_tK1fkErDEem2BZRQc2M93A" target="_tKkZ0UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLHMYErDEem2BZRQc2M93A" name="Debug__end__trans__init__WaitForEcho__8__733">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__end__trans__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK5J8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_gzLMQEr4EemAZaGjK5Aj8g" name="Trans__ex2937" source="_tKkZ0UrDEem2BZRQc2M93A" target="_gzGTwkr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g0OVIEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__2967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__2966&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gzMaYEr4EemAZaGjK5Aj8g" name="Trans__Init__State__29362938" source="_gzHh4Er4EemAZaGjK5Aj8g" target="_gzGTwkr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g0XfEEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2936&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2936&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__2967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2936&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__2966&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2936&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2936&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_gzQEwEr4EemAZaGjK5Aj8g" name="From__Debug__A__Ac__init__WaitForEcho__8__2939" source="_tK0RcErDEem2BZRQc2M93A" target="_gzGTwkr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g0PjQEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__2967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__2966&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gzQr0Er4EemAZaGjK5Aj8g" name="PME_Trig2940" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gzR58Er4EemAZaGjK5Aj8g" name="PME_Trig2941" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gzWycEr4EemAZaGjK5Aj8g" name="PME_Trig2942" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gzYnoEr4EemAZaGjK5Aj8g" name="PME_Trig2943" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gzbD4Er4EemAZaGjK5Aj8g" name="PME_Trig2944" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gzbq8Er4EemAZaGjK5Aj8g" name="PME_Trig2945" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gzfVUEr4EemAZaGjK5Aj8g" name="PME_Trig2946" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_gzhKgEr4EemAZaGjK5Aj8g" name="PME_Trig2947" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_gziYoEr4EemAZaGjK5Aj8g" name="From__Debug__A__En__init__WaitForEcho__8__2948" source="_tK1fkErDEem2BZRQc2M93A" target="_gzGTwkr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g0RYcEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__2967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__2966&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gzkN0Er4EemAZaGjK5Aj8g" name="PME_Trig2949" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gzk04Er4EemAZaGjK5Aj8g" name="PME_Trig2950" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gznRIEr4EemAZaGjK5Aj8g" name="PME_Trig2951" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gzqUcEr4EemAZaGjK5Aj8g" name="PME_Trig2952" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gzrikEr4EemAZaGjK5Aj8g" name="PME_Trig2953" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gztXwEr4EemAZaGjK5Aj8g" name="PME_Trig2954" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gzul4Er4EemAZaGjK5Aj8g" name="PME_Trig2955" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_gzvM8Er4EemAZaGjK5Aj8g" name="PME_Trig2956" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_gzwbEEr4EemAZaGjK5Aj8g" name="From__Debug__B__Ac__init__WaitForEcho__8__2957" source="_tKzDUUrDEem2BZRQc2M93A" target="_gzGTwkr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g0Mf8Er4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__2967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__2966&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_gzxCIEr4EemAZaGjK5Aj8g" name="PME_Trig2958" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_gzyQQEr4EemAZaGjK5Aj8g" name="PME_Trig2959" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gz16oEr4EemAZaGjK5Aj8g" name="PME_Trig2960" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gz4W4Er4EemAZaGjK5Aj8g" name="PME_Trig2961" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_gz5lAEr4EemAZaGjK5Aj8g" name="PME_Trig2962" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_gz7aMEr4EemAZaGjK5Aj8g" name="PME_Trig2963" event="_dYWEIEr4EemAZaGjK5Aj8g" port="_gxqwYEr4EemAZaGjK5Aj8g"/>
                  <trigger xmi:id="_gz_roEr4EemAZaGjK5Aj8g" name="PME_Trig2964" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_g0ASsEr4EemAZaGjK5Aj8g" name="PME_Trig2965" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_g0DWAEr4EemAZaGjK5Aj8g" name="To__Debug__A__Ac__init__WaitForEcho__8__2966" guard="_g0Z7UUr4EemAZaGjK5Aj8g" source="_gzGTwkr4EemAZaGjK5Aj8g" target="_tK0RcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_g0Z7UUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2973">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g0Z7UEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2973">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__init__WaitForEcho__8__2966&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g0D9EEr4EemAZaGjK5Aj8g" name="To__Debug__A__En__init__WaitForEcho__8__2967" guard="_g0ZUQ0r4EemAZaGjK5Aj8g" source="_gzGTwkr4EemAZaGjK5Aj8g" target="_tK1fkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_g0ZUQ0r4EemAZaGjK5Aj8g" name="PME_checkDecesion2972">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g0ZUQkr4EemAZaGjK5Aj8g" name="PME_checkDecesion2972">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__init__WaitForEcho__8__2967&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g0D9EUr4EemAZaGjK5Aj8g" name="To__Debug__B__Ac__init__WaitForEcho__8__2968" guard="_g0ZUQUr4EemAZaGjK5Aj8g" source="_gzGTwkr4EemAZaGjK5Aj8g" target="_tKzDUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_g0ZUQUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2971">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g0ZUQEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2971">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__init__WaitForEcho__8__2968&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_g0JcoEr4EemAZaGjK5Aj8g" name="From__Parnet__StateMachine1__2969" source="_gy-_AUr4EemAZaGjK5Aj8g" target="_gzGTwkr4EemAZaGjK5Aj8g">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g0YtMEr4EemAZaGjK5Aj8g">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__2968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__2967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__A__Ac__init__WaitForEcho__8__2966&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__2970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_g0JcoUr4EemAZaGjK5Aj8g" name="To__Parent__StateMachine1__2970" guard="_g0aiYUr4EemAZaGjK5Aj8g" source="_gzGTwkr4EemAZaGjK5Aj8g" target="_gzD3gEr4EemAZaGjK5Aj8g">
                  <ownedRule xmi:id="_g0aiYUr4EemAZaGjK5Aj8g" name="PME_checkDecesion2974">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_g0aiYEr4EemAZaGjK5Aj8g" name="PME_checkDecesion2974">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2970&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKzDUUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKzqYErDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK6YEUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8__724">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK0RcErDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK0RcUrDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK9bYUrDEem2BZRQc2M93A" name="Debug__A__Ac__init__WaitForEcho__8__725">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK1fkErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK2GoErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLBFwErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8__726">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gzGTwkr4EemAZaGjK5Aj8g" name="DecesionPoint__2935" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_gzHh4Er4EemAZaGjK5Aj8g" name="Init__State__2936"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tLME4ErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_gyYiEEr4EemAZaGjK5Aj8g" name="DecesionPoint__2907" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swDoEErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swDBAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Echo.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swK80ErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_swKVwErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQcYErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_swOAIErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swnBsUrDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_swdQsErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gx8dMEr4EemAZaGjK5Aj8g" name="loadHeap" specification="_gx72IEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gx9rUUr4EemAZaGjK5Aj8g" name="unLoadHeap" specification="_gx9rUEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gyEZAEr4EemAZaGjK5Aj8g" name="sendMessage" specification="_gyDx8Er4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;Echo&quot;) {
  if(message.signal==&quot;Echo&quot;) {
   if(message.payload.size()==0){
    Echo.Echo().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gyFnIUr4EemAZaGjK5Aj8g" name="sendInternalMessage" specification="_gyFnIEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gyRNUUr4EemAZaGjK5Aj8g" name="initForPMD" specification="_gyRNUEr4EemAZaGjK5Aj8g">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EchoCapsule::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EchoCapsule::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swDBAErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swDoEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swKVwErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_swK80ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swOAIErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_swQcYErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swOAIUrDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swOnMErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swP1UErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_swdQsErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_swnBsUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swd3wErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swee0UrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swg7EUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiJMUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiwQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swj-YErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlMgErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlzkErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swmaoErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swnBsErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gx72IEr4EemAZaGjK5Aj8g" name="loadHeap" visibility="private" method="_gx8dMEr4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_gx9rUEr4EemAZaGjK5Aj8g" name="unLoadHeap" visibility="private" method="_gx9rUUr4EemAZaGjK5Aj8g"/>
        <ownedOperation xmi:id="_gyDx8Er4EemAZaGjK5Aj8g" name="sendMessage" visibility="private" method="_gyEZAEr4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_gyEZAUr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gyFAEUr4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gyFnIEr4EemAZaGjK5Aj8g" name="sendInternalMessage" visibility="private" method="_gyFnIUr4EemAZaGjK5Aj8g">
          <ownedParameter xmi:id="_gyGOMEr4EemAZaGjK5Aj8g" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gyIqcEr4EemAZaGjK5Aj8g" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gyRNUEr4EemAZaGjK5Aj8g" name="initForPMD" visibility="private" method="_gyRNUUr4EemAZaGjK5Aj8g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nlBdQAgzEea_md0mpENoqg" name="Echo">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_nk_BAAgzEea_md0mpENoqg" name="Echo">
          <interfaceRealization xmi:id="_nlGVwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlD5gAgzEea_md0mpENoqg" contract="_nlD5gAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_nlZQsAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg" contract="_nlTKEAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlD5gAgzEea_md0mpENoqg" name="Echo"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlL1UAgzEea_md0mpENoqg" name="Echo~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlQGwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlL1UAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_nlR78AgzEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlTKEAgzEea_md0mpENoqg" name="EchoIO">
          <ownedOperation xmi:id="_7w0BIAgzEea_md0mpENoqg" name="Echo"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlae0AgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_7w0oMAgzEea_md0mpENoqg" operation="_7w0BIAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y1UDYAg6Eea_md0mpENoqg" name="SystemConfig">
        <ownedAttribute xmi:id="_lX6oUAg6Eea_md0mpENoqg" name="ConfigOK">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_lX6oUQg6Eea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rA4b8Ag6Eea_md0mpENoqg" name="RunningMode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_xR7jQAg6Eea_md0mpENoqg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4Gg1cAg6Eea_md0mpENoqg" name="MasterId">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_7FhkQAg6Eea_md0mpENoqg" name="MasterName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6tXsMAmpEea_md0mpENoqg" name="MasterList">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hzi4QAmqEea_md0mpENoqg" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HzxhwAmqEea_md0mpENoqg" value="2"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JwlzwAmqEea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_cYIKwAimEea_md0mpENoqg" name="loadConfig" specification="_QF0roAimEea_md0mpENoqg">
          <language>C++</language>
          <body>{
    /* UMLRTGEN-USERREGION-BEGIN platform:/resource/Replication/Replication.uml Replication::Configuration operation loadConfig */
    std::cout&lt;&lt;&quot;Config Class: load configuration from file\n&quot;;
    char result[PATH_MAX];
    readlink( &quot;/proc/self/exe&quot;, result, PATH_MAX );
    string temps=string(result);
    size_t tempP=temps.rfind('/');
    if (tempP>0)
    {
    temps=temps.substr(0,tempP);
    }
    else
    temps=&quot;&quot;;
    string MasterConfigFileName=&quot;./Master.config&quot;;
    string RunningModeConfigFileName=&quot;./RunningMode.config&quot;;
    string MasterConfigPath=temps+MasterConfigFileName;
    string RunningModeConfigPath=temps+RunningModeConfigFileName;
    cout &lt;&lt; RunningModeConfigPath &lt;&lt; endl;
    //ifstream RunningModeConfigFile(RunningModeConfigPath.c_str());
    ifstream RunningModeConfigFile(&quot;./RunningMode.config&quot;);
    string line;
    if (RunningModeConfigFile.is_open())
    {
    (getline(RunningModeConfigFile,line));
    {
    if (atoi(line.c_str())==0)
    {
    this->RunningMode=0;
    this->ConfigOK=true;
    RunningModeConfigFile.close();
    cout&lt;&lt;&quot;Configuration Loaded successfully, the running mode is active\n&quot;;
    //            			return true;
    }
    else if (atoi(line.c_str())==1)
    {
    this->RunningMode=1;
    //ifstream MasterConfigFile(MasterConfigPath.c_str());
    ifstream MasterConfigFile(&quot;Master.config&quot;);

    if (MasterConfigFile.is_open() &amp;&amp; (getline(MasterConfigFile,line)))
    if (line==&quot;server1&quot; || line==&quot;server2&quot;)
    {
    this->MasterName= new char[line.size()+1];
    strcpy(this->MasterName,line.c_str());
    cout &lt;&lt;&quot;Master Name is:&quot;&lt;&lt; this->MasterName&lt;&lt;endl;
    this->ConfigOK=true;
    cout &lt;&lt; &quot;configuration Loaded successfully, the running mode is passive|&quot;
    &lt;&lt;&quot; Master name is : &quot;&lt;&lt;this->MasterName&lt;&lt;endl;
    RunningModeConfigFile.close();
    MasterConfigFile.close();
    //           					return true;
    }
    else
    {
    cout&lt;&lt;&quot;Master Name is wrong, please fix it\n&quot;;
    this->ConfigOK=false;
    //           					return false;
    }
    else
    {
    cout&lt;&lt;&quot;Master config file(Master.config) cann't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //         				return false;
    }
    }
    else
    {
    cout&lt;&lt; &quot;The running mode value is incorrect, please fix that\n&quot;;
    this->ConfigOK=false;
    //       			return false;
    }
    }
    }
    else
    {
    cout&lt;&lt;&quot;The Running Mode config(RunningMode.config) file can't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //     	return false;
    }/* UMLRTGEN-USERREGION-END */
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QF0roAimEea_md0mpENoqg" name="loadConfig" method="_cYIKwAimEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4_QwUAnEEeaGqPUk-4V4qQ" name="Services">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_4--ccAnEEeaGqPUk-4V4qQ" name="Services">
          <interfaceRealization xmi:id="_5AwlIAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AqegAnEEeaGqPUk-4V4qQ" contract="_5AqegAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_5A8LUAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ" contract="_5A5IAAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AqegAnEEeaGqPUk-4V4qQ" name="Services">
          <ownedOperation xmi:id="_P49E4AnFEeaGqPUk-4V4qQ" name="Reply">
            <ownedParameter xmi:id="_P49E4QnFEeaGqPUk-4V4qQ" name="Result">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_P49E4gnFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AzBYAnEEeaGqPUk-4V4qQ" name="Services~">
          <ownedOperation xmi:id="_G3ENoAnFEeaGqPUk-4V4qQ" name="Request">
            <ownedParameter xmi:id="_G3ENoQnFEeaGqPUk-4V4qQ" name="ServiceID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_G3ENognFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A3S0AnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AzBYAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_5A354AnEEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5A5IAAnEEeaGqPUk-4V4qQ" name="ServicesIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A_1sAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_G3K7UAnFEeaGqPUk-4V4qQ" operation="_G3ENoAnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_P4-6EAnFEeaGqPUk-4V4qQ" operation="_P49E4AnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_f2zWUApBEeaGqPUk-4V4qQ" name="FailOver">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_f2ud0ApBEeaGqPUk-4V4qQ" name="FailOver">
          <interfaceRealization xmi:id="_f4EhoApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f39z8ApBEeaGqPUk-4V4qQ" contract="_f39z8ApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_f4O5sApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ" contract="_f4L2YApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f39z8ApBEeaGqPUk-4V4qQ" name="FailOver"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4FvwApBEeaGqPUk-4V4qQ" name="FailOver~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4KoQApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4FvwApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_f4LPUApBEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4L2YApBEeaGqPUk-4V4qQ" name="FailOverIO">
          <ownedOperation xmi:id="_xM6GgApBEeaGqPUk-4V4qQ" name="IAmAlive">
            <ownedParameter xmi:id="_xM6GgQpBEeaGqPUk-4V4qQ" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4Qu4ApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xM6tkApBEeaGqPUk-4V4qQ" operation="_xM6GgApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gDfqsAghEea_md0mpENoqg" name="Simulator">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_m1qiEAghEea_md0mpENoqg" client="_lYTBoAggEea_md0mpENoqg" supplier="_rPgFkAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_nyBcoAghEea_md0mpENoqg" client="_gDfqsAghEea_md0mpENoqg" supplier="_z1vioAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_d9MBUAgoEea_md0mpENoqg" name="Simulator" isActive="true">
        <ownedAttribute xmi:id="_ljfrYAgoEea_md0mpENoqg" name="server1" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ljjVwAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ljjVwQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_odv2AAgoEea_md0mpENoqg" name="client" visibility="protected" type="_zpdLYAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_odySQQgoEea_md0mpENoqg" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ody5UAgoEea_md0mpENoqg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_trcC4AgoEea_md0mpENoqg" name="ENV" visibility="protected" type="_sMZ5EAgoEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_trfGMAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trfGMQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6qCFoAg7Eea_md0mpENoqg" name="server2" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6qGXEAg7Eea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6qGXEQg7Eea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_O1v3cOM6EeaTpaLNj-zYpw" name="RTConnector6">
          <end xmi:id="_O1xsoOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_fL3OQAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_O1xsoeM6EeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_P9Q5IOM6EeaTpaLNj-zYpw" name="RTConnector7">
          <end xmi:id="_P9SHQOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_lRZpIAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_P9SHQeM6EeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_zuXWQONAEeaTpaLNj-zYpw" name="RTConnector8">
          <end xmi:id="_zuZygONAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_zuZygeNAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
        <ownedConnector xmi:id="_0bs9YONAEeaTpaLNj-zYpw" name="RTConnector9">
          <end xmi:id="_0buLgONAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_0buLgeNAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_stgqYErDEem2BZRQc2M93A" name="Debug__Top">
      <ownedAttribute xmi:id="_st6TAErDEem2BZRQc2M93A" name="Debug__Gateway">
        <type xmi:type="uml:Class" href="../CommGateWay/model.uml#_XIyCcAdxEeadtKuU2t6fMg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_st9WUErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_st99YErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_sufh0ErDEem2BZRQc2M93A" name="Debug__Simulator" type="_d9MBUAgoEea_md0mpENoqg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suhXAErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_suh-EErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_hk8ncEr4EemAZaGjK5Aj8g" name="dbgAgent" type="_dWpbAEr4EemAZaGjK5Aj8g">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hk9OgUr4EemAZaGjK5Aj8g" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_hk9Ogkr4EemAZaGjK5Aj8g" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dWpbAEr4EemAZaGjK5Aj8g" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_dYYgYEr4EemAZaGjK5Aj8g" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dYbjsEr4EemAZaGjK5Aj8g" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_dYf1IEr4EemAZaGjK5Aj8g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_db8KsEr4EemAZaGjK5Aj8g" name="dbgPortForServer" visibility="public" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_db-m8Er4EemAZaGjK5Aj8g" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_db_1EEr4EemAZaGjK5Aj8g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_f64SUEr4EemAZaGjK5Aj8g" name="dbgPortForClient" visibility="public" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_f645YEr4EemAZaGjK5Aj8g" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_f645YUr4EemAZaGjK5Aj8g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gxrXcUr4EemAZaGjK5Aj8g" name="dbgPortForEchoCapsule" visibility="public" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_gxr-gEr4EemAZaGjK5Aj8g" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_gxr-gUr4EemAZaGjK5Aj8g" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_g4rXUEr4EemAZaGjK5Aj8g" name="dbgPortForENV" visibility="public" type="_dXkoEEr4EemAZaGjK5Aj8g" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_g4rXUUr4EemAZaGjK5Aj8g" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_g4rXUkr4EemAZaGjK5Aj8g" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_dXPQ4Er4EemAZaGjK5Aj8g" name="dbgAgent StateMachine">
        <region xmi:id="_g4WnMEr4EemAZaGjK5Aj8g" name="mainRegion">
          <transition xmi:id="_g4d78Er4EemAZaGjK5Aj8g" name="Trans__Init__State__30373038" source="_g4YcYUr4EemAZaGjK5Aj8g" target="_g4XOQUr4EemAZaGjK5Aj8g">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g4jbgEr4EemAZaGjK5Aj8g">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3037&quot;,&quot;New__State__3036&quot;,&quot;To__New__State__3036__3041&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3037&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_g4fxIEr4EemAZaGjK5Aj8g" name="From__New__State__3036__3039" source="_g4X1UUr4EemAZaGjK5Aj8g" target="_g4XOQUr4EemAZaGjK5Aj8g">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_g4nF4Er4EemAZaGjK5Aj8g">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__3036&quot;,&quot;New__State__3036&quot;,&quot;To__New__State__3036__3041&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__3036&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_g4g_QEr4EemAZaGjK5Aj8g" name="PME_Trig3040" port="_dYYgYEr4EemAZaGjK5Aj8g">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_g4iNYEr4EemAZaGjK5Aj8g" name="To__New__State__3036__3041" guard="_g4oUAUr4EemAZaGjK5Aj8g" source="_g4XOQUr4EemAZaGjK5Aj8g" target="_g4X1UUr4EemAZaGjK5Aj8g">
            <ownedRule xmi:id="_g4oUAUr4EemAZaGjK5Aj8g" name="PME_checkDecesion3042">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4oUAEr4EemAZaGjK5Aj8g" name="PME_checkDecesion3042">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__3036__3041&quot;,&quot;New__State__3036&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_g4XOQUr4EemAZaGjK5Aj8g" name="DecesionPoint__3035" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_g4X1UUr4EemAZaGjK5Aj8g" name="New__State__3036">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_hk9Og0r4EemAZaGjK5Aj8g" name="New__State__3036">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_g4YcYUr4EemAZaGjK5Aj8g" name="Init__State__3037"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g3wxUUr4EemAZaGjK5Aj8g" name="loadHeap" specification="_g3wxUEr4EemAZaGjK5Aj8g">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g3238Ur4EemAZaGjK5Aj8g" name="unLoadHeap" specification="_g3238Er4EemAZaGjK5Aj8g">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g4CeIUr4EemAZaGjK5Aj8g" name="sendMessage" specification="_g4CeIEr4EemAZaGjK5Aj8g">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForServer&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForServer.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForClient&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForClient.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForEchoCapsule&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForEchoCapsule.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g4IkwUr4EemAZaGjK5Aj8g" name="sendInternalMessage" specification="_g4IkwEr4EemAZaGjK5Aj8g">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g4OrYUr4EemAZaGjK5Aj8g" name="initForPMD" specification="_g4OrYEr4EemAZaGjK5Aj8g">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_g3wxUEr4EemAZaGjK5Aj8g" name="loadHeap" visibility="private" method="_g3wxUUr4EemAZaGjK5Aj8g"/>
      <ownedOperation xmi:id="_g3238Er4EemAZaGjK5Aj8g" name="unLoadHeap" visibility="private" method="_g3238Ur4EemAZaGjK5Aj8g"/>
      <ownedOperation xmi:id="_g4CeIEr4EemAZaGjK5Aj8g" name="sendMessage" visibility="private" method="_g4CeIUr4EemAZaGjK5Aj8g">
        <ownedParameter xmi:id="_g4DFMEr4EemAZaGjK5Aj8g" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_g4GvkEr4EemAZaGjK5Aj8g" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4IkwEr4EemAZaGjK5Aj8g" name="sendInternalMessage" visibility="private" method="_g4IkwUr4EemAZaGjK5Aj8g">
        <ownedParameter xmi:id="_g4Jy4Er4EemAZaGjK5Aj8g" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_g4LoEUr4EemAZaGjK5Aj8g" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4OrYEr4EemAZaGjK5Aj8g" name="initForPMD" visibility="private" method="_g4OrYUr4EemAZaGjK5Aj8g"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dXg9sEr4EemAZaGjK5Aj8g" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_dXkoEEr4EemAZaGjK5Aj8g" name="dbgProtocol">
        <interfaceRealization xmi:id="_dYM6MEr4EemAZaGjK5Aj8g" client="_dXkoEEr4EemAZaGjK5Aj8g" supplier="_dXmdQUr4EemAZaGjK5Aj8g" contract="_dXmdQUr4EemAZaGjK5Aj8g"/>
        <interfaceRealization xmi:id="_dYOIUEr4EemAZaGjK5Aj8g" client="_dXkoEEr4EemAZaGjK5Aj8g" supplier="_dXqHoEr4EemAZaGjK5Aj8g" contract="_dXqHoEr4EemAZaGjK5Aj8g"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_dXmdQUr4EemAZaGjK5Aj8g" name="dbgProtocol">
        <ownedOperation xmi:id="_dYPWcEr4EemAZaGjK5Aj8g" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_dXo5gEr4EemAZaGjK5Aj8g" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_dXqHoEr4EemAZaGjK5Aj8g" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_dXqusEr4EemAZaGjK5Aj8g" client="_dXkoEEr4EemAZaGjK5Aj8g" supplier="_dXo5gEr4EemAZaGjK5Aj8g"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_dXw1UEr4EemAZaGjK5Aj8g" client="_dXkoEEr4EemAZaGjK5Aj8g" supplier="_dXqHoEr4EemAZaGjK5Aj8g"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_dYWEIEr4EemAZaGjK5Aj8g" operation="_dYPWcEr4EemAZaGjK5Aj8g"/>
    </packagedElement>
    <profileApplication xmi:id="_lcu1sAggEea_md0mpENoqg">
      <eAnnotations xmi:id="_lcwq4AggEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_0p1pUAgxEea_md0mpENoqg">
      <eAnnotations xmi:id="_0p1pUQgxEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_iMahwAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMbv4AifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_iMeMIAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMgBUAifEea_md0mpENoqg" source="PapyrusVersion">
        <details xmi:id="_iMgBUQifEea_md0mpENoqg" key="Version" value="0.0.11"/>
        <details xmi:id="_iMgBUgifEea_md0mpENoqg" key="Comment" value=""/>
        <details xmi:id="_iMgBUwifEea_md0mpENoqg" key="Copyright" value=""/>
        <details xmi:id="_iMgBVAifEea_md0mpENoqg" key="Date" value="2015-12-10"/>
        <details xmi:id="_iMgBVQifEea_md0mpENoqg" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_iMeMIQifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_5AGSMAghEea_md0mpENoqg" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_xCrWYAgmEea_md0mpENoqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_zp7FcAgmEea_md0mpENoqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_d9rwkAgoEea_md0mpENoqg" base_Class="_d9MBUAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_ljiusAgoEea_md0mpENoqg" base_Property="_ljfrYAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_odySQAgoEea_md0mpENoqg" base_Property="_odv2AAgoEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_sM-g0AgoEea_md0mpENoqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_trefIAgoEea_md0mpENoqg" base_Property="_trcC4AgoEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_v05s8AgsEea_md0mpENoqg" base_Package="_v04e0AgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v09-YAgsEea_md0mpENoqg" base_Interface="_v09XUAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1KLoAgsEea_md0mpENoqg" base_Interface="_v1I9gAgsEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1Q5UAgsEea_md0mpENoqg" base_Interface="_v1PrMAgsEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_v1T8oAgsEea_md0mpENoqg" base_Collaboration="_v000cAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_GXxLAAgvEea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_GXsSgAgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_g3oVAAgvEea_md0mpENoqg" isWired="false" base_Port="_g3nG4AgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_-3NuMAgvEea_md0mpENoqg" isWired="false" base_Port="_-3KD0AgvEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_RMf8EAgzEea_md0mpENoqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_nlCrYAgzEea_md0mpENoqg" base_Package="_nlBdQAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlFHoAgzEea_md0mpENoqg" base_Interface="_nlD5gAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlO4oAgzEea_md0mpENoqg" base_Interface="_nlL1UAgzEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlW0cAgzEea_md0mpENoqg" base_Interface="_nlTKEAgzEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_nlbF4AgzEea_md0mpENoqg" base_Collaboration="_nk_BAAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_PdauoAg0Eea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_PdYSYAg0Eea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_6qFwAAg7Eea_md0mpENoqg" base_Property="_6qCFoAg7Eea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_l72A4AifEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include&lt;iostream>" base_Class="_sMZ5EAgoEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ZYVLEAihEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>" base_Class="_RLyKYAgzEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qp8qkAimEea_md0mpENoqg" implementationPreface="#include &lt;iostream>&#xA;#include &lt;fstream>&#xA;#include &lt;limits.h>&#xA;#include &lt;unistd.h>&#xA;using namespace std;" base_Class="_Y1UDYAg6Eea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_b2D_sAjLEea_md0mpENoqg" isWired="false" base_Port="_b1NrIAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_wQWSkAjLEea_md0mpENoqg" isWired="false" base_Port="_wQHCAAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_X4gvkAjMEea_md0mpENoqg" isWired="false" base_Port="_X4ceIAjMEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6nxNAAkFEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" implementationEnding="" base_Class="_xCGHkAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_skTr8AlKEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" base_Class="_zpdLYAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_iLgtsAmuEea_md0mpENoqg" isWired="false" base_Port="_iLeRcAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_oWjToAmuEea_md0mpENoqg" isWired="false" base_Port="_oWg3YAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_tQAV4AmuEea_md0mpENoqg" isWired="false" base_Port="_tP9SkAmuEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_5AbN8AnEEeaGqPUk-4V4qQ" base_Package="_4_QwUAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5AuI4AnEEeaGqPUk-4V4qQ" base_Interface="_5AqegAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A1doAnEEeaGqPUk-4V4qQ" base_Interface="_5AzBYAnEEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A69MAnEEeaGqPUk-4V4qQ" base_Interface="_5A5IAAnEEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_5BBq4AnEEeaGqPUk-4V4qQ" base_Collaboration="_4--ccAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_fMA_QAnFEeaGqPUk-4V4qQ" base_Port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lRkBMAnFEeaGqPUk-4V4qQ" base_Port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_pQ9x0AnMEeaGqPUk-4V4qQ" base_Port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8sLrYAovEeaGqPUk-4V4qQ" isWired="false" base_Port="_8sGy4AovEeaGqPUk-4V4qQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_f22ZoApBEeaGqPUk-4V4qQ" base_Package="_f2zWUApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4CscApBEeaGqPUk-4V4qQ" base_Interface="_f39z8ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4IMAApBEeaGqPUk-4V4qQ" base_Interface="_f4FvwApBEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4NrkApBEeaGqPUk-4V4qQ" base_Interface="_f4L2YApBEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_f4R9AApBEeaGqPUk-4V4qQ" base_Collaboration="_f2ud0ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_HIz9IApCEeaGqPUk-4V4qQ" base_Port="_HIvrsApCEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_ZDu1IApDEeaGqPUk-4V4qQ" isWired="false" base_Port="_ZDrx0ApDEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_Vj4_QApFEeaGqPUk-4V4qQ" isWired="false" base_Port="_Vj1U4ApFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lxxyEApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_lxs5kApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_rXbzAApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_rXZWwApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8587kAs1EeaGqPUk-4V4qQ" isWired="false" base_Port="_855RMAs1EeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_mKiJYOM2EeaTpaLNj-zYpw" isWired="false" base_Port="_mKfGEOM2EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_O1yTsOM6EeaTpaLNj-zYpw" base_Connector="_O1v3cOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_P9SuUOM6EeaTpaLNj-zYpw" base_Connector="_P9Q5IOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTPort xmi:id="_rmqMIOM8EeaTpaLNj-zYpw" base_Port="_rmnI0OM8EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_zuZyguNAEeaTpaLNj-zYpw" base_Connector="_zuXWQONAEeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_0bvZoONAEeaTpaLNj-zYpw" base_Connector="_0bs9YONAEeaTpaLNj-zYpw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_71nSEPMWEeauO5SNGpOV7w" headerPreface="#include &lt;fstream>" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <RTCppProperties:AttributeProperties xmi:id="_gvmcIPMYEeauO5SNGpOV7w" type="std::ofstream" base_Property="_dCa_wPMYEeauO5SNGpOV7w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_b45wYKozEeiNHY6qjNhZ4w" base_Region="_lvCAwAlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fAFjwKozEeiNHY6qjNhZ4w" base_Pseudostate="_hY-7oAlNEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_gOt6EKozEeiNHY6qjNhZ4w" base_State="_jLPjcAlNEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_hsv-UKozEeiNHY6qjNhZ4w" base_State="_UrcckAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_i6NP8KozEeiNHY6qjNhZ4w" base_State="_hgSoEAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_kA2H4KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_lJDGEKozEeiNHY6qjNhZ4w" base_Pseudostate="_Pyhf8Ap5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mRbDYKozEeiNHY6qjNhZ4w" base_Pseudostate="_kLngAAp5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_nsAyEKozEeiNHY6qjNhZ4w" base_State="_2g5S0ONBEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_o4vD4KozEeiNHY6qjNhZ4w" base_Pseudostate="_M8iZcONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTRegion xmi:id="_rpSf8KozEeiNHY6qjNhZ4w" base_Region="_ThAzEONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTState xmi:id="_tdqAkKozEeiNHY6qjNhZ4w" base_State="_Px2BIAqSEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ud1rMKozEeiNHY6qjNhZ4w" base_Pseudostate="_NU8OsAszEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_veq2EKozEeiNHY6qjNhZ4w" base_State="_ZaK1gAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wg0PkKozEeiNHY6qjNhZ4w" base_Pseudostate="_5yefMAszEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xiP3YKozEeiNHY6qjNhZ4w" base_Pseudostate="_8WMAUONDEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_0dGe8KozEeiNHY6qjNhZ4w" base_StateMachine="_lT4V0AlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_880dQKozEeiNHY6qjNhZ4w" base_Pseudostate="_88oQAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_88_cYKozEeiNHY6qjNhZ4w" base_Pseudostate="_887yAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_Y4mLoKo0EeiNHY6qjNhZ4w" base_Region="_Bk0GwAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_bQ-_UKo0EeiNHY6qjNhZ4w" base_Pseudostate="_Oll1cAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_cpwwIKo0EeiNHY6qjNhZ4w" base_State="_Q5-S4AlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_du4lIKo0EeiNHY6qjNhZ4w" base_State="_IjppsAlhEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_eug2IKo0EeiNHY6qjNhZ4w" base_State="_aVMuMAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_f8K8EKo0EeiNHY6qjNhZ4w" base_State="_fO-gkAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_g871gKo0EeiNHY6qjNhZ4w" base_State="_uScfwAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_h7dTQKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_jFMigKo0EeiNHY6qjNhZ4w" base_State="_KwFHIAo0EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_k5P6EKo0EeiNHY6qjNhZ4w" base_StateMachine="_BKT8EAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_Rg85wKpiEeiNHY6qjNhZ4w" base_State="_cfbzcAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SuGpYKpiEeiNHY6qjNhZ4w" base_Pseudostate="_bHyrEAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ZzTxgKpiEeiNHY6qjNhZ4w" base_Region="_abLcsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_bJC1YKpiEeiNHY6qjNhZ4w" base_StateMachine="_WlNQsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1LnmcKpiEeiNHY6qjNhZ4w" base_Pseudostate="_npsCMAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_2O6PcKpiEeiNHY6qjNhZ4w" base_State="_sdehUAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_3WYN0KpiEeiNHY6qjNhZ4w" base_State="__kywcAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_4kr0AKpiEeiNHY6qjNhZ4w" base_State="_NvBagAgxEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uXY4KpiEeiNHY6qjNhZ4w" base_Pseudostate="_dWznsAgxEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_8Lil8KpiEeiNHY6qjNhZ4w" base_Region="_jSIzIAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_BsmawKpjEeiNHY6qjNhZ4w" base_StateMachine="_gU8CMAgwEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_stxwIErDEem2BZRQc2M93A" base_Class="_stgqYErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_st8vQErDEem2BZRQc2M93A" base_Property="_st6TAErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_sugv8ErDEem2BZRQc2M93A" base_Property="_sufh0ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svEJkErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svHM4ErDEem2BZRQc2M93A" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sviqsErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_svhckErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_svluAErDEem2BZRQc2M93A" type="SROManager" base_Property="_svkf4ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_svoKQErDEem2BZRQc2M93A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_svu38ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_svrNkUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_svyiUErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_svwtIErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv0-kErDEem2BZRQc2M93A" type="const char *" base_Parameter="_svzJYErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv3a0ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv2MsErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv5QAErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv4B4ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swFdQErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swHScErDEem2BZRQc2M93A" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swWjAErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_swUt0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swYYMErDEem2BZRQc2M93A" type="SROManager" base_Property="_swXKEErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_swbbgErDEem2BZRQc2M93A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_swee0ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_swd3wErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swg7EErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_swee0UrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swiJMErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swg7EUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swjXUErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swiwQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swklcErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swj-YErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swxZwErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sw1EIErDEem2BZRQc2M93A" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxJNMErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sxH_EErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxLCYErDEem2BZRQc2M93A" type="SROManager" base_Property="_sxJNMUrDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sxM3kErDEem2BZRQc2M93A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxP64ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sxPT0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxRwEErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sxQh8ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxS-MErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxRwEUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxUzYErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxTlQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxWBgErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxUzYUrDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxhAoErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxjc4ErDEem2BZRQc2M93A" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx1wwErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sx1JsErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx2-4ErDEem2BZRQc2M93A" type="SROManager" base_Property="_sx2X0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sx40EErDEem2BZRQc2M93A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx8ecErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sx7QUErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx9FgErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sx8ecUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx-ToErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx9skErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx_hwErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx-6sErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_syAv4ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_syAI0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syTDwErDEem2BZRQc2M93A" base_Pseudostate="_syROkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_syVgAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syXVMErDEem2BZRQc2M93A" base_Pseudostate="_syVgAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syYjUErDEem2BZRQc2M93A" base_Pseudostate="_syX8QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_szFG4ErDEem2BZRQc2M93A" base_Region="_syTq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szGVAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szRUIErDEem2BZRQc2M93A" base_State="_szG8EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szU-gErDEem2BZRQc2M93A" base_State="_szJYUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szXawErDEem2BZRQc2M93A" base_State="_szMboErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szk2IErDEem2BZRQc2M93A" base_Pseudostate="_szkPEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szmrUErDEem2BZRQc2M93A" base_State="_szldMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sznSYErDEem2BZRQc2M93A" base_Pseudostate="_szmrUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szpuoErDEem2BZRQc2M93A" base_Pseudostate="_sznSYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sz93sErDEem2BZRQc2M93A" base_Region="_szldMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0KE8ErDEem2BZRQc2M93A" base_State="_sz-ewErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0NIQErDEem2BZRQc2M93A" base_State="_sz_s4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0PkgErDEem2BZRQc2M93A" base_State="_s0BiEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0T18ErDEem2BZRQc2M93A" base_State="_s0DXQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0fcIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0gqQErDEem2BZRQc2M93A" base_State="_s0fcIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0hRUErDEem2BZRQc2M93A" base_Pseudostate="_s0gqQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0h4YErDEem2BZRQc2M93A" base_Pseudostate="_s0hRUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s00zUErDEem2BZRQc2M93A" base_Region="_s0fcIkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0_LYErDEem2BZRQc2M93A" base_State="_s01aYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1COsErDEem2BZRQc2M93A" base_State="_s02BcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1GgIErDEem2BZRQc2M93A" base_State="_s032oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1L_sErDEem2BZRQc2M93A" base_State="_s05EwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ZbEErDEem2BZRQc2M93A" base_Pseudostate="_s1Y0AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1apMErDEem2BZRQc2M93A" base_State="_s1ZbEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ceYErDEem2BZRQc2M93A" base_Pseudostate="_s1apMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1dFcErDEem2BZRQc2M93A" base_Pseudostate="_s1ceYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s1uLMErDEem2BZRQc2M93A" base_Region="_s1ZbEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s11f8ErDEem2BZRQc2M93A" base_State="_s1uLMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s14jQErDEem2BZRQc2M93A" base_State="_s1uyQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s18NoErDEem2BZRQc2M93A" base_State="_s1wAYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2Ia4ErDEem2BZRQc2M93A" base_Pseudostate="_s2HMwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2JpAErDEem2BZRQc2M93A" base_State="_s2JB8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2K3IErDEem2BZRQc2M93A" base_Pseudostate="_s2KQEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2LeMErDEem2BZRQc2M93A" base_Pseudostate="_s2K3IUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s2eZIErDEem2BZRQc2M93A" base_Region="_s2JB8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2pYQErDEem2BZRQc2M93A" base_State="_s2eZIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2r0gErDEem2BZRQc2M93A" base_State="_s2gOUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2wF8ErDEem2BZRQc2M93A" base_State="_s2iDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s22zoErDEem2BZRQc2M93A" base_State="_s2j4sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3IgcErDEem2BZRQc2M93A" base_Pseudostate="_s3GEMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3JukErDEem2BZRQc2M93A" base_State="_s3JHgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3MK0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3Mx4ErDEem2BZRQc2M93A" base_Pseudostate="_s3MK0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s3bbYErDEem2BZRQc2M93A" base_Region="_s3JHgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3hiAErDEem2BZRQc2M93A" base_State="_s3bbYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3klUErDEem2BZRQc2M93A" base_State="_s3cpgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3nooErDEem2BZRQc2M93A" base_State="_s3d3oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s31rEErDEem2BZRQc2M93A" base_Pseudostate="_s31EAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s32SIErDEem2BZRQc2M93A" base_State="_s31rEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s325MErDEem2BZRQc2M93A" base_Pseudostate="_s32SIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s34HUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s4H-8ErDEem2BZRQc2M93A" base_Region="_s31rEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4P6wErDEem2BZRQc2M93A" base_State="_s4ImAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4SXAErDEem2BZRQc2M93A" base_State="_s4J0IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4WocErDEem2BZRQc2M93A" base_State="_s4LCQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4iOoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4i1sErDEem2BZRQc2M93A" base_State="_s4iOoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4kq4ErDEem2BZRQc2M93A" base_Pseudostate="_s4jcwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4lR8ErDEem2BZRQc2M93A" base_Pseudostate="_s4kq4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s40igErDEem2BZRQc2M93A" base_Region="_s4iOokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5DzEErDEem2BZRQc2M93A" base_State="_s40igUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5GPUErDEem2BZRQc2M93A" base_State="_s41woErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5JSoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5NkEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5ZKQErDEem2BZRQc2M93A" base_Pseudostate="_s5YjMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5ZxUErDEem2BZRQc2M93A" base_State="_s5ZKQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5a_cErDEem2BZRQc2M93A" base_Pseudostate="_s5aYYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5bmgErDEem2BZRQc2M93A" base_Pseudostate="_s5a_cUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s5qQAErDEem2BZRQc2M93A" base_Region="_s5ZKQkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5yL0ErDEem2BZRQc2M93A" base_State="_s5q3EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s512MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s545gErDEem2BZRQc2M93A" base_State="_s5ssQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s59K8ErDEem2BZRQc2M93A" base_State="_s5t6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s6Z24ErDEem2BZRQc2M93A" base_State="_s6YowErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s60GkErDEem2BZRQc2M93A" base_Pseudostate="_s6zfgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s61UsErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s617wErDEem2BZRQc2M93A" base_Pseudostate="_s61UsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s62i0ErDEem2BZRQc2M93A" base_Pseudostate="_s617wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7GacErDEem2BZRQc2M93A" base_Region="_s60GkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7IPoErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7NvMErDEem2BZRQc2M93A" base_State="_s7IPoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7QygErDEem2BZRQc2M93A" base_State="_s7JdwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7SnsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7dm0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7eN4ErDEem2BZRQc2M93A" base_State="_s7dm0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7e08ErDEem2BZRQc2M93A" base_Pseudostate="_s7eN4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7fcAErDEem2BZRQc2M93A" base_Pseudostate="_s7e08UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7yW8ErDEem2BZRQc2M93A" base_Region="_s7dm0krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s78vAErDEem2BZRQc2M93A" base_State="_s7y-AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7_yUErDEem2BZRQc2M93A" base_State="_s70MIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8C1oErDEem2BZRQc2M93A" base_State="_s71aQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8IVMErDEem2BZRQc2M93A" base_State="_s73PcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8T7YErDEem2BZRQc2M93A" base_Pseudostate="_s8TUUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8VwkErDEem2BZRQc2M93A" base_State="_s8T7YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8WXoErDEem2BZRQc2M93A" base_Pseudostate="_s8VwkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8W-sErDEem2BZRQc2M93A" base_Pseudostate="_s8WXoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s8ndYErDEem2BZRQc2M93A" base_Region="_s8T7YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8x1cErDEem2BZRQc2M93A" base_State="_s8ndYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s804wErDEem2BZRQc2M93A" base_State="_s8pSkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s84jIErDEem2BZRQc2M93A" base_State="_s8qgsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s89boErDEem2BZRQc2M93A" base_State="_s8s88ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9K3AErDEem2BZRQc2M93A" base_Pseudostate="_s9KP8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9LeEErDEem2BZRQc2M93A" base_State="_s9K3AUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9MsMErDEem2BZRQc2M93A" base_Pseudostate="_s9MFIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9NTQErDEem2BZRQc2M93A" base_Pseudostate="_s9MsMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s9dK4ErDEem2BZRQc2M93A" base_Region="_s9K3AkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9ltwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9oxEErDEem2BZRQc2M93A" base_State="_s9fAEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9rNUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9wF0ErDEem2BZRQc2M93A" base_State="_s9g1QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s97sAErDEem2BZRQc2M93A" base_Pseudostate="_s97E8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s986IErDEem2BZRQc2M93A" base_State="_s97sAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s99hMErDEem2BZRQc2M93A" base_Pseudostate="_s986IUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9-IQErDEem2BZRQc2M93A" base_Pseudostate="_s99hMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-NY0ErDEem2BZRQc2M93A" base_Region="_s98TEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-TfcErDEem2BZRQc2M93A" base_State="_s-N_4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-WiwErDEem2BZRQc2M93A" base_State="_s-POAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-a0MErDEem2BZRQc2M93A" base_State="_s-QcIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-pdsErDEem2BZRQc2M93A" base_Pseudostate="_s-oPkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-qr0ErDEem2BZRQc2M93A" base_State="_s-pdsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-rS4ErDEem2BZRQc2M93A" base_Pseudostate="_s-qr0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-r58ErDEem2BZRQc2M93A" base_Pseudostate="_s-rS4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-4uQErDEem2BZRQc2M93A" base_Region="_s-pdskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_B4MErDEem2BZRQc2M93A" base_State="_s-5VUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_E7gErDEem2BZRQc2M93A" base_State="_s-58YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_HXwErDEem2BZRQc2M93A" base_State="_s-7xkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_LpMErDEem2BZRQc2M93A" base_State="_s-8_sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_WoUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_X2cErDEem2BZRQc2M93A" base_State="_s_WoUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_YdgErDEem2BZRQc2M93A" base_Pseudostate="_s_X2cUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_ZEkErDEem2BZRQc2M93A" base_Pseudostate="_s_YdgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s_pjQErDEem2BZRQc2M93A" base_Region="_s_XPYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_vp4ErDEem2BZRQc2M93A" base_State="_s_pjQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_ytMErDEem2BZRQc2M93A" base_State="_s_qxYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_1JcErDEem2BZRQc2M93A" base_State="_s_r_gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s__hgErDEem2BZRQc2M93A" base_Pseudostate="_s_-6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAAvoErDEem2BZRQc2M93A" base_State="_tAAIkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tABWsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tACk0ErDEem2BZRQc2M93A" base_Pseudostate="_tAB9wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tASccErDEem2BZRQc2M93A" base_Region="_tAAIkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWG0ErDEem2BZRQc2M93A" base_State="_tATDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWt4ErDEem2BZRQc2M93A" base_State="_tATqkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAa_UErDEem2BZRQc2M93A" base_Pseudostate="_tAaYQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAbmYErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAc0gErDEem2BZRQc2M93A" base_Pseudostate="_tAbmYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAdbkErDEem2BZRQc2M93A" base_Pseudostate="_tAc0gUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tAssIErDEem2BZRQc2M93A" base_Region="_tAa_UkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAtTMErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAyywErDEem2BZRQc2M93A" base_State="_tAt6QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA1PAErDEem2BZRQc2M93A" base_State="_tAuhUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA45YErDEem2BZRQc2M93A" base_State="_tAvvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBFGoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBGUwErDEem2BZRQc2M93A" base_State="_tBFGoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIJ8ErDEem2BZRQc2M93A" base_Pseudostate="_tBG70ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIxAErDEem2BZRQc2M93A" base_Pseudostate="_tBIJ8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tBVlUErDEem2BZRQc2M93A" base_Region="_tBFGokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBbr8ErDEem2BZRQc2M93A" base_State="_tBVlUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBevQErDEem2BZRQc2M93A" base_State="_tBWzcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBhLgErDEem2BZRQc2M93A" base_State="_tBYBkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBrjkErDEem2BZRQc2M93A" base_Pseudostate="_tBq8gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBsxsErDEem2BZRQc2M93A" base_State="_tBrjkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwErDEem2BZRQc2M93A" base_Pseudostate="_tBsxsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwkrDEem2BZRQc2M93A" base_Pseudostate="_tBtYwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tB8CQErDEem2BZRQc2M93A" base_Region="_tBrjkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCFzQErDEem2BZRQc2M93A" base_State="_tB8pUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCI2kErDEem2BZRQc2M93A" base_State="_tB9QYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCL54ErDEem2BZRQc2M93A" base_State="_tB-egErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCRZcErDEem2BZRQc2M93A" base_State="_tCATsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCdmsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCe00ErDEem2BZRQc2M93A" base_State="_tCdmsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgC8ErDEem2BZRQc2M93A" base_Pseudostate="_tCe00UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgqAErDEem2BZRQc2M93A" base_Pseudostate="_tCgC8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tCwhoErDEem2BZRQc2M93A" base_Region="_tCdmskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCzk8ErDEem2BZRQc2M93A" base_State="_tCwhoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC0zEErDEem2BZRQc2M93A" base_State="_tCxIsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC6SoErDEem2BZRQc2M93A" base_Pseudostate="_tC5EgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC65sErDEem2BZRQc2M93A" base_State="_tC6SoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC8u4ErDEem2BZRQc2M93A" base_Pseudostate="_tC7gwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC9V8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tDN0oErDEem2BZRQc2M93A" base_Region="_tC6SokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDTUMErDEem2BZRQc2M93A" base_State="_tDN0oUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDVJYErDEem2BZRQc2M93A" base_State="_tDPCwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDW-kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDjy4ErDEem2BZRQc2M93A" base_Pseudostate="_tDikwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDkZ8ErDEem2BZRQc2M93A" base_State="_tDjy4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDloEErDEem2BZRQc2M93A" base_Pseudostate="_tDlBAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDmPIErDEem2BZRQc2M93A" base_Pseudostate="_tDloEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tD378ErDEem2BZRQc2M93A" base_Region="_tDjy4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD7mUErDEem2BZRQc2M93A" base_State="_tD378UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD8NYErDEem2BZRQc2M93A" base_State="_tD5KEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEBF4ErDEem2BZRQc2M93A" base_Pseudostate="_tEAe0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tECUAErDEem2BZRQc2M93A" base_State="_tEBF4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEC7EErDEem2BZRQc2M93A" base_Pseudostate="_tECUAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEDiIErDEem2BZRQc2M93A" base_Pseudostate="_tEC7EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tEQWcErDEem2BZRQc2M93A" base_Region="_tEBs8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEXEIErDEem2BZRQc2M93A" base_State="_tEQWcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEaHcErDEem2BZRQc2M93A" base_State="_tERkkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEb8oErDEem2BZRQc2M93A" base_State="_tESysErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEgOEErDEem2BZRQc2M93A" base_State="_tEUA0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEqmIErDEem2BZRQc2M93A" base_Pseudostate="_tEp_EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEr0QErDEem2BZRQc2M93A" base_State="_tEqmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEsbUErDEem2BZRQc2M93A" base_Pseudostate="_tEr0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEtCYErDEem2BZRQc2M93A" base_Pseudostate="_tEsbUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tE8S8ErDEem2BZRQc2M93A" base_Region="_tErNMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tE_WQErDEem2BZRQc2M93A" base_State="_tE86AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFAkYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFE10ErDEem2BZRQc2M93A" base_Pseudostate="_tFEOwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFGD8ErDEem2BZRQc2M93A" base_State="_tFE10UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFIgMErDEem2BZRQc2M93A" base_Pseudostate="_tFGrAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFJHQErDEem2BZRQc2M93A" base_Pseudostate="_tFIgMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFVUgErDEem2BZRQc2M93A" base_Region="_tFE10krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFXwwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFYX0ErDEem2BZRQc2M93A" base_State="_tFWioErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFd3YErDEem2BZRQc2M93A" base_Pseudostate="_tFdQUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFeecErDEem2BZRQc2M93A" base_State="_tFd3YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfFgErDEem2BZRQc2M93A" base_Pseudostate="_tFeecUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfskErDEem2BZRQc2M93A" base_Pseudostate="_tFfFgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFu9IErDEem2BZRQc2M93A" base_Region="_tFd3YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFyngErDEem2BZRQc2M93A" base_State="_tFvkMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFz1oErDEem2BZRQc2M93A" base_State="_tFwyUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF4uIErDEem2BZRQc2M93A" base_Pseudostate="_tF4HEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tF7KYErDEem2BZRQc2M93A" base_State="_tF58QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF7xcErDEem2BZRQc2M93A" base_Pseudostate="_tF7KYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF8_kErDEem2BZRQc2M93A" base_Pseudostate="_tF7xcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tGLCAErDEem2BZRQc2M93A" base_Region="_tF58QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGa5oErDEem2BZRQc2M93A" base_State="_tGLCAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGdV4ErDEem2BZRQc2M93A" base_State="_tGMQIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGgZMErDEem2BZRQc2M93A" base_State="_tGPTcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGl4wErDEem2BZRQc2M93A" base_State="_tGQhkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGw34ErDEem2BZRQc2M93A" base_Pseudostate="_tGwQ0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGxe8ErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGyGAUrDEem2BZRQc2M93A" base_Pseudostate="_tGyGAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGzUIErDEem2BZRQc2M93A" base_Pseudostate="_tGyGAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHCksErDEem2BZRQc2M93A" base_Region="_tGw34krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHDLwErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHHdMErDEem2BZRQc2M93A" base_State="_tHDLwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHMVsErDEem2BZRQc2M93A" base_State="_tHDy0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHOx8ErDEem2BZRQc2M93A" base_State="_tHFA8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHWtwErDEem2BZRQc2M93A" base_Pseudostate="_tHWGsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHX74ErDEem2BZRQc2M93A" base_State="_tHWtwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHYi8ErDEem2BZRQc2M93A" base_Pseudostate="_tHX74UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHZxEErDEem2BZRQc2M93A" base_Pseudostate="_tHYi8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHposErDEem2BZRQc2M93A" base_Region="_tHWtwkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHyLkErDEem2BZRQc2M93A" base_State="_tHqPwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH1O4ErDEem2BZRQc2M93A" base_State="_tHq20ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH3rIErDEem2BZRQc2M93A" base_State="_tHsE8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH78kErDEem2BZRQc2M93A" base_State="_tHt6IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIIw4ErDEem2BZRQc2M93A" base_Pseudostate="_tIHiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIJX8ErDEem2BZRQc2M93A" base_State="_tIIw4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIKmEErDEem2BZRQc2M93A" base_Pseudostate="_tIJ_AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tILNIErDEem2BZRQc2M93A" base_Pseudostate="_tIKmEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tIbEwErDEem2BZRQc2M93A" base_Region="_tIIw4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIhLYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIjAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tImD4ErDEem2BZRQc2M93A" base_State="_tIc58ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJHoUErDEem2BZRQc2M93A" base_State="_tJHBQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJv6cErDEem2BZRQc2M93A" base_Pseudostate="_tJvTYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJxIkErDEem2BZRQc2M93A" base_State="_tJwhgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJxvoErDEem2BZRQc2M93A" base_Pseudostate="_tJxIkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJyWsErDEem2BZRQc2M93A" base_Pseudostate="_tJxvoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tJ_yEErDEem2BZRQc2M93A" base_Region="_tJwhgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKIU8ErDEem2BZRQc2M93A" base_State="_tKAZIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKKxMErDEem2BZRQc2M93A" base_State="_tKBnQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKNNcErDEem2BZRQc2M93A" base_State="_tKC1YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKRe4ErDEem2BZRQc2M93A" base_State="_tKEDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKh9kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKjLsErDEem2BZRQc2M93A" base_State="_tKh9kUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKkZ0ErDEem2BZRQc2M93A" base_Pseudostate="_tKjLsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKlA4ErDEem2BZRQc2M93A" base_Pseudostate="_tKkZ0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tKzDUErDEem2BZRQc2M93A" base_Region="_tKh9kkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK6YEErDEem2BZRQc2M93A" base_State="_tKzDUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK9bYErDEem2BZRQc2M93A" base_State="_tK0RcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLAesErDEem2BZRQc2M93A" base_State="_tK1fkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLMr8ErDEem2BZRQc2M93A" base_State="_tLME4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tLzv8ErDEem2BZRQc2M93A" base_Pseudostate="_tLzI4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tL0-EErDEem2BZRQc2M93A" base_State="_tLzv8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL1lIErDEem2BZRQc2M93A" base_Pseudostate="_tL0-EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL2zQErDEem2BZRQc2M93A" base_Pseudostate="_tL1lIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMFcwErDEem2BZRQc2M93A" base_Region="_tLzv8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMLjYErDEem2BZRQc2M93A" base_State="_tMFcwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMN_oErDEem2BZRQc2M93A" base_State="_tMGq4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMRC8ErDEem2BZRQc2M93A" base_State="_tMH5AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMZl0ErDEem2BZRQc2M93A" base_Pseudostate="_tMY-wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMaz8ErDEem2BZRQc2M93A" base_State="_tMaM4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMbbAErDEem2BZRQc2M93A" base_Pseudostate="_tMaz8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMcCEErDEem2BZRQc2M93A" base_Pseudostate="_tMbbAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMsgwErDEem2BZRQc2M93A" base_Region="_tMaM4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM0ckErDEem2BZRQc2M93A" base_State="_tMtH0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM3f4ErDEem2BZRQc2M93A" base_State="_tMuV8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM58IErDEem2BZRQc2M93A" base_State="_tMwLIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM-NkErDEem2BZRQc2M93A" base_State="_tMxZQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNMQAErDEem2BZRQc2M93A" base_Pseudostate="_tNLo8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNNeIErDEem2BZRQc2M93A" base_State="_tNMQAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNOsQErDEem2BZRQc2M93A" base_Pseudostate="_tNOFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNP6YErDEem2BZRQc2M93A" base_Pseudostate="_tNOsQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tNiOQErDEem2BZRQc2M93A" base_Region="_tNMQAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNtNYErDEem2BZRQc2M93A" base_State="_tNiOQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNw3wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN0iIErDEem2BZRQc2M93A" base_State="_tNkqgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN5aoErDEem2BZRQc2M93A" base_State="_tNmfsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOWtoErDEem2BZRQc2M93A" base_Pseudostate="_tOHdEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tObmIErDEem2BZRQc2M93A" base_State="_tOXUsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOc0QErDEem2BZRQc2M93A" base_Pseudostate="_tObmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOeCYErDEem2BZRQc2M93A" base_Pseudostate="_tOc0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tO110ErDEem2BZRQc2M93A" base_Region="_tOXUsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO6uUErDEem2BZRQc2M93A" base_State="_tO2c4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO9xoErDEem2BZRQc2M93A" base_State="_tO3D8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPAN4ErDEem2BZRQc2M93A" base_State="_tO4SEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPKl8ErDEem2BZRQc2M93A" base_Pseudostate="_tPJ-4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPLNAErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPL0EErDEem2BZRQc2M93A" base_Pseudostate="_tPLNAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPMbIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tPbrsErDEem2BZRQc2M93A" base_Region="_tPKl8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPc50ErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPiZYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPk1oErDEem2BZRQc2M93A" base_State="_tPeH8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPmq0ErDEem2BZRQc2M93A" base_State="_tPfWEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPyRAErDEem2BZRQc2M93A" base_Pseudostate="_tPxp8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPzfIErDEem2BZRQc2M93A" base_State="_tPy4EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP1UUErDEem2BZRQc2M93A" base_Pseudostate="_tPzfIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP17YErDEem2BZRQc2M93A" base_Pseudostate="_tP1UUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQDWwErDEem2BZRQc2M93A" base_Region="_tPy4EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQI2UErDEem2BZRQc2M93A" base_State="_tQDWwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQLSkErDEem2BZRQc2M93A" base_State="_tQD90ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQNu0ErDEem2BZRQc2M93A" base_State="_tQFzAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQW4wErDEem2BZRQc2M93A" base_Pseudostate="_tQWRsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQXf0ErDEem2BZRQc2M93A" base_State="_tQW4wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQYG4UrDEem2BZRQc2M93A" base_Pseudostate="_tQYG4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQZVAErDEem2BZRQc2M93A" base_Pseudostate="_tQYt8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQvTQErDEem2BZRQc2M93A" base_Region="_tQW4wkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ32IErDEem2BZRQc2M93A" base_State="_tQvTQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ-j0ErDEem2BZRQc2M93A" base_State="_tQwhYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRBAEErDEem2BZRQc2M93A" base_State="_tQxvgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tREDYErDEem2BZRQc2M93A" base_State="_tQy9oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRUiEErDEem2BZRQc2M93A" base_Pseudostate="_tRT7AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRVwMErDEem2BZRQc2M93A" base_State="_tRUiEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRW-UErDEem2BZRQc2M93A" base_Pseudostate="_tRVwMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRYMcUrDEem2BZRQc2M93A" base_Pseudostate="_tRYMcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tRxOAErDEem2BZRQc2M93A" base_Region="_tRUiEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR6_AErDEem2BZRQc2M93A" base_State="_tRx1EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR-CUErDEem2BZRQc2M93A" base_State="_tRycIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSBssErDEem2BZRQc2M93A" base_State="_tR04YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSF-IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSRkUErDEem2BZRQc2M93A" base_Pseudostate="_tSQ9QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSSycErDEem2BZRQc2M93A" base_State="_tSRkUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSTZgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSUnoErDEem2BZRQc2M93A" base_Pseudostate="_tSUAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tSpXwErDEem2BZRQc2M93A" base_Region="_tSRkUkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSxTkErDEem2BZRQc2M93A" base_State="_tSpXwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSzIwErDEem2BZRQc2M93A" base_State="_tSql4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS098ErDEem2BZRQc2M93A" base_State="_tSr0AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS4oUErDEem2BZRQc2M93A" base_State="_tStCIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTEOgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTFcoErDEem2BZRQc2M93A" base_State="_tTEOgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTGDsErDEem2BZRQc2M93A" base_Pseudostate="_tTFcoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTHR0ErDEem2BZRQc2M93A" base_Pseudostate="_tTGqwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tTS4AErDEem2BZRQc2M93A" base_Region="_tTEOgkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTY-oErDEem2BZRQc2M93A" base_State="_tTTfEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTaz0ErDEem2BZRQc2M93A" base_State="_tTUGIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTcpAErDEem2BZRQc2M93A" base_State="_tTUtMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTfsUErDEem2BZRQc2M93A" base_State="_tTV7UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tUACoErDEem2BZRQc2M93A" base_State="_tT_bkErDEem2BZRQc2M93A"/>
  <UMLRealTime:Capsule xmi:id="_dXOp0Er4EemAZaGjK5Aj8g" base_Class="_dWpbAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_dXehcEr4EemAZaGjK5Aj8g" base_StateMachine="_dXPQ4Er4EemAZaGjK5Aj8g"/>
  <UMLRealTime:ProtocolContainer xmi:id="_dXkBAEr4EemAZaGjK5Aj8g" base_Package="_dXg9sEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:Protocol xmi:id="_dXmdQEr4EemAZaGjK5Aj8g" base_Collaboration="_dXkoEEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTMessageSet xmi:id="_dX-3wEr4EemAZaGjK5Aj8g" base_Interface="_dXmdQUr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTMessageSet xmi:id="_dYEXUEr4EemAZaGjK5Aj8g" base_Interface="_dXo5gEr4EemAZaGjK5Aj8g" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_dYLsEEr4EemAZaGjK5Aj8g" base_Interface="_dXqHoEr4EemAZaGjK5Aj8g" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_dYlUsEr4EemAZaGjK5Aj8g" base_Port="_dYYgYEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_db2rIEr4EemAZaGjK5Aj8g" isWired="false" base_Port="_dbzn0Er4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_dcAcIEr4EemAZaGjK5Aj8g" isPublish="true" isWired="false" base_Port="_db8KsEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:CapsuleProperties xmi:id="_doIMkEr4EemAZaGjK5Aj8g" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_doagcEr4EemAZaGjK5Aj8g" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_drPK8Er4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_drGoEEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:ParameterProperties xmi:id="_drnlcEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_drlwQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_dt4PQEr4EemAZaGjK5Aj8g" base_Pseudostate="_dt1zAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_d814UEr4EemAZaGjK5Aj8g" base_Pseudostate="_d8y1AEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_d87X4Er4EemAZaGjK5Aj8g" base_Pseudostate="_d86w0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_d890IEr4EemAZaGjK5Aj8g" base_Pseudostate="_d89NEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_d9GXAEr4EemAZaGjK5Aj8g" base_Pseudostate="_d9FI4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eKRQUEr4EemAZaGjK5Aj8g" base_Pseudostate="_eKQCMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eKiWEEr4EemAZaGjK5Aj8g" base_Pseudostate="_eKddkEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eKkyUEr4EemAZaGjK5Aj8g" base_Pseudostate="_eKjkMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eK14EEr4EemAZaGjK5Aj8g" base_Pseudostate="_eKwYgEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eVrPEEr4EemAZaGjK5Aj8g" base_Pseudostate="_eVnksEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eVu5cEr4EemAZaGjK5Aj8g" base_Pseudostate="_eVuSYEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eVwuoEr4EemAZaGjK5Aj8g" base_Pseudostate="_eVwHkEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eV1AEEr4EemAZaGjK5Aj8g" base_Pseudostate="_eVzK4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eajvEEr4EemAZaGjK5Aj8g" base_Pseudostate="_eaig8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eamyYEr4EemAZaGjK5Aj8g" base_Pseudostate="_eamLUEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eaoAgEr4EemAZaGjK5Aj8g" base_Pseudostate="_eanZcEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eatgEEr4EemAZaGjK5Aj8g" base_Pseudostate="_eap1sEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_egy58Er4EemAZaGjK5Aj8g" base_Pseudostate="_egyS4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eg3ycEr4EemAZaGjK5Aj8g" base_Pseudostate="_eg0IEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eg8q8Er4EemAZaGjK5Aj8g" base_Pseudostate="_eg5noEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ehCxkEr4EemAZaGjK5Aj8g" base_Pseudostate="_eg_uQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eldXgEr4EemAZaGjK5Aj8g" base_Pseudostate="_elZtIUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_elga0Er4EemAZaGjK5Aj8g" base_Pseudostate="_elfzwEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eli3EEr4EemAZaGjK5Aj8g" base_Pseudostate="_elho8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_elpkwEr4EemAZaGjK5Aj8g" base_Pseudostate="_elnIgEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_enYqIEr4EemAZaGjK5Aj8g" base_Pseudostate="_enVm0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_enafUEr4EemAZaGjK5Aj8g" base_Pseudostate="_enZ4QEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_enbtcEr4EemAZaGjK5Aj8g" base_Pseudostate="_enbGYEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eneJsEr4EemAZaGjK5Aj8g" base_Pseudostate="_encUgEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_erOoUEr4EemAZaGjK5Aj8g" base_Pseudostate="_erOBQUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_erREkEr4EemAZaGjK5Aj8g" base_Pseudostate="_erP2cEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_erTg0Er4EemAZaGjK5Aj8g" base_Pseudostate="_erS5wEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_evlj4Er4EemAZaGjK5Aj8g" base_Pseudostate="_evjusEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_evqcYEr4EemAZaGjK5Aj8g" base_Pseudostate="_evmyAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_evrqgEr4EemAZaGjK5Aj8g" base_Pseudostate="_evrDcEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_evvU4Er4EemAZaGjK5Aj8g" base_Pseudostate="_evs4oEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ezLDYUr4EemAZaGjK5Aj8g" base_Pseudostate="_ezLDYEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ezMRgEr4EemAZaGjK5Aj8g" base_Pseudostate="_ezLqcUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ezOGsEr4EemAZaGjK5Aj8g" base_Pseudostate="_ezM4kEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ezUNUEr4EemAZaGjK5Aj8g" base_Pseudostate="_ezSYIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e4dMAEr4EemAZaGjK5Aj8g" base_Pseudostate="_e4ck8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e4gPUEr4EemAZaGjK5Aj8g" base_Pseudostate="_e4fBMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e4lu4Er4EemAZaGjK5Aj8g" base_Pseudostate="_e4j5sEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e4nkEEr4EemAZaGjK5Aj8g" base_Pseudostate="_e4m9AEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e_Q-oEr4EemAZaGjK5Aj8g" base_Pseudostate="_e_QXkEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e_SMwEr4EemAZaGjK5Aj8g" base_Pseudostate="_e_Q-okr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e_VQEEr4EemAZaGjK5Aj8g" base_Pseudostate="_e_Sz0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_e_ck0Er4EemAZaGjK5Aj8g" base_Pseudostate="_e_bWsEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fFAaQEr4EemAZaGjK5Aj8g" base_Pseudostate="_fE_zMUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fFBoYEr4EemAZaGjK5Aj8g" base_Pseudostate="_fFAaQkr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fFEEoEr4EemAZaGjK5Aj8g" base_Pseudostate="_fFC2gEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fFJkMEr4EemAZaGjK5Aj8g" base_Pseudostate="_fFIWEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fG20YEr4EemAZaGjK5Aj8g" base_Pseudostate="_fG1mQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fG7s4Er4EemAZaGjK5Aj8g" base_Pseudostate="_fG5QoEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fG-JIEr4EemAZaGjK5Aj8g" base_Pseudostate="_fG9iEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fHJIQEr4EemAZaGjK5Aj8g" base_Pseudostate="_fHGsAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fS0MwEr4EemAZaGjK5Aj8g" base_Pseudostate="_fSxJcEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fS2B8Er4EemAZaGjK5Aj8g" base_Pseudostate="_fS0z0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fS99wEr4EemAZaGjK5Aj8g" base_Pseudostate="_fS33IEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fS_y8Er4EemAZaGjK5Aj8g" base_Pseudostate="_fS-k0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fYy48Er4EemAZaGjK5Aj8g" base_Pseudostate="_fYxDwEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fY1VMEr4EemAZaGjK5Aj8g" base_Pseudostate="_fY0uIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fY2jUEr4EemAZaGjK5Aj8g" base_Pseudostate="_fY18QUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fY3KYEr4EemAZaGjK5Aj8g" base_Pseudostate="_fY2jUUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_feR14Er4EemAZaGjK5Aj8g" base_Pseudostate="_feRO0Ur4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_feSc8Ur4EemAZaGjK5Aj8g" base_Pseudostate="_feSc8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_feWHUEr4EemAZaGjK5Aj8g" base_Pseudostate="_feUSIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_feZxsEr4EemAZaGjK5Aj8g" base_Pseudostate="_feYjkEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fgzlcUr4EemAZaGjK5Aj8g" base_Pseudostate="_fgzlcEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fg0zkEr4EemAZaGjK5Aj8g" base_Pseudostate="_fg0MgEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fg1aoUr4EemAZaGjK5Aj8g" base_Pseudostate="_fg1aoEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fg4d8Er4EemAZaGjK5Aj8g" base_Pseudostate="_fg2BsEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fi3a8Er4EemAZaGjK5Aj8g" base_Pseudostate="_fi2z4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fi4CAUr4EemAZaGjK5Aj8g" base_Pseudostate="_fi4CAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fi5QIEr4EemAZaGjK5Aj8g" base_Pseudostate="_fi4pEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fi7FUEr4EemAZaGjK5Aj8g" base_Pseudostate="_fi53MEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_flkwsEr4EemAZaGjK5Aj8g" base_Pseudostate="_flkJoEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fllXwUr4EemAZaGjK5Aj8g" base_Pseudostate="_fllXwEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_flml4Er4EemAZaGjK5Aj8g" base_Pseudostate="_fll-0Ur4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_flpCIEr4EemAZaGjK5Aj8g" base_Pseudostate="_flnM8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fnAUEEr4EemAZaGjK5Aj8g" base_Pseudostate="_fm_tAUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fnA7IUr4EemAZaGjK5Aj8g" base_Pseudostate="_fnA7IEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fnCJQEr4EemAZaGjK5Aj8g" base_Pseudostate="_fnBiMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fnElgEr4EemAZaGjK5Aj8g" base_Pseudostate="_fnDXYEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fqXxIEr4EemAZaGjK5Aj8g" base_Pseudostate="_fqXKEUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fqYYMUr4EemAZaGjK5Aj8g" base_Pseudostate="_fqYYMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fqcpoEr4EemAZaGjK5Aj8g" base_Pseudostate="_fqa0cEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fqfs8Er4EemAZaGjK5Aj8g" base_Pseudostate="_fqfF4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ftsK4Ur4EemAZaGjK5Aj8g" base_Pseudostate="_ftsK4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fttZAEr4EemAZaGjK5Aj8g" base_Pseudostate="_ftsx8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ftv1QEr4EemAZaGjK5Aj8g" base_Pseudostate="_ftvOMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ft1U0Er4EemAZaGjK5Aj8g" base_Pseudostate="_ft0twEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_f63rQEr4EemAZaGjK5Aj8g" isWired="false" base_Port="_f62dIEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_f65gcEr4EemAZaGjK5Aj8g" isPublish="true" isWired="false" base_Port="_f64SUEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:CapsuleProperties xmi:id="_f8ol0Er4EemAZaGjK5Aj8g" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_f8xvwEr4EemAZaGjK5Aj8g" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_f9wnMEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_f9wAIEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:ParameterProperties xmi:id="_f95KEEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_f91fsEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_f_UtcEr4EemAZaGjK5Aj8g" base_Pseudostate="_f_RqIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gFzv8Er4EemAZaGjK5Aj8g" base_Pseudostate="_gFwsoEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gF1lIEr4EemAZaGjK5Aj8g" base_Pseudostate="_gF0-EEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gF2MMUr4EemAZaGjK5Aj8g" base_Pseudostate="_gF2MMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gF3aUEr4EemAZaGjK5Aj8g" base_Pseudostate="_gF2zQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gIa_EUr4EemAZaGjK5Aj8g" base_Pseudostate="_gIa_EEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gIbmIUr4EemAZaGjK5Aj8g" base_Pseudostate="_gIbmIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gIgeoEr4EemAZaGjK5Aj8g" base_Pseudostate="_gIeCYEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gIi64Er4EemAZaGjK5Aj8g" base_Pseudostate="_gIiT0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gMql4Er4EemAZaGjK5Aj8g" base_Pseudostate="_gMp-0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gMr0AEr4EemAZaGjK5Aj8g" base_Pseudostate="_gMrM8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gMsbEEr4EemAZaGjK5Aj8g" base_Pseudostate="_gMr0Akr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gMtpMEr4EemAZaGjK5Aj8g" base_Pseudostate="_gMtCIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gW0AYEr4EemAZaGjK5Aj8g" base_Pseudostate="_gWzZUUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gW0ncUr4EemAZaGjK5Aj8g" base_Pseudostate="_gW0ncEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gW6HAEr4EemAZaGjK5Aj8g" base_Pseudostate="_gW3DsEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gW9KUEr4EemAZaGjK5Aj8g" base_Pseudostate="_gW8jQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gaUAUEr4EemAZaGjK5Aj8g" base_Pseudostate="_gaTZQUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gaY40Er4EemAZaGjK5Aj8g" base_Pseudostate="_gaVOcEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gagNkEr4EemAZaGjK5Aj8g" base_Pseudostate="_gab8IEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gahbsEr4EemAZaGjK5Aj8g" base_Pseudostate="_gag0oEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gdpBIEr4EemAZaGjK5Aj8g" base_Pseudostate="_gdoaEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gdpoMEr4EemAZaGjK5Aj8g" base_Pseudostate="_gdpBIkr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gdq2UEr4EemAZaGjK5Aj8g" base_Pseudostate="_gdqPQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gdyLEEr4EemAZaGjK5Aj8g" base_Pseudostate="_gdvu0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gf5q8Er4EemAZaGjK5Aj8g" base_Pseudostate="_gf31wUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gf-jcEr4EemAZaGjK5Aj8g" base_Pseudostate="_gf98YEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ggCN0Er4EemAZaGjK5Aj8g" base_Pseudostate="_ggA_sEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ggL-0Er4EemAZaGjK5Aj8g" base_Pseudostate="_ggHtYEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gkCkEEr4EemAZaGjK5Aj8g" base_Pseudostate="_gkAu4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gkFnYEr4EemAZaGjK5Aj8g" base_Pseudostate="_gkEZQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gkGOcUr4EemAZaGjK5Aj8g" base_Pseudostate="_gkGOcEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gkJ40Er4EemAZaGjK5Aj8g" base_Pseudostate="_gkHckEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gnCNsUr4EemAZaGjK5Aj8g" base_Pseudostate="_gnCNsEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gnC0wUr4EemAZaGjK5Aj8g" base_Pseudostate="_gnC0wEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gnEp8Er4EemAZaGjK5Aj8g" base_Pseudostate="_gnDb0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gnIUUEr4EemAZaGjK5Aj8g" base_Pseudostate="_gnGfIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gqQg0Er4EemAZaGjK5Aj8g" base_Pseudostate="_gqP5wUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gqRu8Er4EemAZaGjK5Aj8g" base_Pseudostate="_gqRH4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gqS9EEr4EemAZaGjK5Aj8g" base_Pseudostate="_gqSWAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gqZqwEr4EemAZaGjK5Aj8g" base_Pseudostate="_gqULMEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_gxrXcEr4EemAZaGjK5Aj8g" isWired="false" base_Port="_gxqwYEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_gxslkEr4EemAZaGjK5Aj8g" isPublish="true" isWired="false" base_Port="_gxrXcUr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:CapsuleProperties xmi:id="_gx2WkEr4EemAZaGjK5Aj8g" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_gx7PEEr4EemAZaGjK5Aj8g" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_gyFAEEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_gyEZAUr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:ParameterProperties xmi:id="_gyHcUEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_gyGOMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gyYiEUr4EemAZaGjK5Aj8g" base_Pseudostate="_gyYiEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gzA0MEr4EemAZaGjK5Aj8g" base_Pseudostate="_gy-_AUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gzGTwEr4EemAZaGjK5Aj8g" base_Pseudostate="_gzD3gEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gzG60Er4EemAZaGjK5Aj8g" base_Pseudostate="_gzGTwkr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_gzII8Er4EemAZaGjK5Aj8g" base_Pseudostate="_gzHh4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g0h3IEr4EemAZaGjK5Aj8g" base_Pseudostate="_g0gpAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g0ieMUr4EemAZaGjK5Aj8g" base_Pseudostate="_g0ieMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g0jsUEr4EemAZaGjK5Aj8g" base_Pseudostate="_g0jFQUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g0ok0Er4EemAZaGjK5Aj8g" base_Pseudostate="_g0k6cEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:CapsuleProperties xmi:id="_g3u8IEr4EemAZaGjK5Aj8g" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_dWpbAEr4EemAZaGjK5Aj8g" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_g3wKQEr4EemAZaGjK5Aj8g" base_Class="_dWpbAEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:ParameterProperties xmi:id="_g4FhcEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_g4DFMEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:ParameterProperties xmi:id="_g4LoEEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_g4Jy4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTRegion xmi:id="_g4XOQEr4EemAZaGjK5Aj8g" base_Region="_g4WnMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g4X1UEr4EemAZaGjK5Aj8g" base_Pseudostate="_g4XOQUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTState xmi:id="_g4YcYEr4EemAZaGjK5Aj8g" base_State="_g4X1UUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g4a4oEr4EemAZaGjK5Aj8g" base_Pseudostate="_g4YcYUr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_g4qwQUr4EemAZaGjK5Aj8g" isWired="false" base_Port="_g4qJMEr4EemAZaGjK5Aj8g"/>
  <UMLRealTime:RTPort xmi:id="_g4r-YEr4EemAZaGjK5Aj8g" isPublish="true" isWired="false" base_Port="_g4rXUEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:CapsuleProperties xmi:id="_g5jhEEr4EemAZaGjK5Aj8g" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_g5nygEr4EemAZaGjK5Aj8g" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_g6II0Er4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_g6HhwEr4EemAZaGjK5Aj8g"/>
  <RTCppProperties:ParameterProperties xmi:id="_g6NoYEr4EemAZaGjK5Aj8g" type="pmd::Message" base_Parameter="_g6MaQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g6ulwEr4EemAZaGjK5Aj8g" base_Pseudostate="_g6t-sEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g92LMEr4EemAZaGjK5Aj8g" base_Pseudostate="_g91kIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g92yQUr4EemAZaGjK5Aj8g" base_Pseudostate="_g92yQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g94ncEr4EemAZaGjK5Aj8g" base_Pseudostate="_g93ZUEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_g951kEr4EemAZaGjK5Aj8g" base_Pseudostate="_g95OgEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hATCQEr4EemAZaGjK5Aj8g" base_Pseudostate="_hASbMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hAUQYEr4EemAZaGjK5Aj8g" base_Pseudostate="_hATpUEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hAZv8Er4EemAZaGjK5Aj8g" base_Pseudostate="_hAXTsEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hAczQEr4EemAZaGjK5Aj8g" base_Pseudostate="_hAa-EEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hEZfIEr4EemAZaGjK5Aj8g" base_Pseudostate="_hEYRAUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hEb7YEr4EemAZaGjK5Aj8g" base_Pseudostate="_hEbUUEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hEeXoEr4EemAZaGjK5Aj8g" base_Pseudostate="_hEcicEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hEipEEr4EemAZaGjK5Aj8g" base_Pseudostate="_hEiCAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hIR5kEr4EemAZaGjK5Aj8g" base_Pseudostate="_hIQrcEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hIWyEEr4EemAZaGjK5Aj8g" base_Pseudostate="_hIWLAEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hIZ1YEr4EemAZaGjK5Aj8g" base_Pseudostate="_hIYAMEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hIbDgEr4EemAZaGjK5Aj8g" base_Pseudostate="_hIaccEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hLDgwEr4EemAZaGjK5Aj8g" base_Pseudostate="_hLC5sEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hLEH0Er4EemAZaGjK5Aj8g" base_Pseudostate="_hLDgwkr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hLGkEEr4EemAZaGjK5Aj8g" base_Pseudostate="_hLF9AEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hLHLIUr4EemAZaGjK5Aj8g" base_Pseudostate="_hLHLIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hNLAoUr4EemAZaGjK5Aj8g" base_Pseudostate="_hNLAoEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hNMOwEr4EemAZaGjK5Aj8g" base_Pseudostate="_hNLnsEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hNP5IEr4EemAZaGjK5Aj8g" base_Pseudostate="_hNOD8Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hNRuUEr4EemAZaGjK5Aj8g" base_Pseudostate="_hNRHQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hP_EEEr4EemAZaGjK5Aj8g" base_Pseudostate="_hP-dAUr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hQASMEr4EemAZaGjK5Aj8g" base_Pseudostate="_hP_rIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hQBgUUr4EemAZaGjK5Aj8g" base_Pseudostate="_hQBgUEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hQCucEr4EemAZaGjK5Aj8g" base_Pseudostate="_hQCHYEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hS3Y8Er4EemAZaGjK5Aj8g" base_Pseudostate="_hS2x4Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hS5OIEr4EemAZaGjK5Aj8g" base_Pseudostate="_hS4nEEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hS51MUr4EemAZaGjK5Aj8g" base_Pseudostate="_hS51MEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hS7DUEr4EemAZaGjK5Aj8g" base_Pseudostate="_hS6cQEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hZFVsEr4EemAZaGjK5Aj8g" base_Pseudostate="_hZC5cEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hZHx8Er4EemAZaGjK5Aj8g" base_Pseudostate="_hZGj0Er4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hZMDYEr4EemAZaGjK5Aj8g" base_Pseudostate="_hZJnIEr4EemAZaGjK5Aj8g"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_hZSKAEr4EemAZaGjK5Aj8g" base_Pseudostate="_hZRi8Er4EemAZaGjK5Aj8g"/>
  <UMLRealTime:CapsulePart xmi:id="_hk9OgEr4EemAZaGjK5Aj8g" base_Property="_hk8ncEr4EemAZaGjK5Aj8g"/>
</xmi:XMI>
